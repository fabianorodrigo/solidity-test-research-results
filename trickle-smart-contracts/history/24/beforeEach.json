{"code":"  let trace = false;\n  let contractSafeMath = null;\n  let contractERC20 = null;\n  let contractTrickle = null;\n  let contractERC20Mock = null;\n  beforeEach(async () => {\n    contractSafeMath = await SafeMath.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: SafeMath.new({from: accounts[0]}');\n    ERC20.link(\"SafeMath\",contractSafeMath.address);\n    contractERC20 = await ERC20.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: ERC20.new({from: accounts[0]}');\n    Trickle.link(\"SafeMath\",contractSafeMath.address);\n    contractTrickle = await Trickle.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: Trickle.new({from: accounts[0]}');\n    contractERC20Mock = await ERC20Mock.new(accounts[0],1000,{from:accounts[0]});\n    if(trace) console.log('SUCESSO: ERC20Mock.new(accounts[0],1000,{from:accounts[0]}');\n  });\n","contractsDeployed":[{"contractName":"SafeMath","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"ERC20","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"Trickle","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"ERC20Mock","stringfieldParams":["accounts[0]","1000","{from:accounts[0]}"]}]}