,{
  "2020-11-10T19:13:40.020ZPaymentTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:13:46.383ZRedeemableTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:13:52.925ZOffChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:13:59.477ZPartialRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "26",
              "sol": "26"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:06.093ZOnChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,IERC20,address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:12.587ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "1532892063",
              "sol": "1532892063"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "1532892063",
                "sol": "1532892063"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "1532892063",
                "sol": "1532892063"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:19.140ZFullRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:25.806ZOnChainVoting.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,address,uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<_endTime,_issuer!=0x0000000000000000000000000000000000000000,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+587",
              "sol": "block.timestamp+587"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp < _endTime",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
                "sol": "block.timestamp"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+587",
                "sol": "block.timestamp+587"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+587",
                "sol": "block.timestamp+587"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+587",
                "sol": "block.timestamp+587"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.560ZRedeemableToken.setRedemption": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setRedemption(address) WHEN msg.sender==_owner,_redemption!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: _redemption != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.561ZRedeemableToken.redeemAllTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemAllTokens(address) WHEN msg.sender==redemption,msg.sender==_owner,balance>0",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.563ZRedeemableToken.redeemPartialTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemPartialTokens(address,uint256) WHEN msg.sender==redemption,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.570ZOffChainPayments.recordPayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute recordPayments(address[],uint256[],uint256[],bytes32[]) WHEN msg.sender==_owner,_securityHolders.length>0,_securityHolders.length==_offchainPaymentHashes.length,_securityHolders.length==_paymentTimestamps.length,_securityHolders.length==_paymentValues.length",
          "parameters": [
            {
              "js": "[accounts[8],accounts[8],accounts[9],accounts[1],accounts[2],accounts[7],accounts[6],accounts[9],accounts[9],accounts[5],accounts[7],accounts[6],accounts[9],accounts[3],accounts[8],accounts[2],accounts[7],accounts[6],accounts[3],accounts[6],accounts[3],accounts[0],accounts[9],accounts[8],accounts[8],accounts[9],accounts[0],accounts[2],accounts[8],accounts[8],accounts[2],accounts[8],accounts[8],accounts[3],accounts[1],accounts[1],accounts[9],accounts[5],accounts[6],accounts[2],accounts[1],accounts[7],accounts[8],accounts[7],accounts[5],accounts[4],accounts[5],accounts[7],accounts[2],accounts[9],accounts[7],accounts[7],accounts[1],accounts[8],accounts[3],accounts[9],accounts[9],accounts[5],accounts[3],accounts[1],accounts[6],accounts[6],accounts[6],accounts[3],accounts[9],accounts[1],accounts[6],accounts[1],accounts[9],accounts[9],accounts[0],accounts[1],accounts[2],accounts[4],accounts[4],accounts[0],accounts[7],accounts[5],accounts[9],accounts[4],accounts[7],accounts[3],accounts[0],accounts[6],accounts[5],accounts[9],accounts[0],accounts[5],accounts[7],accounts[8],accounts[2],accounts[2],accounts[7],accounts[1],accounts[8]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[1336,9999,64,5,65,257,2014223714,64,2014223714,254,1532892062,27,255,5,1532892064,29,9999,256,28,6,10001,64,2,254,4,3,1338,97,2014223715,29,257,1532892064,1336,1532892062,4,2014223714,96,1337,1,26,10000,256,255,28,29,9999,29,64,66,1532892064,2014223715,254,28,10001,5,1532892063,1532892062,1337,1532892063,64,28,2014223716,256,0,9999,65,2014223715,254,5,256,95,1532892062,29,1532892063,255,28,27,257,29,4,1336,10001,10001,257,1337,65,27,66,28,9999,29,1338,28,65,5]",
              "sol": "[uint256(1336),uint256(9999),uint256(64),uint256(5),uint256(65),uint256(257),uint256(2014223714),uint256(64),uint256(2014223714),uint256(254),uint256(1532892062),uint256(27),uint256(255),uint256(5),uint256(1532892064),uint256(29),uint256(9999),uint256(256),uint256(28),uint256(6),uint256(10001),uint256(64),uint256(2),uint256(254),uint256(4),uint256(3),uint256(1338),uint256(97),uint256(2014223715),uint256(29),uint256(257),uint256(1532892064),uint256(1336),uint256(1532892062),uint256(4),uint256(2014223714),uint256(96),uint256(1337),uint256(1),uint256(26),uint256(10000),uint256(256),uint256(255),uint256(28),uint256(29),uint256(9999),uint256(29),uint256(64),uint256(66),uint256(1532892064),uint256(2014223715),uint256(254),uint256(28),uint256(10001),uint256(5),uint256(1532892063),uint256(1532892062),uint256(1337),uint256(1532892063),uint256(64),uint256(28),uint256(2014223716),uint256(256),uint256(0),uint256(9999),uint256(65),uint256(2014223715),uint256(254),uint256(5),uint256(256),uint256(95),uint256(1532892062),uint256(29),uint256(1532892063),uint256(255),uint256(28),uint256(27),uint256(257),uint256(29),uint256(4),uint256(1336),uint256(10001),uint256(10001),uint256(257),uint256(1337),uint256(65),uint256(27),uint256(66),uint256(28),uint256(9999),uint256(29),uint256(1338),uint256(28),uint256(65),uint256(5)]"
            },
            {
              "js": "[29,64,257,65,1532892062,5,3,27,10000,29,10001,254,1532892064,1336,1338,0,5,1338,5,3,1532892062,255,96,9999,27,66,10001,257,65,95,1532892063,66,65,5,257,66,10000,5,256,1336,64,64,26,29,257,1338,2014223716,2014223714,6,2014223716,1337,5,5,255,1532892064,10001,29,29,64,26,5,1337,27,1338,255,95,5,254,97,256,97,3,1532892062,5,95,1532892062,255,4,5,5,1338,97,10001,255,257,29,2014223716,10001,9999,28,1,28,1,2014223715,26]",
              "sol": "[uint256(29),uint256(64),uint256(257),uint256(65),uint256(1532892062),uint256(5),uint256(3),uint256(27),uint256(10000),uint256(29),uint256(10001),uint256(254),uint256(1532892064),uint256(1336),uint256(1338),uint256(0),uint256(5),uint256(1338),uint256(5),uint256(3),uint256(1532892062),uint256(255),uint256(96),uint256(9999),uint256(27),uint256(66),uint256(10001),uint256(257),uint256(65),uint256(95),uint256(1532892063),uint256(66),uint256(65),uint256(5),uint256(257),uint256(66),uint256(10000),uint256(5),uint256(256),uint256(1336),uint256(64),uint256(64),uint256(26),uint256(29),uint256(257),uint256(1338),uint256(2014223716),uint256(2014223714),uint256(6),uint256(2014223716),uint256(1337),uint256(5),uint256(5),uint256(255),uint256(1532892064),uint256(10001),uint256(29),uint256(29),uint256(64),uint256(26),uint256(5),uint256(1337),uint256(27),uint256(1338),uint256(255),uint256(95),uint256(5),uint256(254),uint256(97),uint256(256),uint256(97),uint256(3),uint256(1532892062),uint256(5),uint256(95),uint256(1532892062),uint256(255),uint256(4),uint256(5),uint256(5),uint256(1338),uint256(97),uint256(10001),uint256(255),uint256(257),uint256(29),uint256(2014223716),uint256(10001),uint256(9999),uint256(28),uint256(1),uint256(28),uint256(1),uint256(2014223715),uint256(26)]"
            },
            {
              "js": "[[101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34],[4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219],[205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101],[82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238],[34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252],[111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73],[122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93],[70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55],[134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163],[149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175],[172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147],[235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95],[224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177],[212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172],[91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147],[23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252],[27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120],[101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151],[235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200],[122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12],[101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19],[228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170],[235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217],[72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45],[75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176],[224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102],[43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190],[150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138],[2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54],[232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238],[181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178],[118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51],[231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5],[28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47],[199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26],[41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15],[132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61],[25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59],[218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15],[37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119],[5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232],[137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37],[251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164],[47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44],[102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93],[235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67],[76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191],[90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9],[21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59],[211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136],[145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58],[9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55],[134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53],[11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2],[81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184],[14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221],[231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184],[114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21],[181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239],[137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223],[18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20],[16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134],[145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232],[118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248],[12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193],[87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90],[214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107],[86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152],[44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155],[17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103],[185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66],[166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130],[207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51],[221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193],[97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34],[94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179],[245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181],[60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208],[191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90],[85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74],[221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174],[216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143],[225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158],[84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97],[186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17],[177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16],[7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112],[190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173],[161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184],[14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133],[68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204],[186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48],[121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213],[148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165],[80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47]]",
              "sol": "[bytes32(stringToBytes32(\"101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34\")),bytes32(stringToBytes32(\"4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219\")),bytes32(stringToBytes32(\"205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101\")),bytes32(stringToBytes32(\"82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238\")),bytes32(stringToBytes32(\"34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252\")),bytes32(stringToBytes32(\"111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73\")),bytes32(stringToBytes32(\"122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93\")),bytes32(stringToBytes32(\"70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55\")),bytes32(stringToBytes32(\"134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163\")),bytes32(stringToBytes32(\"149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175\")),bytes32(stringToBytes32(\"172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147\")),bytes32(stringToBytes32(\"235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95\")),bytes32(stringToBytes32(\"224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177\")),bytes32(stringToBytes32(\"212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172\")),bytes32(stringToBytes32(\"91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147\")),bytes32(stringToBytes32(\"23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252\")),bytes32(stringToBytes32(\"27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120\")),bytes32(stringToBytes32(\"101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151\")),bytes32(stringToBytes32(\"235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200\")),bytes32(stringToBytes32(\"122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12\")),bytes32(stringToBytes32(\"101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19\")),bytes32(stringToBytes32(\"228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170\")),bytes32(stringToBytes32(\"235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217\")),bytes32(stringToBytes32(\"72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45\")),bytes32(stringToBytes32(\"75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176\")),bytes32(stringToBytes32(\"224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102\")),bytes32(stringToBytes32(\"43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190\")),bytes32(stringToBytes32(\"150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138\")),bytes32(stringToBytes32(\"2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54\")),bytes32(stringToBytes32(\"232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238\")),bytes32(stringToBytes32(\"181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178\")),bytes32(stringToBytes32(\"118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51\")),bytes32(stringToBytes32(\"231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5\")),bytes32(stringToBytes32(\"28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47\")),bytes32(stringToBytes32(\"199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26\")),bytes32(stringToBytes32(\"41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15\")),bytes32(stringToBytes32(\"132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61\")),bytes32(stringToBytes32(\"25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59\")),bytes32(stringToBytes32(\"218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15\")),bytes32(stringToBytes32(\"37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119\")),bytes32(stringToBytes32(\"5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232\")),bytes32(stringToBytes32(\"137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37\")),bytes32(stringToBytes32(\"251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164\")),bytes32(stringToBytes32(\"47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44\")),bytes32(stringToBytes32(\"102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93\")),bytes32(stringToBytes32(\"235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67\")),bytes32(stringToBytes32(\"76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191\")),bytes32(stringToBytes32(\"90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9\")),bytes32(stringToBytes32(\"21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59\")),bytes32(stringToBytes32(\"211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136\")),bytes32(stringToBytes32(\"145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58\")),bytes32(stringToBytes32(\"9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55\")),bytes32(stringToBytes32(\"134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53\")),bytes32(stringToBytes32(\"11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2\")),bytes32(stringToBytes32(\"81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184\")),bytes32(stringToBytes32(\"14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221\")),bytes32(stringToBytes32(\"231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184\")),bytes32(stringToBytes32(\"114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21\")),bytes32(stringToBytes32(\"181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239\")),bytes32(stringToBytes32(\"137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223\")),bytes32(stringToBytes32(\"18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20\")),bytes32(stringToBytes32(\"16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134\")),bytes32(stringToBytes32(\"145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232\")),bytes32(stringToBytes32(\"118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248\")),bytes32(stringToBytes32(\"12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193\")),bytes32(stringToBytes32(\"87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90\")),bytes32(stringToBytes32(\"214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107\")),bytes32(stringToBytes32(\"86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152\")),bytes32(stringToBytes32(\"44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155\")),bytes32(stringToBytes32(\"17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103\")),bytes32(stringToBytes32(\"185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66\")),bytes32(stringToBytes32(\"166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130\")),bytes32(stringToBytes32(\"207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51\")),bytes32(stringToBytes32(\"221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193\")),bytes32(stringToBytes32(\"97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34\")),bytes32(stringToBytes32(\"94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179\")),bytes32(stringToBytes32(\"245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181\")),bytes32(stringToBytes32(\"60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208\")),bytes32(stringToBytes32(\"191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90\")),bytes32(stringToBytes32(\"85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74\")),bytes32(stringToBytes32(\"221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174\")),bytes32(stringToBytes32(\"216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143\")),bytes32(stringToBytes32(\"225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158\")),bytes32(stringToBytes32(\"84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97\")),bytes32(stringToBytes32(\"186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17\")),bytes32(stringToBytes32(\"177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16\")),bytes32(stringToBytes32(\"7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112\")),bytes32(stringToBytes32(\"190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173\")),bytes32(stringToBytes32(\"161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184\")),bytes32(stringToBytes32(\"14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133\")),bytes32(stringToBytes32(\"68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204\")),bytes32(stringToBytes32(\"186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48\")),bytes32(stringToBytes32(\"121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213\")),bytes32(stringToBytes32(\"148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165\")),bytes32(stringToBytes32(\"80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47\"))]"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[8],accounts[8],accounts[9],accounts[1],accounts[2],accounts[7],accounts[6],accounts[9],accounts[9],accounts[5],accounts[7],accounts[6],accounts[9],accounts[3],accounts[8],accounts[2],accounts[7],accounts[6],accounts[3],accounts[6],accounts[3],accounts[0],accounts[9],accounts[8],accounts[8],accounts[9],accounts[0],accounts[2],accounts[8],accounts[8],accounts[2],accounts[8],accounts[8],accounts[3],accounts[1],accounts[1],accounts[9],accounts[5],accounts[6],accounts[2],accounts[1],accounts[7],accounts[8],accounts[7],accounts[5],accounts[4],accounts[5],accounts[7],accounts[2],accounts[9],accounts[7],accounts[7],accounts[1],accounts[8],accounts[3],accounts[9],accounts[9],accounts[5],accounts[3],accounts[1],accounts[6],accounts[6],accounts[6],accounts[3],accounts[9],accounts[1],accounts[6],accounts[1],accounts[9],accounts[9],accounts[0],accounts[1],accounts[2],accounts[4],accounts[4],accounts[0],accounts[7],accounts[5],accounts[9],accounts[4],accounts[7],accounts[3],accounts[0],accounts[6],accounts[5],accounts[9],accounts[0],accounts[5],accounts[7],accounts[8],accounts[2],accounts[2],accounts[7],accounts[1],accounts[8]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[1336,9999,64,5,65,257,2014223714,64,2014223714,254,1532892062,27,255,5,1532892064,29,9999,256,28,6,10001,64,2,254,4,3,1338,97,2014223715,29,257,1532892064,1336,1532892062,4,2014223714,96,1337,1,26,10000,256,255,28,29,9999,29,64,66,1532892064,2014223715,254,28,10001,5,1532892063,1532892062,1337,1532892063,64,28,2014223716,256,0,9999,65,2014223715,254,5,256,95,1532892062,29,1532892063,255,28,27,257,29,4,1336,10001,10001,257,1337,65,27,66,28,9999,29,1338,28,65,5]",
                "sol": "[uint256(1336),uint256(9999),uint256(64),uint256(5),uint256(65),uint256(257),uint256(2014223714),uint256(64),uint256(2014223714),uint256(254),uint256(1532892062),uint256(27),uint256(255),uint256(5),uint256(1532892064),uint256(29),uint256(9999),uint256(256),uint256(28),uint256(6),uint256(10001),uint256(64),uint256(2),uint256(254),uint256(4),uint256(3),uint256(1338),uint256(97),uint256(2014223715),uint256(29),uint256(257),uint256(1532892064),uint256(1336),uint256(1532892062),uint256(4),uint256(2014223714),uint256(96),uint256(1337),uint256(1),uint256(26),uint256(10000),uint256(256),uint256(255),uint256(28),uint256(29),uint256(9999),uint256(29),uint256(64),uint256(66),uint256(1532892064),uint256(2014223715),uint256(254),uint256(28),uint256(10001),uint256(5),uint256(1532892063),uint256(1532892062),uint256(1337),uint256(1532892063),uint256(64),uint256(28),uint256(2014223716),uint256(256),uint256(0),uint256(9999),uint256(65),uint256(2014223715),uint256(254),uint256(5),uint256(256),uint256(95),uint256(1532892062),uint256(29),uint256(1532892063),uint256(255),uint256(28),uint256(27),uint256(257),uint256(29),uint256(4),uint256(1336),uint256(10001),uint256(10001),uint256(257),uint256(1337),uint256(65),uint256(27),uint256(66),uint256(28),uint256(9999),uint256(29),uint256(1338),uint256(28),uint256(65),uint256(5)]"
              },
              {
                "js": "[29,64,257,65,1532892062,5,3,27,10000,29,10001,254,1532892064,1336,1338,0,5,1338,5,3,1532892062,255,96,9999,27,66,10001,257,65,95,1532892063,66,65,5,257,66,10000,5,256,1336,64,64,26,29,257,1338,2014223716,2014223714,6,2014223716,1337,5,5,255,1532892064,10001,29,29,64,26,5,1337,27,1338,255,95,5,254,97,256,97,3,1532892062,5,95,1532892062,255,4,5,5,1338,97,10001,255,257,29,2014223716,10001,9999,28,1,28,1,2014223715,26]",
                "sol": "[uint256(29),uint256(64),uint256(257),uint256(65),uint256(1532892062),uint256(5),uint256(3),uint256(27),uint256(10000),uint256(29),uint256(10001),uint256(254),uint256(1532892064),uint256(1336),uint256(1338),uint256(0),uint256(5),uint256(1338),uint256(5),uint256(3),uint256(1532892062),uint256(255),uint256(96),uint256(9999),uint256(27),uint256(66),uint256(10001),uint256(257),uint256(65),uint256(95),uint256(1532892063),uint256(66),uint256(65),uint256(5),uint256(257),uint256(66),uint256(10000),uint256(5),uint256(256),uint256(1336),uint256(64),uint256(64),uint256(26),uint256(29),uint256(257),uint256(1338),uint256(2014223716),uint256(2014223714),uint256(6),uint256(2014223716),uint256(1337),uint256(5),uint256(5),uint256(255),uint256(1532892064),uint256(10001),uint256(29),uint256(29),uint256(64),uint256(26),uint256(5),uint256(1337),uint256(27),uint256(1338),uint256(255),uint256(95),uint256(5),uint256(254),uint256(97),uint256(256),uint256(97),uint256(3),uint256(1532892062),uint256(5),uint256(95),uint256(1532892062),uint256(255),uint256(4),uint256(5),uint256(5),uint256(1338),uint256(97),uint256(10001),uint256(255),uint256(257),uint256(29),uint256(2014223716),uint256(10001),uint256(9999),uint256(28),uint256(1),uint256(28),uint256(1),uint256(2014223715),uint256(26)]"
              },
              {
                "js": "[[101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34],[4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219],[205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101],[82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238],[34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252],[111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73],[122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93],[70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55],[134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163],[149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175],[172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147],[235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95],[224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177],[212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172],[91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147],[23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252],[27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120],[101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151],[235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200],[122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12],[101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19],[228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170],[235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217],[72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45],[75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176],[224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102],[43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190],[150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138],[2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54],[232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238],[181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178],[118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51],[231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5],[28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47],[199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26],[41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15],[132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61],[25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59],[218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15],[37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119],[5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232],[137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37],[251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164],[47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44],[102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93],[235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67],[76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191],[90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9],[21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59],[211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136],[145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58],[9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55],[134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53],[11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2],[81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184],[14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221],[231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184],[114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21],[181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239],[137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223],[18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20],[16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134],[145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232],[118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248],[12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193],[87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90],[214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107],[86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152],[44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155],[17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103],[185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66],[166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130],[207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51],[221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193],[97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34],[94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179],[245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181],[60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208],[191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90],[85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74],[221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174],[216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143],[225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158],[84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97],[186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17],[177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16],[7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112],[190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173],[161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184],[14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133],[68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204],[186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48],[121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213],[148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165],[80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47]]",
                "sol": "[bytes32(stringToBytes32(\"101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34\")),bytes32(stringToBytes32(\"4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219\")),bytes32(stringToBytes32(\"205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101\")),bytes32(stringToBytes32(\"82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238\")),bytes32(stringToBytes32(\"34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252\")),bytes32(stringToBytes32(\"111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73\")),bytes32(stringToBytes32(\"122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93\")),bytes32(stringToBytes32(\"70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55\")),bytes32(stringToBytes32(\"134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163\")),bytes32(stringToBytes32(\"149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175\")),bytes32(stringToBytes32(\"172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147\")),bytes32(stringToBytes32(\"235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95\")),bytes32(stringToBytes32(\"224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177\")),bytes32(stringToBytes32(\"212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172\")),bytes32(stringToBytes32(\"91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147\")),bytes32(stringToBytes32(\"23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252\")),bytes32(stringToBytes32(\"27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120\")),bytes32(stringToBytes32(\"101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151\")),bytes32(stringToBytes32(\"235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200\")),bytes32(stringToBytes32(\"122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12\")),bytes32(stringToBytes32(\"101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19\")),bytes32(stringToBytes32(\"228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170\")),bytes32(stringToBytes32(\"235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217\")),bytes32(stringToBytes32(\"72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45\")),bytes32(stringToBytes32(\"75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176\")),bytes32(stringToBytes32(\"224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102\")),bytes32(stringToBytes32(\"43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190\")),bytes32(stringToBytes32(\"150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138\")),bytes32(stringToBytes32(\"2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54\")),bytes32(stringToBytes32(\"232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238\")),bytes32(stringToBytes32(\"181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178\")),bytes32(stringToBytes32(\"118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51\")),bytes32(stringToBytes32(\"231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5\")),bytes32(stringToBytes32(\"28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47\")),bytes32(stringToBytes32(\"199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26\")),bytes32(stringToBytes32(\"41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15\")),bytes32(stringToBytes32(\"132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61\")),bytes32(stringToBytes32(\"25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59\")),bytes32(stringToBytes32(\"218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15\")),bytes32(stringToBytes32(\"37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119\")),bytes32(stringToBytes32(\"5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232\")),bytes32(stringToBytes32(\"137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37\")),bytes32(stringToBytes32(\"251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164\")),bytes32(stringToBytes32(\"47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44\")),bytes32(stringToBytes32(\"102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93\")),bytes32(stringToBytes32(\"235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67\")),bytes32(stringToBytes32(\"76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191\")),bytes32(stringToBytes32(\"90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9\")),bytes32(stringToBytes32(\"21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59\")),bytes32(stringToBytes32(\"211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136\")),bytes32(stringToBytes32(\"145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58\")),bytes32(stringToBytes32(\"9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55\")),bytes32(stringToBytes32(\"134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53\")),bytes32(stringToBytes32(\"11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2\")),bytes32(stringToBytes32(\"81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184\")),bytes32(stringToBytes32(\"14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221\")),bytes32(stringToBytes32(\"231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184\")),bytes32(stringToBytes32(\"114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21\")),bytes32(stringToBytes32(\"181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239\")),bytes32(stringToBytes32(\"137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223\")),bytes32(stringToBytes32(\"18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20\")),bytes32(stringToBytes32(\"16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134\")),bytes32(stringToBytes32(\"145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232\")),bytes32(stringToBytes32(\"118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248\")),bytes32(stringToBytes32(\"12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193\")),bytes32(stringToBytes32(\"87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90\")),bytes32(stringToBytes32(\"214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107\")),bytes32(stringToBytes32(\"86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152\")),bytes32(stringToBytes32(\"44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155\")),bytes32(stringToBytes32(\"17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103\")),bytes32(stringToBytes32(\"185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66\")),bytes32(stringToBytes32(\"166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130\")),bytes32(stringToBytes32(\"207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51\")),bytes32(stringToBytes32(\"221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193\")),bytes32(stringToBytes32(\"97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34\")),bytes32(stringToBytes32(\"94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179\")),bytes32(stringToBytes32(\"245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181\")),bytes32(stringToBytes32(\"60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208\")),bytes32(stringToBytes32(\"191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90\")),bytes32(stringToBytes32(\"85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74\")),bytes32(stringToBytes32(\"221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174\")),bytes32(stringToBytes32(\"216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143\")),bytes32(stringToBytes32(\"225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158\")),bytes32(stringToBytes32(\"84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97\")),bytes32(stringToBytes32(\"186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17\")),bytes32(stringToBytes32(\"177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16\")),bytes32(stringToBytes32(\"7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112\")),bytes32(stringToBytes32(\"190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173\")),bytes32(stringToBytes32(\"161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184\")),bytes32(stringToBytes32(\"14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133\")),bytes32(stringToBytes32(\"68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204\")),bytes32(stringToBytes32(\"186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48\")),bytes32(stringToBytes32(\"121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213\")),bytes32(stringToBytes32(\"148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165\")),bytes32(stringToBytes32(\"80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[1336,9999,64,5,65,257,2014223714,64,2014223714,254,1532892062,27,255,5,1532892064,29,9999,256,28,6,10001,64,2,254,4,3,1338,97,2014223715,29,257,1532892064,1336,1532892062,4,2014223714,96,1337,1,26,10000,256,255,28,29,9999,29,64,66,1532892064,2014223715,254,28,10001,5,1532892063,1532892062,1337,1532892063,64,28,2014223716,256,0,9999,65,2014223715,254,5,256,95,1532892062,29,1532892063,255,28,27,257,29,4,1336,10001,10001,257,1337,65,27,66,28,9999,29,1338,28,65,5]",
                "sol": "[uint256(1336),uint256(9999),uint256(64),uint256(5),uint256(65),uint256(257),uint256(2014223714),uint256(64),uint256(2014223714),uint256(254),uint256(1532892062),uint256(27),uint256(255),uint256(5),uint256(1532892064),uint256(29),uint256(9999),uint256(256),uint256(28),uint256(6),uint256(10001),uint256(64),uint256(2),uint256(254),uint256(4),uint256(3),uint256(1338),uint256(97),uint256(2014223715),uint256(29),uint256(257),uint256(1532892064),uint256(1336),uint256(1532892062),uint256(4),uint256(2014223714),uint256(96),uint256(1337),uint256(1),uint256(26),uint256(10000),uint256(256),uint256(255),uint256(28),uint256(29),uint256(9999),uint256(29),uint256(64),uint256(66),uint256(1532892064),uint256(2014223715),uint256(254),uint256(28),uint256(10001),uint256(5),uint256(1532892063),uint256(1532892062),uint256(1337),uint256(1532892063),uint256(64),uint256(28),uint256(2014223716),uint256(256),uint256(0),uint256(9999),uint256(65),uint256(2014223715),uint256(254),uint256(5),uint256(256),uint256(95),uint256(1532892062),uint256(29),uint256(1532892063),uint256(255),uint256(28),uint256(27),uint256(257),uint256(29),uint256(4),uint256(1336),uint256(10001),uint256(10001),uint256(257),uint256(1337),uint256(65),uint256(27),uint256(66),uint256(28),uint256(9999),uint256(29),uint256(1338),uint256(28),uint256(65),uint256(5)]"
              },
              {
                "js": "[29,64,257,65,1532892062,5,3,27,10000,29,10001,254,1532892064,1336,1338,0,5,1338,5,3,1532892062,255,96,9999,27,66,10001,257,65,95,1532892063,66,65,5,257,66,10000,5,256,1336,64,64,26,29,257,1338,2014223716,2014223714,6,2014223716,1337,5,5,255,1532892064,10001,29,29,64,26,5,1337,27,1338,255,95,5,254,97,256,97,3,1532892062,5,95,1532892062,255,4,5,5,1338,97,10001,255,257,29,2014223716,10001,9999,28,1,28,1,2014223715,26]",
                "sol": "[uint256(29),uint256(64),uint256(257),uint256(65),uint256(1532892062),uint256(5),uint256(3),uint256(27),uint256(10000),uint256(29),uint256(10001),uint256(254),uint256(1532892064),uint256(1336),uint256(1338),uint256(0),uint256(5),uint256(1338),uint256(5),uint256(3),uint256(1532892062),uint256(255),uint256(96),uint256(9999),uint256(27),uint256(66),uint256(10001),uint256(257),uint256(65),uint256(95),uint256(1532892063),uint256(66),uint256(65),uint256(5),uint256(257),uint256(66),uint256(10000),uint256(5),uint256(256),uint256(1336),uint256(64),uint256(64),uint256(26),uint256(29),uint256(257),uint256(1338),uint256(2014223716),uint256(2014223714),uint256(6),uint256(2014223716),uint256(1337),uint256(5),uint256(5),uint256(255),uint256(1532892064),uint256(10001),uint256(29),uint256(29),uint256(64),uint256(26),uint256(5),uint256(1337),uint256(27),uint256(1338),uint256(255),uint256(95),uint256(5),uint256(254),uint256(97),uint256(256),uint256(97),uint256(3),uint256(1532892062),uint256(5),uint256(95),uint256(1532892062),uint256(255),uint256(4),uint256(5),uint256(5),uint256(1338),uint256(97),uint256(10001),uint256(255),uint256(257),uint256(29),uint256(2014223716),uint256(10001),uint256(9999),uint256(28),uint256(1),uint256(28),uint256(1),uint256(2014223715),uint256(26)]"
              },
              {
                "js": "[[101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34],[4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219],[205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101],[82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238],[34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252],[111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73],[122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93],[70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55],[134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163],[149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175],[172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147],[235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95],[224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177],[212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172],[91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147],[23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252],[27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120],[101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151],[235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200],[122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12],[101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19],[228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170],[235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217],[72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45],[75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176],[224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102],[43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190],[150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138],[2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54],[232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238],[181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178],[118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51],[231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5],[28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47],[199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26],[41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15],[132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61],[25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59],[218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15],[37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119],[5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232],[137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37],[251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164],[47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44],[102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93],[235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67],[76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191],[90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9],[21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59],[211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136],[145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58],[9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55],[134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53],[11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2],[81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184],[14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221],[231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184],[114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21],[181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239],[137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223],[18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20],[16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134],[145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232],[118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248],[12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193],[87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90],[214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107],[86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152],[44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155],[17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103],[185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66],[166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130],[207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51],[221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193],[97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34],[94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179],[245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181],[60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208],[191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90],[85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74],[221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174],[216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143],[225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158],[84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97],[186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17],[177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16],[7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112],[190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173],[161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184],[14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133],[68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204],[186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48],[121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213],[148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165],[80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47]]",
                "sol": "[bytes32(stringToBytes32(\"101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34\")),bytes32(stringToBytes32(\"4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219\")),bytes32(stringToBytes32(\"205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101\")),bytes32(stringToBytes32(\"82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238\")),bytes32(stringToBytes32(\"34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252\")),bytes32(stringToBytes32(\"111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73\")),bytes32(stringToBytes32(\"122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93\")),bytes32(stringToBytes32(\"70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55\")),bytes32(stringToBytes32(\"134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163\")),bytes32(stringToBytes32(\"149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175\")),bytes32(stringToBytes32(\"172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147\")),bytes32(stringToBytes32(\"235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95\")),bytes32(stringToBytes32(\"224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177\")),bytes32(stringToBytes32(\"212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172\")),bytes32(stringToBytes32(\"91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147\")),bytes32(stringToBytes32(\"23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252\")),bytes32(stringToBytes32(\"27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120\")),bytes32(stringToBytes32(\"101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151\")),bytes32(stringToBytes32(\"235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200\")),bytes32(stringToBytes32(\"122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12\")),bytes32(stringToBytes32(\"101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19\")),bytes32(stringToBytes32(\"228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170\")),bytes32(stringToBytes32(\"235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217\")),bytes32(stringToBytes32(\"72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45\")),bytes32(stringToBytes32(\"75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176\")),bytes32(stringToBytes32(\"224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102\")),bytes32(stringToBytes32(\"43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190\")),bytes32(stringToBytes32(\"150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138\")),bytes32(stringToBytes32(\"2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54\")),bytes32(stringToBytes32(\"232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238\")),bytes32(stringToBytes32(\"181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178\")),bytes32(stringToBytes32(\"118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51\")),bytes32(stringToBytes32(\"231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5\")),bytes32(stringToBytes32(\"28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47\")),bytes32(stringToBytes32(\"199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26\")),bytes32(stringToBytes32(\"41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15\")),bytes32(stringToBytes32(\"132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61\")),bytes32(stringToBytes32(\"25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59\")),bytes32(stringToBytes32(\"218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15\")),bytes32(stringToBytes32(\"37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119\")),bytes32(stringToBytes32(\"5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232\")),bytes32(stringToBytes32(\"137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37\")),bytes32(stringToBytes32(\"251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164\")),bytes32(stringToBytes32(\"47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44\")),bytes32(stringToBytes32(\"102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93\")),bytes32(stringToBytes32(\"235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67\")),bytes32(stringToBytes32(\"76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191\")),bytes32(stringToBytes32(\"90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9\")),bytes32(stringToBytes32(\"21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59\")),bytes32(stringToBytes32(\"211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136\")),bytes32(stringToBytes32(\"145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58\")),bytes32(stringToBytes32(\"9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55\")),bytes32(stringToBytes32(\"134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53\")),bytes32(stringToBytes32(\"11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2\")),bytes32(stringToBytes32(\"81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184\")),bytes32(stringToBytes32(\"14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221\")),bytes32(stringToBytes32(\"231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184\")),bytes32(stringToBytes32(\"114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21\")),bytes32(stringToBytes32(\"181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239\")),bytes32(stringToBytes32(\"137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223\")),bytes32(stringToBytes32(\"18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20\")),bytes32(stringToBytes32(\"16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134\")),bytes32(stringToBytes32(\"145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232\")),bytes32(stringToBytes32(\"118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248\")),bytes32(stringToBytes32(\"12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193\")),bytes32(stringToBytes32(\"87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90\")),bytes32(stringToBytes32(\"214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107\")),bytes32(stringToBytes32(\"86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152\")),bytes32(stringToBytes32(\"44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155\")),bytes32(stringToBytes32(\"17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103\")),bytes32(stringToBytes32(\"185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66\")),bytes32(stringToBytes32(\"166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130\")),bytes32(stringToBytes32(\"207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51\")),bytes32(stringToBytes32(\"221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193\")),bytes32(stringToBytes32(\"97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34\")),bytes32(stringToBytes32(\"94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179\")),bytes32(stringToBytes32(\"245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181\")),bytes32(stringToBytes32(\"60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208\")),bytes32(stringToBytes32(\"191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90\")),bytes32(stringToBytes32(\"85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74\")),bytes32(stringToBytes32(\"221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174\")),bytes32(stringToBytes32(\"216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143\")),bytes32(stringToBytes32(\"225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158\")),bytes32(stringToBytes32(\"84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97\")),bytes32(stringToBytes32(\"186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17\")),bytes32(stringToBytes32(\"177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16\")),bytes32(stringToBytes32(\"7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112\")),bytes32(stringToBytes32(\"190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173\")),bytes32(stringToBytes32(\"161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184\")),bytes32(stringToBytes32(\"14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133\")),bytes32(stringToBytes32(\"68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204\")),bytes32(stringToBytes32(\"186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48\")),bytes32(stringToBytes32(\"121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213\")),bytes32(stringToBytes32(\"148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165\")),bytes32(stringToBytes32(\"80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _offchainPaymentHashes.length",
            "parameters": [
              {
                "js": "[accounts[1],accounts[4],accounts[2],accounts[5],accounts[1],accounts[9],accounts[1],accounts[7],accounts[6],accounts[1],accounts[8],accounts[5],accounts[1],accounts[4],accounts[1],accounts[9],accounts[2],accounts[7],accounts[8],accounts[9],accounts[3],accounts[4],accounts[8],accounts[1],accounts[5],accounts[5],accounts[9],accounts[7],accounts[8],accounts[2],accounts[4],accounts[6],accounts[5],accounts[8],accounts[4],accounts[7],accounts[0],accounts[0],accounts[3],accounts[4],accounts[9],accounts[8],accounts[0],accounts[4],accounts[8],accounts[5],accounts[2],accounts[4],accounts[6],accounts[1],accounts[8],accounts[7],accounts[9],accounts[2],accounts[9],accounts[4],accounts[0],accounts[2],accounts[7],accounts[0],accounts[9],accounts[4],accounts[3],accounts[3],accounts[4],accounts[2],accounts[1],accounts[0],accounts[5],accounts[6],accounts[8],accounts[3],accounts[4],accounts[0],accounts[3],accounts[7],accounts[9],accounts[0],accounts[6],accounts[7],accounts[6],accounts[9],accounts[1],accounts[7],accounts[9],accounts[6],accounts[7],accounts[5],accounts[6],accounts[3],accounts[5],accounts[5],accounts[2],accounts[0],accounts[7],accounts[2]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[1336,9999,64,5,65,257,2014223714,64,2014223714,254,1532892062,27,255,5,1532892064,29,9999,256,28,6,10001,64,2,254,4,3,1338,97,2014223715,29,257,1532892064,1336,1532892062,4,2014223714,96,1337,1,26,10000,256,255,28,29,9999,29,64,66,1532892064,2014223715,254,28,10001,5,1532892063,1532892062,1337,1532892063,64,28,2014223716,256,0,9999,65,2014223715,254,5,256,95,1532892062,29,1532892063,255,28,27,257,29,4,1336,10001,10001,257,1337,65,27,66,28,9999,29,1338,28,65,5]",
                "sol": "[uint256(1336),uint256(9999),uint256(64),uint256(5),uint256(65),uint256(257),uint256(2014223714),uint256(64),uint256(2014223714),uint256(254),uint256(1532892062),uint256(27),uint256(255),uint256(5),uint256(1532892064),uint256(29),uint256(9999),uint256(256),uint256(28),uint256(6),uint256(10001),uint256(64),uint256(2),uint256(254),uint256(4),uint256(3),uint256(1338),uint256(97),uint256(2014223715),uint256(29),uint256(257),uint256(1532892064),uint256(1336),uint256(1532892062),uint256(4),uint256(2014223714),uint256(96),uint256(1337),uint256(1),uint256(26),uint256(10000),uint256(256),uint256(255),uint256(28),uint256(29),uint256(9999),uint256(29),uint256(64),uint256(66),uint256(1532892064),uint256(2014223715),uint256(254),uint256(28),uint256(10001),uint256(5),uint256(1532892063),uint256(1532892062),uint256(1337),uint256(1532892063),uint256(64),uint256(28),uint256(2014223716),uint256(256),uint256(0),uint256(9999),uint256(65),uint256(2014223715),uint256(254),uint256(5),uint256(256),uint256(95),uint256(1532892062),uint256(29),uint256(1532892063),uint256(255),uint256(28),uint256(27),uint256(257),uint256(29),uint256(4),uint256(1336),uint256(10001),uint256(10001),uint256(257),uint256(1337),uint256(65),uint256(27),uint256(66),uint256(28),uint256(9999),uint256(29),uint256(1338),uint256(28),uint256(65),uint256(5)]"
              },
              {
                "js": "[29,64,257,65,1532892062,5,3,27,10000,29,10001,254,1532892064,1336,1338,0,5,1338,5,3,1532892062,255,96,9999,27,66,10001,257,65,95,1532892063,66,65,5,257,66,10000,5,256,1336,64,64,26,29,257,1338,2014223716,2014223714,6,2014223716,1337,5,5,255,1532892064,10001,29,29,64,26,5,1337,27,1338,255,95,5,254,97,256,97,3,1532892062,5,95,1532892062,255,4,5,5,1338,97,10001,255,257,29,2014223716,10001,9999,28,1,28,1,2014223715,26]",
                "sol": "[uint256(29),uint256(64),uint256(257),uint256(65),uint256(1532892062),uint256(5),uint256(3),uint256(27),uint256(10000),uint256(29),uint256(10001),uint256(254),uint256(1532892064),uint256(1336),uint256(1338),uint256(0),uint256(5),uint256(1338),uint256(5),uint256(3),uint256(1532892062),uint256(255),uint256(96),uint256(9999),uint256(27),uint256(66),uint256(10001),uint256(257),uint256(65),uint256(95),uint256(1532892063),uint256(66),uint256(65),uint256(5),uint256(257),uint256(66),uint256(10000),uint256(5),uint256(256),uint256(1336),uint256(64),uint256(64),uint256(26),uint256(29),uint256(257),uint256(1338),uint256(2014223716),uint256(2014223714),uint256(6),uint256(2014223716),uint256(1337),uint256(5),uint256(5),uint256(255),uint256(1532892064),uint256(10001),uint256(29),uint256(29),uint256(64),uint256(26),uint256(5),uint256(1337),uint256(27),uint256(1338),uint256(255),uint256(95),uint256(5),uint256(254),uint256(97),uint256(256),uint256(97),uint256(3),uint256(1532892062),uint256(5),uint256(95),uint256(1532892062),uint256(255),uint256(4),uint256(5),uint256(5),uint256(1338),uint256(97),uint256(10001),uint256(255),uint256(257),uint256(29),uint256(2014223716),uint256(10001),uint256(9999),uint256(28),uint256(1),uint256(28),uint256(1),uint256(2014223715),uint256(26)]"
              },
              {
                "js": "[[101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34],[4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219],[205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101],[82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238],[34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252],[111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73],[122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93],[70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55],[134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163],[149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175],[172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147],[235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95],[224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177],[212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172],[91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147],[23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252],[27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120],[101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151],[235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200],[122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12],[101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19],[228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170],[235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217],[72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45],[75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176],[224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102],[43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190],[150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138],[2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54],[232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238],[181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178],[118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51],[231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5],[28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47],[199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26],[41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15],[132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61],[25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59],[218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15],[37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119],[5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232],[137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37],[251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164],[47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44],[102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93],[235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67],[76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191],[90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9],[21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59],[211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136],[145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58],[9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55],[134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53],[11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2],[81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184],[14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221],[231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184],[114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21],[181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239],[137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223],[18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20],[16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134],[145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232],[118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248],[12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193],[87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90],[214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107],[86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152],[44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155],[17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103],[185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66],[166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130],[207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51],[221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193],[97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34],[94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179],[245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181],[60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208],[191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90],[85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74],[221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174],[216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143],[225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158],[84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97],[186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17],[177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16],[7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112],[190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173],[161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184],[14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133],[68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204],[186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48],[121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213],[148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165],[80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47]]",
                "sol": "[bytes32(stringToBytes32(\"101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34\")),bytes32(stringToBytes32(\"4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219\")),bytes32(stringToBytes32(\"205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101\")),bytes32(stringToBytes32(\"82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238\")),bytes32(stringToBytes32(\"34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252\")),bytes32(stringToBytes32(\"111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73\")),bytes32(stringToBytes32(\"122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93\")),bytes32(stringToBytes32(\"70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55\")),bytes32(stringToBytes32(\"134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163\")),bytes32(stringToBytes32(\"149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175\")),bytes32(stringToBytes32(\"172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147\")),bytes32(stringToBytes32(\"235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95\")),bytes32(stringToBytes32(\"224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177\")),bytes32(stringToBytes32(\"212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172\")),bytes32(stringToBytes32(\"91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147\")),bytes32(stringToBytes32(\"23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252\")),bytes32(stringToBytes32(\"27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120\")),bytes32(stringToBytes32(\"101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151\")),bytes32(stringToBytes32(\"235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200\")),bytes32(stringToBytes32(\"122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12\")),bytes32(stringToBytes32(\"101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19\")),bytes32(stringToBytes32(\"228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170\")),bytes32(stringToBytes32(\"235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217\")),bytes32(stringToBytes32(\"72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45\")),bytes32(stringToBytes32(\"75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176\")),bytes32(stringToBytes32(\"224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102\")),bytes32(stringToBytes32(\"43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190\")),bytes32(stringToBytes32(\"150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138\")),bytes32(stringToBytes32(\"2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54\")),bytes32(stringToBytes32(\"232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238\")),bytes32(stringToBytes32(\"181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178\")),bytes32(stringToBytes32(\"118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51\")),bytes32(stringToBytes32(\"231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5\")),bytes32(stringToBytes32(\"28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47\")),bytes32(stringToBytes32(\"199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26\")),bytes32(stringToBytes32(\"41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15\")),bytes32(stringToBytes32(\"132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61\")),bytes32(stringToBytes32(\"25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59\")),bytes32(stringToBytes32(\"218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15\")),bytes32(stringToBytes32(\"37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119\")),bytes32(stringToBytes32(\"5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232\")),bytes32(stringToBytes32(\"137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37\")),bytes32(stringToBytes32(\"251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164\")),bytes32(stringToBytes32(\"47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44\")),bytes32(stringToBytes32(\"102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93\")),bytes32(stringToBytes32(\"235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67\")),bytes32(stringToBytes32(\"76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191\")),bytes32(stringToBytes32(\"90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9\")),bytes32(stringToBytes32(\"21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59\")),bytes32(stringToBytes32(\"211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136\")),bytes32(stringToBytes32(\"145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58\")),bytes32(stringToBytes32(\"9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55\")),bytes32(stringToBytes32(\"134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53\")),bytes32(stringToBytes32(\"11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2\")),bytes32(stringToBytes32(\"81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184\")),bytes32(stringToBytes32(\"14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221\")),bytes32(stringToBytes32(\"231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184\")),bytes32(stringToBytes32(\"114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21\")),bytes32(stringToBytes32(\"181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239\")),bytes32(stringToBytes32(\"137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223\")),bytes32(stringToBytes32(\"18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20\")),bytes32(stringToBytes32(\"16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134\")),bytes32(stringToBytes32(\"145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232\")),bytes32(stringToBytes32(\"118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248\")),bytes32(stringToBytes32(\"12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193\")),bytes32(stringToBytes32(\"87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90\")),bytes32(stringToBytes32(\"214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107\")),bytes32(stringToBytes32(\"86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152\")),bytes32(stringToBytes32(\"44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155\")),bytes32(stringToBytes32(\"17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103\")),bytes32(stringToBytes32(\"185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66\")),bytes32(stringToBytes32(\"166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130\")),bytes32(stringToBytes32(\"207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51\")),bytes32(stringToBytes32(\"221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193\")),bytes32(stringToBytes32(\"97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34\")),bytes32(stringToBytes32(\"94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179\")),bytes32(stringToBytes32(\"245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181\")),bytes32(stringToBytes32(\"60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208\")),bytes32(stringToBytes32(\"191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90\")),bytes32(stringToBytes32(\"85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74\")),bytes32(stringToBytes32(\"221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174\")),bytes32(stringToBytes32(\"216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143\")),bytes32(stringToBytes32(\"225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158\")),bytes32(stringToBytes32(\"84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97\")),bytes32(stringToBytes32(\"186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17\")),bytes32(stringToBytes32(\"177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16\")),bytes32(stringToBytes32(\"7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112\")),bytes32(stringToBytes32(\"190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173\")),bytes32(stringToBytes32(\"161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184\")),bytes32(stringToBytes32(\"14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133\")),bytes32(stringToBytes32(\"68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204\")),bytes32(stringToBytes32(\"186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48\")),bytes32(stringToBytes32(\"121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213\")),bytes32(stringToBytes32(\"148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165\")),bytes32(stringToBytes32(\"80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentTimestamps.length",
            "parameters": [
              {
                "js": "[accounts[5],accounts[7],accounts[8],accounts[3],accounts[7],accounts[9],accounts[7],accounts[9],accounts[6],accounts[2],accounts[6],accounts[8],accounts[7],accounts[8],accounts[8],accounts[2],accounts[8],accounts[2],accounts[6],accounts[8],accounts[1],accounts[3],accounts[1],accounts[2],accounts[9],accounts[9],accounts[1],accounts[8],accounts[5],accounts[6],accounts[9],accounts[5],accounts[5],accounts[9],accounts[1],accounts[3],accounts[1],accounts[4],accounts[7],accounts[2],accounts[8],accounts[7],accounts[5],accounts[1],accounts[8],accounts[9],accounts[0],accounts[6],accounts[9],accounts[9],accounts[5],accounts[5],accounts[8],accounts[2],accounts[5],accounts[8],accounts[8],accounts[0],accounts[9],accounts[5],accounts[9],accounts[8],accounts[1],accounts[0],accounts[9],accounts[6],accounts[4],accounts[8],accounts[2],accounts[4],accounts[2],accounts[2],accounts[1],accounts[6],accounts[9],accounts[0],accounts[2],accounts[1],accounts[6],accounts[0],accounts[4],accounts[8],accounts[9],accounts[3],accounts[7],accounts[7],accounts[3],accounts[5],accounts[3],accounts[5],accounts[5],accounts[9],accounts[2],accounts[1],accounts[9],accounts[7]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[1336,9999,64,5,65,257,2014223714,64,2014223714,254,1532892062,27,255,5,1532892064,29,9999,256,28,6,10001,64,2,254,4,3,1338,97,2014223715,29,257,1532892064,1336,1532892062,4,2014223714,96,1337,1,26,10000,256,255,28,29,9999,29,64,66,1532892064,2014223715,254,28,10001,5,1532892063,1532892062,1337,1532892063,64,28,2014223716,256,0,9999,65,2014223715,254,5,256,95,1532892062,29,1532892063,255,28,27,257,29,4,1336,10001,10001,257,1337,65,27,66,28,9999,29,1338,28,65,5]",
                "sol": "[uint256(1336),uint256(9999),uint256(64),uint256(5),uint256(65),uint256(257),uint256(2014223714),uint256(64),uint256(2014223714),uint256(254),uint256(1532892062),uint256(27),uint256(255),uint256(5),uint256(1532892064),uint256(29),uint256(9999),uint256(256),uint256(28),uint256(6),uint256(10001),uint256(64),uint256(2),uint256(254),uint256(4),uint256(3),uint256(1338),uint256(97),uint256(2014223715),uint256(29),uint256(257),uint256(1532892064),uint256(1336),uint256(1532892062),uint256(4),uint256(2014223714),uint256(96),uint256(1337),uint256(1),uint256(26),uint256(10000),uint256(256),uint256(255),uint256(28),uint256(29),uint256(9999),uint256(29),uint256(64),uint256(66),uint256(1532892064),uint256(2014223715),uint256(254),uint256(28),uint256(10001),uint256(5),uint256(1532892063),uint256(1532892062),uint256(1337),uint256(1532892063),uint256(64),uint256(28),uint256(2014223716),uint256(256),uint256(0),uint256(9999),uint256(65),uint256(2014223715),uint256(254),uint256(5),uint256(256),uint256(95),uint256(1532892062),uint256(29),uint256(1532892063),uint256(255),uint256(28),uint256(27),uint256(257),uint256(29),uint256(4),uint256(1336),uint256(10001),uint256(10001),uint256(257),uint256(1337),uint256(65),uint256(27),uint256(66),uint256(28),uint256(9999),uint256(29),uint256(1338),uint256(28),uint256(65),uint256(5)]"
              },
              {
                "js": "[29,64,257,65,1532892062,5,3,27,10000,29,10001,254,1532892064,1336,1338,0,5,1338,5,3,1532892062,255,96,9999,27,66,10001,257,65,95,1532892063,66,65,5,257,66,10000,5,256,1336,64,64,26,29,257,1338,2014223716,2014223714,6,2014223716,1337,5,5,255,1532892064,10001,29,29,64,26,5,1337,27,1338,255,95,5,254,97,256,97,3,1532892062,5,95,1532892062,255,4,5,5,1338,97,10001,255,257,29,2014223716,10001,9999,28,1,28,1,2014223715,26]",
                "sol": "[uint256(29),uint256(64),uint256(257),uint256(65),uint256(1532892062),uint256(5),uint256(3),uint256(27),uint256(10000),uint256(29),uint256(10001),uint256(254),uint256(1532892064),uint256(1336),uint256(1338),uint256(0),uint256(5),uint256(1338),uint256(5),uint256(3),uint256(1532892062),uint256(255),uint256(96),uint256(9999),uint256(27),uint256(66),uint256(10001),uint256(257),uint256(65),uint256(95),uint256(1532892063),uint256(66),uint256(65),uint256(5),uint256(257),uint256(66),uint256(10000),uint256(5),uint256(256),uint256(1336),uint256(64),uint256(64),uint256(26),uint256(29),uint256(257),uint256(1338),uint256(2014223716),uint256(2014223714),uint256(6),uint256(2014223716),uint256(1337),uint256(5),uint256(5),uint256(255),uint256(1532892064),uint256(10001),uint256(29),uint256(29),uint256(64),uint256(26),uint256(5),uint256(1337),uint256(27),uint256(1338),uint256(255),uint256(95),uint256(5),uint256(254),uint256(97),uint256(256),uint256(97),uint256(3),uint256(1532892062),uint256(5),uint256(95),uint256(1532892062),uint256(255),uint256(4),uint256(5),uint256(5),uint256(1338),uint256(97),uint256(10001),uint256(255),uint256(257),uint256(29),uint256(2014223716),uint256(10001),uint256(9999),uint256(28),uint256(1),uint256(28),uint256(1),uint256(2014223715),uint256(26)]"
              },
              {
                "js": "[[101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34],[4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219],[205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101],[82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238],[34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252],[111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73],[122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93],[70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55],[134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163],[149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175],[172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147],[235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95],[224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177],[212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172],[91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147],[23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252],[27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120],[101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151],[235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200],[122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12],[101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19],[228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170],[235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217],[72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45],[75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176],[224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102],[43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190],[150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138],[2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54],[232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238],[181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178],[118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51],[231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5],[28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47],[199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26],[41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15],[132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61],[25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59],[218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15],[37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119],[5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232],[137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37],[251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164],[47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44],[102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93],[235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67],[76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191],[90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9],[21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59],[211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136],[145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58],[9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55],[134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53],[11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2],[81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184],[14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221],[231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184],[114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21],[181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239],[137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223],[18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20],[16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134],[145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232],[118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248],[12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193],[87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90],[214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107],[86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152],[44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155],[17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103],[185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66],[166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130],[207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51],[221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193],[97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34],[94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179],[245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181],[60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208],[191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90],[85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74],[221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174],[216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143],[225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158],[84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97],[186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17],[177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16],[7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112],[190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173],[161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184],[14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133],[68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204],[186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48],[121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213],[148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165],[80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47]]",
                "sol": "[bytes32(stringToBytes32(\"101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34\")),bytes32(stringToBytes32(\"4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219\")),bytes32(stringToBytes32(\"205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101\")),bytes32(stringToBytes32(\"82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238\")),bytes32(stringToBytes32(\"34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252\")),bytes32(stringToBytes32(\"111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73\")),bytes32(stringToBytes32(\"122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93\")),bytes32(stringToBytes32(\"70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55\")),bytes32(stringToBytes32(\"134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163\")),bytes32(stringToBytes32(\"149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175\")),bytes32(stringToBytes32(\"172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147\")),bytes32(stringToBytes32(\"235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95\")),bytes32(stringToBytes32(\"224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177\")),bytes32(stringToBytes32(\"212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172\")),bytes32(stringToBytes32(\"91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147\")),bytes32(stringToBytes32(\"23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252\")),bytes32(stringToBytes32(\"27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120\")),bytes32(stringToBytes32(\"101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151\")),bytes32(stringToBytes32(\"235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200\")),bytes32(stringToBytes32(\"122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12\")),bytes32(stringToBytes32(\"101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19\")),bytes32(stringToBytes32(\"228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170\")),bytes32(stringToBytes32(\"235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217\")),bytes32(stringToBytes32(\"72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45\")),bytes32(stringToBytes32(\"75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176\")),bytes32(stringToBytes32(\"224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102\")),bytes32(stringToBytes32(\"43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190\")),bytes32(stringToBytes32(\"150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138\")),bytes32(stringToBytes32(\"2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54\")),bytes32(stringToBytes32(\"232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238\")),bytes32(stringToBytes32(\"181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178\")),bytes32(stringToBytes32(\"118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51\")),bytes32(stringToBytes32(\"231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5\")),bytes32(stringToBytes32(\"28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47\")),bytes32(stringToBytes32(\"199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26\")),bytes32(stringToBytes32(\"41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15\")),bytes32(stringToBytes32(\"132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61\")),bytes32(stringToBytes32(\"25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59\")),bytes32(stringToBytes32(\"218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15\")),bytes32(stringToBytes32(\"37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119\")),bytes32(stringToBytes32(\"5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232\")),bytes32(stringToBytes32(\"137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37\")),bytes32(stringToBytes32(\"251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164\")),bytes32(stringToBytes32(\"47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44\")),bytes32(stringToBytes32(\"102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93\")),bytes32(stringToBytes32(\"235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67\")),bytes32(stringToBytes32(\"76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191\")),bytes32(stringToBytes32(\"90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9\")),bytes32(stringToBytes32(\"21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59\")),bytes32(stringToBytes32(\"211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136\")),bytes32(stringToBytes32(\"145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58\")),bytes32(stringToBytes32(\"9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55\")),bytes32(stringToBytes32(\"134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53\")),bytes32(stringToBytes32(\"11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2\")),bytes32(stringToBytes32(\"81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184\")),bytes32(stringToBytes32(\"14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221\")),bytes32(stringToBytes32(\"231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184\")),bytes32(stringToBytes32(\"114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21\")),bytes32(stringToBytes32(\"181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239\")),bytes32(stringToBytes32(\"137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223\")),bytes32(stringToBytes32(\"18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20\")),bytes32(stringToBytes32(\"16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134\")),bytes32(stringToBytes32(\"145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232\")),bytes32(stringToBytes32(\"118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248\")),bytes32(stringToBytes32(\"12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193\")),bytes32(stringToBytes32(\"87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90\")),bytes32(stringToBytes32(\"214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107\")),bytes32(stringToBytes32(\"86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152\")),bytes32(stringToBytes32(\"44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155\")),bytes32(stringToBytes32(\"17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103\")),bytes32(stringToBytes32(\"185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66\")),bytes32(stringToBytes32(\"166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130\")),bytes32(stringToBytes32(\"207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51\")),bytes32(stringToBytes32(\"221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193\")),bytes32(stringToBytes32(\"97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34\")),bytes32(stringToBytes32(\"94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179\")),bytes32(stringToBytes32(\"245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181\")),bytes32(stringToBytes32(\"60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208\")),bytes32(stringToBytes32(\"191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90\")),bytes32(stringToBytes32(\"85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74\")),bytes32(stringToBytes32(\"221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174\")),bytes32(stringToBytes32(\"216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143\")),bytes32(stringToBytes32(\"225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158\")),bytes32(stringToBytes32(\"84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97\")),bytes32(stringToBytes32(\"186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17\")),bytes32(stringToBytes32(\"177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16\")),bytes32(stringToBytes32(\"7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112\")),bytes32(stringToBytes32(\"190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173\")),bytes32(stringToBytes32(\"161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184\")),bytes32(stringToBytes32(\"14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133\")),bytes32(stringToBytes32(\"68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204\")),bytes32(stringToBytes32(\"186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48\")),bytes32(stringToBytes32(\"121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213\")),bytes32(stringToBytes32(\"148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165\")),bytes32(stringToBytes32(\"80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentValues.length",
            "parameters": [
              {
                "js": "[accounts[6],accounts[8],accounts[3],accounts[1],accounts[0],accounts[1],accounts[4],accounts[5],accounts[5],accounts[5],accounts[9],accounts[6],accounts[1],accounts[4],accounts[6],accounts[7],accounts[9],accounts[8],accounts[7],accounts[2],accounts[4],accounts[2],accounts[5],accounts[9],accounts[4],accounts[4],accounts[0],accounts[6],accounts[4],accounts[2],accounts[4],accounts[5],accounts[9],accounts[7],accounts[7],accounts[4],accounts[4],accounts[4],accounts[7],accounts[1],accounts[7],accounts[9],accounts[2],accounts[7],accounts[5],accounts[5],accounts[2],accounts[3],accounts[5],accounts[3],accounts[0],accounts[2],accounts[6],accounts[9],accounts[5],accounts[9],accounts[4],accounts[9],accounts[6],accounts[5],accounts[1],accounts[9],accounts[6],accounts[2],accounts[1],accounts[0],accounts[3],accounts[7],accounts[4],accounts[6],accounts[9],accounts[4],accounts[4],accounts[1],accounts[6],accounts[1],accounts[4],accounts[9],accounts[8],accounts[8],accounts[8],accounts[5],accounts[6],accounts[5],accounts[8],accounts[2],accounts[9],accounts[2],accounts[4],accounts[4],accounts[3],accounts[2],accounts[6],accounts[8],accounts[6],accounts[3]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[1336,9999,64,5,65,257,2014223714,64,2014223714,254,1532892062,27,255,5,1532892064,29,9999,256,28,6,10001,64,2,254,4,3,1338,97,2014223715,29,257,1532892064,1336,1532892062,4,2014223714,96,1337,1,26,10000,256,255,28,29,9999,29,64,66,1532892064,2014223715,254,28,10001,5,1532892063,1532892062,1337,1532892063,64,28,2014223716,256,0,9999,65,2014223715,254,5,256,95,1532892062,29,1532892063,255,28,27,257,29,4,1336,10001,10001,257,1337,65,27,66,28,9999,29,1338,28,65,5]",
                "sol": "[uint256(1336),uint256(9999),uint256(64),uint256(5),uint256(65),uint256(257),uint256(2014223714),uint256(64),uint256(2014223714),uint256(254),uint256(1532892062),uint256(27),uint256(255),uint256(5),uint256(1532892064),uint256(29),uint256(9999),uint256(256),uint256(28),uint256(6),uint256(10001),uint256(64),uint256(2),uint256(254),uint256(4),uint256(3),uint256(1338),uint256(97),uint256(2014223715),uint256(29),uint256(257),uint256(1532892064),uint256(1336),uint256(1532892062),uint256(4),uint256(2014223714),uint256(96),uint256(1337),uint256(1),uint256(26),uint256(10000),uint256(256),uint256(255),uint256(28),uint256(29),uint256(9999),uint256(29),uint256(64),uint256(66),uint256(1532892064),uint256(2014223715),uint256(254),uint256(28),uint256(10001),uint256(5),uint256(1532892063),uint256(1532892062),uint256(1337),uint256(1532892063),uint256(64),uint256(28),uint256(2014223716),uint256(256),uint256(0),uint256(9999),uint256(65),uint256(2014223715),uint256(254),uint256(5),uint256(256),uint256(95),uint256(1532892062),uint256(29),uint256(1532892063),uint256(255),uint256(28),uint256(27),uint256(257),uint256(29),uint256(4),uint256(1336),uint256(10001),uint256(10001),uint256(257),uint256(1337),uint256(65),uint256(27),uint256(66),uint256(28),uint256(9999),uint256(29),uint256(1338),uint256(28),uint256(65),uint256(5)]"
              },
              {
                "js": "[29,64,257,65,1532892062,5,3,27,10000,29,10001,254,1532892064,1336,1338,0,5,1338,5,3,1532892062,255,96,9999,27,66,10001,257,65,95,1532892063,66,65,5,257,66,10000,5,256,1336,64,64,26,29,257,1338,2014223716,2014223714,6,2014223716,1337,5,5,255,1532892064,10001,29,29,64,26,5,1337,27,1338,255,95,5,254,97,256,97,3,1532892062,5,95,1532892062,255,4,5,5,1338,97,10001,255,257,29,2014223716,10001,9999,28,1,28,1,2014223715,26]",
                "sol": "[uint256(29),uint256(64),uint256(257),uint256(65),uint256(1532892062),uint256(5),uint256(3),uint256(27),uint256(10000),uint256(29),uint256(10001),uint256(254),uint256(1532892064),uint256(1336),uint256(1338),uint256(0),uint256(5),uint256(1338),uint256(5),uint256(3),uint256(1532892062),uint256(255),uint256(96),uint256(9999),uint256(27),uint256(66),uint256(10001),uint256(257),uint256(65),uint256(95),uint256(1532892063),uint256(66),uint256(65),uint256(5),uint256(257),uint256(66),uint256(10000),uint256(5),uint256(256),uint256(1336),uint256(64),uint256(64),uint256(26),uint256(29),uint256(257),uint256(1338),uint256(2014223716),uint256(2014223714),uint256(6),uint256(2014223716),uint256(1337),uint256(5),uint256(5),uint256(255),uint256(1532892064),uint256(10001),uint256(29),uint256(29),uint256(64),uint256(26),uint256(5),uint256(1337),uint256(27),uint256(1338),uint256(255),uint256(95),uint256(5),uint256(254),uint256(97),uint256(256),uint256(97),uint256(3),uint256(1532892062),uint256(5),uint256(95),uint256(1532892062),uint256(255),uint256(4),uint256(5),uint256(5),uint256(1338),uint256(97),uint256(10001),uint256(255),uint256(257),uint256(29),uint256(2014223716),uint256(10001),uint256(9999),uint256(28),uint256(1),uint256(28),uint256(1),uint256(2014223715),uint256(26)]"
              },
              {
                "js": "[[101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34],[4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219],[205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101],[82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238],[34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252],[111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73],[122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93],[70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55],[134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163],[149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175],[172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147],[235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95],[224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177],[212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172],[91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147],[23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252],[27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120],[101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151],[235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200],[122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12],[101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19],[228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170],[235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217],[72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45],[75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176],[224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102],[43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190],[150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138],[2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54],[232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238],[181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178],[118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51],[231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5],[28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47],[199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26],[41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15],[132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61],[25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59],[218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15],[37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119],[5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232],[137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37],[251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164],[47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44],[102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93],[235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67],[76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191],[90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9],[21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59],[211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136],[145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58],[9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55],[134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53],[11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2],[81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184],[14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221],[231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184],[114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21],[181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239],[137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223],[18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20],[16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134],[145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232],[118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248],[12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193],[87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90],[214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107],[86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152],[44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155],[17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103],[185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66],[166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130],[207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51],[221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193],[97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34],[94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179],[245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181],[60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208],[191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90],[85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74],[221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174],[216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143],[225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158],[84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97],[186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17],[177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16],[7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112],[190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173],[161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184],[14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133],[68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204],[186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48],[121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213],[148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165],[80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47]]",
                "sol": "[bytes32(stringToBytes32(\"101,101,168,232,229,207,172,32,176,117,129,248,56,133,245,133,38,125,238,113,98,134,59,130,93,204,185,162,207,35,59,34\")),bytes32(stringToBytes32(\"4,50,42,35,55,72,118,176,238,78,3,70,74,76,161,34,13,201,235,25,98,237,128,91,126,50,36,134,133,17,204,219\")),bytes32(stringToBytes32(\"205,61,200,223,193,32,99,41,188,204,3,221,0,55,193,120,184,148,110,24,114,81,87,15,36,44,3,167,235,235,22,101\")),bytes32(stringToBytes32(\"82,60,73,67,252,182,185,97,23,43,220,123,181,195,240,225,160,113,234,168,10,148,114,28,174,46,52,149,167,227,109,238\")),bytes32(stringToBytes32(\"34,4,129,104,180,92,220,176,78,249,125,17,84,46,237,207,22,86,156,45,46,249,109,51,36,192,18,152,178,179,3,252\")),bytes32(stringToBytes32(\"111,175,113,19,7,231,111,157,72,50,179,137,174,221,73,107,236,122,192,228,7,67,9,139,249,46,62,178,153,58,189,73\")),bytes32(stringToBytes32(\"122,186,73,217,93,121,71,86,215,23,239,143,187,159,153,173,109,106,47,4,90,105,228,228,101,95,109,61,236,107,228,93\")),bytes32(stringToBytes32(\"70,178,153,28,230,203,190,210,106,112,97,14,184,242,117,61,120,11,39,7,141,188,153,56,213,248,190,113,85,206,167,55\")),bytes32(stringToBytes32(\"134,6,216,111,32,177,126,141,215,84,153,57,47,49,234,39,143,169,236,72,168,20,24,29,213,214,104,91,182,211,110,163\")),bytes32(stringToBytes32(\"149,110,9,69,54,155,112,125,169,54,32,247,57,28,51,90,165,149,90,171,199,82,57,252,233,106,162,151,144,188,246,175\")),bytes32(stringToBytes32(\"172,244,218,247,154,159,46,30,115,230,249,93,72,0,206,124,112,175,38,34,124,164,175,78,184,253,167,98,48,238,125,147\")),bytes32(stringToBytes32(\"235,246,21,216,58,135,108,97,147,178,150,147,232,88,37,208,11,3,234,26,183,82,62,157,13,68,28,70,16,136,57,95\")),bytes32(stringToBytes32(\"224,69,212,237,218,38,209,159,27,59,135,170,58,151,4,197,160,90,126,182,110,58,252,143,36,221,101,178,175,34,100,177\")),bytes32(stringToBytes32(\"212,243,191,106,235,126,146,76,149,168,136,84,81,101,106,163,249,50,21,128,59,218,144,153,160,107,15,45,135,86,182,172\")),bytes32(stringToBytes32(\"91,246,233,28,250,236,49,49,179,133,54,240,182,103,74,195,122,238,9,87,163,111,73,76,130,151,62,89,230,68,14,147\")),bytes32(stringToBytes32(\"23,229,231,201,132,96,72,38,174,237,106,87,56,181,165,77,207,54,206,17,171,143,174,14,149,233,135,95,145,32,167,252\")),bytes32(stringToBytes32(\"27,192,225,74,224,153,88,235,93,198,241,220,52,64,166,111,105,182,45,136,229,60,188,87,162,108,198,150,100,130,205,120\")),bytes32(stringToBytes32(\"101,4,3,8,162,113,167,40,214,250,198,39,3,145,105,173,241,31,73,134,236,207,200,43,237,82,213,57,131,91,198,151\")),bytes32(stringToBytes32(\"235,209,66,228,6,209,54,97,196,59,57,78,221,207,190,3,130,235,61,251,14,15,108,172,52,79,198,134,75,158,194,200\")),bytes32(stringToBytes32(\"122,229,66,15,143,111,236,151,19,127,6,216,171,235,116,254,120,208,152,239,142,135,237,134,149,105,44,54,1,231,140,12\")),bytes32(stringToBytes32(\"101,12,44,80,91,138,108,145,1,179,190,243,163,218,36,5,5,242,41,133,24,72,56,161,160,81,47,228,10,241,227,19\")),bytes32(stringToBytes32(\"228,17,138,138,209,82,175,61,92,30,242,198,48,104,110,191,122,249,121,192,88,0,110,115,173,9,87,147,151,19,115,170\")),bytes32(stringToBytes32(\"235,165,237,157,185,254,236,127,61,54,117,202,179,224,211,141,206,223,5,15,181,136,36,156,179,154,250,188,152,147,175,217\")),bytes32(stringToBytes32(\"72,91,115,130,140,16,13,67,176,204,36,144,54,29,20,98,41,236,171,93,26,185,196,124,171,226,48,224,189,176,201,45\")),bytes32(stringToBytes32(\"75,10,52,15,133,28,54,121,235,25,41,70,224,115,188,161,153,242,195,168,153,116,212,205,229,47,16,103,112,33,196,176\")),bytes32(stringToBytes32(\"224,63,129,29,224,88,70,146,121,172,85,141,106,86,99,186,98,110,47,176,194,22,163,249,169,218,66,151,56,38,54,102\")),bytes32(stringToBytes32(\"43,59,160,46,175,83,94,178,101,158,24,10,97,21,167,130,43,138,194,36,118,251,249,74,110,227,183,134,128,149,229,190\")),bytes32(stringToBytes32(\"150,10,167,107,48,145,160,10,109,238,221,28,111,213,95,171,107,61,236,41,161,36,221,226,154,117,204,224,26,124,81,138\")),bytes32(stringToBytes32(\"2,146,51,1,116,245,13,164,29,19,76,125,151,212,80,82,148,88,38,145,178,240,39,14,61,241,148,148,44,19,51,54\")),bytes32(stringToBytes32(\"232,171,93,39,42,52,173,152,132,234,163,101,113,12,57,131,177,234,17,50,102,250,138,60,195,212,74,101,114,169,108,238\")),bytes32(stringToBytes32(\"181,89,225,143,252,81,83,60,129,35,5,108,41,36,199,59,169,48,220,130,230,33,12,86,28,102,196,21,138,9,89,178\")),bytes32(stringToBytes32(\"118,133,237,165,151,79,82,116,139,70,161,114,44,152,138,114,66,224,68,232,100,212,172,6,234,114,39,190,195,125,233,51\")),bytes32(stringToBytes32(\"231,244,157,234,93,26,255,110,178,91,30,228,208,81,50,53,177,97,129,2,175,62,195,222,123,58,230,153,83,75,70,5\")),bytes32(stringToBytes32(\"28,95,136,20,140,3,126,205,49,55,8,147,207,194,123,145,76,226,216,240,165,134,40,138,53,113,25,31,66,40,12,47\")),bytes32(stringToBytes32(\"199,40,12,45,96,5,160,198,79,222,183,49,130,246,53,180,243,143,13,193,76,172,3,206,202,184,131,237,254,53,127,26\")),bytes32(stringToBytes32(\"41,77,243,255,225,210,189,49,148,40,17,64,107,98,136,174,166,187,166,64,248,214,30,150,218,167,146,104,175,189,168,15\")),bytes32(stringToBytes32(\"132,8,16,238,55,214,54,127,112,230,183,207,100,200,239,66,52,203,187,72,133,75,182,10,156,32,28,176,207,80,153,61\")),bytes32(stringToBytes32(\"25,83,0,155,103,198,132,6,147,97,81,76,98,62,178,172,245,104,39,147,192,193,190,38,98,20,101,100,122,40,33,59\")),bytes32(stringToBytes32(\"218,148,36,134,248,247,242,47,65,190,127,229,76,217,33,126,64,139,176,11,227,63,224,188,24,22,177,142,80,157,225,15\")),bytes32(stringToBytes32(\"37,250,241,218,232,184,14,197,162,229,5,164,156,61,248,40,214,201,146,170,247,66,182,57,166,47,114,251,11,157,23,119\")),bytes32(stringToBytes32(\"5,107,97,17,85,70,102,142,50,69,125,46,175,102,138,100,164,50,196,52,104,109,27,229,179,157,247,206,194,163,229,232\")),bytes32(stringToBytes32(\"137,184,55,84,91,170,19,254,183,161,204,171,215,188,199,65,237,157,203,37,101,149,147,246,43,61,191,129,154,102,42,37\")),bytes32(stringToBytes32(\"251,56,35,200,152,14,229,215,190,64,54,105,98,10,50,78,67,119,194,88,91,95,49,171,71,13,223,214,122,26,22,164\")),bytes32(stringToBytes32(\"47,102,194,243,221,252,241,202,212,87,92,129,28,222,117,232,32,218,86,78,132,58,38,211,91,180,66,145,141,224,115,44\")),bytes32(stringToBytes32(\"102,115,43,250,172,12,209,71,185,19,69,62,203,224,131,130,187,118,55,2,149,95,190,93,22,198,216,191,247,117,163,93\")),bytes32(stringToBytes32(\"235,76,2,244,253,185,83,36,233,71,151,28,57,125,138,253,238,19,160,169,249,240,208,151,94,89,27,123,205,187,242,67\")),bytes32(stringToBytes32(\"76,118,95,211,7,200,204,69,235,138,36,235,33,21,164,72,53,70,82,240,105,112,166,97,126,13,37,131,187,144,108,191\")),bytes32(stringToBytes32(\"90,45,118,59,69,226,138,157,158,106,50,160,2,25,189,19,11,200,255,181,207,77,145,138,40,167,246,53,81,146,62,9\")),bytes32(stringToBytes32(\"21,76,174,233,66,83,241,160,205,38,175,199,157,226,23,17,135,96,100,45,118,60,54,143,148,223,16,55,12,228,44,59\")),bytes32(stringToBytes32(\"211,17,248,221,92,38,193,90,162,233,247,185,255,14,95,138,81,255,155,49,198,34,211,118,59,51,229,34,186,1,6,136\")),bytes32(stringToBytes32(\"145,131,205,225,95,202,200,166,182,215,133,43,47,89,241,77,170,247,4,136,81,38,76,109,25,116,11,67,99,143,211,58\")),bytes32(stringToBytes32(\"9,221,47,60,63,175,253,182,46,106,94,208,233,129,194,109,187,92,32,135,236,32,236,138,235,183,27,91,36,163,233,55\")),bytes32(stringToBytes32(\"134,99,110,70,241,191,210,55,62,75,217,105,162,114,14,165,44,116,78,39,128,184,78,173,57,43,0,182,127,203,125,53\")),bytes32(stringToBytes32(\"11,194,204,91,58,8,100,1,171,69,155,219,253,219,20,38,21,134,139,90,55,255,61,248,190,85,67,253,173,99,224,2\")),bytes32(stringToBytes32(\"81,114,99,201,178,53,195,235,201,79,123,17,37,233,80,137,209,107,248,112,246,88,235,41,66,51,86,105,122,131,73,184\")),bytes32(stringToBytes32(\"14,117,248,50,120,98,106,23,127,51,172,155,134,52,250,102,11,98,247,106,171,151,171,198,247,248,105,233,50,44,52,221\")),bytes32(stringToBytes32(\"231,115,186,214,73,66,3,135,155,88,213,78,84,225,161,144,105,136,168,156,48,196,54,253,18,173,82,206,130,129,231,184\")),bytes32(stringToBytes32(\"114,72,242,26,56,150,125,119,77,108,202,6,159,34,9,71,214,120,149,144,134,55,12,39,166,241,69,18,153,97,144,21\")),bytes32(stringToBytes32(\"181,35,22,122,30,117,216,171,23,178,116,150,130,91,0,61,127,167,3,250,80,208,50,106,139,104,122,42,143,1,181,239\")),bytes32(stringToBytes32(\"137,154,124,16,243,157,198,130,31,204,52,177,212,199,191,106,161,67,42,109,20,92,135,7,236,25,232,37,25,162,50,223\")),bytes32(stringToBytes32(\"18,167,105,239,88,48,232,164,190,120,241,75,66,224,195,235,0,198,110,215,141,75,191,46,171,168,107,165,218,124,197,20\")),bytes32(stringToBytes32(\"16,20,15,78,25,6,26,238,255,1,162,185,15,176,235,53,126,32,39,201,219,238,200,25,153,32,56,165,43,166,43,134\")),bytes32(stringToBytes32(\"145,0,254,189,244,108,64,217,248,105,111,209,19,216,19,76,124,60,168,19,111,203,91,36,165,97,138,86,14,9,12,232\")),bytes32(stringToBytes32(\"118,130,239,174,92,124,14,192,103,180,235,88,9,243,5,149,125,127,39,151,174,126,151,57,246,88,255,240,78,213,114,248\")),bytes32(stringToBytes32(\"12,26,56,10,0,254,62,210,97,207,174,130,160,204,29,228,88,8,27,104,76,42,191,15,141,94,34,76,124,177,37,193\")),bytes32(stringToBytes32(\"87,203,148,232,117,68,3,136,97,24,248,149,200,123,68,245,223,248,197,250,60,228,33,79,85,71,55,27,61,10,196,90\")),bytes32(stringToBytes32(\"214,244,251,95,25,183,25,251,75,136,127,252,151,181,5,126,3,73,57,134,0,222,9,181,66,212,226,3,62,113,173,107\")),bytes32(stringToBytes32(\"86,28,164,134,22,175,6,236,255,101,57,96,9,15,115,170,185,53,179,70,205,75,3,45,246,140,44,4,198,209,219,152\")),bytes32(stringToBytes32(\"44,164,239,177,114,155,159,187,214,145,52,88,11,186,162,168,44,21,178,196,64,70,164,159,30,251,140,209,160,225,194,155\")),bytes32(stringToBytes32(\"17,81,149,13,219,0,190,129,32,91,188,214,39,139,58,233,154,123,29,133,73,193,206,75,159,53,112,100,181,237,187,103\")),bytes32(stringToBytes32(\"185,240,42,221,230,56,126,142,191,42,205,63,99,174,90,43,194,52,18,9,63,208,66,223,216,146,223,93,95,18,79,66\")),bytes32(stringToBytes32(\"166,12,253,5,183,23,201,79,79,33,31,130,140,113,95,161,212,50,186,1,199,19,25,147,15,178,208,54,149,212,80,130\")),bytes32(stringToBytes32(\"207,126,29,40,176,46,244,85,0,6,159,122,79,13,157,137,79,78,206,58,183,195,93,170,147,128,213,121,30,211,27,51\")),bytes32(stringToBytes32(\"221,139,171,214,221,71,123,105,71,116,21,229,2,121,12,153,138,95,42,208,30,11,85,49,46,38,105,5,63,87,1,193\")),bytes32(stringToBytes32(\"97,105,112,254,185,169,3,65,231,213,251,171,58,58,67,72,134,82,152,209,151,59,173,169,119,22,43,117,161,166,211,34\")),bytes32(stringToBytes32(\"94,10,220,195,56,224,112,71,127,51,9,120,117,46,31,163,155,39,114,14,15,181,219,162,171,32,169,175,46,216,139,179\")),bytes32(stringToBytes32(\"245,220,20,54,112,253,29,31,164,5,129,215,242,188,160,129,221,163,133,61,106,84,68,206,108,143,191,149,167,126,198,181\")),bytes32(stringToBytes32(\"60,104,166,125,247,13,123,186,225,172,75,80,68,157,21,255,69,181,147,185,198,186,115,210,228,84,127,106,22,179,51,208\")),bytes32(stringToBytes32(\"191,253,109,16,143,43,96,124,44,150,98,137,73,25,103,211,158,59,239,14,39,59,115,48,159,92,185,218,233,129,73,90\")),bytes32(stringToBytes32(\"85,152,229,9,221,6,110,136,149,96,212,129,254,6,79,197,100,88,14,37,127,206,223,246,83,205,26,2,142,186,220,74\")),bytes32(stringToBytes32(\"221,174,137,135,19,53,205,207,125,66,208,128,218,151,134,126,210,136,153,169,189,248,133,100,31,40,160,231,38,173,179,174\")),bytes32(stringToBytes32(\"216,204,20,9,133,199,25,4,238,1,111,55,47,233,79,248,83,154,14,44,142,105,52,218,72,110,138,121,166,91,185,143\")),bytes32(stringToBytes32(\"225,53,24,21,233,145,116,200,229,75,92,42,236,111,109,12,207,165,37,34,32,72,134,20,238,150,252,159,155,145,145,158\")),bytes32(stringToBytes32(\"84,59,204,29,23,78,238,202,37,24,241,166,161,187,25,120,209,246,2,47,169,244,141,129,236,200,143,118,174,196,137,97\")),bytes32(stringToBytes32(\"186,9,212,45,35,69,252,131,100,162,142,166,39,207,82,227,21,214,161,164,135,223,95,60,136,25,22,8,41,69,3,17\")),bytes32(stringToBytes32(\"177,236,195,153,109,100,131,38,137,171,243,233,18,11,240,187,135,177,88,70,210,129,92,0,214,170,199,117,194,159,215,16\")),bytes32(stringToBytes32(\"7,121,147,56,200,209,225,232,108,185,149,6,129,105,218,19,34,89,119,28,103,203,138,16,74,164,82,18,13,23,226,112\")),bytes32(stringToBytes32(\"190,129,49,76,134,105,108,79,102,177,13,73,243,183,167,242,166,212,88,217,201,172,63,148,98,92,193,11,125,38,191,173\")),bytes32(stringToBytes32(\"161,103,58,255,152,215,91,106,158,140,142,103,50,232,203,64,254,206,140,171,84,159,178,236,93,100,31,191,125,151,244,184\")),bytes32(stringToBytes32(\"14,73,227,66,103,237,201,153,249,188,159,149,152,112,6,196,194,17,144,118,89,159,128,218,19,123,150,107,172,108,205,133\")),bytes32(stringToBytes32(\"68,5,134,49,131,155,192,130,248,131,29,35,11,178,19,1,172,120,165,136,192,57,44,234,35,65,111,185,180,134,161,204\")),bytes32(stringToBytes32(\"186,89,171,27,84,77,240,146,123,86,210,88,82,209,48,155,80,221,165,154,55,136,156,74,194,218,29,159,50,158,24,48\")),bytes32(stringToBytes32(\"121,74,139,11,154,77,161,76,43,143,85,151,184,163,137,192,151,39,5,236,221,115,105,154,116,201,196,222,144,198,180,213\")),bytes32(stringToBytes32(\"148,166,54,253,127,117,52,181,153,44,162,151,175,161,98,153,245,148,101,76,86,214,77,36,106,146,213,187,142,189,156,165\")),bytes32(stringToBytes32(\"80,58,171,94,251,98,207,25,42,58,218,150,159,53,245,12,78,215,245,40,207,236,107,80,197,13,95,251,200,75,116,47\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.588ZOffChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,bytes32) WHEN _securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "[185,115,214,101,47,161,140,41,39,130,112,242,14,57,40,236,104,23,16,211,50,85,219,0,217,242,105,59,30,143,147,215]",
              "sol": "stringToBytes32(\"185,115,214,101,47,161,140,41,39,130,112,242,14,57,40,236,104,23,16,211,50,85,219,0,217,242,105,59,30,143,147,215\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,bytes32) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "[185,115,214,101,47,161,140,41,39,130,112,242,14,57,40,236,104,23,16,211,50,85,219,0,217,242,105,59,30,143,147,215]",
                "sol": "stringToBytes32(\"185,115,214,101,47,161,140,41,39,130,112,242,14,57,40,236,104,23,16,211,50,85,219,0,217,242,105,59,30,143,147,215\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.589ZOffChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.589ZOffChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "169-192",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "10000",
              "sol": "10000"
            },
            {
              "js": "[65,39,44,188,132,28,107,200,80,5,137,201,28,78,110,86,36,240,49,69,9,243,236,236,171,143,51,132,135,185,147,4]",
              "sol": "stringToBytes32(\"65,39,44,188,132,28,107,200,80,5,137,201,28,78,110,86,36,240,49,69,9,243,236,236,171,143,51,132,135,185,147,4\")"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "[65,39,44,188,132,28,107,200,80,5,137,201,28,78,110,86,36,240,49,69,9,243,236,236,171,143,51,132,135,185,147,4]",
                "sol": "stringToBytes32(\"65,39,44,188,132,28,107,200,80,5,137,201,28,78,110,86,36,240,49,69,9,243,236,236,171,143,51,132,135,185,147,4\")"
              },
              {
                "js": "66",
                "sol": "66"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[65,39,44,188,132,28,107,200,80,5,137,201,28,78,110,86,36,240,49,69,9,243,236,236,171,143,51,132,135,185,147,4]",
                "sol": "stringToBytes32(\"65,39,44,188,132,28,107,200,80,5,137,201,28,78,110,86,36,240,49,69,9,243,236,236,171,143,51,132,135,185,147,4\")"
              },
              {
                "js": "66",
                "sol": "66"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "177-192",
          "restrictions": [
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "[101,56,238,207,206,31,237,116,65,188,177,189,162,181,234,125,98,71,87,141,20,99,239,89,205,167,40,241,25,10,197,172]",
              "sol": "stringToBytes32(\"101,56,238,207,206,31,237,116,65,188,177,189,162,181,234,125,98,71,87,141,20,99,239,89,205,167,40,241,25,10,197,172\")"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "[101,56,238,207,206,31,237,116,65,188,177,189,162,181,234,125,98,71,87,141,20,99,239,89,205,167,40,241,25,10,197,172]",
                "sol": "stringToBytes32(\"101,56,238,207,206,31,237,116,65,188,177,189,162,181,234,125,98,71,87,141,20,99,239,89,205,167,40,241,25,10,197,172\")"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[101,56,238,207,206,31,237,116,65,188,177,189,162,181,234,125,98,71,87,141,20,99,239,89,205,167,40,241,25,10,197,172]",
                "sol": "stringToBytes32(\"101,56,238,207,206,31,237,116,65,188,177,189,162,181,234,125,98,71,87,141,20,99,239,89,205,167,40,241,25,10,197,172\")"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.592ZOnChainVoting.placeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute placeVote(string) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<endTime",
          "parameters": [
            {
              "js": "\"\\x19Ethereum Signed Message:\\n32\"",
              "sol": "\"\\x19Ethereum Signed Message:\\n32\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.593ZOnChainVoting.submitUserVotes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute submitUserVotes(bytes32[],bytes32[]) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,_usersSaltHash.length==_usersVote.length,_usersSaltHash.length!=0",
          "parameters": [
            {
              "js": "[[124,131,187,103,128,155,236,253,136,187,102,152,79,41,167,104,205,158,99,222,171,17,132,118,110,166,174,51,37,211,206,185],[135,76,57,28,176,153,58,19,77,156,105,136,247,93,76,158,119,197,219,234,212,73,99,132,253,132,29,27,56,52,245,23],[160,156,155,157,89,69,105,85,167,102,175,93,245,112,227,62,81,98,109,155,5,210,195,73,58,122,182,176,180,24,23,35],[168,98,218,141,70,31,139,138,52,117,68,143,81,104,167,231,224,166,194,46,72,100,13,232,45,86,163,141,103,8,142,206],[128,27,105,168,200,198,231,122,134,176,63,245,213,16,22,68,11,95,80,141,125,64,38,13,117,160,190,190,153,78,207,94],[15,176,93,43,48,202,70,223,183,85,230,88,254,12,197,49,150,157,146,220,82,159,226,214,36,176,68,71,196,156,200,74],[99,147,137,34,159,113,161,19,196,13,131,89,85,119,237,82,212,60,201,164,238,160,33,46,123,102,3,52,43,229,22,234],[213,160,1,42,67,79,39,122,238,169,118,62,114,236,25,47,48,0,47,201,144,124,107,144,230,169,51,4,8,199,31,171],[112,137,84,223,234,244,12,107,207,108,121,242,43,247,141,52,222,173,225,78,10,157,73,25,167,40,133,187,217,142,49,60],[66,83,119,52,58,65,170,233,81,86,36,24,171,73,163,227,237,7,54,70,30,183,56,70,176,139,66,163,19,45,214,193],[45,69,245,49,216,242,129,220,44,55,114,212,22,131,79,100,1,195,136,230,238,22,71,225,181,97,48,184,136,135,241,206],[226,56,191,136,34,146,184,180,1,68,220,78,36,117,237,185,64,86,177,14,196,98,248,159,183,194,180,234,227,173,152,46],[125,183,21,24,37,100,59,136,245,170,195,26,215,238,32,231,109,126,174,188,234,155,151,176,175,236,19,169,63,55,10,82],[8,125,110,133,248,100,84,13,110,24,36,171,17,241,192,67,108,97,50,4,235,106,161,79,35,116,182,13,255,145,15,183],[207,136,166,142,145,6,70,254,37,48,203,110,84,131,45,194,89,160,59,186,50,34,18,85,37,116,108,7,41,77,104,138],[0,53,26,240,141,133,251,88,52,155,24,136,205,147,146,166,15,200,216,183,133,82,32,149,66,210,18,127,85,89,48,67],[70,160,116,92,77,84,84,122,180,253,209,29,10,237,96,97,117,249,159,231,110,34,243,6,3,72,53,212,112,46,144,98],[224,142,135,35,34,165,91,244,134,137,4,89,62,192,211,216,93,199,75,112,140,116,131,254,13,112,71,70,62,120,243,236],[13,187,160,166,59,66,63,253,202,238,172,203,131,4,156,147,249,205,147,53,244,82,83,149,106,193,240,99,213,12,60,43],[4,45,85,232,113,17,35,230,148,160,40,237,93,10,171,112,206,29,23,66,252,87,224,86,191,225,114,29,157,1,187,194],[139,32,234,58,221,47,254,39,28,114,136,228,149,48,15,58,180,199,81,186,73,247,33,6,47,84,54,93,50,243,168,85],[251,1,127,248,160,230,89,158,247,190,63,167,64,51,31,47,178,76,31,149,196,30,33,221,57,146,53,194,93,127,27,125],[115,233,49,158,47,162,166,159,197,185,36,7,99,13,224,197,99,72,162,146,13,23,18,221,29,249,81,213,143,64,140,21],[148,240,155,107,87,181,227,128,164,175,17,163,209,136,71,181,91,77,97,23,59,115,107,72,112,128,186,144,112,52,151,37],[34,0,158,22,82,237,144,103,120,112,47,64,235,182,127,25,213,193,94,232,166,234,188,5,218,158,26,233,195,242,77,127],[95,229,156,10,30,124,43,91,107,1,172,57,20,217,184,154,92,97,153,161,6,7,38,0,71,62,196,55,113,243,168,81],[240,224,118,92,131,61,47,79,116,230,35,238,137,120,115,67,217,244,147,144,101,160,135,78,138,185,119,67,226,7,230,248],[105,81,58,169,138,239,54,241,210,186,180,237,43,160,75,155,230,160,118,180,198,216,203,209,16,77,35,54,40,224,153,108],[71,53,153,75,99,3,193,127,79,114,237,177,203,160,178,15,43,197,2,46,131,226,80,173,58,92,12,105,171,55,227,162],[106,101,102,168,168,151,17,34,86,195,111,23,140,240,4,181,7,133,114,254,112,209,53,126,195,130,122,47,25,70,16,205],[233,148,108,183,199,3,201,96,166,36,178,151,154,122,127,38,99,218,149,137,56,95,18,135,234,114,91,205,195,146,25,76],[191,2,51,214,235,210,5,213,8,197,242,212,91,251,105,140,248,81,229,164,116,232,30,46,221,229,78,93,65,176,185,42],[144,26,79,37,152,149,46,102,240,198,186,222,247,139,95,176,38,16,1,110,215,137,92,144,96,207,216,83,144,171,207,225],[81,199,157,249,213,244,188,65,133,55,123,236,161,225,46,23,209,91,98,158,182,219,156,244,157,39,132,65,203,152,217,0],[58,194,15,200,155,62,141,209,188,85,116,24,178,96,118,172,16,206,52,152,189,45,236,73,83,128,61,88,3,196,98,149],[138,90,67,120,182,144,35,5,168,101,239,66,155,87,247,255,90,18,221,208,53,36,46,53,32,194,22,74,164,51,87,134],[22,1,112,171,51,109,97,228,155,25,171,91,208,103,163,131,43,187,232,8,108,25,164,167,182,158,88,222,92,34,148,144],[181,25,119,25,95,200,20,27,148,87,47,115,39,133,182,152,148,138,213,251,202,206,219,58,206,255,156,155,140,30,52,244],[173,167,113,125,142,250,250,52,234,109,12,75,70,220,57,59,250,127,178,138,68,184,107,70,164,248,24,115,66,39,249,15],[33,206,80,16,206,32,199,90,90,15,85,101,208,234,28,244,74,197,1,85,236,229,78,213,241,0,194,75,115,59,3,43],[188,92,229,13,78,66,43,164,119,147,181,186,164,142,19,6,230,47,99,66,76,10,241,40,22,225,170,171,110,215,84,223],[93,197,194,181,210,78,174,237,198,115,86,119,69,5,241,106,118,81,189,95,220,190,179,231,180,29,179,92,121,71,249,68],[187,127,212,145,128,80,97,70,85,64,60,34,139,116,48,114,250,151,64,82,203,152,228,203,140,214,247,104,42,84,142,99],[158,60,242,72,202,65,6,94,104,221,32,121,120,164,29,91,36,38,76,25,254,227,140,83,25,50,100,93,80,169,110,165],[86,238,170,46,140,178,38,228,92,81,78,5,250,233,64,136,53,110,224,13,159,143,208,85,212,61,108,150,169,89,201,110],[66,60,105,101,109,188,253,11,1,250,169,93,218,169,63,114,1,48,56,141,88,33,42,86,233,48,15,117,23,160,161,99],[21,190,243,78,195,235,222,248,143,61,66,234,54,155,68,184,5,121,55,216,135,10,67,194,25,204,191,243,183,24,33,110],[162,220,249,244,170,147,103,47,244,140,241,201,196,188,61,1,182,76,147,29,31,219,187,92,203,169,80,237,27,180,181,139],[14,128,204,45,224,243,227,84,236,69,201,190,8,12,224,166,76,85,251,248,236,190,39,213,95,155,68,19,235,152,176,68],[5,86,6,201,60,235,126,201,4,109,40,67,136,65,180,248,45,23,177,22,188,114,149,210,185,121,195,159,135,12,112,250],[238,163,221,230,197,194,238,213,89,229,16,132,253,153,111,213,174,249,124,192,210,217,246,100,41,187,78,1,90,110,12,46],[198,181,79,130,208,67,59,75,150,87,121,52,230,64,14,26,43,115,76,171,73,132,40,1,89,109,253,238,44,229,185,56],[130,223,65,127,37,155,255,189,9,85,54,249,57,190,54,98,182,234,193,224,220,182,176,64,143,6,207,193,5,118,242,221],[54,160,82,118,24,214,249,43,23,255,107,18,199,182,197,218,165,27,48,76,201,150,19,14,140,128,180,140,156,148,123,239],[124,94,103,61,159,117,82,92,44,42,205,23,131,84,59,230,185,35,58,8,206,192,170,249,211,115,78,119,220,87,49,6],[207,220,187,250,35,86,178,200,46,70,71,58,17,179,198,14,88,0,228,207,181,56,97,248,92,1,202,137,83,124,58,197],[253,172,234,106,217,45,20,42,29,69,71,234,33,230,19,163,25,254,35,92,246,186,164,240,182,235,239,150,2,78,223,107],[110,187,151,44,57,182,154,82,231,78,243,255,247,207,129,76,124,21,139,28,230,76,153,24,39,75,182,235,129,249,57,32],[82,200,193,102,184,234,240,28,37,39,122,93,213,49,29,15,200,213,35,190,23,105,115,136,236,129,128,255,255,103,247,94],[200,109,40,210,2,177,255,186,114,87,243,106,101,30,115,156,217,228,118,95,109,72,28,61,197,212,163,151,49,53,71,223],[33,170,68,169,81,149,107,132,227,82,67,28,186,96,7,107,164,169,32,222,64,48,76,215,59,91,246,43,223,73,216,189],[14,195,157,11,11,128,96,90,77,71,53,161,33,2,99,188,118,167,79,70,152,235,49,124,138,220,200,117,46,228,144,28],[68,84,115,136,241,182,155,141,100,134,51,53,185,250,23,7,144,172,122,203,183,220,25,76,63,67,177,55,152,32,52,124],[58,7,242,214,232,132,138,186,24,179,51,41,45,47,16,19,7,181,61,239,113,223,103,108,178,151,227,189,123,193,223,188],[105,221,31,53,166,133,90,124,12,94,51,95,99,80,59,120,232,4,18,148,221,54,105,241,62,215,236,141,215,42,132,133]]",
              "sol": "[bytes32(stringToBytes32(\"124,131,187,103,128,155,236,253,136,187,102,152,79,41,167,104,205,158,99,222,171,17,132,118,110,166,174,51,37,211,206,185\")),bytes32(stringToBytes32(\"135,76,57,28,176,153,58,19,77,156,105,136,247,93,76,158,119,197,219,234,212,73,99,132,253,132,29,27,56,52,245,23\")),bytes32(stringToBytes32(\"160,156,155,157,89,69,105,85,167,102,175,93,245,112,227,62,81,98,109,155,5,210,195,73,58,122,182,176,180,24,23,35\")),bytes32(stringToBytes32(\"168,98,218,141,70,31,139,138,52,117,68,143,81,104,167,231,224,166,194,46,72,100,13,232,45,86,163,141,103,8,142,206\")),bytes32(stringToBytes32(\"128,27,105,168,200,198,231,122,134,176,63,245,213,16,22,68,11,95,80,141,125,64,38,13,117,160,190,190,153,78,207,94\")),bytes32(stringToBytes32(\"15,176,93,43,48,202,70,223,183,85,230,88,254,12,197,49,150,157,146,220,82,159,226,214,36,176,68,71,196,156,200,74\")),bytes32(stringToBytes32(\"99,147,137,34,159,113,161,19,196,13,131,89,85,119,237,82,212,60,201,164,238,160,33,46,123,102,3,52,43,229,22,234\")),bytes32(stringToBytes32(\"213,160,1,42,67,79,39,122,238,169,118,62,114,236,25,47,48,0,47,201,144,124,107,144,230,169,51,4,8,199,31,171\")),bytes32(stringToBytes32(\"112,137,84,223,234,244,12,107,207,108,121,242,43,247,141,52,222,173,225,78,10,157,73,25,167,40,133,187,217,142,49,60\")),bytes32(stringToBytes32(\"66,83,119,52,58,65,170,233,81,86,36,24,171,73,163,227,237,7,54,70,30,183,56,70,176,139,66,163,19,45,214,193\")),bytes32(stringToBytes32(\"45,69,245,49,216,242,129,220,44,55,114,212,22,131,79,100,1,195,136,230,238,22,71,225,181,97,48,184,136,135,241,206\")),bytes32(stringToBytes32(\"226,56,191,136,34,146,184,180,1,68,220,78,36,117,237,185,64,86,177,14,196,98,248,159,183,194,180,234,227,173,152,46\")),bytes32(stringToBytes32(\"125,183,21,24,37,100,59,136,245,170,195,26,215,238,32,231,109,126,174,188,234,155,151,176,175,236,19,169,63,55,10,82\")),bytes32(stringToBytes32(\"8,125,110,133,248,100,84,13,110,24,36,171,17,241,192,67,108,97,50,4,235,106,161,79,35,116,182,13,255,145,15,183\")),bytes32(stringToBytes32(\"207,136,166,142,145,6,70,254,37,48,203,110,84,131,45,194,89,160,59,186,50,34,18,85,37,116,108,7,41,77,104,138\")),bytes32(stringToBytes32(\"0,53,26,240,141,133,251,88,52,155,24,136,205,147,146,166,15,200,216,183,133,82,32,149,66,210,18,127,85,89,48,67\")),bytes32(stringToBytes32(\"70,160,116,92,77,84,84,122,180,253,209,29,10,237,96,97,117,249,159,231,110,34,243,6,3,72,53,212,112,46,144,98\")),bytes32(stringToBytes32(\"224,142,135,35,34,165,91,244,134,137,4,89,62,192,211,216,93,199,75,112,140,116,131,254,13,112,71,70,62,120,243,236\")),bytes32(stringToBytes32(\"13,187,160,166,59,66,63,253,202,238,172,203,131,4,156,147,249,205,147,53,244,82,83,149,106,193,240,99,213,12,60,43\")),bytes32(stringToBytes32(\"4,45,85,232,113,17,35,230,148,160,40,237,93,10,171,112,206,29,23,66,252,87,224,86,191,225,114,29,157,1,187,194\")),bytes32(stringToBytes32(\"139,32,234,58,221,47,254,39,28,114,136,228,149,48,15,58,180,199,81,186,73,247,33,6,47,84,54,93,50,243,168,85\")),bytes32(stringToBytes32(\"251,1,127,248,160,230,89,158,247,190,63,167,64,51,31,47,178,76,31,149,196,30,33,221,57,146,53,194,93,127,27,125\")),bytes32(stringToBytes32(\"115,233,49,158,47,162,166,159,197,185,36,7,99,13,224,197,99,72,162,146,13,23,18,221,29,249,81,213,143,64,140,21\")),bytes32(stringToBytes32(\"148,240,155,107,87,181,227,128,164,175,17,163,209,136,71,181,91,77,97,23,59,115,107,72,112,128,186,144,112,52,151,37\")),bytes32(stringToBytes32(\"34,0,158,22,82,237,144,103,120,112,47,64,235,182,127,25,213,193,94,232,166,234,188,5,218,158,26,233,195,242,77,127\")),bytes32(stringToBytes32(\"95,229,156,10,30,124,43,91,107,1,172,57,20,217,184,154,92,97,153,161,6,7,38,0,71,62,196,55,113,243,168,81\")),bytes32(stringToBytes32(\"240,224,118,92,131,61,47,79,116,230,35,238,137,120,115,67,217,244,147,144,101,160,135,78,138,185,119,67,226,7,230,248\")),bytes32(stringToBytes32(\"105,81,58,169,138,239,54,241,210,186,180,237,43,160,75,155,230,160,118,180,198,216,203,209,16,77,35,54,40,224,153,108\")),bytes32(stringToBytes32(\"71,53,153,75,99,3,193,127,79,114,237,177,203,160,178,15,43,197,2,46,131,226,80,173,58,92,12,105,171,55,227,162\")),bytes32(stringToBytes32(\"106,101,102,168,168,151,17,34,86,195,111,23,140,240,4,181,7,133,114,254,112,209,53,126,195,130,122,47,25,70,16,205\")),bytes32(stringToBytes32(\"233,148,108,183,199,3,201,96,166,36,178,151,154,122,127,38,99,218,149,137,56,95,18,135,234,114,91,205,195,146,25,76\")),bytes32(stringToBytes32(\"191,2,51,214,235,210,5,213,8,197,242,212,91,251,105,140,248,81,229,164,116,232,30,46,221,229,78,93,65,176,185,42\")),bytes32(stringToBytes32(\"144,26,79,37,152,149,46,102,240,198,186,222,247,139,95,176,38,16,1,110,215,137,92,144,96,207,216,83,144,171,207,225\")),bytes32(stringToBytes32(\"81,199,157,249,213,244,188,65,133,55,123,236,161,225,46,23,209,91,98,158,182,219,156,244,157,39,132,65,203,152,217,0\")),bytes32(stringToBytes32(\"58,194,15,200,155,62,141,209,188,85,116,24,178,96,118,172,16,206,52,152,189,45,236,73,83,128,61,88,3,196,98,149\")),bytes32(stringToBytes32(\"138,90,67,120,182,144,35,5,168,101,239,66,155,87,247,255,90,18,221,208,53,36,46,53,32,194,22,74,164,51,87,134\")),bytes32(stringToBytes32(\"22,1,112,171,51,109,97,228,155,25,171,91,208,103,163,131,43,187,232,8,108,25,164,167,182,158,88,222,92,34,148,144\")),bytes32(stringToBytes32(\"181,25,119,25,95,200,20,27,148,87,47,115,39,133,182,152,148,138,213,251,202,206,219,58,206,255,156,155,140,30,52,244\")),bytes32(stringToBytes32(\"173,167,113,125,142,250,250,52,234,109,12,75,70,220,57,59,250,127,178,138,68,184,107,70,164,248,24,115,66,39,249,15\")),bytes32(stringToBytes32(\"33,206,80,16,206,32,199,90,90,15,85,101,208,234,28,244,74,197,1,85,236,229,78,213,241,0,194,75,115,59,3,43\")),bytes32(stringToBytes32(\"188,92,229,13,78,66,43,164,119,147,181,186,164,142,19,6,230,47,99,66,76,10,241,40,22,225,170,171,110,215,84,223\")),bytes32(stringToBytes32(\"93,197,194,181,210,78,174,237,198,115,86,119,69,5,241,106,118,81,189,95,220,190,179,231,180,29,179,92,121,71,249,68\")),bytes32(stringToBytes32(\"187,127,212,145,128,80,97,70,85,64,60,34,139,116,48,114,250,151,64,82,203,152,228,203,140,214,247,104,42,84,142,99\")),bytes32(stringToBytes32(\"158,60,242,72,202,65,6,94,104,221,32,121,120,164,29,91,36,38,76,25,254,227,140,83,25,50,100,93,80,169,110,165\")),bytes32(stringToBytes32(\"86,238,170,46,140,178,38,228,92,81,78,5,250,233,64,136,53,110,224,13,159,143,208,85,212,61,108,150,169,89,201,110\")),bytes32(stringToBytes32(\"66,60,105,101,109,188,253,11,1,250,169,93,218,169,63,114,1,48,56,141,88,33,42,86,233,48,15,117,23,160,161,99\")),bytes32(stringToBytes32(\"21,190,243,78,195,235,222,248,143,61,66,234,54,155,68,184,5,121,55,216,135,10,67,194,25,204,191,243,183,24,33,110\")),bytes32(stringToBytes32(\"162,220,249,244,170,147,103,47,244,140,241,201,196,188,61,1,182,76,147,29,31,219,187,92,203,169,80,237,27,180,181,139\")),bytes32(stringToBytes32(\"14,128,204,45,224,243,227,84,236,69,201,190,8,12,224,166,76,85,251,248,236,190,39,213,95,155,68,19,235,152,176,68\")),bytes32(stringToBytes32(\"5,86,6,201,60,235,126,201,4,109,40,67,136,65,180,248,45,23,177,22,188,114,149,210,185,121,195,159,135,12,112,250\")),bytes32(stringToBytes32(\"238,163,221,230,197,194,238,213,89,229,16,132,253,153,111,213,174,249,124,192,210,217,246,100,41,187,78,1,90,110,12,46\")),bytes32(stringToBytes32(\"198,181,79,130,208,67,59,75,150,87,121,52,230,64,14,26,43,115,76,171,73,132,40,1,89,109,253,238,44,229,185,56\")),bytes32(stringToBytes32(\"130,223,65,127,37,155,255,189,9,85,54,249,57,190,54,98,182,234,193,224,220,182,176,64,143,6,207,193,5,118,242,221\")),bytes32(stringToBytes32(\"54,160,82,118,24,214,249,43,23,255,107,18,199,182,197,218,165,27,48,76,201,150,19,14,140,128,180,140,156,148,123,239\")),bytes32(stringToBytes32(\"124,94,103,61,159,117,82,92,44,42,205,23,131,84,59,230,185,35,58,8,206,192,170,249,211,115,78,119,220,87,49,6\")),bytes32(stringToBytes32(\"207,220,187,250,35,86,178,200,46,70,71,58,17,179,198,14,88,0,228,207,181,56,97,248,92,1,202,137,83,124,58,197\")),bytes32(stringToBytes32(\"253,172,234,106,217,45,20,42,29,69,71,234,33,230,19,163,25,254,35,92,246,186,164,240,182,235,239,150,2,78,223,107\")),bytes32(stringToBytes32(\"110,187,151,44,57,182,154,82,231,78,243,255,247,207,129,76,124,21,139,28,230,76,153,24,39,75,182,235,129,249,57,32\")),bytes32(stringToBytes32(\"82,200,193,102,184,234,240,28,37,39,122,93,213,49,29,15,200,213,35,190,23,105,115,136,236,129,128,255,255,103,247,94\")),bytes32(stringToBytes32(\"200,109,40,210,2,177,255,186,114,87,243,106,101,30,115,156,217,228,118,95,109,72,28,61,197,212,163,151,49,53,71,223\")),bytes32(stringToBytes32(\"33,170,68,169,81,149,107,132,227,82,67,28,186,96,7,107,164,169,32,222,64,48,76,215,59,91,246,43,223,73,216,189\")),bytes32(stringToBytes32(\"14,195,157,11,11,128,96,90,77,71,53,161,33,2,99,188,118,167,79,70,152,235,49,124,138,220,200,117,46,228,144,28\")),bytes32(stringToBytes32(\"68,84,115,136,241,182,155,141,100,134,51,53,185,250,23,7,144,172,122,203,183,220,25,76,63,67,177,55,152,32,52,124\")),bytes32(stringToBytes32(\"58,7,242,214,232,132,138,186,24,179,51,41,45,47,16,19,7,181,61,239,113,223,103,108,178,151,227,189,123,193,223,188\")),bytes32(stringToBytes32(\"105,221,31,53,166,133,90,124,12,94,51,95,99,80,59,120,232,4,18,148,221,54,105,241,62,215,236,141,215,42,132,133\"))]"
            },
            {
              "js": "[[41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28],[91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13],[2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162],[102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234],[59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34],[131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135],[187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125],[146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225],[178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106],[192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255],[197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198],[148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237],[23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68],[21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109],[17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58],[63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207],[101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208],[78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169],[77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252],[9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180],[70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152],[255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126],[64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55],[102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140],[5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68],[15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133],[93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228],[156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130],[92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247],[12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11],[151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169],[29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108],[171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89],[105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34],[213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116],[39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176],[148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208],[11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190],[64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175],[67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107],[24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68],[224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213],[168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41],[209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119],[30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238],[118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42],[76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182],[253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170],[64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190],[74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40],[168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178],[207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120],[120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214],[3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107],[213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65],[235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223],[89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174],[149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42],[71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192],[254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192],[197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191],[158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23],[210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37],[18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86],[191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193]]",
              "sol": "[bytes32(stringToBytes32(\"41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28\")),bytes32(stringToBytes32(\"91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13\")),bytes32(stringToBytes32(\"2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162\")),bytes32(stringToBytes32(\"102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234\")),bytes32(stringToBytes32(\"59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34\")),bytes32(stringToBytes32(\"131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135\")),bytes32(stringToBytes32(\"187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125\")),bytes32(stringToBytes32(\"146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225\")),bytes32(stringToBytes32(\"178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106\")),bytes32(stringToBytes32(\"192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255\")),bytes32(stringToBytes32(\"197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198\")),bytes32(stringToBytes32(\"148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237\")),bytes32(stringToBytes32(\"23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68\")),bytes32(stringToBytes32(\"21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109\")),bytes32(stringToBytes32(\"17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58\")),bytes32(stringToBytes32(\"63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207\")),bytes32(stringToBytes32(\"101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208\")),bytes32(stringToBytes32(\"78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169\")),bytes32(stringToBytes32(\"77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252\")),bytes32(stringToBytes32(\"9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180\")),bytes32(stringToBytes32(\"70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152\")),bytes32(stringToBytes32(\"255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126\")),bytes32(stringToBytes32(\"64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55\")),bytes32(stringToBytes32(\"102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140\")),bytes32(stringToBytes32(\"5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68\")),bytes32(stringToBytes32(\"15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133\")),bytes32(stringToBytes32(\"93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228\")),bytes32(stringToBytes32(\"156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130\")),bytes32(stringToBytes32(\"92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247\")),bytes32(stringToBytes32(\"12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11\")),bytes32(stringToBytes32(\"151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169\")),bytes32(stringToBytes32(\"29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108\")),bytes32(stringToBytes32(\"171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89\")),bytes32(stringToBytes32(\"105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34\")),bytes32(stringToBytes32(\"213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116\")),bytes32(stringToBytes32(\"39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176\")),bytes32(stringToBytes32(\"148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208\")),bytes32(stringToBytes32(\"11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190\")),bytes32(stringToBytes32(\"64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175\")),bytes32(stringToBytes32(\"67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107\")),bytes32(stringToBytes32(\"24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68\")),bytes32(stringToBytes32(\"224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213\")),bytes32(stringToBytes32(\"168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41\")),bytes32(stringToBytes32(\"209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119\")),bytes32(stringToBytes32(\"30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238\")),bytes32(stringToBytes32(\"118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42\")),bytes32(stringToBytes32(\"76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182\")),bytes32(stringToBytes32(\"253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170\")),bytes32(stringToBytes32(\"64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190\")),bytes32(stringToBytes32(\"74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40\")),bytes32(stringToBytes32(\"168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178\")),bytes32(stringToBytes32(\"207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120\")),bytes32(stringToBytes32(\"120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214\")),bytes32(stringToBytes32(\"3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107\")),bytes32(stringToBytes32(\"213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65\")),bytes32(stringToBytes32(\"235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223\")),bytes32(stringToBytes32(\"89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174\")),bytes32(stringToBytes32(\"149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42\")),bytes32(stringToBytes32(\"71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192\")),bytes32(stringToBytes32(\"254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192\")),bytes32(stringToBytes32(\"197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191\")),bytes32(stringToBytes32(\"158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23\")),bytes32(stringToBytes32(\"210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37\")),bytes32(stringToBytes32(\"18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86\")),bytes32(stringToBytes32(\"191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193\"))]"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[[124,131,187,103,128,155,236,253,136,187,102,152,79,41,167,104,205,158,99,222,171,17,132,118,110,166,174,51,37,211,206,185],[135,76,57,28,176,153,58,19,77,156,105,136,247,93,76,158,119,197,219,234,212,73,99,132,253,132,29,27,56,52,245,23],[160,156,155,157,89,69,105,85,167,102,175,93,245,112,227,62,81,98,109,155,5,210,195,73,58,122,182,176,180,24,23,35],[168,98,218,141,70,31,139,138,52,117,68,143,81,104,167,231,224,166,194,46,72,100,13,232,45,86,163,141,103,8,142,206],[128,27,105,168,200,198,231,122,134,176,63,245,213,16,22,68,11,95,80,141,125,64,38,13,117,160,190,190,153,78,207,94],[15,176,93,43,48,202,70,223,183,85,230,88,254,12,197,49,150,157,146,220,82,159,226,214,36,176,68,71,196,156,200,74],[99,147,137,34,159,113,161,19,196,13,131,89,85,119,237,82,212,60,201,164,238,160,33,46,123,102,3,52,43,229,22,234],[213,160,1,42,67,79,39,122,238,169,118,62,114,236,25,47,48,0,47,201,144,124,107,144,230,169,51,4,8,199,31,171],[112,137,84,223,234,244,12,107,207,108,121,242,43,247,141,52,222,173,225,78,10,157,73,25,167,40,133,187,217,142,49,60],[66,83,119,52,58,65,170,233,81,86,36,24,171,73,163,227,237,7,54,70,30,183,56,70,176,139,66,163,19,45,214,193],[45,69,245,49,216,242,129,220,44,55,114,212,22,131,79,100,1,195,136,230,238,22,71,225,181,97,48,184,136,135,241,206],[226,56,191,136,34,146,184,180,1,68,220,78,36,117,237,185,64,86,177,14,196,98,248,159,183,194,180,234,227,173,152,46],[125,183,21,24,37,100,59,136,245,170,195,26,215,238,32,231,109,126,174,188,234,155,151,176,175,236,19,169,63,55,10,82],[8,125,110,133,248,100,84,13,110,24,36,171,17,241,192,67,108,97,50,4,235,106,161,79,35,116,182,13,255,145,15,183],[207,136,166,142,145,6,70,254,37,48,203,110,84,131,45,194,89,160,59,186,50,34,18,85,37,116,108,7,41,77,104,138],[0,53,26,240,141,133,251,88,52,155,24,136,205,147,146,166,15,200,216,183,133,82,32,149,66,210,18,127,85,89,48,67],[70,160,116,92,77,84,84,122,180,253,209,29,10,237,96,97,117,249,159,231,110,34,243,6,3,72,53,212,112,46,144,98],[224,142,135,35,34,165,91,244,134,137,4,89,62,192,211,216,93,199,75,112,140,116,131,254,13,112,71,70,62,120,243,236],[13,187,160,166,59,66,63,253,202,238,172,203,131,4,156,147,249,205,147,53,244,82,83,149,106,193,240,99,213,12,60,43],[4,45,85,232,113,17,35,230,148,160,40,237,93,10,171,112,206,29,23,66,252,87,224,86,191,225,114,29,157,1,187,194],[139,32,234,58,221,47,254,39,28,114,136,228,149,48,15,58,180,199,81,186,73,247,33,6,47,84,54,93,50,243,168,85],[251,1,127,248,160,230,89,158,247,190,63,167,64,51,31,47,178,76,31,149,196,30,33,221,57,146,53,194,93,127,27,125],[115,233,49,158,47,162,166,159,197,185,36,7,99,13,224,197,99,72,162,146,13,23,18,221,29,249,81,213,143,64,140,21],[148,240,155,107,87,181,227,128,164,175,17,163,209,136,71,181,91,77,97,23,59,115,107,72,112,128,186,144,112,52,151,37],[34,0,158,22,82,237,144,103,120,112,47,64,235,182,127,25,213,193,94,232,166,234,188,5,218,158,26,233,195,242,77,127],[95,229,156,10,30,124,43,91,107,1,172,57,20,217,184,154,92,97,153,161,6,7,38,0,71,62,196,55,113,243,168,81],[240,224,118,92,131,61,47,79,116,230,35,238,137,120,115,67,217,244,147,144,101,160,135,78,138,185,119,67,226,7,230,248],[105,81,58,169,138,239,54,241,210,186,180,237,43,160,75,155,230,160,118,180,198,216,203,209,16,77,35,54,40,224,153,108],[71,53,153,75,99,3,193,127,79,114,237,177,203,160,178,15,43,197,2,46,131,226,80,173,58,92,12,105,171,55,227,162],[106,101,102,168,168,151,17,34,86,195,111,23,140,240,4,181,7,133,114,254,112,209,53,126,195,130,122,47,25,70,16,205],[233,148,108,183,199,3,201,96,166,36,178,151,154,122,127,38,99,218,149,137,56,95,18,135,234,114,91,205,195,146,25,76],[191,2,51,214,235,210,5,213,8,197,242,212,91,251,105,140,248,81,229,164,116,232,30,46,221,229,78,93,65,176,185,42],[144,26,79,37,152,149,46,102,240,198,186,222,247,139,95,176,38,16,1,110,215,137,92,144,96,207,216,83,144,171,207,225],[81,199,157,249,213,244,188,65,133,55,123,236,161,225,46,23,209,91,98,158,182,219,156,244,157,39,132,65,203,152,217,0],[58,194,15,200,155,62,141,209,188,85,116,24,178,96,118,172,16,206,52,152,189,45,236,73,83,128,61,88,3,196,98,149],[138,90,67,120,182,144,35,5,168,101,239,66,155,87,247,255,90,18,221,208,53,36,46,53,32,194,22,74,164,51,87,134],[22,1,112,171,51,109,97,228,155,25,171,91,208,103,163,131,43,187,232,8,108,25,164,167,182,158,88,222,92,34,148,144],[181,25,119,25,95,200,20,27,148,87,47,115,39,133,182,152,148,138,213,251,202,206,219,58,206,255,156,155,140,30,52,244],[173,167,113,125,142,250,250,52,234,109,12,75,70,220,57,59,250,127,178,138,68,184,107,70,164,248,24,115,66,39,249,15],[33,206,80,16,206,32,199,90,90,15,85,101,208,234,28,244,74,197,1,85,236,229,78,213,241,0,194,75,115,59,3,43],[188,92,229,13,78,66,43,164,119,147,181,186,164,142,19,6,230,47,99,66,76,10,241,40,22,225,170,171,110,215,84,223],[93,197,194,181,210,78,174,237,198,115,86,119,69,5,241,106,118,81,189,95,220,190,179,231,180,29,179,92,121,71,249,68],[187,127,212,145,128,80,97,70,85,64,60,34,139,116,48,114,250,151,64,82,203,152,228,203,140,214,247,104,42,84,142,99],[158,60,242,72,202,65,6,94,104,221,32,121,120,164,29,91,36,38,76,25,254,227,140,83,25,50,100,93,80,169,110,165],[86,238,170,46,140,178,38,228,92,81,78,5,250,233,64,136,53,110,224,13,159,143,208,85,212,61,108,150,169,89,201,110],[66,60,105,101,109,188,253,11,1,250,169,93,218,169,63,114,1,48,56,141,88,33,42,86,233,48,15,117,23,160,161,99],[21,190,243,78,195,235,222,248,143,61,66,234,54,155,68,184,5,121,55,216,135,10,67,194,25,204,191,243,183,24,33,110],[162,220,249,244,170,147,103,47,244,140,241,201,196,188,61,1,182,76,147,29,31,219,187,92,203,169,80,237,27,180,181,139],[14,128,204,45,224,243,227,84,236,69,201,190,8,12,224,166,76,85,251,248,236,190,39,213,95,155,68,19,235,152,176,68],[5,86,6,201,60,235,126,201,4,109,40,67,136,65,180,248,45,23,177,22,188,114,149,210,185,121,195,159,135,12,112,250],[238,163,221,230,197,194,238,213,89,229,16,132,253,153,111,213,174,249,124,192,210,217,246,100,41,187,78,1,90,110,12,46],[198,181,79,130,208,67,59,75,150,87,121,52,230,64,14,26,43,115,76,171,73,132,40,1,89,109,253,238,44,229,185,56],[130,223,65,127,37,155,255,189,9,85,54,249,57,190,54,98,182,234,193,224,220,182,176,64,143,6,207,193,5,118,242,221],[54,160,82,118,24,214,249,43,23,255,107,18,199,182,197,218,165,27,48,76,201,150,19,14,140,128,180,140,156,148,123,239],[124,94,103,61,159,117,82,92,44,42,205,23,131,84,59,230,185,35,58,8,206,192,170,249,211,115,78,119,220,87,49,6],[207,220,187,250,35,86,178,200,46,70,71,58,17,179,198,14,88,0,228,207,181,56,97,248,92,1,202,137,83,124,58,197],[253,172,234,106,217,45,20,42,29,69,71,234,33,230,19,163,25,254,35,92,246,186,164,240,182,235,239,150,2,78,223,107],[110,187,151,44,57,182,154,82,231,78,243,255,247,207,129,76,124,21,139,28,230,76,153,24,39,75,182,235,129,249,57,32],[82,200,193,102,184,234,240,28,37,39,122,93,213,49,29,15,200,213,35,190,23,105,115,136,236,129,128,255,255,103,247,94],[200,109,40,210,2,177,255,186,114,87,243,106,101,30,115,156,217,228,118,95,109,72,28,61,197,212,163,151,49,53,71,223],[33,170,68,169,81,149,107,132,227,82,67,28,186,96,7,107,164,169,32,222,64,48,76,215,59,91,246,43,223,73,216,189],[14,195,157,11,11,128,96,90,77,71,53,161,33,2,99,188,118,167,79,70,152,235,49,124,138,220,200,117,46,228,144,28],[68,84,115,136,241,182,155,141,100,134,51,53,185,250,23,7,144,172,122,203,183,220,25,76,63,67,177,55,152,32,52,124],[58,7,242,214,232,132,138,186,24,179,51,41,45,47,16,19,7,181,61,239,113,223,103,108,178,151,227,189,123,193,223,188],[105,221,31,53,166,133,90,124,12,94,51,95,99,80,59,120,232,4,18,148,221,54,105,241,62,215,236,141,215,42,132,133]]",
                "sol": "[bytes32(stringToBytes32(\"124,131,187,103,128,155,236,253,136,187,102,152,79,41,167,104,205,158,99,222,171,17,132,118,110,166,174,51,37,211,206,185\")),bytes32(stringToBytes32(\"135,76,57,28,176,153,58,19,77,156,105,136,247,93,76,158,119,197,219,234,212,73,99,132,253,132,29,27,56,52,245,23\")),bytes32(stringToBytes32(\"160,156,155,157,89,69,105,85,167,102,175,93,245,112,227,62,81,98,109,155,5,210,195,73,58,122,182,176,180,24,23,35\")),bytes32(stringToBytes32(\"168,98,218,141,70,31,139,138,52,117,68,143,81,104,167,231,224,166,194,46,72,100,13,232,45,86,163,141,103,8,142,206\")),bytes32(stringToBytes32(\"128,27,105,168,200,198,231,122,134,176,63,245,213,16,22,68,11,95,80,141,125,64,38,13,117,160,190,190,153,78,207,94\")),bytes32(stringToBytes32(\"15,176,93,43,48,202,70,223,183,85,230,88,254,12,197,49,150,157,146,220,82,159,226,214,36,176,68,71,196,156,200,74\")),bytes32(stringToBytes32(\"99,147,137,34,159,113,161,19,196,13,131,89,85,119,237,82,212,60,201,164,238,160,33,46,123,102,3,52,43,229,22,234\")),bytes32(stringToBytes32(\"213,160,1,42,67,79,39,122,238,169,118,62,114,236,25,47,48,0,47,201,144,124,107,144,230,169,51,4,8,199,31,171\")),bytes32(stringToBytes32(\"112,137,84,223,234,244,12,107,207,108,121,242,43,247,141,52,222,173,225,78,10,157,73,25,167,40,133,187,217,142,49,60\")),bytes32(stringToBytes32(\"66,83,119,52,58,65,170,233,81,86,36,24,171,73,163,227,237,7,54,70,30,183,56,70,176,139,66,163,19,45,214,193\")),bytes32(stringToBytes32(\"45,69,245,49,216,242,129,220,44,55,114,212,22,131,79,100,1,195,136,230,238,22,71,225,181,97,48,184,136,135,241,206\")),bytes32(stringToBytes32(\"226,56,191,136,34,146,184,180,1,68,220,78,36,117,237,185,64,86,177,14,196,98,248,159,183,194,180,234,227,173,152,46\")),bytes32(stringToBytes32(\"125,183,21,24,37,100,59,136,245,170,195,26,215,238,32,231,109,126,174,188,234,155,151,176,175,236,19,169,63,55,10,82\")),bytes32(stringToBytes32(\"8,125,110,133,248,100,84,13,110,24,36,171,17,241,192,67,108,97,50,4,235,106,161,79,35,116,182,13,255,145,15,183\")),bytes32(stringToBytes32(\"207,136,166,142,145,6,70,254,37,48,203,110,84,131,45,194,89,160,59,186,50,34,18,85,37,116,108,7,41,77,104,138\")),bytes32(stringToBytes32(\"0,53,26,240,141,133,251,88,52,155,24,136,205,147,146,166,15,200,216,183,133,82,32,149,66,210,18,127,85,89,48,67\")),bytes32(stringToBytes32(\"70,160,116,92,77,84,84,122,180,253,209,29,10,237,96,97,117,249,159,231,110,34,243,6,3,72,53,212,112,46,144,98\")),bytes32(stringToBytes32(\"224,142,135,35,34,165,91,244,134,137,4,89,62,192,211,216,93,199,75,112,140,116,131,254,13,112,71,70,62,120,243,236\")),bytes32(stringToBytes32(\"13,187,160,166,59,66,63,253,202,238,172,203,131,4,156,147,249,205,147,53,244,82,83,149,106,193,240,99,213,12,60,43\")),bytes32(stringToBytes32(\"4,45,85,232,113,17,35,230,148,160,40,237,93,10,171,112,206,29,23,66,252,87,224,86,191,225,114,29,157,1,187,194\")),bytes32(stringToBytes32(\"139,32,234,58,221,47,254,39,28,114,136,228,149,48,15,58,180,199,81,186,73,247,33,6,47,84,54,93,50,243,168,85\")),bytes32(stringToBytes32(\"251,1,127,248,160,230,89,158,247,190,63,167,64,51,31,47,178,76,31,149,196,30,33,221,57,146,53,194,93,127,27,125\")),bytes32(stringToBytes32(\"115,233,49,158,47,162,166,159,197,185,36,7,99,13,224,197,99,72,162,146,13,23,18,221,29,249,81,213,143,64,140,21\")),bytes32(stringToBytes32(\"148,240,155,107,87,181,227,128,164,175,17,163,209,136,71,181,91,77,97,23,59,115,107,72,112,128,186,144,112,52,151,37\")),bytes32(stringToBytes32(\"34,0,158,22,82,237,144,103,120,112,47,64,235,182,127,25,213,193,94,232,166,234,188,5,218,158,26,233,195,242,77,127\")),bytes32(stringToBytes32(\"95,229,156,10,30,124,43,91,107,1,172,57,20,217,184,154,92,97,153,161,6,7,38,0,71,62,196,55,113,243,168,81\")),bytes32(stringToBytes32(\"240,224,118,92,131,61,47,79,116,230,35,238,137,120,115,67,217,244,147,144,101,160,135,78,138,185,119,67,226,7,230,248\")),bytes32(stringToBytes32(\"105,81,58,169,138,239,54,241,210,186,180,237,43,160,75,155,230,160,118,180,198,216,203,209,16,77,35,54,40,224,153,108\")),bytes32(stringToBytes32(\"71,53,153,75,99,3,193,127,79,114,237,177,203,160,178,15,43,197,2,46,131,226,80,173,58,92,12,105,171,55,227,162\")),bytes32(stringToBytes32(\"106,101,102,168,168,151,17,34,86,195,111,23,140,240,4,181,7,133,114,254,112,209,53,126,195,130,122,47,25,70,16,205\")),bytes32(stringToBytes32(\"233,148,108,183,199,3,201,96,166,36,178,151,154,122,127,38,99,218,149,137,56,95,18,135,234,114,91,205,195,146,25,76\")),bytes32(stringToBytes32(\"191,2,51,214,235,210,5,213,8,197,242,212,91,251,105,140,248,81,229,164,116,232,30,46,221,229,78,93,65,176,185,42\")),bytes32(stringToBytes32(\"144,26,79,37,152,149,46,102,240,198,186,222,247,139,95,176,38,16,1,110,215,137,92,144,96,207,216,83,144,171,207,225\")),bytes32(stringToBytes32(\"81,199,157,249,213,244,188,65,133,55,123,236,161,225,46,23,209,91,98,158,182,219,156,244,157,39,132,65,203,152,217,0\")),bytes32(stringToBytes32(\"58,194,15,200,155,62,141,209,188,85,116,24,178,96,118,172,16,206,52,152,189,45,236,73,83,128,61,88,3,196,98,149\")),bytes32(stringToBytes32(\"138,90,67,120,182,144,35,5,168,101,239,66,155,87,247,255,90,18,221,208,53,36,46,53,32,194,22,74,164,51,87,134\")),bytes32(stringToBytes32(\"22,1,112,171,51,109,97,228,155,25,171,91,208,103,163,131,43,187,232,8,108,25,164,167,182,158,88,222,92,34,148,144\")),bytes32(stringToBytes32(\"181,25,119,25,95,200,20,27,148,87,47,115,39,133,182,152,148,138,213,251,202,206,219,58,206,255,156,155,140,30,52,244\")),bytes32(stringToBytes32(\"173,167,113,125,142,250,250,52,234,109,12,75,70,220,57,59,250,127,178,138,68,184,107,70,164,248,24,115,66,39,249,15\")),bytes32(stringToBytes32(\"33,206,80,16,206,32,199,90,90,15,85,101,208,234,28,244,74,197,1,85,236,229,78,213,241,0,194,75,115,59,3,43\")),bytes32(stringToBytes32(\"188,92,229,13,78,66,43,164,119,147,181,186,164,142,19,6,230,47,99,66,76,10,241,40,22,225,170,171,110,215,84,223\")),bytes32(stringToBytes32(\"93,197,194,181,210,78,174,237,198,115,86,119,69,5,241,106,118,81,189,95,220,190,179,231,180,29,179,92,121,71,249,68\")),bytes32(stringToBytes32(\"187,127,212,145,128,80,97,70,85,64,60,34,139,116,48,114,250,151,64,82,203,152,228,203,140,214,247,104,42,84,142,99\")),bytes32(stringToBytes32(\"158,60,242,72,202,65,6,94,104,221,32,121,120,164,29,91,36,38,76,25,254,227,140,83,25,50,100,93,80,169,110,165\")),bytes32(stringToBytes32(\"86,238,170,46,140,178,38,228,92,81,78,5,250,233,64,136,53,110,224,13,159,143,208,85,212,61,108,150,169,89,201,110\")),bytes32(stringToBytes32(\"66,60,105,101,109,188,253,11,1,250,169,93,218,169,63,114,1,48,56,141,88,33,42,86,233,48,15,117,23,160,161,99\")),bytes32(stringToBytes32(\"21,190,243,78,195,235,222,248,143,61,66,234,54,155,68,184,5,121,55,216,135,10,67,194,25,204,191,243,183,24,33,110\")),bytes32(stringToBytes32(\"162,220,249,244,170,147,103,47,244,140,241,201,196,188,61,1,182,76,147,29,31,219,187,92,203,169,80,237,27,180,181,139\")),bytes32(stringToBytes32(\"14,128,204,45,224,243,227,84,236,69,201,190,8,12,224,166,76,85,251,248,236,190,39,213,95,155,68,19,235,152,176,68\")),bytes32(stringToBytes32(\"5,86,6,201,60,235,126,201,4,109,40,67,136,65,180,248,45,23,177,22,188,114,149,210,185,121,195,159,135,12,112,250\")),bytes32(stringToBytes32(\"238,163,221,230,197,194,238,213,89,229,16,132,253,153,111,213,174,249,124,192,210,217,246,100,41,187,78,1,90,110,12,46\")),bytes32(stringToBytes32(\"198,181,79,130,208,67,59,75,150,87,121,52,230,64,14,26,43,115,76,171,73,132,40,1,89,109,253,238,44,229,185,56\")),bytes32(stringToBytes32(\"130,223,65,127,37,155,255,189,9,85,54,249,57,190,54,98,182,234,193,224,220,182,176,64,143,6,207,193,5,118,242,221\")),bytes32(stringToBytes32(\"54,160,82,118,24,214,249,43,23,255,107,18,199,182,197,218,165,27,48,76,201,150,19,14,140,128,180,140,156,148,123,239\")),bytes32(stringToBytes32(\"124,94,103,61,159,117,82,92,44,42,205,23,131,84,59,230,185,35,58,8,206,192,170,249,211,115,78,119,220,87,49,6\")),bytes32(stringToBytes32(\"207,220,187,250,35,86,178,200,46,70,71,58,17,179,198,14,88,0,228,207,181,56,97,248,92,1,202,137,83,124,58,197\")),bytes32(stringToBytes32(\"253,172,234,106,217,45,20,42,29,69,71,234,33,230,19,163,25,254,35,92,246,186,164,240,182,235,239,150,2,78,223,107\")),bytes32(stringToBytes32(\"110,187,151,44,57,182,154,82,231,78,243,255,247,207,129,76,124,21,139,28,230,76,153,24,39,75,182,235,129,249,57,32\")),bytes32(stringToBytes32(\"82,200,193,102,184,234,240,28,37,39,122,93,213,49,29,15,200,213,35,190,23,105,115,136,236,129,128,255,255,103,247,94\")),bytes32(stringToBytes32(\"200,109,40,210,2,177,255,186,114,87,243,106,101,30,115,156,217,228,118,95,109,72,28,61,197,212,163,151,49,53,71,223\")),bytes32(stringToBytes32(\"33,170,68,169,81,149,107,132,227,82,67,28,186,96,7,107,164,169,32,222,64,48,76,215,59,91,246,43,223,73,216,189\")),bytes32(stringToBytes32(\"14,195,157,11,11,128,96,90,77,71,53,161,33,2,99,188,118,167,79,70,152,235,49,124,138,220,200,117,46,228,144,28\")),bytes32(stringToBytes32(\"68,84,115,136,241,182,155,141,100,134,51,53,185,250,23,7,144,172,122,203,183,220,25,76,63,67,177,55,152,32,52,124\")),bytes32(stringToBytes32(\"58,7,242,214,232,132,138,186,24,179,51,41,45,47,16,19,7,181,61,239,113,223,103,108,178,151,227,189,123,193,223,188\")),bytes32(stringToBytes32(\"105,221,31,53,166,133,90,124,12,94,51,95,99,80,59,120,232,4,18,148,221,54,105,241,62,215,236,141,215,42,132,133\"))]"
              },
              {
                "js": "[[41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28],[91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13],[2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162],[102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234],[59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34],[131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135],[187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125],[146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225],[178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106],[192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255],[197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198],[148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237],[23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68],[21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109],[17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58],[63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207],[101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208],[78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169],[77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252],[9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180],[70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152],[255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126],[64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55],[102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140],[5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68],[15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133],[93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228],[156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130],[92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247],[12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11],[151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169],[29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108],[171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89],[105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34],[213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116],[39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176],[148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208],[11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190],[64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175],[67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107],[24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68],[224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213],[168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41],[209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119],[30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238],[118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42],[76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182],[253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170],[64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190],[74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40],[168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178],[207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120],[120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214],[3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107],[213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65],[235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223],[89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174],[149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42],[71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192],[254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192],[197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191],[158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23],[210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37],[18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86],[191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193]]",
                "sol": "[bytes32(stringToBytes32(\"41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28\")),bytes32(stringToBytes32(\"91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13\")),bytes32(stringToBytes32(\"2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162\")),bytes32(stringToBytes32(\"102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234\")),bytes32(stringToBytes32(\"59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34\")),bytes32(stringToBytes32(\"131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135\")),bytes32(stringToBytes32(\"187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125\")),bytes32(stringToBytes32(\"146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225\")),bytes32(stringToBytes32(\"178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106\")),bytes32(stringToBytes32(\"192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255\")),bytes32(stringToBytes32(\"197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198\")),bytes32(stringToBytes32(\"148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237\")),bytes32(stringToBytes32(\"23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68\")),bytes32(stringToBytes32(\"21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109\")),bytes32(stringToBytes32(\"17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58\")),bytes32(stringToBytes32(\"63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207\")),bytes32(stringToBytes32(\"101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208\")),bytes32(stringToBytes32(\"78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169\")),bytes32(stringToBytes32(\"77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252\")),bytes32(stringToBytes32(\"9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180\")),bytes32(stringToBytes32(\"70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152\")),bytes32(stringToBytes32(\"255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126\")),bytes32(stringToBytes32(\"64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55\")),bytes32(stringToBytes32(\"102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140\")),bytes32(stringToBytes32(\"5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68\")),bytes32(stringToBytes32(\"15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133\")),bytes32(stringToBytes32(\"93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228\")),bytes32(stringToBytes32(\"156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130\")),bytes32(stringToBytes32(\"92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247\")),bytes32(stringToBytes32(\"12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11\")),bytes32(stringToBytes32(\"151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169\")),bytes32(stringToBytes32(\"29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108\")),bytes32(stringToBytes32(\"171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89\")),bytes32(stringToBytes32(\"105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34\")),bytes32(stringToBytes32(\"213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116\")),bytes32(stringToBytes32(\"39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176\")),bytes32(stringToBytes32(\"148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208\")),bytes32(stringToBytes32(\"11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190\")),bytes32(stringToBytes32(\"64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175\")),bytes32(stringToBytes32(\"67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107\")),bytes32(stringToBytes32(\"24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68\")),bytes32(stringToBytes32(\"224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213\")),bytes32(stringToBytes32(\"168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41\")),bytes32(stringToBytes32(\"209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119\")),bytes32(stringToBytes32(\"30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238\")),bytes32(stringToBytes32(\"118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42\")),bytes32(stringToBytes32(\"76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182\")),bytes32(stringToBytes32(\"253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170\")),bytes32(stringToBytes32(\"64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190\")),bytes32(stringToBytes32(\"74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40\")),bytes32(stringToBytes32(\"168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178\")),bytes32(stringToBytes32(\"207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120\")),bytes32(stringToBytes32(\"120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214\")),bytes32(stringToBytes32(\"3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107\")),bytes32(stringToBytes32(\"213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65\")),bytes32(stringToBytes32(\"235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223\")),bytes32(stringToBytes32(\"89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174\")),bytes32(stringToBytes32(\"149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42\")),bytes32(stringToBytes32(\"71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192\")),bytes32(stringToBytes32(\"254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192\")),bytes32(stringToBytes32(\"197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191\")),bytes32(stringToBytes32(\"158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23\")),bytes32(stringToBytes32(\"210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37\")),bytes32(stringToBytes32(\"18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86\")),bytes32(stringToBytes32(\"191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length == _usersVote.length",
            "parameters": [
              {
                "js": "[[175,174,106,193,104,104,177,254,27,75,78,79,188,245,172,60,225,30,235,2,85,79,76,173,31,68,132,202,195,184,212,77],[66,191,209,220,174,38,191,90,46,227,97,242,62,188,66,5,188,184,164,36,241,114,122,5,106,238,191,139,197,22,124,101],[123,22,48,201,112,83,95,236,191,165,251,48,235,20,32,218,252,250,170,9,192,35,161,215,6,141,255,18,54,41,132,140],[66,210,38,42,142,120,154,225,30,185,199,141,165,2,155,29,35,117,184,170,59,167,170,193,198,134,142,168,150,202,7,48],[17,202,233,86,237,79,54,207,191,127,92,218,190,173,87,91,4,37,102,53,122,45,75,24,205,246,143,204,255,22,205,29],[18,206,165,19,57,155,26,139,30,15,187,14,136,170,246,160,187,175,33,18,39,37,51,182,10,234,109,187,30,213,17,153],[2,249,255,46,173,64,150,24,60,167,155,111,253,251,182,181,232,203,102,75,19,89,52,192,105,158,78,43,70,147,92,7],[138,106,115,170,161,30,143,182,174,218,155,237,206,108,72,164,90,185,52,119,87,100,225,169,111,188,79,31,90,153,154,243],[144,133,6,174,220,47,100,65,131,3,61,34,101,206,226,57,192,202,159,10,18,234,226,203,159,51,112,232,207,253,22,218],[49,11,255,215,168,2,139,248,13,33,180,209,165,47,119,148,95,239,14,91,227,221,248,81,180,7,205,118,178,0,72,104],[52,197,129,5,145,148,122,235,90,194,90,86,0,95,174,38,162,248,231,238,160,149,2,185,172,74,47,89,204,217,162,36],[129,1,101,250,6,158,1,100,102,116,59,180,142,188,46,244,196,162,124,75,157,117,225,0,163,218,212,63,118,122,211,91],[143,0,220,12,131,234,178,205,102,145,55,169,209,14,182,135,254,16,112,255,170,178,45,59,227,225,9,116,241,95,169,122],[165,59,41,52,176,9,143,146,7,117,129,168,137,63,19,170,161,201,58,196,169,200,32,240,116,81,219,145,10,33,87,234],[218,225,201,225,84,13,247,4,28,205,142,108,239,45,181,89,114,253,50,253,185,241,193,143,106,116,214,116,98,171,228,246],[159,237,15,17,107,197,208,24,12,68,98,183,116,148,143,140,9,53,148,86,190,253,15,245,208,35,220,3,16,192,250,244],[28,229,94,8,162,230,153,212,8,24,8,31,243,38,201,186,153,95,173,174,138,48,197,48,150,21,3,108,31,69,57,188],[11,230,88,186,211,253,149,34,143,106,219,197,159,146,181,214,249,70,193,73,2,136,9,128,58,207,226,253,44,62,223,88],[234,5,97,153,171,216,150,178,41,150,186,241,66,86,77,38,155,115,19,19,157,124,231,232,162,7,246,176,127,163,111,41],[16,28,237,237,63,239,245,194,25,148,131,131,71,68,73,117,185,114,133,254,103,142,103,124,253,142,228,116,250,188,98,250],[160,145,49,91,149,243,55,241,172,57,64,44,83,209,247,179,145,20,105,9,176,191,23,178,224,149,81,56,184,194,120,222],[204,104,113,17,242,149,229,151,0,63,83,32,8,50,240,245,87,80,184,126,181,105,202,58,8,176,87,93,109,198,213,31],[86,219,56,74,79,77,102,153,185,18,206,12,112,127,169,177,70,73,57,68,222,118,70,45,196,221,105,148,78,192,140,112],[3,90,192,106,162,140,232,10,174,1,29,176,115,118,224,215,17,184,14,229,124,241,87,249,60,155,100,186,48,89,23,172],[254,96,66,31,231,152,231,197,3,156,243,102,174,83,247,25,225,98,88,240,89,111,101,227,84,19,42,45,33,29,249,77],[1,54,87,62,198,184,72,121,191,34,60,198,115,65,146,116,161,162,6,6,11,51,21,161,23,38,187,248,58,70,151,250],[247,40,196,152,77,115,198,56,114,9,94,115,30,17,188,116,125,114,216,112,177,179,23,225,3,18,111,206,183,151,160,71],[91,172,247,80,111,164,196,130,7,186,118,197,241,80,245,236,109,59,162,214,50,112,18,228,7,64,249,213,76,78,99,157],[49,130,22,125,0,219,1,169,150,52,56,211,22,34,250,115,218,169,151,34,184,221,59,163,228,216,114,223,223,81,116,129],[234,221,94,74,96,138,140,106,29,64,235,255,100,246,59,166,17,152,255,233,83,82,111,192,107,163,21,30,170,78,237,233],[63,232,2,243,136,69,167,177,170,229,206,37,70,227,67,95,216,25,158,214,251,26,49,248,13,203,17,23,180,146,188,50],[216,175,113,157,103,182,132,154,74,23,219,152,253,126,76,54,16,51,200,248,246,240,44,192,140,0,5,62,171,108,144,4],[146,249,107,224,5,108,219,208,217,203,11,247,85,7,173,108,70,185,69,192,199,200,165,71,73,20,45,119,137,219,138,194],[4,15,226,214,148,160,248,194,191,172,106,113,190,30,247,219,155,209,212,47,247,171,224,140,115,142,237,75,63,146,205,206],[84,22,54,54,18,3,216,79,1,187,46,107,11,147,50,124,86,111,101,180,58,52,43,73,130,222,174,115,227,221,202,9],[255,214,181,15,131,88,0,128,33,115,63,202,146,195,134,201,120,74,72,250,128,162,125,169,9,147,36,67,126,188,178,2],[164,250,130,202,224,142,38,137,37,157,160,24,152,236,76,123,173,125,209,144,61,138,234,17,18,89,152,140,80,247,254,31],[71,167,219,215,82,5,196,216,33,152,205,118,178,97,85,166,164,222,237,14,191,221,133,102,183,132,217,149,217,39,12,232],[229,33,61,57,163,80,100,182,201,115,124,229,244,91,127,122,11,219,111,27,224,242,30,232,244,18,75,4,89,240,211,106],[186,82,238,33,47,10,79,58,105,141,130,240,110,200,175,93,124,248,146,169,23,200,193,196,201,126,38,57,246,43,215,40],[203,104,109,47,137,81,131,186,184,255,247,51,124,51,181,23,53,125,176,244,133,111,230,10,254,89,152,170,233,12,98,116],[122,64,79,45,156,78,168,209,77,223,248,246,39,238,82,87,116,132,143,159,200,201,220,209,46,38,247,81,110,196,156,90],[215,48,56,138,146,81,107,243,95,153,165,92,244,156,172,12,117,36,31,165,10,129,138,143,7,119,26,220,226,84,236,157],[44,100,10,226,87,166,60,80,71,220,194,121,211,166,78,186,192,44,168,130,38,229,149,24,188,253,105,124,158,121,170,127],[185,84,241,174,83,121,213,209,252,252,143,105,254,177,173,157,44,163,119,191,143,246,2,191,47,225,104,68,104,237,100,14],[91,44,103,186,194,225,79,41,177,46,182,194,49,96,243,69,47,221,67,89,190,156,254,88,192,99,72,142,96,237,42,6],[105,142,40,185,215,100,218,60,44,178,149,16,154,108,27,96,122,97,180,36,96,60,195,116,89,202,239,123,255,131,175,150],[14,122,236,120,34,45,159,241,69,89,183,250,140,81,48,196,16,64,31,141,253,96,35,63,76,219,7,194,137,180,156,140],[186,164,235,222,98,0,248,13,136,44,20,118,245,237,111,154,4,0,90,40,115,222,46,95,10,54,225,66,188,189,105,34],[142,165,159,197,137,109,195,203,27,143,55,63,207,194,139,105,240,111,206,19,240,12,67,120,151,82,222,66,68,76,155,164],[116,127,47,253,116,103,243,8,66,249,83,182,207,255,128,80,41,115,169,52,124,221,148,12,71,90,226,247,36,49,129,80],[210,196,63,57,230,220,175,72,98,220,205,181,207,193,18,150,88,255,37,21,25,224,131,122,108,52,83,222,78,248,217,133],[91,154,16,176,64,230,43,157,110,128,15,132,77,8,18,134,133,101,150,58,139,139,234,33,99,175,206,115,254,72,129,21],[200,198,53,159,49,141,198,132,45,97,22,141,149,147,150,19,127,234,234,209,102,134,85,56,41,65,152,120,210,80,59,199],[15,206,185,82,96,80,27,208,129,21,22,227,109,173,104,194,198,128,59,76,185,181,81,253,206,61,130,115,80,103,198,194],[104,208,145,118,10,26,216,171,248,117,179,99,120,161,77,237,199,131,155,52,69,95,150,36,177,149,247,82,61,134,62,99],[19,171,219,91,201,101,169,0,71,29,247,135,166,128,165,215,159,171,231,79,78,157,7,81,100,199,92,202,9,250,61,131],[1,139,104,146,200,192,200,185,89,123,152,50,180,217,141,129,60,152,61,31,194,101,150,114,82,150,36,53,218,233,14,4],[20,194,208,161,31,116,253,143,225,27,56,151,251,118,182,58,58,117,235,85,105,85,48,205,94,99,39,93,1,66,87,48],[210,79,6,118,40,228,210,121,0,249,1,226,235,129,182,187,243,82,164,57,122,57,71,29,25,177,221,37,92,239,186,193],[169,156,17,169,175,9,217,239,123,77,71,131,36,15,109,96,105,135,162,168,78,228,84,102,122,92,75,127,21,110,189,12],[202,245,204,185,63,38,187,213,150,56,207,70,201,176,150,141,50,0,131,220,49,26,122,242,78,221,154,146,136,136,73,91],[195,157,201,53,248,227,185,40,232,31,144,44,204,30,236,41,16,249,165,90,207,213,239,126,246,6,193,53,214,117,207,33],[51,245,167,50,179,189,108,241,157,28,121,219,51,172,84,82,115,245,178,92,17,131,62,9,99,233,29,119,45,176,167,11],[239,180,243,170,122,156,5,247,177,138,48,164,213,85,5,220,80,54,105,166,173,42,211,11,7,53,13,57,59,110,67,51],[55,190,199,20,6,130,170,32,212,138,73,86,205,82,192,192,83,11,136,129,75,252,199,40,5,169,39,78,20,13,130,21]]",
                "sol": "[stringToBytes32(\"129,180,219,19,128,126,244,130,135,219,190,76,22,220,99,195,250,87,242,22,95,209,197,24,187,120,143,175,160,13,29,48\"),stringToBytes32(\"39,123,163,207,210,37,205,141,128,111,227,49,232,12,216,245,74,183,219,241,34,119,160,81,168,142,204,212,75,31,113,232\"),stringToBytes32(\"57,249,106,70,124,190,38,194,23,44,253,13,4,33,102,86,103,230,93,211,25,63,134,38,138,90,192,197,33,4,173,12\"),stringToBytes32(\"15,22,44,53,234,147,37,241,95,54,212,199,59,77,187,193,129,182,202,196,99,110,63,78,191,238,121,38,188,20,169,127\"),stringToBytes32(\"210,242,211,54,169,53,207,51,17,64,16,216,206,199,72,25,212,106,235,19,66,16,237,39,158,145,88,240,82,30,168,104\"),stringToBytes32(\"247,169,252,213,199,211,25,146,13,245,249,3,169,180,254,231,211,6,110,230,159,234,164,145,213,224,57,17,167,122,3,175\"),stringToBytes32(\"86,22,175,158,38,90,113,109,16,87,27,4,59,100,47,103,203,169,242,240,199,226,237,113,226,145,215,39,40,37,58,170\"),stringToBytes32(\"17,249,177,235,243,75,135,62,60,201,93,39,137,159,206,56,58,13,224,112,224,44,248,57,129,154,41,136,153,253,51,223\"),stringToBytes32(\"175,104,200,218,164,104,229,24,82,54,78,198,24,139,122,64,119,251,246,211,22,71,198,36,242,48,7,167,71,47,123,60\"),stringToBytes32(\"103,76,20,139,7,32,58,123,230,142,68,79,135,94,64,35,231,251,193,158,250,221,161,52,147,229,239,21,21,23,79,179\"),stringToBytes32(\"248,110,149,122,235,203,236,63,24,141,154,40,98,196,206,131,213,255,43,47,55,43,133,209,174,40,198,141,156,159,211,171\"),stringToBytes32(\"150,61,151,214,13,25,128,236,179,46,77,122,32,203,150,58,202,36,71,118,99,147,229,184,111,249,171,124,223,161,220,11\"),stringToBytes32(\"125,220,217,60,138,51,224,172,204,51,163,169,246,41,73,173,79,92,103,249,145,61,244,228,159,8,124,61,153,33,214,4\"),stringToBytes32(\"40,120,222,118,231,123,154,33,253,126,173,31,175,113,46,16,38,43,183,208,101,203,146,122,102,239,8,139,48,155,78,128\"),stringToBytes32(\"110,161,43,22,179,186,96,214,58,111,85,186,65,231,90,42,83,87,164,117,54,126,46,85,163,52,204,242,48,173,152,9\"),stringToBytes32(\"155,218,179,207,154,74,85,10,18,218,1,98,138,75,252,81,27,241,239,54,96,234,244,113,136,153,58,139,230,126,72,145\"),stringToBytes32(\"25,192,32,238,186,79,136,99,8,110,36,134,207,8,112,4,146,50,54,174,218,178,147,117,189,174,49,66,212,172,64,150\"),stringToBytes32(\"13,4,146,152,74,107,48,123,253,114,183,207,44,96,200,38,13,32,216,101,162,123,1,246,11,78,99,113,67,233,108,21\"),stringToBytes32(\"180,63,95,129,170,238,74,202,118,204,185,29,66,172,229,160,133,107,53,142,173,227,118,250,81,244,122,243,0,216,179,13\"),stringToBytes32(\"87,80,255,46,77,253,246,6,229,28,47,3,218,111,155,254,203,110,225,10,3,188,30,188,97,76,243,52,82,129,82,100\"),stringToBytes32(\"26,225,79,58,249,120,221,112,87,51,78,105,25,110,166,217,251,198,212,13,30,106,162,33,129,200,164,201,137,36,217,163\"),stringToBytes32(\"55,232,91,204,19,148,0,101,27,148,120,145,212,235,56,24,10,27,0,39,4,171,85,43,112,120,157,131,127,225,59,169\"),stringToBytes32(\"118,59,16,112,43,54,243,248,93,127,152,168,204,151,134,155,139,173,56,226,242,230,81,125,173,2,151,14,55,84,90,250\"),stringToBytes32(\"147,49,193,112,53,75,78,40,226,173,135,3,28,19,48,185,176,123,166,241,252,226,125,252,139,80,82,248,150,4,103,193\"),stringToBytes32(\"211,140,124,244,125,24,165,28,117,230,102,212,215,94,60,35,41,104,184,106,98,97,43,136,198,127,60,141,33,252,172,15\"),stringToBytes32(\"17,196,19,187,244,37,36,93,34,149,219,251,195,104,222,178,184,123,23,10,225,126,223,186,57,132,112,31,16,196,216,52\"),stringToBytes32(\"202,125,145,147,52,12,204,5,159,108,175,220,11,41,133,230,184,127,178,47,147,122,223,223,162,21,65,90,153,218,133,114\"),stringToBytes32(\"77,23,246,77,87,78,193,159,102,229,21,224,247,253,98,252,238,70,97,230,225,191,161,241,1,248,39,62,0,51,141,221\"),stringToBytes32(\"71,146,98,149,126,89,197,20,192,70,103,194,196,219,115,230,242,180,156,103,202,134,136,220,31,82,147,237,252,42,217,154\"),stringToBytes32(\"17,94,28,214,41,8,138,140,56,128,198,188,94,74,88,0,224,76,104,94,224,218,92,244,5,217,21,47,131,223,224,201\"),stringToBytes32(\"122,241,173,211,147,140,99,114,65,43,119,214,2,176,159,113,62,130,122,183,13,236,246,204,114,199,173,108,166,20,241,54\"),stringToBytes32(\"137,165,144,236,194,41,171,85,244,226,44,118,221,26,243,118,25,56,31,159,224,212,127,155,242,72,79,37,148,97,150,7\"),stringToBytes32(\"194,135,232,238,224,184,181,77,148,89,68,81,64,214,35,212,191,46,88,157,209,7,34,185,196,99,16,217,202,36,192,45\"),stringToBytes32(\"4,206,76,107,33,136,206,16,147,226,32,120,88,154,236,244,8,233,104,222,82,156,211,3,38,244,29,196,205,194,199,159\"),stringToBytes32(\"143,173,238,41,153,241,192,176,81,140,1,7,29,105,149,247,222,208,198,80,82,98,3,226,186,74,181,83,72,52,114,75\"),stringToBytes32(\"124,84,206,127,109,72,116,147,97,165,22,197,18,238,219,48,88,6,60,61,80,77,82,176,137,156,127,30,35,177,72,202\"),stringToBytes32(\"230,113,12,138,99,60,156,244,179,107,84,50,130,108,77,207,2,126,73,205,16,134,150,227,9,159,124,102,110,74,242,79\"),stringToBytes32(\"42,41,135,241,21,23,72,139,69,7,53,126,9,182,51,227,255,152,66,164,191,81,21,68,239,156,223,31,131,62,142,14\"),stringToBytes32(\"17,121,218,100,35,247,5,128,208,221,201,187,204,134,111,31,203,142,81,186,21,64,92,86,194,115,58,66,24,241,135,110\"),stringToBytes32(\"181,115,61,89,236,147,158,208,250,84,151,127,106,221,122,8,207,104,94,237,144,12,19,227,98,108,83,234,145,95,197,198\"),stringToBytes32(\"107,168,225,203,63,17,89,53,56,185,87,32,227,23,26,126,138,98,219,101,155,2,156,167,44,235,27,27,134,226,61,21\"),stringToBytes32(\"160,84,150,171,125,93,210,141,3,172,233,199,49,210,57,166,226,98,174,118,175,165,198,57,89,249,81,152,212,5,241,67\"),stringToBytes32(\"115,165,36,160,37,183,245,42,202,121,62,204,37,47,236,160,188,17,197,130,248,197,116,23,71,252,214,61,234,66,14,249\"),stringToBytes32(\"200,25,229,125,28,206,235,228,43,102,137,62,5,15,115,154,230,50,206,57,190,90,198,143,92,17,1,92,1,80,70,69\"),stringToBytes32(\"24,183,195,128,48,121,119,156,80,24,93,140,253,168,248,35,166,46,96,18,121,142,244,32,87,152,170,33,215,188,21,218\"),stringToBytes32(\"39,216,204,82,173,61,178,165,218,207,36,139,98,101,171,77,155,183,44,91,38,144,226,116,157,121,186,90,190,245,42,138\"),stringToBytes32(\"119,82,216,119,104,107,177,7,105,104,66,33,38,3,224,206,102,33,106,106,175,95,192,162,42,245,95,116,10,97,100,196\"),stringToBytes32(\"237,199,80,26,249,5,41,121,218,204,17,26,92,13,71,108,94,51,230,93,131,254,216,185,231,57,4,17,138,18,188,6\"),stringToBytes32(\"23,103,163,8,247,190,221,216,243,3,106,72,59,49,33,164,131,51,192,147,205,118,17,130,192,113,75,253,170,146,118,186\"),stringToBytes32(\"118,131,168,7,59,181,235,31,62,213,17,40,53,45,219,98,21,199,52,198,123,84,113,110,14,132,90,57,43,51,76,216\"),stringToBytes32(\"202,123,118,129,202,193,127,231,94,243,155,248,109,218,249,176,113,146,211,248,75,118,10,46,197,1,202,162,27,213,72,83\"),stringToBytes32(\"26,50,12,22,153,228,144,158,155,97,137,30,22,107,197,163,128,55,19,20,144,53,228,193,234,21,167,162,174,110,198,67\"),stringToBytes32(\"16,199,223,221,190,79,109,78,19,188,83,168,112,170,45,202,86,190,97,114,125,38,44,111,27,97,111,96,210,143,164,252\"),stringToBytes32(\"104,23,132,251,161,212,36,213,200,231,210,102,92,158,168,165,185,229,159,247,120,180,17,182,181,232,27,237,236,192,178,94\"),stringToBytes32(\"148,178,251,92,180,53,172,248,103,42,141,169,239,100,97,108,180,75,96,218,152,81,4,33,6,68,184,168,165,241,234,212\"),stringToBytes32(\"66,121,216,102,74,51,101,210,87,89,99,234,141,159,47,210,175,227,198,234,36,209,155,120,12,61,164,101,187,251,84,241\"),stringToBytes32(\"168,211,163,140,117,139,218,104,179,202,123,148,4,198,162,82,46,236,228,175,144,75,190,247,188,58,194,162,207,3,168,142\"),stringToBytes32(\"133,37,115,74,139,65,35,136,185,30,113,130,125,98,194,3,162,45,58,207,182,140,130,130,108,95,66,185,5,155,69,136\"),stringToBytes32(\"166,19,96,228,247,27,171,87,20,1,224,94,252,189,165,216,75,205,143,112,57,75,247,91,142,20,101,139,44,98,124,82\"),stringToBytes32(\"86,243,147,173,50,238,183,45,143,2,57,202,187,35,158,43,181,220,126,52,141,146,149,108,140,18,185,146,159,196,49,99\"),stringToBytes32(\"19,18,13,127,29,55,148,25,153,210,18,194,143,175,150,47,33,234,121,66,78,227,233,17,92,146,248,75,239,118,80,193\"),stringToBytes32(\"209,174,203,128,127,198,26,107,182,204,227,54,201,167,136,22,176,96,58,84,53,103,163,2,115,184,32,26,68,124,213,11\"),stringToBytes32(\"1,103,205,179,162,136,178,4,113,222,0,179,120,98,50,49,231,186,51,89,28,50,139,150,252,198,99,218,82,104,82,145\"),stringToBytes32(\"194,116,66,227,125,76,170,58,182,223,169,163,173,18,186,130,85,22,174,244,248,21,111,159,5,120,136,88,20,13,141,82\"),stringToBytes32(\"252,68,97,182,254,84,38,21,84,231,58,179,116,246,218,156,67,131,40,148,237,79,32,38,150,165,60,115,45,193,111,133\"),stringToBytes32(\"150,142,127,209,68,204,175,148,33,43,17,246,154,246,23,49,16,5,1,190,152,0,145,153,47,252,35,196,2,142,68,129\")]"
              },
              {
                "js": "[[41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28],[91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13],[2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162],[102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234],[59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34],[131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135],[187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125],[146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225],[178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106],[192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255],[197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198],[148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237],[23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68],[21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109],[17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58],[63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207],[101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208],[78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169],[77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252],[9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180],[70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152],[255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126],[64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55],[102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140],[5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68],[15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133],[93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228],[156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130],[92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247],[12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11],[151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169],[29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108],[171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89],[105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34],[213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116],[39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176],[148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208],[11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190],[64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175],[67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107],[24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68],[224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213],[168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41],[209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119],[30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238],[118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42],[76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182],[253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170],[64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190],[74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40],[168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178],[207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120],[120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214],[3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107],[213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65],[235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223],[89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174],[149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42],[71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192],[254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192],[197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191],[158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23],[210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37],[18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86],[191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193]]",
                "sol": "[bytes32(stringToBytes32(\"41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28\")),bytes32(stringToBytes32(\"91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13\")),bytes32(stringToBytes32(\"2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162\")),bytes32(stringToBytes32(\"102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234\")),bytes32(stringToBytes32(\"59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34\")),bytes32(stringToBytes32(\"131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135\")),bytes32(stringToBytes32(\"187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125\")),bytes32(stringToBytes32(\"146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225\")),bytes32(stringToBytes32(\"178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106\")),bytes32(stringToBytes32(\"192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255\")),bytes32(stringToBytes32(\"197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198\")),bytes32(stringToBytes32(\"148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237\")),bytes32(stringToBytes32(\"23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68\")),bytes32(stringToBytes32(\"21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109\")),bytes32(stringToBytes32(\"17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58\")),bytes32(stringToBytes32(\"63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207\")),bytes32(stringToBytes32(\"101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208\")),bytes32(stringToBytes32(\"78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169\")),bytes32(stringToBytes32(\"77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252\")),bytes32(stringToBytes32(\"9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180\")),bytes32(stringToBytes32(\"70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152\")),bytes32(stringToBytes32(\"255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126\")),bytes32(stringToBytes32(\"64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55\")),bytes32(stringToBytes32(\"102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140\")),bytes32(stringToBytes32(\"5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68\")),bytes32(stringToBytes32(\"15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133\")),bytes32(stringToBytes32(\"93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228\")),bytes32(stringToBytes32(\"156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130\")),bytes32(stringToBytes32(\"92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247\")),bytes32(stringToBytes32(\"12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11\")),bytes32(stringToBytes32(\"151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169\")),bytes32(stringToBytes32(\"29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108\")),bytes32(stringToBytes32(\"171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89\")),bytes32(stringToBytes32(\"105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34\")),bytes32(stringToBytes32(\"213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116\")),bytes32(stringToBytes32(\"39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176\")),bytes32(stringToBytes32(\"148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208\")),bytes32(stringToBytes32(\"11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190\")),bytes32(stringToBytes32(\"64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175\")),bytes32(stringToBytes32(\"67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107\")),bytes32(stringToBytes32(\"24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68\")),bytes32(stringToBytes32(\"224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213\")),bytes32(stringToBytes32(\"168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41\")),bytes32(stringToBytes32(\"209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119\")),bytes32(stringToBytes32(\"30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238\")),bytes32(stringToBytes32(\"118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42\")),bytes32(stringToBytes32(\"76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182\")),bytes32(stringToBytes32(\"253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170\")),bytes32(stringToBytes32(\"64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190\")),bytes32(stringToBytes32(\"74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40\")),bytes32(stringToBytes32(\"168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178\")),bytes32(stringToBytes32(\"207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120\")),bytes32(stringToBytes32(\"120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214\")),bytes32(stringToBytes32(\"3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107\")),bytes32(stringToBytes32(\"213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65\")),bytes32(stringToBytes32(\"235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223\")),bytes32(stringToBytes32(\"89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174\")),bytes32(stringToBytes32(\"149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42\")),bytes32(stringToBytes32(\"71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192\")),bytes32(stringToBytes32(\"254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192\")),bytes32(stringToBytes32(\"197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191\")),bytes32(stringToBytes32(\"158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23\")),bytes32(stringToBytes32(\"210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37\")),bytes32(stringToBytes32(\"18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86\")),bytes32(stringToBytes32(\"191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length != 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[[41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28],[91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13],[2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162],[102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234],[59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34],[131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135],[187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125],[146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225],[178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106],[192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255],[197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198],[148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237],[23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68],[21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109],[17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58],[63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207],[101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208],[78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169],[77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252],[9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180],[70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152],[255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126],[64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55],[102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140],[5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68],[15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133],[93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228],[156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130],[92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247],[12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11],[151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169],[29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108],[171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89],[105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34],[213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116],[39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176],[148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208],[11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190],[64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175],[67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107],[24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68],[224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213],[168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41],[209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119],[30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238],[118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42],[76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182],[253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170],[64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190],[74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40],[168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178],[207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120],[120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214],[3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107],[213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65],[235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223],[89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174],[149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42],[71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192],[254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192],[197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191],[158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23],[210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37],[18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86],[191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193]]",
                "sol": "[bytes32(stringToBytes32(\"41,254,82,168,12,70,159,42,205,116,165,35,145,74,155,96,157,221,213,160,216,34,251,138,145,230,156,96,56,69,78,28\")),bytes32(stringToBytes32(\"91,141,17,17,154,224,215,190,63,204,220,180,4,185,12,69,98,152,153,4,93,40,145,92,82,20,138,16,160,49,54,13\")),bytes32(stringToBytes32(\"2,109,7,200,26,254,130,146,150,209,149,123,211,59,202,145,39,148,94,244,152,249,144,22,3,202,48,171,243,152,181,162\")),bytes32(stringToBytes32(\"102,121,198,16,82,201,154,175,47,154,248,199,43,109,170,154,50,236,55,184,8,35,31,149,237,207,249,120,246,152,185,234\")),bytes32(stringToBytes32(\"59,237,150,119,126,164,233,177,170,117,202,104,74,19,0,102,113,70,29,196,65,76,76,45,224,10,55,166,223,42,169,34\")),bytes32(stringToBytes32(\"131,37,178,203,109,98,79,117,104,242,48,91,254,185,98,104,215,57,173,30,94,245,112,173,133,49,4,94,90,170,247,135\")),bytes32(stringToBytes32(\"187,188,205,189,80,0,140,233,205,39,149,47,155,26,128,205,130,90,154,118,27,62,164,242,15,239,68,162,156,56,152,125\")),bytes32(stringToBytes32(\"146,43,73,147,32,198,197,204,185,79,7,11,4,170,202,150,159,157,31,110,15,5,134,88,176,19,161,72,148,147,60,225\")),bytes32(stringToBytes32(\"178,237,232,59,114,170,227,71,193,200,62,248,4,188,203,119,108,98,249,157,77,233,118,1,29,2,39,25,235,58,53,106\")),bytes32(stringToBytes32(\"192,59,199,149,243,73,168,176,18,192,210,55,212,14,61,234,35,23,4,3,176,231,192,37,239,171,118,88,212,82,197,255\")),bytes32(stringToBytes32(\"197,147,143,83,175,41,200,235,161,126,68,110,226,201,143,226,229,235,175,150,26,196,132,223,107,171,31,208,112,99,11,198\")),bytes32(stringToBytes32(\"148,173,27,49,182,225,33,84,107,201,34,4,247,170,136,212,209,234,133,203,89,165,159,30,119,205,232,138,37,77,59,237\")),bytes32(stringToBytes32(\"23,158,111,162,165,61,101,187,103,154,139,62,80,164,134,33,230,48,190,195,51,225,2,236,128,23,26,193,221,122,221,68\")),bytes32(stringToBytes32(\"21,143,230,170,74,118,112,149,223,133,58,13,19,220,192,224,221,72,251,252,156,38,15,210,125,123,13,81,19,176,184,109\")),bytes32(stringToBytes32(\"17,7,194,81,51,202,70,217,166,33,151,216,202,13,117,219,19,150,83,228,78,252,84,80,43,170,155,123,243,145,185,58\")),bytes32(stringToBytes32(\"63,46,160,58,171,240,181,238,228,111,48,141,116,197,226,9,71,38,154,163,189,192,199,179,99,197,226,48,67,35,130,207\")),bytes32(stringToBytes32(\"101,142,104,136,153,93,245,207,131,144,186,228,124,120,142,216,56,103,98,44,201,23,134,213,114,9,45,25,35,248,30,208\")),bytes32(stringToBytes32(\"78,154,245,98,128,253,191,209,104,2,155,212,164,154,26,196,165,65,94,33,122,119,1,151,201,143,225,236,33,116,121,169\")),bytes32(stringToBytes32(\"77,26,91,234,102,238,229,108,179,229,214,80,220,217,54,61,172,201,126,117,55,148,26,249,140,68,41,28,72,205,180,252\")),bytes32(stringToBytes32(\"9,18,132,192,227,161,165,16,73,147,208,34,159,233,234,171,211,55,228,103,188,188,168,102,167,19,114,168,164,248,184,180\")),bytes32(stringToBytes32(\"70,210,28,42,232,85,93,21,47,102,165,65,111,102,112,63,221,186,121,85,168,162,205,82,140,79,252,14,71,142,38,152\")),bytes32(stringToBytes32(\"255,208,119,143,118,121,146,79,16,77,82,69,248,33,178,19,124,247,13,12,33,98,76,129,58,104,183,150,222,75,25,126\")),bytes32(stringToBytes32(\"64,29,196,113,6,88,247,31,159,112,227,18,116,102,94,107,219,252,237,143,156,234,156,151,7,181,100,222,79,17,234,55\")),bytes32(stringToBytes32(\"102,126,157,130,88,109,54,244,215,243,132,115,146,120,100,187,236,224,145,102,230,163,175,18,248,186,189,171,201,91,126,140\")),bytes32(stringToBytes32(\"5,248,92,125,198,100,147,57,4,196,102,255,141,65,211,5,19,121,14,25,47,148,182,192,96,48,204,83,174,109,127,68\")),bytes32(stringToBytes32(\"15,78,124,189,200,185,95,44,251,123,239,132,150,135,181,143,7,244,48,55,161,187,119,17,87,245,119,102,61,57,133,133\")),bytes32(stringToBytes32(\"93,87,33,43,78,48,14,39,195,133,208,111,126,200,87,80,90,135,171,207,234,182,15,104,134,204,60,220,19,3,102,228\")),bytes32(stringToBytes32(\"156,115,34,210,168,67,51,126,93,26,49,6,230,170,2,166,49,22,166,113,17,183,124,164,155,5,168,20,250,123,160,130\")),bytes32(stringToBytes32(\"92,185,146,169,185,232,74,121,138,46,57,104,125,99,28,177,138,244,175,192,202,100,86,244,229,52,16,181,132,208,165,247\")),bytes32(stringToBytes32(\"12,128,181,48,232,251,55,232,25,117,238,38,230,57,87,251,13,22,75,76,28,221,70,152,211,185,141,225,15,82,194,11\")),bytes32(stringToBytes32(\"151,204,188,155,155,216,175,194,205,16,193,223,208,215,65,51,153,58,252,139,175,155,47,65,62,77,41,174,76,118,131,169\")),bytes32(stringToBytes32(\"29,61,136,27,4,0,221,125,33,204,135,128,90,150,246,8,52,240,19,167,236,116,74,192,126,124,165,226,83,159,232,108\")),bytes32(stringToBytes32(\"171,63,199,231,5,183,88,30,212,24,94,82,106,233,38,1,147,116,185,59,13,2,74,67,231,62,82,56,254,153,128,89\")),bytes32(stringToBytes32(\"105,133,212,126,30,200,33,48,204,111,157,125,253,9,121,147,19,185,178,238,33,160,1,162,17,243,14,81,129,67,232,34\")),bytes32(stringToBytes32(\"213,4,108,23,182,13,231,204,8,73,161,104,194,242,214,72,145,62,91,165,181,248,218,157,90,142,146,146,44,233,184,116\")),bytes32(stringToBytes32(\"39,193,135,15,88,29,39,166,69,180,142,108,206,101,14,219,197,172,101,145,102,209,19,103,141,231,178,103,217,28,134,176\")),bytes32(stringToBytes32(\"148,7,138,50,92,120,109,218,73,162,210,153,187,191,100,243,255,53,99,70,96,163,14,69,169,37,136,109,181,100,212,208\")),bytes32(stringToBytes32(\"11,56,36,119,219,251,192,36,19,26,119,197,63,198,130,241,76,78,131,45,130,21,155,246,250,59,157,178,9,227,203,190\")),bytes32(stringToBytes32(\"64,20,199,97,238,136,148,220,36,187,50,222,73,187,10,130,31,233,92,155,96,137,64,230,117,189,143,117,188,206,128,175\")),bytes32(stringToBytes32(\"67,238,1,172,185,28,129,179,41,74,202,68,101,28,47,9,250,221,44,242,137,232,150,173,222,236,166,175,174,92,226,107\")),bytes32(stringToBytes32(\"24,121,244,129,155,54,132,149,100,98,106,72,223,96,227,196,35,241,20,161,198,242,198,58,166,106,144,118,68,165,72,68\")),bytes32(stringToBytes32(\"224,110,138,234,79,204,151,232,11,7,47,235,4,102,99,186,215,115,145,75,33,106,31,111,127,189,149,201,6,64,194,213\")),bytes32(stringToBytes32(\"168,189,188,10,203,231,97,149,204,231,225,31,53,1,184,109,136,136,135,118,147,121,2,177,158,134,13,28,88,113,92,41\")),bytes32(stringToBytes32(\"209,37,197,94,65,206,42,58,88,94,32,248,140,145,146,187,33,46,39,38,138,250,37,233,249,88,41,133,113,13,130,119\")),bytes32(stringToBytes32(\"30,202,66,30,37,16,142,82,20,100,140,74,183,41,8,136,88,179,91,79,81,76,249,253,138,147,47,34,174,5,5,238\")),bytes32(stringToBytes32(\"118,160,182,105,77,34,120,92,183,5,210,196,65,188,47,125,2,144,11,240,228,221,60,233,1,18,228,181,229,185,201,42\")),bytes32(stringToBytes32(\"76,145,38,140,20,206,183,59,31,221,110,34,165,116,188,123,84,50,126,72,70,140,200,182,97,31,203,213,182,107,160,182\")),bytes32(stringToBytes32(\"253,116,56,108,15,146,18,183,252,233,73,136,9,249,120,126,195,197,168,94,54,119,146,8,83,243,99,198,101,9,196,170\")),bytes32(stringToBytes32(\"64,41,129,168,121,229,70,71,43,25,106,232,45,188,173,46,248,145,37,173,232,18,145,94,248,133,215,124,89,250,252,190\")),bytes32(stringToBytes32(\"74,99,155,76,148,103,81,185,12,219,3,22,215,222,141,121,162,230,183,32,108,204,52,80,23,79,168,24,125,185,177,40\")),bytes32(stringToBytes32(\"168,57,190,165,35,17,195,43,235,253,51,67,41,209,149,231,115,160,207,143,25,73,121,68,135,47,215,27,103,2,30,178\")),bytes32(stringToBytes32(\"207,47,132,42,198,151,133,230,221,142,130,73,68,219,53,124,88,49,125,45,38,50,36,117,206,255,4,246,76,195,181,120\")),bytes32(stringToBytes32(\"120,221,212,135,83,149,90,188,40,142,197,175,237,102,105,201,14,53,231,159,44,178,232,76,70,141,130,26,33,234,121,214\")),bytes32(stringToBytes32(\"3,71,178,144,42,62,230,7,93,118,139,221,244,204,136,110,146,136,241,43,23,151,123,79,93,183,237,126,29,172,95,107\")),bytes32(stringToBytes32(\"213,21,229,13,146,167,121,221,47,188,93,228,219,201,238,145,176,8,153,170,4,93,183,122,91,167,230,74,33,55,169,65\")),bytes32(stringToBytes32(\"235,208,211,101,23,36,26,20,199,29,98,56,248,57,27,0,5,5,6,180,199,72,151,4,10,199,131,171,71,80,117,223\")),bytes32(stringToBytes32(\"89,48,237,226,81,43,251,233,211,79,117,126,190,14,228,180,249,209,223,58,73,39,121,95,181,221,47,24,216,79,8,174\")),bytes32(stringToBytes32(\"149,213,34,121,175,36,53,69,247,153,47,190,98,141,18,27,101,108,208,195,229,111,236,114,80,146,8,220,217,29,100,42\")),bytes32(stringToBytes32(\"71,232,63,182,30,156,71,19,244,73,203,30,74,40,142,68,201,132,227,90,103,194,234,78,78,52,168,27,203,138,142,192\")),bytes32(stringToBytes32(\"254,241,210,244,179,117,18,221,165,33,86,182,71,245,151,134,74,163,173,107,229,35,162,92,244,129,203,236,155,248,3,192\")),bytes32(stringToBytes32(\"197,160,233,55,5,240,50,59,43,103,127,30,74,231,7,188,177,52,110,55,6,58,115,178,75,111,240,200,98,120,59,191\")),bytes32(stringToBytes32(\"158,94,101,13,130,31,133,102,178,3,255,242,55,192,154,223,64,152,29,117,123,69,161,249,136,68,83,43,118,174,82,23\")),bytes32(stringToBytes32(\"210,251,4,50,205,239,79,172,162,220,178,146,48,55,146,21,44,150,198,140,31,170,166,31,18,140,168,93,164,232,95,37\")),bytes32(stringToBytes32(\"18,50,79,152,215,106,120,72,7,5,218,182,127,238,207,161,212,161,166,201,101,181,106,30,239,170,17,238,96,182,231,86\")),bytes32(stringToBytes32(\"191,32,23,119,100,98,165,217,145,206,175,117,221,202,168,150,245,62,226,14,62,250,209,148,240,139,143,84,178,44,200,193\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.611ZOnChainVoting.finalizeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finalizeVote(string) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,submissionsCount==votesCount",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finalizeVote(string) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "\"Example\"",
                "sol": "\"Example\""
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.615ZPartialRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[],uint256[]) WHEN msg.sender==_owner,_holders.length==_numberOfTokens.length,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[0],accounts[4],accounts[6],accounts[5],accounts[9],accounts[6],accounts[2],accounts[5],accounts[7],accounts[6],accounts[0],accounts[5],accounts[7],accounts[4],accounts[9],accounts[8],accounts[0],accounts[8],accounts[1],accounts[9],accounts[6],accounts[9],accounts[8],accounts[7],accounts[5],accounts[0],accounts[8],accounts[4],accounts[3],accounts[9],accounts[7],accounts[4],accounts[2],accounts[4],accounts[7],accounts[1],accounts[7],accounts[0],accounts[8],accounts[6],accounts[6],accounts[7],accounts[8],accounts[2],accounts[5],accounts[8],accounts[6],accounts[5],accounts[1],accounts[6],accounts[5],accounts[3],accounts[9],accounts[7],accounts[1],accounts[9],accounts[7],accounts[3],accounts[8],accounts[4],accounts[0],accounts[5],accounts[7],accounts[7],accounts[8],accounts[8],accounts[6],accounts[0],accounts[6],accounts[5],accounts[4],accounts[6],accounts[0],accounts[6],accounts[9],accounts[1],accounts[8],accounts[3],accounts[4],accounts[7],accounts[8],accounts[2],accounts[3],accounts[8],accounts[3],accounts[2],accounts[9],accounts[6],accounts[7],accounts[0],accounts[4],accounts[9],accounts[3],accounts[9],accounts[6],accounts[5],accounts[2],accounts[0],accounts[1],accounts[5],accounts[0],accounts[5],accounts[8],accounts[2],accounts[0],accounts[1],accounts[5],accounts[0],accounts[4],accounts[5],accounts[6],accounts[1],accounts[7],accounts[8],accounts[0],accounts[7],accounts[0],accounts[7],accounts[6],accounts[9],accounts[4],accounts[7],accounts[5],accounts[5],accounts[9],accounts[0],accounts[5],accounts[1],accounts[2],accounts[9],accounts[8],accounts[6],accounts[0],accounts[0],accounts[9],accounts[2],accounts[6],accounts[3],accounts[4],accounts[7],accounts[3],accounts[6],accounts[7],accounts[3],accounts[8],accounts[8],accounts[4],accounts[6],accounts[4],accounts[5],accounts[5],accounts[0],accounts[3],accounts[9],accounts[8],accounts[5],accounts[5],accounts[9],accounts[8],accounts[3],accounts[4],accounts[6],accounts[0],accounts[7],accounts[2],accounts[1],accounts[4],accounts[5],accounts[6],accounts[4],accounts[2],accounts[7],accounts[1],accounts[4],accounts[4],accounts[5],accounts[3],accounts[3],accounts[3],accounts[9],accounts[2],accounts[6],accounts[3],accounts[4],accounts[1],accounts[0],accounts[9],accounts[7],accounts[5],accounts[9],accounts[3],accounts[7],accounts[5],accounts[5],accounts[9],accounts[8],accounts[3],accounts[0],accounts[2],accounts[1],accounts[6],accounts[0],accounts[8],accounts[6],accounts[3],accounts[3],accounts[4],accounts[4],accounts[9],accounts[8],accounts[8],accounts[9],accounts[2],accounts[5],accounts[3],accounts[9],accounts[1],accounts[3],accounts[2],accounts[8],accounts[8],accounts[6],accounts[7],accounts[1],accounts[0],accounts[0],accounts[9],accounts[8],accounts[9],accounts[8],accounts[4],accounts[1],accounts[5],accounts[3],accounts[0],accounts[1],accounts[7],accounts[0],accounts[5],accounts[7],accounts[9],accounts[8],accounts[7],accounts[4],accounts[9],accounts[0],accounts[3],accounts[0],accounts[4],accounts[3],accounts[5],accounts[3],accounts[9],accounts[3]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[64,1337,2014223714,2014223714,1532892063,255,1532892064,9999,66,3,6,27,1336,5,4,1337,2014223715,1532892063,255,2014223716,1336,64,5,255,6,96,5,1,65,256,1532892063,1337,5,97,9999,2014223716,2014223716,95,10000,255,4,96,5,1532892064,257,4,27,29,29,96,1,1338,254,4,95,97,4,10000,255,29,64,2,97,2014223715,29,1336,10001,9999,254,1338,9999,2014223715,95,1337,9999,10001,26,29,29,0,2014223714,255,10001,256,256,96,65,1532892064,95,1532892063,255,257,256,64,256,1532892064,1337,6,29,97,1336,2014223715,27,1338,3,1336,2014223714,254,5,0,5,256,1532892064,5,257,1337,9999,65,97,256,95,5,0,5,254,10000,27,1336,66,4,6,4,1532892062,0,97,1337,10000,97,9999,26,64,10001,2014223716,26,5,2014223716,1338,26,2,6,5,255,1532892062,10001,6,256,5,1338,254,5,5,256,96,256,96,29,1338,95,6,28,1336,2014223715,1532892064,1532892064,5,1337,6,9999,66,96,29,0,4,256,5,27,96,255,9999,1338,3,1532892062,1336,0,1336,10000,1532892063,96,1336,0,4,96,4,1336,0,9999,66,1,2,1532892064,3,29,97,96,256,26,64,2014223716,1532892062,2014223715,29,1338,66,9999,4,3,9999,29,256,9999,1337,2014223715,0,6,1337,257,97,27,4,2,5,3,1337,257,95,96,3,27,96,1532892062,64,6,5,28]",
              "sol": "[uint256(64),uint256(1337),uint256(2014223714),uint256(2014223714),uint256(1532892063),uint256(255),uint256(1532892064),uint256(9999),uint256(66),uint256(3),uint256(6),uint256(27),uint256(1336),uint256(5),uint256(4),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(255),uint256(2014223716),uint256(1336),uint256(64),uint256(5),uint256(255),uint256(6),uint256(96),uint256(5),uint256(1),uint256(65),uint256(256),uint256(1532892063),uint256(1337),uint256(5),uint256(97),uint256(9999),uint256(2014223716),uint256(2014223716),uint256(95),uint256(10000),uint256(255),uint256(4),uint256(96),uint256(5),uint256(1532892064),uint256(257),uint256(4),uint256(27),uint256(29),uint256(29),uint256(96),uint256(1),uint256(1338),uint256(254),uint256(4),uint256(95),uint256(97),uint256(4),uint256(10000),uint256(255),uint256(29),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(29),uint256(1336),uint256(10001),uint256(9999),uint256(254),uint256(1338),uint256(9999),uint256(2014223715),uint256(95),uint256(1337),uint256(9999),uint256(10001),uint256(26),uint256(29),uint256(29),uint256(0),uint256(2014223714),uint256(255),uint256(10001),uint256(256),uint256(256),uint256(96),uint256(65),uint256(1532892064),uint256(95),uint256(1532892063),uint256(255),uint256(257),uint256(256),uint256(64),uint256(256),uint256(1532892064),uint256(1337),uint256(6),uint256(29),uint256(97),uint256(1336),uint256(2014223715),uint256(27),uint256(1338),uint256(3),uint256(1336),uint256(2014223714),uint256(254),uint256(5),uint256(0),uint256(5),uint256(256),uint256(1532892064),uint256(5),uint256(257),uint256(1337),uint256(9999),uint256(65),uint256(97),uint256(256),uint256(95),uint256(5),uint256(0),uint256(5),uint256(254),uint256(10000),uint256(27),uint256(1336),uint256(66),uint256(4),uint256(6),uint256(4),uint256(1532892062),uint256(0),uint256(97),uint256(1337),uint256(10000),uint256(97),uint256(9999),uint256(26),uint256(64),uint256(10001),uint256(2014223716),uint256(26),uint256(5),uint256(2014223716),uint256(1338),uint256(26),uint256(2),uint256(6),uint256(5),uint256(255),uint256(1532892062),uint256(10001),uint256(6),uint256(256),uint256(5),uint256(1338),uint256(254),uint256(5),uint256(5),uint256(256),uint256(96),uint256(256),uint256(96),uint256(29),uint256(1338),uint256(95),uint256(6),uint256(28),uint256(1336),uint256(2014223715),uint256(1532892064),uint256(1532892064),uint256(5),uint256(1337),uint256(6),uint256(9999),uint256(66),uint256(96),uint256(29),uint256(0),uint256(4),uint256(256),uint256(5),uint256(27),uint256(96),uint256(255),uint256(9999),uint256(1338),uint256(3),uint256(1532892062),uint256(1336),uint256(0),uint256(1336),uint256(10000),uint256(1532892063),uint256(96),uint256(1336),uint256(0),uint256(4),uint256(96),uint256(4),uint256(1336),uint256(0),uint256(9999),uint256(66),uint256(1),uint256(2),uint256(1532892064),uint256(3),uint256(29),uint256(97),uint256(96),uint256(256),uint256(26),uint256(64),uint256(2014223716),uint256(1532892062),uint256(2014223715),uint256(29),uint256(1338),uint256(66),uint256(9999),uint256(4),uint256(3),uint256(9999),uint256(29),uint256(256),uint256(9999),uint256(1337),uint256(2014223715),uint256(0),uint256(6),uint256(1337),uint256(257),uint256(97),uint256(27),uint256(4),uint256(2),uint256(5),uint256(3),uint256(1337),uint256(257),uint256(95),uint256(96),uint256(3),uint256(27),uint256(96),uint256(1532892062),uint256(64),uint256(6),uint256(5),uint256(28)]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[0],accounts[4],accounts[6],accounts[5],accounts[9],accounts[6],accounts[2],accounts[5],accounts[7],accounts[6],accounts[0],accounts[5],accounts[7],accounts[4],accounts[9],accounts[8],accounts[0],accounts[8],accounts[1],accounts[9],accounts[6],accounts[9],accounts[8],accounts[7],accounts[5],accounts[0],accounts[8],accounts[4],accounts[3],accounts[9],accounts[7],accounts[4],accounts[2],accounts[4],accounts[7],accounts[1],accounts[7],accounts[0],accounts[8],accounts[6],accounts[6],accounts[7],accounts[8],accounts[2],accounts[5],accounts[8],accounts[6],accounts[5],accounts[1],accounts[6],accounts[5],accounts[3],accounts[9],accounts[7],accounts[1],accounts[9],accounts[7],accounts[3],accounts[8],accounts[4],accounts[0],accounts[5],accounts[7],accounts[7],accounts[8],accounts[8],accounts[6],accounts[0],accounts[6],accounts[5],accounts[4],accounts[6],accounts[0],accounts[6],accounts[9],accounts[1],accounts[8],accounts[3],accounts[4],accounts[7],accounts[8],accounts[2],accounts[3],accounts[8],accounts[3],accounts[2],accounts[9],accounts[6],accounts[7],accounts[0],accounts[4],accounts[9],accounts[3],accounts[9],accounts[6],accounts[5],accounts[2],accounts[0],accounts[1],accounts[5],accounts[0],accounts[5],accounts[8],accounts[2],accounts[0],accounts[1],accounts[5],accounts[0],accounts[4],accounts[5],accounts[6],accounts[1],accounts[7],accounts[8],accounts[0],accounts[7],accounts[0],accounts[7],accounts[6],accounts[9],accounts[4],accounts[7],accounts[5],accounts[5],accounts[9],accounts[0],accounts[5],accounts[1],accounts[2],accounts[9],accounts[8],accounts[6],accounts[0],accounts[0],accounts[9],accounts[2],accounts[6],accounts[3],accounts[4],accounts[7],accounts[3],accounts[6],accounts[7],accounts[3],accounts[8],accounts[8],accounts[4],accounts[6],accounts[4],accounts[5],accounts[5],accounts[0],accounts[3],accounts[9],accounts[8],accounts[5],accounts[5],accounts[9],accounts[8],accounts[3],accounts[4],accounts[6],accounts[0],accounts[7],accounts[2],accounts[1],accounts[4],accounts[5],accounts[6],accounts[4],accounts[2],accounts[7],accounts[1],accounts[4],accounts[4],accounts[5],accounts[3],accounts[3],accounts[3],accounts[9],accounts[2],accounts[6],accounts[3],accounts[4],accounts[1],accounts[0],accounts[9],accounts[7],accounts[5],accounts[9],accounts[3],accounts[7],accounts[5],accounts[5],accounts[9],accounts[8],accounts[3],accounts[0],accounts[2],accounts[1],accounts[6],accounts[0],accounts[8],accounts[6],accounts[3],accounts[3],accounts[4],accounts[4],accounts[9],accounts[8],accounts[8],accounts[9],accounts[2],accounts[5],accounts[3],accounts[9],accounts[1],accounts[3],accounts[2],accounts[8],accounts[8],accounts[6],accounts[7],accounts[1],accounts[0],accounts[0],accounts[9],accounts[8],accounts[9],accounts[8],accounts[4],accounts[1],accounts[5],accounts[3],accounts[0],accounts[1],accounts[7],accounts[0],accounts[5],accounts[7],accounts[9],accounts[8],accounts[7],accounts[4],accounts[9],accounts[0],accounts[3],accounts[0],accounts[4],accounts[3],accounts[5],accounts[3],accounts[9],accounts[3]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[64,1337,2014223714,2014223714,1532892063,255,1532892064,9999,66,3,6,27,1336,5,4,1337,2014223715,1532892063,255,2014223716,1336,64,5,255,6,96,5,1,65,256,1532892063,1337,5,97,9999,2014223716,2014223716,95,10000,255,4,96,5,1532892064,257,4,27,29,29,96,1,1338,254,4,95,97,4,10000,255,29,64,2,97,2014223715,29,1336,10001,9999,254,1338,9999,2014223715,95,1337,9999,10001,26,29,29,0,2014223714,255,10001,256,256,96,65,1532892064,95,1532892063,255,257,256,64,256,1532892064,1337,6,29,97,1336,2014223715,27,1338,3,1336,2014223714,254,5,0,5,256,1532892064,5,257,1337,9999,65,97,256,95,5,0,5,254,10000,27,1336,66,4,6,4,1532892062,0,97,1337,10000,97,9999,26,64,10001,2014223716,26,5,2014223716,1338,26,2,6,5,255,1532892062,10001,6,256,5,1338,254,5,5,256,96,256,96,29,1338,95,6,28,1336,2014223715,1532892064,1532892064,5,1337,6,9999,66,96,29,0,4,256,5,27,96,255,9999,1338,3,1532892062,1336,0,1336,10000,1532892063,96,1336,0,4,96,4,1336,0,9999,66,1,2,1532892064,3,29,97,96,256,26,64,2014223716,1532892062,2014223715,29,1338,66,9999,4,3,9999,29,256,9999,1337,2014223715,0,6,1337,257,97,27,4,2,5,3,1337,257,95,96,3,27,96,1532892062,64,6,5,28]",
                "sol": "[uint256(64),uint256(1337),uint256(2014223714),uint256(2014223714),uint256(1532892063),uint256(255),uint256(1532892064),uint256(9999),uint256(66),uint256(3),uint256(6),uint256(27),uint256(1336),uint256(5),uint256(4),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(255),uint256(2014223716),uint256(1336),uint256(64),uint256(5),uint256(255),uint256(6),uint256(96),uint256(5),uint256(1),uint256(65),uint256(256),uint256(1532892063),uint256(1337),uint256(5),uint256(97),uint256(9999),uint256(2014223716),uint256(2014223716),uint256(95),uint256(10000),uint256(255),uint256(4),uint256(96),uint256(5),uint256(1532892064),uint256(257),uint256(4),uint256(27),uint256(29),uint256(29),uint256(96),uint256(1),uint256(1338),uint256(254),uint256(4),uint256(95),uint256(97),uint256(4),uint256(10000),uint256(255),uint256(29),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(29),uint256(1336),uint256(10001),uint256(9999),uint256(254),uint256(1338),uint256(9999),uint256(2014223715),uint256(95),uint256(1337),uint256(9999),uint256(10001),uint256(26),uint256(29),uint256(29),uint256(0),uint256(2014223714),uint256(255),uint256(10001),uint256(256),uint256(256),uint256(96),uint256(65),uint256(1532892064),uint256(95),uint256(1532892063),uint256(255),uint256(257),uint256(256),uint256(64),uint256(256),uint256(1532892064),uint256(1337),uint256(6),uint256(29),uint256(97),uint256(1336),uint256(2014223715),uint256(27),uint256(1338),uint256(3),uint256(1336),uint256(2014223714),uint256(254),uint256(5),uint256(0),uint256(5),uint256(256),uint256(1532892064),uint256(5),uint256(257),uint256(1337),uint256(9999),uint256(65),uint256(97),uint256(256),uint256(95),uint256(5),uint256(0),uint256(5),uint256(254),uint256(10000),uint256(27),uint256(1336),uint256(66),uint256(4),uint256(6),uint256(4),uint256(1532892062),uint256(0),uint256(97),uint256(1337),uint256(10000),uint256(97),uint256(9999),uint256(26),uint256(64),uint256(10001),uint256(2014223716),uint256(26),uint256(5),uint256(2014223716),uint256(1338),uint256(26),uint256(2),uint256(6),uint256(5),uint256(255),uint256(1532892062),uint256(10001),uint256(6),uint256(256),uint256(5),uint256(1338),uint256(254),uint256(5),uint256(5),uint256(256),uint256(96),uint256(256),uint256(96),uint256(29),uint256(1338),uint256(95),uint256(6),uint256(28),uint256(1336),uint256(2014223715),uint256(1532892064),uint256(1532892064),uint256(5),uint256(1337),uint256(6),uint256(9999),uint256(66),uint256(96),uint256(29),uint256(0),uint256(4),uint256(256),uint256(5),uint256(27),uint256(96),uint256(255),uint256(9999),uint256(1338),uint256(3),uint256(1532892062),uint256(1336),uint256(0),uint256(1336),uint256(10000),uint256(1532892063),uint256(96),uint256(1336),uint256(0),uint256(4),uint256(96),uint256(4),uint256(1336),uint256(0),uint256(9999),uint256(66),uint256(1),uint256(2),uint256(1532892064),uint256(3),uint256(29),uint256(97),uint256(96),uint256(256),uint256(26),uint256(64),uint256(2014223716),uint256(1532892062),uint256(2014223715),uint256(29),uint256(1338),uint256(66),uint256(9999),uint256(4),uint256(3),uint256(9999),uint256(29),uint256(256),uint256(9999),uint256(1337),uint256(2014223715),uint256(0),uint256(6),uint256(1337),uint256(257),uint256(97),uint256(27),uint256(4),uint256(2),uint256(5),uint256(3),uint256(1337),uint256(257),uint256(95),uint256(96),uint256(3),uint256(27),uint256(96),uint256(1532892062),uint256(64),uint256(6),uint256(5),uint256(28)]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length == _numberOfTokens.length",
            "parameters": [
              {
                "js": "[accounts[4],accounts[3],accounts[0],accounts[8],accounts[7],accounts[3],accounts[7],accounts[9],accounts[9],accounts[8],accounts[4],accounts[4],accounts[9],accounts[5],accounts[8],accounts[7],accounts[7],accounts[6],accounts[2],accounts[0],accounts[2],accounts[0],accounts[4],accounts[6],accounts[1],accounts[8],accounts[5],accounts[4],accounts[2],accounts[9],accounts[1],accounts[4],accounts[4],accounts[9],accounts[0],accounts[1],accounts[4],accounts[7],accounts[8],accounts[9],accounts[0],accounts[0],accounts[2],accounts[4],accounts[3],accounts[3],accounts[3],accounts[1],accounts[0],accounts[7],accounts[6],accounts[1],accounts[7],accounts[2],accounts[1],accounts[5],accounts[8],accounts[9],accounts[9],accounts[9],accounts[0],accounts[4],accounts[1],accounts[5],accounts[8],accounts[1],accounts[2],accounts[5],accounts[0],accounts[1],accounts[2],accounts[4],accounts[9],accounts[2],accounts[8],accounts[7],accounts[4],accounts[4],accounts[8],accounts[9],accounts[8],accounts[5],accounts[4],accounts[2],accounts[9],accounts[6],accounts[1],accounts[7],accounts[2],accounts[6],accounts[5],accounts[8],accounts[2],accounts[9],accounts[6],accounts[7],accounts[6],accounts[8],accounts[5],accounts[6],accounts[3],accounts[0],accounts[5],accounts[2],accounts[7],accounts[3],accounts[2],accounts[8],accounts[4],accounts[7],accounts[8],accounts[6],accounts[0],accounts[7],accounts[1],accounts[9],accounts[4],accounts[3],accounts[7],accounts[7],accounts[7],accounts[8],accounts[9],accounts[4],accounts[6],accounts[5],accounts[0],accounts[7],accounts[3],accounts[7],accounts[8],accounts[8],accounts[7],accounts[7],accounts[7],accounts[3],accounts[7],accounts[8],accounts[9],accounts[2],accounts[1],accounts[2],accounts[6],accounts[6],accounts[8],accounts[9],accounts[3],accounts[3],accounts[5],accounts[9],accounts[0],accounts[4],accounts[6],accounts[8],accounts[7],accounts[1],accounts[1],accounts[8],accounts[8],accounts[8],accounts[0],accounts[4],accounts[2],accounts[6],accounts[7],accounts[4],accounts[8],accounts[0],accounts[6],accounts[3],accounts[1],accounts[7],accounts[3],accounts[3],accounts[6],accounts[2],accounts[4],accounts[7],accounts[0],accounts[4],accounts[0],accounts[0],accounts[8],accounts[7],accounts[8],accounts[6],accounts[7],accounts[1],accounts[2],accounts[7],accounts[5],accounts[6],accounts[3],accounts[0],accounts[6],accounts[2],accounts[4],accounts[1],accounts[4],accounts[1],accounts[4],accounts[3],accounts[0],accounts[4],accounts[2],accounts[1],accounts[8],accounts[4],accounts[3],accounts[2],accounts[0],accounts[4],accounts[8],accounts[8],accounts[7],accounts[6],accounts[3],accounts[8],accounts[2],accounts[5],accounts[6],accounts[5],accounts[6],accounts[2],accounts[6],accounts[4],accounts[3],accounts[9],accounts[9],accounts[9],accounts[5],accounts[2],accounts[5],accounts[4],accounts[3],accounts[9],accounts[2],accounts[4],accounts[2],accounts[2],accounts[2],accounts[8],accounts[4],accounts[4],accounts[1],accounts[8],accounts[2],accounts[6],accounts[7],accounts[7],accounts[2],accounts[7],accounts[1],accounts[6],accounts[2]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[64,1337,2014223714,2014223714,1532892063,255,1532892064,9999,66,3,6,27,1336,5,4,1337,2014223715,1532892063,255,2014223716,1336,64,5,255,6,96,5,1,65,256,1532892063,1337,5,97,9999,2014223716,2014223716,95,10000,255,4,96,5,1532892064,257,4,27,29,29,96,1,1338,254,4,95,97,4,10000,255,29,64,2,97,2014223715,29,1336,10001,9999,254,1338,9999,2014223715,95,1337,9999,10001,26,29,29,0,2014223714,255,10001,256,256,96,65,1532892064,95,1532892063,255,257,256,64,256,1532892064,1337,6,29,97,1336,2014223715,27,1338,3,1336,2014223714,254,5,0,5,256,1532892064,5,257,1337,9999,65,97,256,95,5,0,5,254,10000,27,1336,66,4,6,4,1532892062,0,97,1337,10000,97,9999,26,64,10001,2014223716,26,5,2014223716,1338,26,2,6,5,255,1532892062,10001,6,256,5,1338,254,5,5,256,96,256,96,29,1338,95,6,28,1336,2014223715,1532892064,1532892064,5,1337,6,9999,66,96,29,0,4,256,5,27,96,255,9999,1338,3,1532892062,1336,0,1336,10000,1532892063,96,1336,0,4,96,4,1336,0,9999,66,1,2,1532892064,3,29,97,96,256,26,64,2014223716,1532892062,2014223715,29,1338,66,9999,4,3,9999,29,256,9999,1337,2014223715,0,6,1337,257,97,27,4,2,5,3,1337,257,95,96,3,27,96,1532892062,64,6,5,28]",
                "sol": "[uint256(64),uint256(1337),uint256(2014223714),uint256(2014223714),uint256(1532892063),uint256(255),uint256(1532892064),uint256(9999),uint256(66),uint256(3),uint256(6),uint256(27),uint256(1336),uint256(5),uint256(4),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(255),uint256(2014223716),uint256(1336),uint256(64),uint256(5),uint256(255),uint256(6),uint256(96),uint256(5),uint256(1),uint256(65),uint256(256),uint256(1532892063),uint256(1337),uint256(5),uint256(97),uint256(9999),uint256(2014223716),uint256(2014223716),uint256(95),uint256(10000),uint256(255),uint256(4),uint256(96),uint256(5),uint256(1532892064),uint256(257),uint256(4),uint256(27),uint256(29),uint256(29),uint256(96),uint256(1),uint256(1338),uint256(254),uint256(4),uint256(95),uint256(97),uint256(4),uint256(10000),uint256(255),uint256(29),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(29),uint256(1336),uint256(10001),uint256(9999),uint256(254),uint256(1338),uint256(9999),uint256(2014223715),uint256(95),uint256(1337),uint256(9999),uint256(10001),uint256(26),uint256(29),uint256(29),uint256(0),uint256(2014223714),uint256(255),uint256(10001),uint256(256),uint256(256),uint256(96),uint256(65),uint256(1532892064),uint256(95),uint256(1532892063),uint256(255),uint256(257),uint256(256),uint256(64),uint256(256),uint256(1532892064),uint256(1337),uint256(6),uint256(29),uint256(97),uint256(1336),uint256(2014223715),uint256(27),uint256(1338),uint256(3),uint256(1336),uint256(2014223714),uint256(254),uint256(5),uint256(0),uint256(5),uint256(256),uint256(1532892064),uint256(5),uint256(257),uint256(1337),uint256(9999),uint256(65),uint256(97),uint256(256),uint256(95),uint256(5),uint256(0),uint256(5),uint256(254),uint256(10000),uint256(27),uint256(1336),uint256(66),uint256(4),uint256(6),uint256(4),uint256(1532892062),uint256(0),uint256(97),uint256(1337),uint256(10000),uint256(97),uint256(9999),uint256(26),uint256(64),uint256(10001),uint256(2014223716),uint256(26),uint256(5),uint256(2014223716),uint256(1338),uint256(26),uint256(2),uint256(6),uint256(5),uint256(255),uint256(1532892062),uint256(10001),uint256(6),uint256(256),uint256(5),uint256(1338),uint256(254),uint256(5),uint256(5),uint256(256),uint256(96),uint256(256),uint256(96),uint256(29),uint256(1338),uint256(95),uint256(6),uint256(28),uint256(1336),uint256(2014223715),uint256(1532892064),uint256(1532892064),uint256(5),uint256(1337),uint256(6),uint256(9999),uint256(66),uint256(96),uint256(29),uint256(0),uint256(4),uint256(256),uint256(5),uint256(27),uint256(96),uint256(255),uint256(9999),uint256(1338),uint256(3),uint256(1532892062),uint256(1336),uint256(0),uint256(1336),uint256(10000),uint256(1532892063),uint256(96),uint256(1336),uint256(0),uint256(4),uint256(96),uint256(4),uint256(1336),uint256(0),uint256(9999),uint256(66),uint256(1),uint256(2),uint256(1532892064),uint256(3),uint256(29),uint256(97),uint256(96),uint256(256),uint256(26),uint256(64),uint256(2014223716),uint256(1532892062),uint256(2014223715),uint256(29),uint256(1338),uint256(66),uint256(9999),uint256(4),uint256(3),uint256(9999),uint256(29),uint256(256),uint256(9999),uint256(1337),uint256(2014223715),uint256(0),uint256(6),uint256(1337),uint256(257),uint256(97),uint256(27),uint256(4),uint256(2),uint256(5),uint256(3),uint256(1337),uint256(257),uint256(95),uint256(96),uint256(3),uint256(27),uint256(96),uint256(1532892062),uint256(64),uint256(6),uint256(5),uint256(28)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[64,1337,2014223714,2014223714,1532892063,255,1532892064,9999,66,3,6,27,1336,5,4,1337,2014223715,1532892063,255,2014223716,1336,64,5,255,6,96,5,1,65,256,1532892063,1337,5,97,9999,2014223716,2014223716,95,10000,255,4,96,5,1532892064,257,4,27,29,29,96,1,1338,254,4,95,97,4,10000,255,29,64,2,97,2014223715,29,1336,10001,9999,254,1338,9999,2014223715,95,1337,9999,10001,26,29,29,0,2014223714,255,10001,256,256,96,65,1532892064,95,1532892063,255,257,256,64,256,1532892064,1337,6,29,97,1336,2014223715,27,1338,3,1336,2014223714,254,5,0,5,256,1532892064,5,257,1337,9999,65,97,256,95,5,0,5,254,10000,27,1336,66,4,6,4,1532892062,0,97,1337,10000,97,9999,26,64,10001,2014223716,26,5,2014223716,1338,26,2,6,5,255,1532892062,10001,6,256,5,1338,254,5,5,256,96,256,96,29,1338,95,6,28,1336,2014223715,1532892064,1532892064,5,1337,6,9999,66,96,29,0,4,256,5,27,96,255,9999,1338,3,1532892062,1336,0,1336,10000,1532892063,96,1336,0,4,96,4,1336,0,9999,66,1,2,1532892064,3,29,97,96,256,26,64,2014223716,1532892062,2014223715,29,1338,66,9999,4,3,9999,29,256,9999,1337,2014223715,0,6,1337,257,97,27,4,2,5,3,1337,257,95,96,3,27,96,1532892062,64,6,5,28]",
                "sol": "[uint256(64),uint256(1337),uint256(2014223714),uint256(2014223714),uint256(1532892063),uint256(255),uint256(1532892064),uint256(9999),uint256(66),uint256(3),uint256(6),uint256(27),uint256(1336),uint256(5),uint256(4),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(255),uint256(2014223716),uint256(1336),uint256(64),uint256(5),uint256(255),uint256(6),uint256(96),uint256(5),uint256(1),uint256(65),uint256(256),uint256(1532892063),uint256(1337),uint256(5),uint256(97),uint256(9999),uint256(2014223716),uint256(2014223716),uint256(95),uint256(10000),uint256(255),uint256(4),uint256(96),uint256(5),uint256(1532892064),uint256(257),uint256(4),uint256(27),uint256(29),uint256(29),uint256(96),uint256(1),uint256(1338),uint256(254),uint256(4),uint256(95),uint256(97),uint256(4),uint256(10000),uint256(255),uint256(29),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(29),uint256(1336),uint256(10001),uint256(9999),uint256(254),uint256(1338),uint256(9999),uint256(2014223715),uint256(95),uint256(1337),uint256(9999),uint256(10001),uint256(26),uint256(29),uint256(29),uint256(0),uint256(2014223714),uint256(255),uint256(10001),uint256(256),uint256(256),uint256(96),uint256(65),uint256(1532892064),uint256(95),uint256(1532892063),uint256(255),uint256(257),uint256(256),uint256(64),uint256(256),uint256(1532892064),uint256(1337),uint256(6),uint256(29),uint256(97),uint256(1336),uint256(2014223715),uint256(27),uint256(1338),uint256(3),uint256(1336),uint256(2014223714),uint256(254),uint256(5),uint256(0),uint256(5),uint256(256),uint256(1532892064),uint256(5),uint256(257),uint256(1337),uint256(9999),uint256(65),uint256(97),uint256(256),uint256(95),uint256(5),uint256(0),uint256(5),uint256(254),uint256(10000),uint256(27),uint256(1336),uint256(66),uint256(4),uint256(6),uint256(4),uint256(1532892062),uint256(0),uint256(97),uint256(1337),uint256(10000),uint256(97),uint256(9999),uint256(26),uint256(64),uint256(10001),uint256(2014223716),uint256(26),uint256(5),uint256(2014223716),uint256(1338),uint256(26),uint256(2),uint256(6),uint256(5),uint256(255),uint256(1532892062),uint256(10001),uint256(6),uint256(256),uint256(5),uint256(1338),uint256(254),uint256(5),uint256(5),uint256(256),uint256(96),uint256(256),uint256(96),uint256(29),uint256(1338),uint256(95),uint256(6),uint256(28),uint256(1336),uint256(2014223715),uint256(1532892064),uint256(1532892064),uint256(5),uint256(1337),uint256(6),uint256(9999),uint256(66),uint256(96),uint256(29),uint256(0),uint256(4),uint256(256),uint256(5),uint256(27),uint256(96),uint256(255),uint256(9999),uint256(1338),uint256(3),uint256(1532892062),uint256(1336),uint256(0),uint256(1336),uint256(10000),uint256(1532892063),uint256(96),uint256(1336),uint256(0),uint256(4),uint256(96),uint256(4),uint256(1336),uint256(0),uint256(9999),uint256(66),uint256(1),uint256(2),uint256(1532892064),uint256(3),uint256(29),uint256(97),uint256(96),uint256(256),uint256(26),uint256(64),uint256(2014223716),uint256(1532892062),uint256(2014223715),uint256(29),uint256(1338),uint256(66),uint256(9999),uint256(4),uint256(3),uint256(9999),uint256(29),uint256(256),uint256(9999),uint256(1337),uint256(2014223715),uint256(0),uint256(6),uint256(1337),uint256(257),uint256(97),uint256(27),uint256(4),uint256(2),uint256(5),uint256(3),uint256(1337),uint256(257),uint256(95),uint256(96),uint256(3),uint256(27),uint256(96),uint256(1532892062),uint256(64),uint256(6),uint256(5),uint256(28)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.626ZFullRedemption.setup": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setup() WHEN isSetUp!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.627ZFullRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[]) WHEN msg.sender==_owner,isSetUp==true,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[1],accounts[7],accounts[7],accounts[0],accounts[8],accounts[6],accounts[3],accounts[0],accounts[8],accounts[8],accounts[7],accounts[5],accounts[8],accounts[4],accounts[1],accounts[2],accounts[1],accounts[9],accounts[0],accounts[4],accounts[1],accounts[0],accounts[8],accounts[8],accounts[6],accounts[0],accounts[2],accounts[2],accounts[9]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[1],accounts[7],accounts[7],accounts[0],accounts[8],accounts[6],accounts[3],accounts[0],accounts[8],accounts[8],accounts[7],accounts[5],accounts[8],accounts[4],accounts[1],accounts[2],accounts[1],accounts[9],accounts[0],accounts[4],accounts[1],accounts[0],accounts[8],accounts[8],accounts[6],accounts[0],accounts[2],accounts[2],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: isSetUp == true",
            "parameters": [
              {
                "js": "[accounts[1],accounts[7],accounts[7],accounts[0],accounts[8],accounts[6],accounts[3],accounts[0],accounts[8],accounts[8],accounts[7],accounts[5],accounts[8],accounts[4],accounts[1],accounts[2],accounts[1],accounts[9],accounts[0],accounts[4],accounts[1],accounts[0],accounts[8],accounts[8],accounts[6],accounts[0],accounts[2],accounts[2],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.630ZFixedPriceTender.paymentTokensReady": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute paymentTokensReady() WHEN paymentReady!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.630ZFixedPriceTender.updateOfferEndTime": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateOfferEndTime(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newOfferEnd>=block.timestamp",
          "parameters": [
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+301",
              "sol": "block.timestamp+301"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+301",
                "sol": "block.timestamp+301"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: _newOfferEnd >= (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1",
                "sol": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.635ZFixedPriceTender.updatePaymentPerSecurity": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updatePaymentPerSecurity(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newPaymentPerSecurity>0",
          "parameters": [
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "4",
                "sol": "4"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: _newPaymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.639ZFixedPriceTender.updateTotalToRepurchase": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateTotalToRepurchase(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newTotalToRepurchase>=0",
          "parameters": [
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: _newTotalToRepurchase >= 0",
            "parameters": [
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.643ZFixedPriceTender.optInToTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optInToTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,paymentReady==true,_numberToTender>0",
          "parameters": [
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: paymentReady == true",
            "parameters": [
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: _numberToTender > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.648ZFixedPriceTender.optOutOfTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optOutOfTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_numberToRemove>0",
          "parameters": [
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optOutOfTender(uint256) when NOT comply with: _numberToRemove > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.654ZFixedPriceTender.finaliseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finaliseTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=offerEndTime,nextTenderToAssess<orderedHolders.length,_batchSize>0",
          "parameters": [
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finaliseTender(uint256) when NOT comply with: _batchSize > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.658ZProxyFixedPriceTender.testrepurchaseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrepurchaseTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.659ZProxyFixedPriceTender.testreturnTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testreturnTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.659ZOnChainPayments.makePayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute makePayments(address[],uint256) WHEN msg.sender==_owner,_securityHolders.length>0,_paymentPerSecurity>0",
          "parameters": [
            {
              "js": "[accounts[6],accounts[3],accounts[8],accounts[5],accounts[0],accounts[8]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "254",
              "sol": "254"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[6],accounts[3],accounts[8],accounts[5],accounts[0],accounts[8]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "[accounts[6],accounts[3],accounts[8],accounts[5],accounts[0],accounts[8]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.662ZOnChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,uint256,uint256) WHEN _timestamp!=0,_securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _timestamp != 0",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "1",
                "sol": "1"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:14:32.663ZOnChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:14:32.663ZOnChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "171-187",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "254",
              "sol": "254"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "174-187",
          "restrictions": [
            "_newValue > currentValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue>currentValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2",
                "sol": "2"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "2": {
        "branch": {
          "loc": "182-187",
          "restrictions": [
            "_newValue <= currentValue",
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue<=currentValue,currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892064",
              "sol": "1532892064"
            },
            {
              "js": "1338",
              "sol": "1338"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1532892064",
                "sol": "1532892064"
              },
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
}