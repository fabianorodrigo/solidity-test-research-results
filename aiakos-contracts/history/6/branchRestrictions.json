,{
  "2020-11-10T15:19:30.555ZAiakos.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint) WHEN _requiredNumberOfMaintainers>0",
          "parameters": [
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint) when NOT comply with: _requiredNumberOfMaintainers > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T15:19:36.645ZProxyReleases.testinit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testinit(Releases.Release,string,bytes32)",
          "parameters": [
            {
              "js": "{\"version\": \"Example\",\"sha256Hash\": [190,146,226,222,89,243,246,11,38,225,214,88,147,185,150,99,7,41,93,99,247,173,219,93,71,208,123,18,158,254,216,193],\"approvalCounter\": 10001,\"initialized\": false,\"approved\": true}",
              "sol": "Releases.Release(\"Example\",stringToBytes32(\"190,146,226,222,89,243,246,11,38,225,214,88,147,185,150,99,7,41,93,99,247,173,219,93,71,208,123,18,158,254,216,193\"),10001,false,true)"
            },
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "[189,167,28,122,125,241,134,76,166,120,105,74,48,219,30,167,200,76,33,221,81,139,50,171,7,90,131,90,156,252,31,228]",
              "sol": "stringToBytes32(\"189,167,28,122,125,241,134,76,166,120,105,74,48,219,30,167,200,76,33,221,81,139,50,171,7,90,131,90,156,252,31,228\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:19:36.646ZProxyReleases.testcheck": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcheck(Releases.Release,bytes32) WHEN release.sha256Hash==sha256Hash",
          "parameters": [
            {
              "js": "{\"version\": \"3w10nf\",\"sha256Hash\": [7,105,107,44,37,106,253,41,255,129,67,16,51,247,19,117,158,222,34,231,112,162,38,154,58,148,153,159,19,232,25,199],\"approvalCounter\": 18,\"initialized\": true,\"approved\": true}",
              "sol": "Releases.Release(\"3w10nf\",stringToBytes32(\"7,105,107,44,37,106,253,41,255,129,67,16,51,247,19,117,158,222,34,231,112,162,38,154,58,148,153,159,19,232,25,199\"),18,true,true)"
            },
            {
              "js": "[7,105,107,44,37,106,253,41,255,129,67,16,51,247,19,117,158,222,34,231,112,162,38,154,58,148,153,159,19,232,25,199]",
              "sol": "stringToBytes32(\"7,105,107,44,37,106,253,41,255,129,67,16,51,247,19,117,158,222,34,231,112,162,38,154,58,148,153,159,19,232,25,199\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testcheck(Releases.Release,bytes32) when NOT comply with: release.sha256Hash == sha256Hash",
            "parameters": [
              {
                "js": "{version : \"3w10nf\",sha256Hash : [99,59,49,35,211,61,34,159,101,71,41,41,255,159,105,68,178,131,225,31,163,190,104,222,190,102,229,116,138,60,215,166],approvalCounter : 18,initialized : true,approved : true}",
                "sol": "Releases.Release(\"3w10nf\",stringToBytes32(\"99,59,49,35,211,61,34,159,101,71,41,41,255,159,105,68,178,131,225,31,163,190,104,222,190,102,229,116,138,60,215,166\"),18,true,true)"
              },
              {
                "js": "[7,105,107,44,37,106,253,41,255,129,67,16,51,247,19,117,158,222,34,231,112,162,38,154,58,148,153,159,19,232,25,199]",
                "sol": "stringToBytes32(\"7,105,107,44,37,106,253,41,255,129,67,16,51,247,19,117,158,222,34,231,112,162,38,154,58,148,153,159,19,232,25,199\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T15:19:36.647ZProxyReleases.testaddApproval": {
    "branches": {
      "0": {
        "branch": {
          "loc": "64-68",
          "restrictions": [
            "release.approvalCounter == requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter==requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"superuser\",\"sha256Hash\": [113,166,136,32,155,203,146,5,114,188,163,216,251,171,247,161,57,97,81,159,61,112,52,164,211,41,252,0,136,115,225,22],\"approvalCounter\": 255,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"superuser\",stringToBytes32(\"113,166,136,32,155,203,146,5,114,188,163,216,251,171,247,161,57,97,81,159,61,112,52,164,211,41,252,0,136,115,225,22\"),255,true,false)"
            },
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "255",
              "sol": "255"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"superuser\",sha256Hash : [113,166,136,32,155,203,146,5,114,188,163,216,251,171,247,161,57,97,81,159,61,112,52,164,211,41,252,0,136,115,225,22],approvalCounter : 255,initialized : true,approved : \"true\"}",
                "sol": "Releases.Release(\"superuser\",stringToBytes32(\"113,166,136,32,155,203,146,5,114,188,163,216,251,171,247,161,57,97,81,159,61,112,52,164,211,41,252,0,136,115,225,22\"),255,true,true)"
              },
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "release.approvalCounter != requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter!=requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"\\x19Ethereum Signed Message:\\n32\",\"sha256Hash\": [171,102,50,241,171,8,216,179,133,26,156,234,164,206,173,254,137,123,186,76,44,150,77,182,113,149,224,205,165,156,226,70],\"approvalCounter\": 256,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\\n32\",stringToBytes32(\"171,102,50,241,171,8,216,179,133,26,156,234,164,206,173,254,137,123,186,76,44,150,77,182,113,149,224,205,165,156,226,70\"),256,false,false)"
            },
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"\\x19Ethereum Signed Message:\n32\",sha256Hash : [171,102,50,241,171,8,216,179,133,26,156,234,164,206,173,254,137,123,186,76,44,150,77,182,113,149,224,205,165,156,226,70],approvalCounter : 256,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\n32\",stringToBytes32(\"171,102,50,241,171,8,216,179,133,26,156,234,164,206,173,254,137,123,186,76,44,150,77,182,113,149,224,205,165,156,226,70\"),256,false,true)"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "0",
                "sol": "0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T15:19:36.649ZAiakos.addMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute addMaintainer(address) WHEN msg.sender==_owner,_maintainerAddress!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: _maintainerAddress != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T15:19:36.651ZAiakos.deployRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "75-81",
          "restrictions": [
            "MemberAccess.Identifier != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier!=true",
          "parameters": [
            {
              "js": "\"bouncer\"",
              "sol": "\"bouncer\""
            },
            {
              "js": "[161,57,8,94,56,115,249,75,251,227,94,231,183,106,118,255,28,89,228,177,148,162,50,82,169,229,10,198,72,80,222,169]",
              "sol": "stringToBytes32(\"161,57,8,94,56,115,249,75,251,227,94,231,183,106,118,255,28,89,228,177,148,162,50,82,169,229,10,198,72,80,222,169\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "79-81",
          "restrictions": [
            "MemberAccess.Identifier == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"4mu0br\"",
              "sol": "\"4mu0br\""
            },
            {
              "js": "[2,199,14,103,130,15,175,26,189,6,182,72,161,158,154,180,87,25,182,217,110,200,205,245,124,222,165,73,128,26,174,175]",
              "sol": "stringToBytes32(\"2,199,14,103,130,15,175,26,189,6,182,72,161,158,154,180,87,25,182,217,110,200,205,245,124,222,165,73,128,26,174,175\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "84-87",
          "restrictions": [
            "approvalGranted == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted==true",
          "parameters": [
            {
              "js": "\"\\x19Ethereum Signed Message:\\n32\"",
              "sol": "\"\\x19Ethereum Signed Message:\\n32\""
            },
            {
              "js": "[45,150,42,157,160,18,101,55,35,186,198,228,97,244,174,205,128,179,193,208,64,85,99,146,60,85,21,201,97,154,51,204]",
              "sol": "stringToBytes32(\"45,150,42,157,160,18,101,55,35,186,198,228,97,244,174,205,128,179,193,208,64,85,99,146,60,85,21,201,97,154,51,204\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "3": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted!=true",
          "parameters": [
            {
              "js": "\"\\x19Ethereum Signed Message:\\n32\"",
              "sol": "\"\\x19Ethereum Signed Message:\\n32\""
            },
            {
              "js": "[220,147,246,189,250,110,165,73,217,214,255,159,25,65,16,139,162,172,32,140,7,90,244,98,223,168,56,138,94,145,10,166]",
              "sol": "stringToBytes32(\"220,147,246,189,250,110,165,73,217,214,255,159,25,65,16,139,162,172,32,140,7,90,244,98,223,168,56,138,94,145,10,166\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "4": {
        "branch": {
          "loc": "88-91",
          "restrictions": [
            "releaseApproved == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved==true",
          "parameters": [
            {
              "js": "\"bouncer\"",
              "sol": "\"bouncer\""
            },
            {
              "js": "[43,149,171,217,204,71,9,169,21,178,42,107,166,47,46,58,254,193,152,147,159,36,253,44,60,200,51,169,42,203,246,71]",
              "sol": "stringToBytes32(\"43,149,171,217,204,71,9,169,21,178,42,107,166,47,46,58,254,193,152,147,159,36,253,44,60,200,51,169,42,203,246,71\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "5": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "releaseApproved != true",
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved!=true,approvalGranted!=true",
          "parameters": [
            {
              "js": "\"whitelist\"",
              "sol": "\"whitelist\""
            },
            {
              "js": "[247,181,28,179,220,177,20,223,162,81,156,170,172,89,155,242,137,80,164,246,151,216,204,242,236,11,175,41,203,133,158,246]",
              "sol": "stringToBytes32(\"247,181,28,179,220,177,20,223,162,81,156,170,172,89,155,242,137,80,164,246,151,216,204,242,236,11,175,41,203,133,158,246\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:19:36.652ZAiakos.checkRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute checkRelease(string,bytes32) WHEN _sha256Hash!=0x0,MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "[6,237,58,89,78,183,43,136,228,113,119,157,108,73,85,198,88,72,219,76,218,204,148,36,171,69,103,25,221,2,150,141]",
              "sol": "stringToBytes32(\"6,237,58,89,78,183,43,136,228,113,119,157,108,73,85,198,88,72,219,76,218,204,148,36,171,69,103,25,221,2,150,141\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail checkRelease(string,bytes32) when NOT comply with: _sha256Hash != 0x0",
            "parameters": [
              {
                "js": "\"Example\"",
                "sol": "\"Example\""
              },
              {
                "js": "\"0x0\"",
                "sol": "0x0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T15:19:36.653ZAiakos.getReleaseInfo": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getReleaseInfo(string)",
          "parameters": [
            {
              "js": "\"UsesExample\"",
              "sol": "\"UsesExample\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:19:36.653ZAiakos.amIMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute amIMaintainer()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:19:36.653ZAiakos.isMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isMaintainer(address)",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:19:36.653ZAiakos.getRequiredNumberOfMaintainers": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getRequiredNumberOfMaintainers()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:19:36.653ZAiakos.transferOwnership": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute transferOwnership(address) WHEN _newOwner!=0x0000000000000000000000000000000000000000,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: _newOwner != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
}