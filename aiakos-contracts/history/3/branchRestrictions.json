,{
  "2020-11-10T08:37:16.470ZAiakos.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint) WHEN _requiredNumberOfMaintainers>0",
          "parameters": [
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint) when NOT comply with: _requiredNumberOfMaintainers > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T08:37:22.492ZProxyReleases.testinit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testinit(Releases.Release,string,bytes32)",
          "parameters": [
            {
              "js": "{\"version\": \"Example\",\"sha256Hash\": [77,206,36,187,206,56,224,24,115,116,54,178,182,92,7,90,128,60,107,252,222,193,52,171,209,86,230,171,71,234,44,120],\"approvalCounter\": 1336,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"Example\",stringToBytes32(\"77,206,36,187,206,56,224,24,115,116,54,178,182,92,7,90,128,60,107,252,222,193,52,171,209,86,230,171,71,234,44,120\"),1336,true,false)"
            },
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "[206,95,12,18,108,27,71,124,116,138,59,246,220,196,92,53,164,126,192,97,148,214,0,224,201,146,59,129,108,99,48,47]",
              "sol": "stringToBytes32(\"206,95,12,18,108,27,71,124,116,138,59,246,220,196,92,53,164,126,192,97,148,214,0,224,201,146,59,129,108,99,48,47\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T08:37:22.493ZProxyReleases.testcheck": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcheck(Releases.Release,bytes32) WHEN release.sha256Hash==sha256Hash",
          "parameters": [
            {
              "js": "{\"version\": \"\\x19Ethereum Signed Message:\\n32\",\"sha256Hash\": [98,236,74,205,239,39,14,27,193,56,124,45,177,224,207,224,240,205,239,65,150,165,138,211,179,64,16,174,62,196,35,65],\"approvalCounter\": 26,\"initialized\": false,\"approved\": true}",
              "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\\n32\",stringToBytes32(\"98,236,74,205,239,39,14,27,193,56,124,45,177,224,207,224,240,205,239,65,150,165,138,211,179,64,16,174,62,196,35,65\"),26,false,true)"
            },
            {
              "js": "[98,236,74,205,239,39,14,27,193,56,124,45,177,224,207,224,240,205,239,65,150,165,138,211,179,64,16,174,62,196,35,65]",
              "sol": "stringToBytes32(\"98,236,74,205,239,39,14,27,193,56,124,45,177,224,207,224,240,205,239,65,150,165,138,211,179,64,16,174,62,196,35,65\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testcheck(Releases.Release,bytes32) when NOT comply with: release.sha256Hash == sha256Hash",
            "parameters": [
              {
                "js": "{version : \"\\x19Ethereum Signed Message:\n32\",sha256Hash : [229,132,70,155,206,121,83,19,92,9,53,223,221,82,112,201,130,129,38,235,108,248,165,118,8,101,234,96,46,72,85,147],approvalCounter : 26,initialized : false,approved : true}",
                "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\n32\",stringToBytes32(\"229,132,70,155,206,121,83,19,92,9,53,223,221,82,112,201,130,129,38,235,108,248,165,118,8,101,234,96,46,72,85,147\"),26,false,true)"
              },
              {
                "js": "[98,236,74,205,239,39,14,27,193,56,124,45,177,224,207,224,240,205,239,65,150,165,138,211,179,64,16,174,62,196,35,65]",
                "sol": "stringToBytes32(\"98,236,74,205,239,39,14,27,193,56,124,45,177,224,207,224,240,205,239,65,150,165,138,211,179,64,16,174,62,196,35,65\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T08:37:22.495ZProxyReleases.testaddApproval": {
    "branches": {
      "0": {
        "branch": {
          "loc": "64-68",
          "restrictions": [
            "release.approvalCounter == requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter==requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"UsesExample\",\"sha256Hash\": [100,233,239,203,80,109,125,228,190,110,84,82,143,232,143,133,116,141,198,194,6,214,74,45,66,65,217,91,130,241,31,65],\"approvalCounter\": 2014223714,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"UsesExample\",stringToBytes32(\"100,233,239,203,80,109,125,228,190,110,84,82,143,232,143,133,116,141,198,194,6,214,74,45,66,65,217,91,130,241,31,65\"),2014223714,false,false)"
            },
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223714",
              "sol": "2014223714"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"UsesExample\",sha256Hash : [100,233,239,203,80,109,125,228,190,110,84,82,143,232,143,133,116,141,198,194,6,214,74,45,66,65,217,91,130,241,31,65],approvalCounter : 2014223714,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"UsesExample\",stringToBytes32(\"100,233,239,203,80,109,125,228,190,110,84,82,143,232,143,133,116,141,198,194,6,214,74,45,66,65,217,91,130,241,31,65\"),2014223714,false,true)"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223714",
                "sol": "2014223714"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "release.approvalCounter != requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter!=requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"superuser\",\"sha256Hash\": [85,27,254,162,174,236,58,150,97,13,247,182,169,73,28,167,153,72,198,75,93,253,57,56,197,67,162,2,90,132,169,187],\"approvalCounter\": 3,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"superuser\",stringToBytes32(\"85,27,254,162,174,236,58,150,97,13,247,182,169,73,28,167,153,72,198,75,93,253,57,56,197,67,162,2,90,132,169,187\"),3,false,false)"
            },
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "10001",
              "sol": "10001"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"superuser\",sha256Hash : [85,27,254,162,174,236,58,150,97,13,247,182,169,73,28,167,153,72,198,75,93,253,57,56,197,67,162,2,90,132,169,187],approvalCounter : 3,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"superuser\",stringToBytes32(\"85,27,254,162,174,236,58,150,97,13,247,182,169,73,28,167,153,72,198,75,93,253,57,56,197,67,162,2,90,132,169,187\"),3,false,true)"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T08:37:22.497ZAiakos.addMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute addMaintainer(address) WHEN msg.sender==_owner,_maintainerAddress!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: _maintainerAddress != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T08:37:22.498ZAiakos.deployRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "75-81",
          "restrictions": [
            "MemberAccess.Identifier != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier!=true",
          "parameters": [
            {
              "js": "\"3ld4l\"",
              "sol": "\"3ld4l\""
            },
            {
              "js": "[24,125,199,173,211,59,140,94,28,47,6,111,108,218,36,129,43,124,53,241,132,99,90,87,210,222,100,1,84,16,97,43]",
              "sol": "stringToBytes32(\"24,125,199,173,211,59,140,94,28,47,6,111,108,218,36,129,43,124,53,241,132,99,90,87,210,222,100,1,84,16,97,43\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "79-81",
          "restrictions": [
            "MemberAccess.Identifier == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"PayableExample\"",
              "sol": "\"PayableExample\""
            },
            {
              "js": "[90,139,157,174,58,7,94,140,79,110,138,164,57,143,206,147,26,171,77,182,162,53,11,117,92,114,188,142,65,7,207,229]",
              "sol": "stringToBytes32(\"90,139,157,174,58,7,94,140,79,110,138,164,57,143,206,147,26,171,77,182,162,53,11,117,92,114,188,142,65,7,207,229\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "84-87",
          "restrictions": [
            "approvalGranted == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted==true",
          "parameters": [
            {
              "js": "\"RevertWithReason\"",
              "sol": "\"RevertWithReason\""
            },
            {
              "js": "[223,30,85,87,181,83,12,112,164,240,3,125,80,95,138,43,152,34,231,157,52,29,182,127,167,12,143,63,98,227,224,224]",
              "sol": "stringToBytes32(\"223,30,85,87,181,83,12,112,164,240,3,125,80,95,138,43,152,34,231,157,52,29,182,127,167,12,143,63,98,227,224,224\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "3": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted!=true",
          "parameters": [
            {
              "js": "\"minter\"",
              "sol": "\"minter\""
            },
            {
              "js": "[91,167,169,153,99,22,170,38,95,120,123,174,229,80,87,72,74,238,196,60,152,49,240,39,225,90,206,194,71,113,27,108]",
              "sol": "stringToBytes32(\"91,167,169,153,99,22,170,38,95,120,123,174,229,80,87,72,74,238,196,60,152,49,240,39,225,90,206,194,71,113,27,108\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "4": {
        "branch": {
          "loc": "88-91",
          "restrictions": [
            "releaseApproved == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved==true",
          "parameters": [
            {
              "js": "\"ERC1820_ACCEPT_MAGIC\"",
              "sol": "\"ERC1820_ACCEPT_MAGIC\""
            },
            {
              "js": "[11,134,20,17,24,205,237,189,128,68,244,241,242,30,160,46,39,143,170,199,71,69,22,11,31,105,23,119,195,137,56,3]",
              "sol": "stringToBytes32(\"11,134,20,17,24,205,237,189,128,68,244,241,242,30,160,46,39,143,170,199,71,69,22,11,31,105,23,119,195,137,56,3\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "5": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "releaseApproved != true",
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved!=true,approvalGranted!=true",
          "parameters": [
            {
              "js": "\"3ld4l\"",
              "sol": "\"3ld4l\""
            },
            {
              "js": "[52,248,48,186,32,136,102,93,249,215,42,170,142,237,36,76,190,200,7,182,152,236,38,66,227,32,24,152,253,0,250,159]",
              "sol": "stringToBytes32(\"52,248,48,186,32,136,102,93,249,215,42,170,142,237,36,76,190,200,7,182,152,236,38,66,227,32,24,152,253,0,250,159\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T08:37:22.500ZAiakos.checkRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute checkRelease(string,bytes32) WHEN _sha256Hash!=0x0,MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"dvy7kt\"",
              "sol": "\"dvy7kt\""
            },
            {
              "js": "[107,161,123,143,30,191,67,176,111,2,248,36,225,133,77,25,138,133,146,17,242,123,255,87,54,114,142,56,237,115,105,197]",
              "sol": "stringToBytes32(\"107,161,123,143,30,191,67,176,111,2,248,36,225,133,77,25,138,133,146,17,242,123,255,87,54,114,142,56,237,115,105,197\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail checkRelease(string,bytes32) when NOT comply with: _sha256Hash != 0x0",
            "parameters": [
              {
                "js": "\"dvy7kt\"",
                "sol": "\"dvy7kt\""
              },
              {
                "js": "\"0x0\"",
                "sol": "0x0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T08:37:22.500ZAiakos.getReleaseInfo": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getReleaseInfo(string)",
          "parameters": [
            {
              "js": "\"bouncer\"",
              "sol": "\"bouncer\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T08:37:22.500ZAiakos.amIMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute amIMaintainer()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T08:37:22.501ZAiakos.isMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isMaintainer(address)",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T08:37:22.501ZAiakos.getRequiredNumberOfMaintainers": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getRequiredNumberOfMaintainers()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T08:37:22.501ZAiakos.transferOwnership": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute transferOwnership(address) WHEN _newOwner!=0x0000000000000000000000000000000000000000,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: _newOwner != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
}