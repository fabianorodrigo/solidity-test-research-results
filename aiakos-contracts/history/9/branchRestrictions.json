,{
  "2020-11-10T21:49:08.298ZAiakos.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint) WHEN _requiredNumberOfMaintainers>0",
          "parameters": [
            {
              "js": "2014223715",
              "sol": "2014223715"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint) when NOT comply with: _requiredNumberOfMaintainers > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T21:49:14.413ZProxyReleases.testinit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testinit(Releases.Release,string,bytes32)",
          "parameters": [
            {
              "js": "{\"version\": \"superuser\",\"sha256Hash\": [239,172,162,179,175,23,87,141,86,155,198,30,34,255,205,7,217,52,5,239,76,214,32,47,214,121,188,54,10,53,67,182],\"approvalCounter\": 2,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"superuser\",stringToBytes32(\"239,172,162,179,175,23,87,141,86,155,198,30,34,255,205,7,217,52,5,239,76,214,32,47,214,121,188,54,10,53,67,182\"),2,false,false)"
            },
            {
              "js": "\"initialized\"",
              "sol": "\"initialized\""
            },
            {
              "js": "[31,88,16,28,108,240,11,165,77,46,106,133,107,45,110,144,237,149,223,240,112,185,103,165,113,205,114,250,0,120,124,233]",
              "sol": "stringToBytes32(\"31,88,16,28,108,240,11,165,77,46,106,133,107,45,110,144,237,149,223,240,112,185,103,165,113,205,114,250,0,120,124,233\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T21:49:14.414ZProxyReleases.testcheck": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcheck(Releases.Release,bytes32) WHEN release.sha256Hash==sha256Hash",
          "parameters": [
            {
              "js": "{\"version\": \"UsesExample\",\"sha256Hash\": [139,170,102,107,227,95,77,205,19,126,201,177,149,220,95,51,120,22,116,189,108,58,8,139,29,3,144,12,88,72,72,22],\"approvalCounter\": 1338,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"UsesExample\",stringToBytes32(\"139,170,102,107,227,95,77,205,19,126,201,177,149,220,95,51,120,22,116,189,108,58,8,139,29,3,144,12,88,72,72,22\"),1338,true,false)"
            },
            {
              "js": "[139,170,102,107,227,95,77,205,19,126,201,177,149,220,95,51,120,22,116,189,108,58,8,139,29,3,144,12,88,72,72,22]",
              "sol": "stringToBytes32(\"139,170,102,107,227,95,77,205,19,126,201,177,149,220,95,51,120,22,116,189,108,58,8,139,29,3,144,12,88,72,72,22\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testcheck(Releases.Release,bytes32) when NOT comply with: release.sha256Hash == sha256Hash",
            "parameters": [
              {
                "js": "{version : \"UsesExample\",sha256Hash : [221,238,10,7,154,175,174,253,80,141,62,81,135,85,21,105,72,249,210,177,237,241,207,131,47,251,143,242,179,104,4,29],approvalCounter : 1338,initialized : true,approved : false}",
                "sol": "Releases.Release(\"UsesExample\",stringToBytes32(\"221,238,10,7,154,175,174,253,80,141,62,81,135,85,21,105,72,249,210,177,237,241,207,131,47,251,143,242,179,104,4,29\"),1338,true,false)"
              },
              {
                "js": "[139,170,102,107,227,95,77,205,19,126,201,177,149,220,95,51,120,22,116,189,108,58,8,139,29,3,144,12,88,72,72,22]",
                "sol": "stringToBytes32(\"139,170,102,107,227,95,77,205,19,126,201,177,149,220,95,51,120,22,116,189,108,58,8,139,29,3,144,12,88,72,72,22\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T21:49:14.415ZProxyReleases.testaddApproval": {
    "branches": {
      "0": {
        "branch": {
          "loc": "64-68",
          "restrictions": [
            "release.approvalCounter == requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter==requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"RevertWithReason\",\"sha256Hash\": [131,98,168,39,143,24,105,155,169,129,153,220,137,89,249,41,55,180,120,13,83,221,192,92,76,211,217,30,253,72,170,174],\"approvalCounter\": 6,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"RevertWithReason\",stringToBytes32(\"131,98,168,39,143,24,105,155,169,129,153,220,137,89,249,41,55,180,120,13,83,221,192,92,76,211,217,30,253,72,170,174\"),6,true,false)"
            },
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "6",
              "sol": "6"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"RevertWithReason\",sha256Hash : [131,98,168,39,143,24,105,155,169,129,153,220,137,89,249,41,55,180,120,13,83,221,192,92,76,211,217,30,253,72,170,174],approvalCounter : 6,initialized : true,approved : \"true\"}",
                "sol": "Releases.Release(\"RevertWithReason\",stringToBytes32(\"131,98,168,39,143,24,105,155,169,129,153,220,137,89,249,41,55,180,120,13,83,221,192,92,76,211,217,30,253,72,170,174\"),6,true,true)"
              },
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "6",
                "sol": "6"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "release.approvalCounter != requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter!=requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"Example\",\"sha256Hash\": [147,18,9,105,147,124,4,68,178,46,75,39,218,228,183,10,6,141,55,242,249,110,28,168,58,17,70,81,158,65,109,9],\"approvalCounter\": 256,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"Example\",stringToBytes32(\"147,18,9,105,147,124,4,68,178,46,75,39,218,228,183,10,6,141,55,242,249,110,28,168,58,17,70,81,158,65,109,9\"),256,false,false)"
            },
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "28",
              "sol": "28"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"Example\",sha256Hash : [147,18,9,105,147,124,4,68,178,46,75,39,218,228,183,10,6,141,55,242,249,110,28,168,58,17,70,81,158,65,109,9],approvalCounter : 256,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"Example\",stringToBytes32(\"147,18,9,105,147,124,4,68,178,46,75,39,218,228,183,10,6,141,55,242,249,110,28,168,58,17,70,81,158,65,109,9\"),256,false,true)"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "28",
                "sol": "28"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T21:49:14.417ZAiakos.addMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute addMaintainer(address) WHEN msg.sender==_owner,_maintainerAddress!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: _maintainerAddress != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T21:49:14.419ZAiakos.deployRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "75-81",
          "restrictions": [
            "MemberAccess.Identifier != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier!=true",
          "parameters": [
            {
              "js": "\"bouncer\"",
              "sol": "\"bouncer\""
            },
            {
              "js": "[181,211,184,76,134,121,15,153,122,208,35,131,224,52,208,2,50,10,195,103,80,123,30,33,90,253,179,62,223,176,91,195]",
              "sol": "stringToBytes32(\"181,211,184,76,134,121,15,153,122,208,35,131,224,52,208,2,50,10,195,103,80,123,30,33,90,253,179,62,223,176,91,195\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "79-81",
          "restrictions": [
            "MemberAccess.Identifier == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"PayableExample\"",
              "sol": "\"PayableExample\""
            },
            {
              "js": "[89,227,226,144,130,225,82,0,146,23,79,244,209,13,70,90,78,5,105,253,101,174,75,130,219,43,3,138,248,104,132,167]",
              "sol": "stringToBytes32(\"89,227,226,144,130,225,82,0,146,23,79,244,209,13,70,90,78,5,105,253,101,174,75,130,219,43,3,138,248,104,132,167\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "84-87",
          "restrictions": [
            "approvalGranted == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted==true",
          "parameters": [
            {
              "js": "\"initialized\"",
              "sol": "\"initialized\""
            },
            {
              "js": "[240,0,50,160,3,230,36,2,163,184,175,252,45,210,238,129,100,149,94,175,115,156,85,69,254,35,186,161,224,188,110,172]",
              "sol": "stringToBytes32(\"240,0,50,160,3,230,36,2,163,184,175,252,45,210,238,129,100,149,94,175,115,156,85,69,254,35,186,161,224,188,110,172\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "3": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted!=true",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "[208,59,188,236,2,170,23,189,141,99,165,108,89,17,121,47,104,229,6,24,169,119,62,188,9,162,251,216,135,12,7,11]",
              "sol": "stringToBytes32(\"208,59,188,236,2,170,23,189,141,99,165,108,89,17,121,47,104,229,6,24,169,119,62,188,9,162,251,216,135,12,7,11\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "4": {
        "branch": {
          "loc": "88-91",
          "restrictions": [
            "releaseApproved == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved==true",
          "parameters": [
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "[37,202,24,102,145,77,0,245,96,99,73,221,139,41,37,208,209,161,2,174,134,87,76,203,67,245,251,48,8,99,191,211]",
              "sol": "stringToBytes32(\"37,202,24,102,145,77,0,245,96,99,73,221,139,41,37,208,209,161,2,174,134,87,76,203,67,245,251,48,8,99,191,211\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "5": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "releaseApproved != true",
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved!=true,approvalGranted!=true",
          "parameters": [
            {
              "js": "\"ERC1820_ACCEPT_MAGIC\"",
              "sol": "\"ERC1820_ACCEPT_MAGIC\""
            },
            {
              "js": "[141,224,93,40,249,64,224,152,131,167,14,162,181,34,178,143,220,164,134,136,146,92,101,68,254,19,48,73,25,113,82,106]",
              "sol": "stringToBytes32(\"141,224,93,40,249,64,224,152,131,167,14,162,181,34,178,143,220,164,134,136,146,92,101,68,254,19,48,73,25,113,82,106\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T21:49:14.420ZAiakos.checkRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute checkRelease(string,bytes32) WHEN _sha256Hash!=0x0,MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"\\x19Ethereum Signed Message:\\n32\"",
              "sol": "\"\\x19Ethereum Signed Message:\\n32\""
            },
            {
              "js": "[204,126,195,86,57,11,135,13,97,147,130,240,246,65,66,16,113,140,68,119,228,192,30,213,229,49,8,106,85,162,203,140]",
              "sol": "stringToBytes32(\"204,126,195,86,57,11,135,13,97,147,130,240,246,65,66,16,113,140,68,119,228,192,30,213,229,49,8,106,85,162,203,140\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail checkRelease(string,bytes32) when NOT comply with: _sha256Hash != 0x0",
            "parameters": [
              {
                "js": "\"\\x19Ethereum Signed Message:\\n32\"",
                "sol": "\"\\x19Ethereum Signed Message:\\n32\""
              },
              {
                "js": "\"0x0\"",
                "sol": "0x0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T21:49:14.421ZAiakos.getReleaseInfo": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getReleaseInfo(string)",
          "parameters": [
            {
              "js": "\"\\x19Ethereum Signed Message:\\n32\"",
              "sol": "\"\\x19Ethereum Signed Message:\\n32\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T21:49:14.421ZAiakos.amIMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute amIMaintainer()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T21:49:14.421ZAiakos.isMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isMaintainer(address)",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T21:49:14.421ZAiakos.getRequiredNumberOfMaintainers": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getRequiredNumberOfMaintainers()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T21:49:14.422ZAiakos.transferOwnership": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute transferOwnership(address) WHEN _newOwner!=0x0000000000000000000000000000000000000000,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: _newOwner != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
}