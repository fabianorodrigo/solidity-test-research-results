,{
  "2020-11-12T12:10:23.987ZAiakos.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint) WHEN _requiredNumberOfMaintainers>0",
          "parameters": [
            {
              "js": "4038714809",
              "sol": "4038714809"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint) when NOT comply with: _requiredNumberOfMaintainers > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T12:10:29.896ZProxyReleases.testinit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testinit(Releases.Release,string,bytes32)",
          "parameters": [
            {
              "js": "{\"version\": \"z8iv1o\",\"sha256Hash\": [103,158,4,187,108,165,160,180,101,247,45,158,174,217,52,123,143,45,91,209,59,140,178,23,15,38,199,219,185,1,123,164],\"approvalCounter\": 29,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"z8iv1o\",stringToBytes32(\"103,158,4,187,108,165,160,180,101,247,45,158,174,217,52,123,143,45,91,209,59,140,178,23,15,38,199,219,185,1,123,164\"),29,false,false)"
            },
            {
              "js": "\"h3118i\"",
              "sol": "\"h3118i\""
            },
            {
              "js": "[157,186,189,226,242,213,112,23,32,145,255,78,101,49,85,10,202,188,205,97,117,249,127,144,180,219,197,47,51,66,177,199]",
              "sol": "stringToBytes32(\"157,186,189,226,242,213,112,23,32,145,255,78,101,49,85,10,202,188,205,97,117,249,127,144,180,219,197,47,51,66,177,199\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T12:10:29.897ZProxyReleases.testcheck": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcheck(Releases.Release,bytes32) WHEN release.sha256Hash==sha256Hash",
          "parameters": [
            {
              "js": "{\"version\": \"h3118i\",\"sha256Hash\": [251,49,59,200,236,71,173,131,200,12,126,44,136,152,55,93,49,43,154,157,117,46,45,60,207,16,204,193,198,18,132,108],\"approvalCounter\": 0,\"initialized\": false,\"approved\": true}",
              "sol": "Releases.Release(\"h3118i\",stringToBytes32(\"251,49,59,200,236,71,173,131,200,12,126,44,136,152,55,93,49,43,154,157,117,46,45,60,207,16,204,193,198,18,132,108\"),0,false,true)"
            },
            {
              "js": "[251,49,59,200,236,71,173,131,200,12,126,44,136,152,55,93,49,43,154,157,117,46,45,60,207,16,204,193,198,18,132,108]",
              "sol": "stringToBytes32(\"251,49,59,200,236,71,173,131,200,12,126,44,136,152,55,93,49,43,154,157,117,46,45,60,207,16,204,193,198,18,132,108\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testcheck(Releases.Release,bytes32) when NOT comply with: release.sha256Hash == sha256Hash",
            "parameters": [
              {
                "js": "{version : \"h3118i\",sha256Hash : [116,178,119,243,229,70,102,186,10,6,245,186,22,227,76,128,32,199,107,76,43,174,210,100,27,229,115,226,1,179,26,49],approvalCounter : 0,initialized : false,approved : true}",
                "sol": "Releases.Release(\"h3118i\",stringToBytes32(\"116,178,119,243,229,70,102,186,10,6,245,186,22,227,76,128,32,199,107,76,43,174,210,100,27,229,115,226,1,179,26,49\"),0,false,true)"
              },
              {
                "js": "[251,49,59,200,236,71,173,131,200,12,126,44,136,152,55,93,49,43,154,157,117,46,45,60,207,16,204,193,198,18,132,108]",
                "sol": "stringToBytes32(\"251,49,59,200,236,71,173,131,200,12,126,44,136,152,55,93,49,43,154,157,117,46,45,60,207,16,204,193,198,18,132,108\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T12:10:29.899ZProxyReleases.testaddApproval": {
    "branches": {
      "0": {
        "branch": {
          "loc": "64-68",
          "restrictions": [
            "release.approvalCounter == requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter==requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"RevertWithReason\",\"sha256Hash\": [53,115,238,55,166,160,97,2,63,152,10,165,62,199,58,32,61,214,29,154,149,188,48,188,24,131,219,80,49,137,244,55],\"approvalCounter\": 257,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"RevertWithReason\",stringToBytes32(\"53,115,238,55,166,160,97,2,63,152,10,165,62,199,58,32,61,214,29,154,149,188,48,188,24,131,219,80,49,137,244,55\"),257,false,false)"
            },
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"RevertWithReason\",sha256Hash : [53,115,238,55,166,160,97,2,63,152,10,165,62,199,58,32,61,214,29,154,149,188,48,188,24,131,219,80,49,137,244,55],approvalCounter : 257,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"RevertWithReason\",stringToBytes32(\"53,115,238,55,166,160,97,2,63,152,10,165,62,199,58,32,61,214,29,154,149,188,48,188,24,131,219,80,49,137,244,55\"),257,false,true)"
              },
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "257",
                "sol": "257"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "release.approvalCounter != requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter!=requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"bouncer\",\"sha256Hash\": [147,183,88,2,70,116,141,82,155,202,150,88,245,254,76,88,153,228,88,81,141,169,87,216,227,36,176,208,146,212,186,149],\"approvalCounter\": 254,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"bouncer\",stringToBytes32(\"147,183,88,2,70,116,141,82,155,202,150,88,245,254,76,88,153,228,88,81,141,169,87,216,227,36,176,208,146,212,186,149\"),254,false,false)"
            },
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"bouncer\",sha256Hash : [147,183,88,2,70,116,141,82,155,202,150,88,245,254,76,88,153,228,88,81,141,169,87,216,227,36,176,208,146,212,186,149],approvalCounter : 254,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"bouncer\",stringToBytes32(\"147,183,88,2,70,116,141,82,155,202,150,88,245,254,76,88,153,228,88,81,141,169,87,216,227,36,176,208,146,212,186,149\"),254,false,true)"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "3",
                "sol": "3"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T12:10:29.901ZAiakos.addMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute addMaintainer(address) WHEN msg.sender==_owner,_maintainerAddress!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: _maintainerAddress != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T12:10:29.903ZAiakos.deployRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "75-81",
          "restrictions": [
            "MemberAccess.Identifier != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier!=true",
          "parameters": [
            {
              "js": "\"RevertWithReason\"",
              "sol": "\"RevertWithReason\""
            },
            {
              "js": "[98,82,155,219,175,43,23,80,171,251,230,190,154,220,158,115,0,22,188,249,168,20,108,232,123,129,22,248,13,38,82,31]",
              "sol": "stringToBytes32(\"98,82,155,219,175,43,23,80,171,251,230,190,154,220,158,115,0,22,188,249,168,20,108,232,123,129,22,248,13,38,82,31\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "79-81",
          "restrictions": [
            "MemberAccess.Identifier == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"z8iv1o\"",
              "sol": "\"z8iv1o\""
            },
            {
              "js": "[254,68,65,187,73,76,144,19,238,214,160,158,99,166,209,244,189,10,49,29,110,248,44,252,45,100,182,213,23,35,169,10]",
              "sol": "stringToBytes32(\"254,68,65,187,73,76,144,19,238,214,160,158,99,166,209,244,189,10,49,29,110,248,44,252,45,100,182,213,23,35,169,10\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "84-87",
          "restrictions": [
            "approvalGranted == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted==true",
          "parameters": [
            {
              "js": "\"PayableExample\"",
              "sol": "\"PayableExample\""
            },
            {
              "js": "[9,94,132,243,74,201,46,108,146,121,131,83,238,216,244,119,84,217,21,10,21,74,158,197,81,213,177,64,114,39,100,83]",
              "sol": "stringToBytes32(\"9,94,132,243,74,201,46,108,146,121,131,83,238,216,244,119,84,217,21,10,21,74,158,197,81,213,177,64,114,39,100,83\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "3": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted!=true",
          "parameters": [
            {
              "js": "\"ERC1820_ACCEPT_MAGIC\"",
              "sol": "\"ERC1820_ACCEPT_MAGIC\""
            },
            {
              "js": "[236,67,233,228,23,27,156,168,42,224,111,205,163,140,81,11,39,80,69,80,238,74,97,38,60,7,186,31,224,207,170,117]",
              "sol": "stringToBytes32(\"236,67,233,228,23,27,156,168,42,224,111,205,163,140,81,11,39,80,69,80,238,74,97,38,60,7,186,31,224,207,170,117\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "4": {
        "branch": {
          "loc": "88-91",
          "restrictions": [
            "releaseApproved == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved==true",
          "parameters": [
            {
              "js": "\"RevertWithReason\"",
              "sol": "\"RevertWithReason\""
            },
            {
              "js": "[210,236,84,203,228,168,123,7,123,61,65,251,72,56,38,231,96,7,155,234,130,253,219,224,119,51,246,56,128,81,92,48]",
              "sol": "stringToBytes32(\"210,236,84,203,228,168,123,7,123,61,65,251,72,56,38,231,96,7,155,234,130,253,219,224,119,51,246,56,128,81,92,48\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "5": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "releaseApproved != true",
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved!=true,approvalGranted!=true",
          "parameters": [
            {
              "js": "\"ERC1820_ACCEPT_MAGIC\"",
              "sol": "\"ERC1820_ACCEPT_MAGIC\""
            },
            {
              "js": "[86,174,20,107,150,233,211,116,187,203,199,87,186,21,66,167,50,37,212,174,244,43,122,125,58,233,201,240,176,63,234,102]",
              "sol": "stringToBytes32(\"86,174,20,107,150,233,211,116,187,203,199,87,186,21,66,167,50,37,212,174,244,43,122,125,58,233,201,240,176,63,234,102\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T12:10:29.904ZAiakos.checkRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute checkRelease(string,bytes32) WHEN _sha256Hash!=0x0,MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "[238,55,164,125,217,240,149,224,190,255,146,188,29,175,186,140,227,134,249,49,243,215,127,75,171,36,17,195,53,160,205,209]",
              "sol": "stringToBytes32(\"238,55,164,125,217,240,149,224,190,255,146,188,29,175,186,140,227,134,249,49,243,215,127,75,171,36,17,195,53,160,205,209\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail checkRelease(string,bytes32) when NOT comply with: _sha256Hash != 0x0",
            "parameters": [
              {
                "js": "\"Example\"",
                "sol": "\"Example\""
              },
              {
                "js": "\"0x0\"",
                "sol": "0x0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T12:10:29.905ZAiakos.getReleaseInfo": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getReleaseInfo(string)",
          "parameters": [
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T12:10:29.905ZAiakos.amIMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute amIMaintainer()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T12:10:29.905ZAiakos.isMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isMaintainer(address)",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T12:10:29.905ZAiakos.getRequiredNumberOfMaintainers": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getRequiredNumberOfMaintainers()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T12:10:29.906ZAiakos.transferOwnership": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute transferOwnership(address) WHEN _newOwner!=0x0000000000000000000000000000000000000000,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: _newOwner != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
}