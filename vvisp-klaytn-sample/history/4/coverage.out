npm run coverage
ter 10 nov 2020 10:08:59 -03
Truffle v5.0.27 (core: 5.0.27)
Solidity - 0.4.24 (solc-js)
Node v10.15.3
Web3.js v1.0.0-beta.37

> vvisp-klaytn-sample@1.0.0 coverage /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample
> scripts/coverage.sh

Starting our own ganache instance
Generating coverage environment
Running: node --max-old-space-size=4096 ../node_modules/.bin/truffle compile --network coverage
(this can take a few seconds)...

Compiling your contracts...
===========================
> Compiling ./contracts/IERC20.sol
> Compiling ./contracts/Migrations.sol
> Compiling ./contracts/MyERC20.sol
> Compiling ./contracts/SafeMath.sol
> Compiling ./contracts/proxy4tests/MyERC20.sol
> Compiling ./contracts/proxy4tests/SafeMath.sol

    > compilation warnings encountered:

/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/coverageEnv/contracts/proxy4tests/MyERC20.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
import "../MyERC20.sol";
^ (Relevant source part starts here and spans across multiple lines).
,/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/coverageEnv/contracts/proxy4tests/SafeMath.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
import "../SafeMath.sol";
^ (Relevant source part starts here and spans across multiple lines).

> Artifacts written to /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/coverageEnv/build/contracts
> Compiled successfully using:
   - solc: 0.4.24+commit.e67f0147.Emscripten.clang

Instrumenting  ./coverageEnv/contracts/IERC20.sol
Skipping instrumentation of  ./coverageEnv/contracts/Migrations.sol
Instrumenting  ./coverageEnv/contracts/MyERC20.sol
Instrumenting  ./coverageEnv/contracts/proxy4tests/MyERC20.sol
Instrumenting  ./coverageEnv/contracts/proxy4tests/SafeMath.sol
Instrumenting  ./coverageEnv/contracts/SafeMath.sol
Running: node --max-old-space-size=4096 ../node_modules/.bin/truffle compile --network coverage
(this can take a few seconds)...

Compiling your contracts...
===========================
> Compiling ./contracts/IERC20.sol
> Compiling ./contracts/Migrations.sol
> Compiling ./contracts/MyERC20.sol
> Compiling ./contracts/SafeMath.sol
> Compiling ./contracts/proxy4tests/MyERC20.sol
> Compiling ./contracts/proxy4tests/SafeMath.sol

    > compilation warnings encountered:

/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/coverageEnv/contracts/proxy4tests/MyERC20.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
import "../MyERC20.sol";
^ (Relevant source part starts here and spans across multiple lines).
,/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/coverageEnv/contracts/proxy4tests/SafeMath.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
import "../SafeMath.sol";
^ (Relevant source part starts here and spans across multiple lines).

> Artifacts written to /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/coverageEnv/build/contracts
> Compiled successfully using:
   - solc: 0.4.24+commit.e67f0147.Emscripten.clang

Running: node --max-old-space-size=4096 ../node_modules/.bin/truffle test --network coverage
(this can take a few seconds)...
Using network 'coverage'.


Compiling your contracts...
===========================
> Everything is up to date, there is nothing to compile.


  Contract: contractProxyMyERC20

    1) Should execute test_transfer(address,address,uint256) WHEN sender!=0x0000000000000000000000000000000000000000,recipient!=0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))
    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail test_transfer(address,address,uint256) when NOT comply with: sender != 0x0000000000000000000000000000000000000000 (28810 gas)
    ✓ Should fail test_transfer(address,address,uint256) when NOT comply with: recipient != 0x0000000000000000000000000000000000000000 (31772 gas)
    ✓ Should execute test_mint(address,uint256) WHEN account!=0x0000000000000000000000000000000000000000 (73294 gas)
    ✓ Should fail test_mint(address,uint256) when NOT comply with: account != 0x0000000000000000000000000000000000000000 (27309 gas)

    2) Should execute test_burn(address,uint256) WHEN account!=0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))
    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail test_burn(address,uint256) when NOT comply with: account != 0x0000000000000000000000000000000000000000 (27102 gas)
    ✓ Should execute test_approve(address,address,uint256) WHEN owner!=0x0000000000000000000000000000000000000000,spender!=0x0000000000000000000000000000000000000000 (58442 gas)
    ✓ Should fail test_approve(address,address,uint256) when NOT comply with: owner != 0x0000000000000000000000000000000000000000 (28552 gas)
    ✓ Should fail test_approve(address,address,uint256) when NOT comply with: spender != 0x0000000000000000000000000000000000000000 (31514 gas)

    3) Should execute test_burnFrom(address,uint256) WHEN account!=0x0000000000000000000000000000000000000000,account!=0x0000000000000000000000000000000000000000,msg.sender!=0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))
    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail test_burnFrom(address,uint256) when NOT comply with: account != 0x0000000000000000000000000000000000000000 (29663 gas)
    ✓ Should fail test_burnFrom(address,uint256) when NOT comply with: account != 0x0000000000000000000000000000000000000000 (29663 gas)

    4) Should fail test_burnFrom(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))
    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------

  Contract: MyERC20
    ✓ Should execute name()
    ✓ Should execute symbol()
    ✓ Should execute decimals()
    ✓ Should execute totalSupply()
    ✓ Should execute balanceOf(address)

    5) Should execute transfer(address,uint256) WHEN msg.sender!=0x0000000000000000000000000000000000000000,recipient!=0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------

    6) Should fail transfer(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail transfer(address,uint256) when NOT comply with: recipient != 0x0000000000000000000000000000000000000000 (30429 gas)
    ✓ Should execute allowance(address,address)
    ✓ Should execute approve(address,uint256) WHEN msg.sender!=0x0000000000000000000000000000000000000000,spender!=0x0000000000000000000000000000000000000000 (58734 gas)

    7) Should fail approve(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail approve(address,uint256) when NOT comply with: spender != 0x0000000000000000000000000000000000000000 (30317 gas)

    8) Should execute transferFrom(address,address,uint256) WHEN sender!=0x0000000000000000000000000000000000000000,recipient!=0x0000000000000000000000000000000000000000,sender!=0x0000000000000000000000000000000000000000,msg.sender!=0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail transferFrom(address,address,uint256) when NOT comply with: sender != 0x0000000000000000000000000000000000000000 (28823 gas)
    ✓ Should fail transferFrom(address,address,uint256) when NOT comply with: recipient != 0x0000000000000000000000000000000000000000 (31785 gas)
    ✓ Should fail transferFrom(address,address,uint256) when NOT comply with: sender != 0x0000000000000000000000000000000000000000 (28823 gas)

    9) Should fail transferFrom(address,address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should execute increaseAllowance(address,uint256) WHEN msg.sender!=0x0000000000000000000000000000000000000000,spender!=0x0000000000000000000000000000000000000000 (65164 gas)

    10) Should fail increaseAllowance(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail increaseAllowance(address,uint256) when NOT comply with: spender != 0x0000000000000000000000000000000000000000 (36741 gas)

    11) Should execute decreaseAllowance(address,uint256) WHEN msg.sender!=0x0000000000000000000000000000000000000000,spender!=0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------

    12) Should fail decreaseAllowance(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000

    Events emitted during test:
    ---------------------------

    Transfer(from: <indexed> 0x0000000000000000000000000000000000000000 (address), to: <indexed> 0xAB2B1D55cbDb6b687FF0B91D4dc2639Ec3504c97 (address), value: 10000000000000000000000000000000000000000000000000000000000000000000000 (uint256))

    ---------------------------
    ✓ Should fail decreaseAllowance(address,uint256) when NOT comply with: spender != 0x0000000000000000000000000000000000000000 (27525 gas)

  Contract: contractProxySafeMath
    ✓ Should execute testadd(uint256,uint256)
    ✓ Should execute testsub(uint256,uint256) WHEN b<=a
    ✓ Should fail testsub(uint256,uint256) when NOT comply with: b <= a
    ✓ Should execute testmul(uint256,uint256) WHEN a==0
    ✓ Should execute testmul(uint256,uint256) WHEN a!=0
    ✓ Should execute testdiv(uint256,uint256) WHEN b>0
    ✓ Should fail testdiv(uint256,uint256) when NOT comply with: b > 0
    ✓ Should execute testmod(uint256,uint256) WHEN b!=0
    ✓ Should fail testmod(uint256,uint256) when NOT comply with: b != 0

·----------------------------------------|---------------------------|-------------|-----------------------------------·
|  [90mSolc version: 0.4.24+commit.e67f0147[39m  ·  [90mOptimizer enabled: true[39m  ·  [90mRuns: 200[39m  ·  [90mBlock limit: 17592186044415 gas[39m  │
·········································|···························|·············|····································
|  [32m[1mMethods[22m[39m                                                                                                             │
··················|······················|·············|·············|·············|··················|·················
|  [1mContract[22m       ·  [1mMethod[22m              ·  [32mMin[39m        ·  [32mMax[39m        ·  [32mAvg[39m        ·  [1m# calls[22m         ·  [1mkrw (avg)[22m     │
··················|······················|·············|·············|·············|··················|·················
|  [90mMigrations[39m     ·  setCompleted        ·          -  ·          -  ·      41908  ·               [90m2[39m  ·             [32m[90m-[32m[39m  │
··················|······················|·············|·············|·············|··················|·················
|  [90mMyERC20[39m        ·  approve             ·          -  ·          -  ·      58734  ·               [90m1[39m  ·             [32m[90m-[32m[39m  │
··················|······················|·············|·············|·············|··················|·················
|  [90mMyERC20[39m        ·  increaseAllowance   ·          -  ·          -  ·      65164  ·               [90m1[39m  ·             [32m[90m-[32m[39m  │
··················|······················|·············|·············|·············|··················|·················
|  [90mProxyMyERC20[39m   ·  test_approve        ·          -  ·          -  ·      58442  ·               [90m2[39m  ·             [32m[90m-[32m[39m  │
··················|······················|·············|·············|·············|··················|·················
|  [90mProxyMyERC20[39m   ·  test_mint           ·          -  ·          -  ·      73294  ·               [90m2[39m  ·             [32m[90m-[32m[39m  │
··················|······················|·············|·············|·············|··················|·················
|  [32m[1mDeployments[22m[39m                           ·                                         ·  [1m% of limit[22m      ·                │
·········································|·············|·············|·············|··················|·················
|  Migrations                            ·          -  ·          -  ·     224195  ·             [90m0 %[39m  ·             [32m[90m-[32m[39m  │
·········································|·············|·············|·············|··················|·················
|  MyERC20                               ·          -  ·          -  ·    4296078  ·             [90m0 %[39m  ·             [32m[90m-[32m[39m  │
·········································|·············|·············|·············|··················|·················
|  ProxyMyERC20                          ·          -  ·          -  ·    5998765  ·             [90m0 %[39m  ·             [32m[90m-[32m[39m  │
·········································|·············|·············|·············|··················|·················
|  ProxySafeMath                         ·          -  ·          -  ·    2594567  ·             [90m0 %[39m  ·             [32m[90m-[32m[39m  │
·········································|·············|·············|·············|··················|·················
|  SafeMath                              ·          -  ·          -  ·      74748  ·             [90m0 %[39m  ·             [32m[90m-[32m[39m  │
·----------------------------------------|-------------|-------------|-------------|------------------|----------------·

  34 passing (33s)
  12 failing

  1) Contract: contractProxyMyERC20
       Should execute test_transfer(address,address,uint256) WHEN sender!=0x0000000000000000000000000000000000000000,recipient!=0x0000000000000000000000000000000000000000:
     Error: Returned error: VM Exception while processing transaction: revert -- Reason given: SafeMath: subtraction overflow.
      at Object.ErrorResponse (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/~/web3-core-helpers/src/errors.js:29:1)
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/src/index.js:140:1
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1
      at XMLHttpRequest.request.onreadystatechange (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-providers-http/src/index.js:96:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (_stream_readable.js:1125:12)
      at process._tickCallback (internal/process/next_tick.js:63:19)

  2) Contract: contractProxyMyERC20
       Should execute test_burn(address,uint256) WHEN account!=0x0000000000000000000000000000000000000000:
     Error: Returned error: VM Exception while processing transaction: revert -- Reason given: SafeMath: subtraction overflow.
      at Object.ErrorResponse (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/~/web3-core-helpers/src/errors.js:29:1)
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/src/index.js:140:1
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1
      at XMLHttpRequest.request.onreadystatechange (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-providers-http/src/index.js:96:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (_stream_readable.js:1125:12)
      at process._tickCallback (internal/process/next_tick.js:63:19)

  3) Contract: contractProxyMyERC20
       Should execute test_burnFrom(address,uint256) WHEN account!=0x0000000000000000000000000000000000000000,account!=0x0000000000000000000000000000000000000000,msg.sender!=0x0000000000000000000000000000000000000000:
     Error: Returned error: VM Exception while processing transaction: revert -- Reason given: SafeMath: subtraction overflow.
      at Object.ErrorResponse (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/~/web3-core-helpers/src/errors.js:29:1)
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/src/index.js:140:1
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1
      at XMLHttpRequest.request.onreadystatechange (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-providers-http/src/index.js:96:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (_stream_readable.js:1125:12)
      at process._tickCallback (internal/process/next_tick.js:63:19)

  4) Contract: contractProxyMyERC20
       Should fail test_burnFrom(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000:
     AssertionError: Expected to fail with revert, but failed with: Error: Returned error: i.addHexPrefix(...).toLowerCase is not a function
      at fails (/home/fabianorodrigo/.nvm/versions/node/v10.15.3/lib/node_modules/truffle-assertions/index.js:152:13)
      at process._tickCallback (internal/process/next_tick.js:68:7)

  5) Contract: MyERC20
       Should execute transfer(address,uint256) WHEN msg.sender!=0x0000000000000000000000000000000000000000,recipient!=0x0000000000000000000000000000000000000000:
     Error: Returned error: VM Exception while processing transaction: revert -- Reason given: SafeMath: subtraction overflow.
      at Object.ErrorResponse (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/~/web3-core-helpers/src/errors.js:29:1)
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/src/index.js:140:1
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1
      at XMLHttpRequest.request.onreadystatechange (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-providers-http/src/index.js:96:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (_stream_readable.js:1125:12)
      at process._tickCallback (internal/process/next_tick.js:63:19)

  6) Contract: MyERC20
       Should fail transfer(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000:
     AssertionError: Expected to fail with revert, but failed with: Error: Returned error: i.addHexPrefix(...).toLowerCase is not a function
      at fails (/home/fabianorodrigo/.nvm/versions/node/v10.15.3/lib/node_modules/truffle-assertions/index.js:152:13)
      at process._tickCallback (internal/process/next_tick.js:68:7)

  7) Contract: MyERC20
       Should fail approve(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000:
     AssertionError: Expected to fail with revert, but failed with: Error: Returned error: i.addHexPrefix(...).toLowerCase is not a function
      at fails (/home/fabianorodrigo/.nvm/versions/node/v10.15.3/lib/node_modules/truffle-assertions/index.js:152:13)
      at process._tickCallback (internal/process/next_tick.js:68:7)

  8) Contract: MyERC20
       Should execute transferFrom(address,address,uint256) WHEN sender!=0x0000000000000000000000000000000000000000,recipient!=0x0000000000000000000000000000000000000000,sender!=0x0000000000000000000000000000000000000000,msg.sender!=0x0000000000000000000000000000000000000000:
     Error: Returned error: VM Exception while processing transaction: revert -- Reason given: SafeMath: subtraction overflow.
      at Object.ErrorResponse (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/~/web3-core-helpers/src/errors.js:29:1)
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/src/index.js:140:1
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1
      at XMLHttpRequest.request.onreadystatechange (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-providers-http/src/index.js:96:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (_stream_readable.js:1125:12)
      at process._tickCallback (internal/process/next_tick.js:63:19)

  9) Contract: MyERC20
       Should fail transferFrom(address,address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000:
     AssertionError: Expected to fail with revert, but failed with: Error: Returned error: i.addHexPrefix(...).toLowerCase is not a function
      at fails (/home/fabianorodrigo/.nvm/versions/node/v10.15.3/lib/node_modules/truffle-assertions/index.js:152:13)
      at process._tickCallback (internal/process/next_tick.js:68:7)

  10) Contract: MyERC20
       Should fail increaseAllowance(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000:
     AssertionError: Expected to fail with revert, but failed with: Error: Returned error: i.addHexPrefix(...).toLowerCase is not a function
      at fails (/home/fabianorodrigo/.nvm/versions/node/v10.15.3/lib/node_modules/truffle-assertions/index.js:152:13)
      at process._tickCallback (internal/process/next_tick.js:68:7)

  11) Contract: MyERC20
       Should execute decreaseAllowance(address,uint256) WHEN msg.sender!=0x0000000000000000000000000000000000000000,spender!=0x0000000000000000000000000000000000000000:
     Error: Returned error: VM Exception while processing transaction: revert -- Reason given: SafeMath: subtraction overflow.
      at Object.ErrorResponse (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/~/web3-core-helpers/src/errors.js:29:1)
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-core-requestmanager/src/index.js:140:1
      at /home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1
      at XMLHttpRequest.request.onreadystatechange (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/web3-providers-http/src/index.js:96:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/fabianorodrigo/Projetos/bitbucket/solidity-test/workdir/vvisp-klaytn-sample/node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (_stream_readable.js:1125:12)
      at process._tickCallback (internal/process/next_tick.js:63:19)

  12) Contract: MyERC20
       Should fail decreaseAllowance(address,uint256) when NOT comply with: msg.sender != 0x0000000000000000000000000000000000000000:
     AssertionError: Expected to fail with revert, but failed with: Error: Returned error: i.addHexPrefix(...).toLowerCase is not a function
      at fails (/home/fabianorodrigo/.nvm/versions/node/v10.15.3/lib/node_modules/truffle-assertions/index.js:152:13)
      at process._tickCallback (internal/process/next_tick.js:68:7)



------------------------|----------|----------|----------|----------|----------------|
File                    |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |
------------------------|----------|----------|----------|----------|----------------|
 contracts/             |    85.71 |    91.67 |      100 |    85.71 |                |
  IERC20.sol            |      100 |      100 |      100 |      100 |                |
  MyERC20.sol           |       80 |      100 |      100 |       80 |... 202,238,270 |
  SafeMath.sol          |      100 |    83.33 |      100 |      100 |                |
 contracts/proxy4tests/ |      100 |      100 |      100 |      100 |                |
  MyERC20.sol           |      100 |      100 |      100 |      100 |                |
  SafeMath.sol          |      100 |      100 |      100 |      100 |                |
------------------------|----------|----------|----------|----------|----------------|
All files               |    87.88 |    91.67 |      100 |    87.88 |                |
------------------------|----------|----------|----------|----------|----------------|

Istanbul coverage reports generated
Cleaning up...
Some truffle tests failed while running coverage
