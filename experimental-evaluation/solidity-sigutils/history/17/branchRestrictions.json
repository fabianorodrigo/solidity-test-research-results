,{
  "2020-11-11T23:21:42.156ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[4,235,83,162,103,34,107,204,250,9,105,31,188,47,44,125,239,80,103,105,1,37,130,128,232,255,42,156,72,16,24,175]",
              "sol": "stringToBytes32(\"4,235,83,162,103,34,107,204,250,9,105,31,188,47,44,125,239,80,103,105,1,37,130,128,232,255,42,156,72,16,24,175\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T23:21:42.156ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[193,111,77,82,100,112,97,98,14,111,41,154,200,114,191,253,55,156,19,99,173,184,151,137,126,22,201,44,71,202,127,59]",
              "sol": "abi.encode(\"193,111,77,82,100,112,97,98,14,111,41,154,200,114,191,253,55,156,19,99,173,184,151,137,126,22,201,44,71,202,127,59\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T23:21:42.157ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T23:21:42.157ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[10,206,15,181,144,149,134,13,18,11,100,66,66,110,214,82,168,169,46,125,107,96,140,120,117,142,204,200,238,159,206,2]",
              "sol": "abi.encode(\"10,206,15,181,144,149,134,13,18,11,100,66,66,110,214,82,168,169,46,125,107,96,140,120,117,142,204,200,238,159,206,2\")"
            },
            {
              "js": "999",
              "sol": "999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T23:21:42.158ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[170,173,172,68,33,34,174,126,8,0,116,142,18,42,110,92,47,1,35,106,101,247,72,72,133,4,230,108,162,5,162,238]",
              "sol": "abi.encode(\"170,173,172,68,33,34,174,126,8,0,116,142,18,42,110,92,47,1,35,106,101,247,72,72,133,4,230,108,162,5,162,238\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T23:21:42.158ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[7,218,7,86,96,42,213,252,137,62,60,169,172,229,148,128,50,18,153,29,182,174,181,133,106,111,5,223,7,61,30,127]",
              "sol": "stringToBytes32(\"7,218,7,86,96,42,213,252,137,62,60,169,172,229,148,128,50,18,153,29,182,174,181,133,106,111,5,223,7,61,30,127\")"
            },
            {
              "js": "[112,3,167,32,114,117,173,186,38,218,148,159,137,211,219,156,77,78,205,141,10,87,235,214,0,106,60,219,64,82,224,100]",
              "sol": "abi.encode(\"112,3,167,32,114,117,173,186,38,218,148,159,137,211,219,156,77,78,205,141,10,87,235,214,0,106,60,219,64,82,224,100\")"
            },
            {
              "js": "31",
              "sol": "31"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T23:21:42.158ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[230,93,92,80,79,66,5,251,114,64,44,243,111,51,218,186,246,174,138,109,68,170,93,25,171,255,15,145,224,47,192,117]",
              "sol": "stringToBytes32(\"230,93,92,80,79,66,5,251,114,64,44,243,111,51,218,186,246,174,138,109,68,170,93,25,171,255,15,145,224,47,192,117\")"
            },
            {
              "js": "[206,175,23,59,216,148,227,182,230,49,158,199,52,73,36,140,144,249,136,21,196,78,112,17,92,77,226,119,139,123,125,60]",
              "sol": "abi.encode(\"206,175,23,59,216,148,227,182,230,49,158,199,52,73,36,140,144,249,136,21,196,78,112,17,92,77,226,119,139,123,125,60\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}