,{
  "2020-11-11T08:58:31.136ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[244,104,29,149,146,76,3,218,91,56,178,233,180,189,22,212,217,33,187,162,74,153,38,156,104,205,216,102,119,11,85,153]",
              "sol": "stringToBytes32(\"244,104,29,149,146,76,3,218,91,56,178,233,180,189,22,212,217,33,187,162,74,153,38,156,104,205,216,102,119,11,85,153\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T08:58:31.137ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[109,226,188,153,151,123,83,238,144,155,74,159,170,52,75,110,68,64,111,179,19,65,114,232,40,43,196,29,255,203,251,61]",
              "sol": "abi.encode(\"109,226,188,153,151,123,83,238,144,155,74,159,170,52,75,110,68,64,111,179,19,65,114,232,40,43,196,29,255,203,251,61\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T08:58:31.138ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T08:58:31.139ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[35,84,89,141,96,26,64,178,241,204,158,235,69,42,36,20,10,228,7,100,111,245,50,108,139,66,91,196,102,16,138,47]",
              "sol": "abi.encode(\"35,84,89,141,96,26,64,178,241,204,158,235,69,42,36,20,10,228,7,100,111,245,50,108,139,66,91,196,102,16,138,47\")"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T08:58:31.139ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[190,199,204,221,204,112,232,71,93,40,153,105,42,38,218,9,101,96,156,2,85,135,115,232,63,251,208,12,197,170,62,170]",
              "sol": "abi.encode(\"190,199,204,221,204,112,232,71,93,40,153,105,42,38,218,9,101,96,156,2,85,135,115,232,63,251,208,12,197,170,62,170\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T08:58:31.140ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[44,184,65,208,161,122,87,60,115,161,114,219,200,149,46,147,129,76,119,123,92,185,213,232,230,210,116,81,244,37,102,204]",
              "sol": "stringToBytes32(\"44,184,65,208,161,122,87,60,115,161,114,219,200,149,46,147,129,76,119,123,92,185,213,232,230,210,116,81,244,37,102,204\")"
            },
            {
              "js": "[119,109,209,174,218,2,172,135,130,84,217,205,34,23,128,54,71,14,78,99,47,40,77,3,12,112,187,191,230,19,74,227]",
              "sol": "abi.encode(\"119,109,209,174,218,2,172,135,130,84,217,205,34,23,128,54,71,14,78,99,47,40,77,3,12,112,187,191,230,19,74,227\")"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T08:58:31.140ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[156,54,201,58,28,67,225,66,22,235,29,237,123,254,132,144,60,70,64,170,100,145,68,156,0,49,24,134,145,166,58,180]",
              "sol": "stringToBytes32(\"156,54,201,58,28,67,225,66,22,235,29,237,123,254,132,144,60,70,64,170,100,145,68,156,0,49,24,134,145,166,58,180\")"
            },
            {
              "js": "[58,37,13,204,241,15,240,110,222,60,126,127,152,34,131,8,118,57,16,210,171,169,213,151,221,191,243,95,160,237,27,22]",
              "sol": "abi.encode(\"58,37,13,204,241,15,240,110,222,60,126,127,152,34,131,8,118,57,16,210,171,169,213,151,221,191,243,95,160,237,27,22\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}