,{
  "2020-11-11T17:14:48.383ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[211,41,230,105,161,122,73,255,184,245,24,126,12,199,128,2,155,234,244,171,118,113,218,25,38,42,50,53,116,241,19,185]",
              "sol": "stringToBytes32(\"211,41,230,105,161,122,73,255,184,245,24,126,12,199,128,2,155,234,244,171,118,113,218,25,38,42,50,53,116,241,19,185\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:14:48.384ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[27,255,100,173,156,190,43,15,207,91,115,64,242,107,165,185,30,82,13,2,216,163,94,168,174,66,32,10,225,99,233,2]",
              "sol": "abi.encode(\"27,255,100,173,156,190,43,15,207,91,115,64,242,107,165,185,30,82,13,2,216,163,94,168,174,66,32,10,225,99,233,2\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:14:48.384ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "10",
              "sol": "10"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:14:48.385ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[92,181,165,130,132,8,30,146,92,189,160,145,72,4,194,19,11,108,186,251,33,195,130,221,62,30,156,90,53,58,239,184]",
              "sol": "abi.encode(\"92,181,165,130,132,8,30,146,92,189,160,145,72,4,194,19,11,108,186,251,33,195,130,221,62,30,156,90,53,58,239,184\")"
            },
            {
              "js": "9",
              "sol": "9"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:14:48.385ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[173,23,215,237,167,107,150,177,32,169,183,131,201,175,119,43,108,189,140,111,170,222,54,128,153,180,10,36,176,56,219,66]",
              "sol": "abi.encode(\"173,23,215,237,167,107,150,177,32,169,183,131,201,175,119,43,108,189,140,111,170,222,54,128,153,180,10,36,176,56,219,66\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:14:48.385ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[144,169,252,65,243,155,139,56,48,80,64,19,254,209,125,176,34,226,224,222,103,249,134,22,46,123,183,242,200,36,97,203]",
              "sol": "stringToBytes32(\"144,169,252,65,243,155,139,56,48,80,64,19,254,209,125,176,34,226,224,222,103,249,134,22,46,123,183,242,200,36,97,203\")"
            },
            {
              "js": "[112,123,224,102,51,127,77,86,159,186,214,78,24,198,27,244,71,249,57,178,171,174,239,248,9,163,199,87,215,18,53,6]",
              "sol": "abi.encode(\"112,123,224,102,51,127,77,86,159,186,214,78,24,198,27,244,71,249,57,178,171,174,239,248,9,163,199,87,215,18,53,6\")"
            },
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:14:48.386ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[240,38,73,148,13,233,158,99,221,120,152,49,51,252,178,77,7,234,129,30,110,0,197,69,56,113,47,215,200,178,130,140]",
              "sol": "stringToBytes32(\"240,38,73,148,13,233,158,99,221,120,152,49,51,252,178,77,7,234,129,30,110,0,197,69,56,113,47,215,200,178,130,140\")"
            },
            {
              "js": "[237,246,39,222,145,240,95,33,113,80,216,201,1,84,207,106,4,184,135,213,112,36,246,130,64,53,88,200,122,88,245,199]",
              "sol": "abi.encode(\"237,246,39,222,145,240,95,33,113,80,216,201,1,84,207,106,4,184,135,213,112,36,246,130,64,53,88,200,122,88,245,199\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}