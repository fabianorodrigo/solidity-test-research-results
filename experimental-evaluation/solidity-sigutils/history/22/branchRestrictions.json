,{
  "2020-11-12T10:43:52.578ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[187,13,221,205,201,128,153,14,83,209,142,0,224,159,38,30,213,192,12,20,163,186,241,242,179,26,83,15,209,254,245,120]",
              "sol": "stringToBytes32(\"187,13,221,205,201,128,153,14,83,209,142,0,224,159,38,30,213,192,12,20,163,186,241,242,179,26,83,15,209,254,245,120\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T10:43:52.579ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[1,125,181,76,70,241,118,45,105,224,185,64,141,4,14,84,37,102,101,55,23,128,32,205,213,135,59,31,20,226,241,145]",
              "sol": "abi.encode(\"1,125,181,76,70,241,118,45,105,224,185,64,141,4,14,84,37,102,101,55,23,128,32,205,213,135,59,31,20,226,241,145\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T10:43:52.579ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "32",
              "sol": "32"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T10:43:52.580ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[19,129,121,94,34,211,158,229,208,14,241,147,82,216,52,101,131,126,85,41,207,46,118,90,86,237,111,56,23,241,242,96]",
              "sol": "abi.encode(\"19,129,121,94,34,211,158,229,208,14,241,147,82,216,52,101,131,126,85,41,207,46,118,90,86,237,111,56,23,241,242,96\")"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T10:43:52.580ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[183,170,226,50,12,112,219,106,164,115,221,206,77,238,135,213,240,201,246,189,40,237,27,84,191,137,233,2,61,177,147,131]",
              "sol": "abi.encode(\"183,170,226,50,12,112,219,106,164,115,221,206,77,238,135,213,240,201,246,189,40,237,27,84,191,137,233,2,61,177,147,131\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T10:43:52.580ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[158,252,115,100,126,164,40,159,0,188,193,96,66,13,225,187,217,130,185,47,89,231,51,250,208,110,147,49,203,180,30,180]",
              "sol": "stringToBytes32(\"158,252,115,100,126,164,40,159,0,188,193,96,66,13,225,187,217,130,185,47,89,231,51,250,208,110,147,49,203,180,30,180\")"
            },
            {
              "js": "[151,174,207,253,241,215,160,163,240,39,145,31,49,9,180,158,187,254,86,30,19,192,248,160,229,71,51,39,229,176,97,180]",
              "sol": "abi.encode(\"151,174,207,253,241,215,160,163,240,39,145,31,49,9,180,158,187,254,86,30,19,192,248,160,229,71,51,39,229,176,97,180\")"
            },
            {
              "js": "255",
              "sol": "255"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T10:43:52.581ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[255,29,127,0,128,130,105,75,192,17,254,148,93,244,57,59,125,244,107,131,137,120,109,8,70,226,183,172,106,236,219,179]",
              "sol": "stringToBytes32(\"255,29,127,0,128,130,105,75,192,17,254,148,93,244,57,59,125,244,107,131,137,120,109,8,70,226,183,172,106,236,219,179\")"
            },
            {
              "js": "[165,51,129,100,191,74,75,103,246,120,33,197,18,73,33,168,120,47,225,130,112,119,0,174,183,185,80,46,213,226,71,208]",
              "sol": "abi.encode(\"165,51,129,100,191,74,75,103,246,120,33,197,18,73,33,168,120,47,225,130,112,119,0,174,183,185,80,46,213,226,71,208\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}