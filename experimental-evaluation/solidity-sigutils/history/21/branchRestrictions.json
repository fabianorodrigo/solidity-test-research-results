,{
  "2020-11-12T07:21:07.911ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[193,79,224,51,106,24,253,152,168,196,100,15,204,248,243,60,49,243,109,85,95,17,37,163,87,5,164,16,178,92,248,45]",
              "sol": "stringToBytes32(\"193,79,224,51,106,24,253,152,168,196,100,15,204,248,243,60,49,243,109,85,95,17,37,163,87,5,164,16,178,92,248,45\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T07:21:07.911ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[204,251,95,192,151,27,221,123,198,179,178,239,125,139,18,11,66,206,107,106,208,111,102,213,139,43,62,68,97,188,38,184]",
              "sol": "abi.encode(\"204,251,95,192,151,27,221,123,198,179,178,239,125,139,18,11,66,206,107,106,208,111,102,213,139,43,62,68,97,188,38,184\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T07:21:07.912ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T07:21:07.912ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[55,148,108,34,203,47,51,5,191,50,224,249,181,79,109,129,114,245,202,46,173,47,211,56,172,95,65,84,166,166,242,89]",
              "sol": "abi.encode(\"55,148,108,34,203,47,51,5,191,50,224,249,181,79,109,129,114,245,202,46,173,47,211,56,172,95,65,84,166,166,242,89\")"
            },
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T07:21:07.913ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[223,219,68,38,13,129,132,18,196,227,49,42,226,186,229,122,223,229,167,172,147,228,192,144,237,9,155,157,61,225,3,79]",
              "sol": "abi.encode(\"223,219,68,38,13,129,132,18,196,227,49,42,226,186,229,122,223,229,167,172,147,228,192,144,237,9,155,157,61,225,3,79\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T07:21:07.913ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[236,170,155,246,110,228,177,47,40,247,230,135,115,26,21,187,26,236,122,198,232,191,178,225,166,155,114,31,131,34,213,14]",
              "sol": "stringToBytes32(\"236,170,155,246,110,228,177,47,40,247,230,135,115,26,21,187,26,236,122,198,232,191,178,225,166,155,114,31,131,34,213,14\")"
            },
            {
              "js": "[233,9,18,51,3,197,241,118,113,162,221,58,57,61,226,106,187,69,66,41,198,72,129,21,46,151,42,20,102,191,164,146]",
              "sol": "abi.encode(\"233,9,18,51,3,197,241,118,113,162,221,58,57,61,226,106,187,69,66,41,198,72,129,21,46,151,42,20,102,191,164,146\")"
            },
            {
              "js": "255",
              "sol": "255"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T07:21:07.913ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[236,240,188,237,49,53,37,202,234,75,33,207,247,164,81,137,136,99,226,100,173,134,72,125,148,184,10,183,109,251,198,183]",
              "sol": "stringToBytes32(\"236,240,188,237,49,53,37,202,234,75,33,207,247,164,81,137,136,99,226,100,173,134,72,125,148,184,10,183,109,251,198,183\")"
            },
            {
              "js": "[121,237,129,249,107,72,195,198,7,230,119,102,98,3,78,246,83,6,230,134,182,46,68,30,209,144,208,176,221,244,57,185]",
              "sol": "abi.encode(\"121,237,129,249,107,72,195,198,7,230,119,102,98,3,78,246,83,6,230,134,182,46,68,30,209,144,208,176,221,244,57,185\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}