,{
  "2020-11-10T03:54:18.637ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[180,177,59,119,221,41,175,124,48,59,93,34,126,235,69,111,128,250,101,86,204,145,3,151,48,143,29,221,248,40,18,134]",
              "sol": "stringToBytes32(\"180,177,59,119,221,41,175,124,48,59,93,34,126,235,69,111,128,250,101,86,204,145,3,151,48,143,29,221,248,40,18,134\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T03:54:18.638ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[74,69,86,215,36,233,108,139,48,194,76,8,177,146,229,12,169,207,109,70,67,64,196,129,140,77,39,152,142,247,140,54]",
              "sol": "abi.encode(\"74,69,86,215,36,233,108,139,48,194,76,8,177,146,229,12,169,207,109,70,67,64,196,129,140,77,39,152,142,247,140,54\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T03:54:18.638ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "11",
              "sol": "11"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T03:54:18.639ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[29,144,189,145,154,162,21,150,77,236,175,224,174,121,129,160,251,58,36,5,41,92,175,149,38,223,164,148,243,68,128,203]",
              "sol": "abi.encode(\"29,144,189,145,154,162,21,150,77,236,175,224,174,121,129,160,251,58,36,5,41,92,175,149,38,223,164,148,243,68,128,203\")"
            },
            {
              "js": "26",
              "sol": "26"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T03:54:18.639ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[47,131,29,157,31,109,6,141,185,184,163,30,28,118,200,156,176,34,108,252,29,170,239,243,194,184,62,130,220,76,191,130]",
              "sol": "abi.encode(\"47,131,29,157,31,109,6,141,185,184,163,30,28,118,200,156,176,34,108,252,29,170,239,243,194,184,62,130,220,76,191,130\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T03:54:18.639ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[235,173,12,156,151,234,212,49,168,131,113,150,42,46,250,62,255,85,51,205,249,45,89,196,198,190,96,194,228,144,124,172]",
              "sol": "stringToBytes32(\"235,173,12,156,151,234,212,49,168,131,113,150,42,46,250,62,255,85,51,205,249,45,89,196,198,190,96,194,228,144,124,172\")"
            },
            {
              "js": "[173,158,90,169,60,235,167,229,255,39,195,31,173,24,212,83,214,59,127,123,165,81,205,156,162,71,140,171,183,201,87,207]",
              "sol": "abi.encode(\"173,158,90,169,60,235,167,229,255,39,195,31,173,24,212,83,214,59,127,123,165,81,205,156,162,71,140,171,183,201,87,207\")"
            },
            {
              "js": "10",
              "sol": "10"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T03:54:18.640ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[54,151,17,126,17,2,25,62,100,254,127,135,131,36,16,27,232,102,190,74,239,14,93,223,4,231,179,55,172,251,219,98]",
              "sol": "stringToBytes32(\"54,151,17,126,17,2,25,62,100,254,127,135,131,36,16,27,232,102,190,74,239,14,93,223,4,231,179,55,172,251,219,98\")"
            },
            {
              "js": "[166,173,204,183,232,206,42,219,56,53,166,67,189,75,186,70,216,177,127,24,24,3,223,239,233,22,110,142,161,217,35,254]",
              "sol": "abi.encode(\"166,173,204,183,232,206,42,219,56,53,166,67,189,75,186,70,216,177,127,24,24,3,223,239,233,22,110,142,161,217,35,254\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}