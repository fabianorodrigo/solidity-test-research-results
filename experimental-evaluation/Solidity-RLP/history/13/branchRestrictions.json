,{
  "2020-11-11T07:15:56.143ZProxyRLPReader.testtoRlpItem": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoRlpItem(bytes)",
          "parameters": [
            {
              "js": "[174,243,117,38,24,123,121,239,221,230,117,139,169,129,71,47,213,171,251,169,232,19,49,175,10,5,149,89,227,67,42,141]",
              "sol": "abi.encode(\"174,243,117,38,24,123,121,239,221,230,117,139,169,129,71,47,213,171,251,169,232,19,49,175,10,5,149,89,227,67,42,141\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.144ZProxyRLPReader.testrlpLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrlpLen(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 3,\"memPtr\": 31}",
              "sol": "RLPReader.RLPItem(3,31)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.144ZProxyRLPReader.testpayloadLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testpayloadLen(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 0,\"memPtr\": 3}",
              "sol": "RLPReader.RLPItem(0,3)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.144ZProxyRLPReader.testtoList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoList(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 32,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(32,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.145ZProxyRLPReader.testisList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "66-66",
          "restrictions": [
            "item.len == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testisList(RLPReader.RLPItem) WHEN item.len==0",
          "parameters": [
            {
              "js": "{\"len\": 0,\"memPtr\": 255}",
              "sol": "RLPReader.RLPItem(0,255)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "item.len != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testisList(RLPReader.RLPItem) WHEN item.len!=0",
          "parameters": [
            {
              "js": "{\"len\": 1,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(1,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.146ZProxyRLPReader.testtoRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoRlpBytes(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 3,\"memPtr\": 21}",
              "sol": "RLPReader.RLPItem(3,21)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.146ZProxyRLPReader.testtoBoolean": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoBoolean(RLPReader.RLPItem) WHEN item.len==1",
          "parameters": [
            {
              "js": "{\"len\": 1,\"memPtr\": 33}",
              "sol": "RLPReader.RLPItem(1,33)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoBoolean(RLPReader.RLPItem) when NOT comply with: item.len == 1",
            "parameters": [
              {
                "js": "{len : 2,memPtr : 33}",
                "sol": "RLPReader.RLPItem(2,33)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T07:15:56.146ZProxyRLPReader.testtoAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoAddress(RLPReader.RLPItem) WHEN item.len==21",
          "parameters": [
            {
              "js": "{\"len\": 21,\"memPtr\": 0}",
              "sol": "RLPReader.RLPItem(21,0)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoAddress(RLPReader.RLPItem) when NOT comply with: item.len == 21",
            "parameters": [
              {
                "js": "{len : 22,memPtr : 0}",
                "sol": "RLPReader.RLPItem(22,0)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T07:15:56.147ZProxyRLPReader.testtoUint": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoUint(RLPReader.RLPItem) WHEN item.len>0,item.len<=33",
          "parameters": [
            {
              "js": "{\"len\": 21,\"memPtr\": 256}",
              "sol": "RLPReader.RLPItem(21,256)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoUint(RLPReader.RLPItem) when NOT comply with: item.len > 0",
            "parameters": [
              {
                "js": "{len : 0,memPtr : 256}",
                "sol": "RLPReader.RLPItem(0,256)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail testtoUint(RLPReader.RLPItem) when NOT comply with: item.len <= 33",
            "parameters": [
              {
                "js": "{len : 34,memPtr : 256}",
                "sol": "RLPReader.RLPItem(34,256)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T07:15:56.148ZProxyRLPReader.testtoUintStrict": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoUintStrict(RLPReader.RLPItem) WHEN item.len==33",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 22}",
              "sol": "RLPReader.RLPItem(33,22)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoUintStrict(RLPReader.RLPItem) when NOT comply with: item.len == 33",
            "parameters": [
              {
                "js": "{len : 34,memPtr : 22}",
                "sol": "RLPReader.RLPItem(34,22)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T07:15:56.148ZProxyRLPReader.testtoBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoBytes(RLPReader.RLPItem) WHEN item.len>0",
          "parameters": [
            {
              "js": "{\"len\": 31,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(31,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoBytes(RLPReader.RLPItem) when NOT comply with: item.len > 0",
            "parameters": [
              {
                "js": "{len : 0,memPtr : 257}",
                "sol": "RLPReader.RLPItem(0,257)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T07:15:56.149ZHelper.isList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isList(bytes)",
          "parameters": [
            {
              "js": "[213,71,39,247,0,26,122,69,89,55,220,61,203,86,29,114,36,210,221,12,196,8,180,101,91,157,144,220,140,239,70,241]",
              "sol": "abi.encode(\"213,71,39,247,0,26,122,69,89,55,220,61,203,86,29,114,36,210,221,12,196,8,180,101,91,157,144,220,140,239,70,241\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.149ZHelper.itemLength": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute itemLength(bytes)",
          "parameters": [
            {
              "js": "[245,170,50,147,83,127,210,5,153,232,105,186,47,90,114,22,52,252,82,173,33,108,162,60,164,252,106,15,234,125,150,147]",
              "sol": "abi.encode(\"245,170,50,147,83,127,210,5,153,232,105,186,47,90,114,22,52,252,82,173,33,108,162,60,164,252,106,15,234,125,150,147\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.150ZHelper.rlpLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute rlpLen(bytes)",
          "parameters": [
            {
              "js": "[205,162,173,196,0,92,239,202,212,7,189,147,242,103,187,30,227,84,164,240,44,97,149,150,219,54,255,148,141,207,132,59]",
              "sol": "abi.encode(\"205,162,173,196,0,92,239,202,212,7,189,147,242,103,187,30,227,84,164,240,44,97,149,150,219,54,255,148,141,207,132,59\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.150ZHelper.payloadLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute payloadLen(bytes)",
          "parameters": [
            {
              "js": "[24,157,137,136,77,12,178,21,228,45,94,201,130,68,75,246,129,92,181,178,155,237,239,235,177,224,245,34,206,237,142,228]",
              "sol": "abi.encode(\"24,157,137,136,77,12,178,21,228,45,94,201,130,68,75,246,129,92,181,178,155,237,239,235,177,224,245,34,206,237,142,228\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.150ZHelper.numItems": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute numItems(bytes)",
          "parameters": [
            {
              "js": "[70,167,232,38,63,87,203,236,230,31,0,109,202,229,76,167,186,73,111,75,180,14,195,250,2,194,74,138,74,130,249,48]",
              "sol": "abi.encode(\"70,167,232,38,63,87,203,236,230,31,0,109,202,229,76,167,186,73,111,75,180,14,195,250,2,194,74,138,74,130,249,48\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.150ZHelper.toRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toRlpBytes(bytes)",
          "parameters": [
            {
              "js": "[199,60,250,107,79,66,42,94,71,169,199,252,82,254,76,129,183,182,161,27,82,123,168,207,9,223,200,129,21,219,34,152]",
              "sol": "abi.encode(\"199,60,250,107,79,66,42,94,71,169,199,252,82,254,76,129,183,182,161,27,82,123,168,207,9,223,200,129,21,219,34,152\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.151ZHelper.toBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toBytes(bytes)",
          "parameters": [
            {
              "js": "[61,119,206,148,108,189,55,200,37,81,3,91,117,237,166,161,245,128,16,129,99,141,69,137,129,142,56,142,225,200,215,196]",
              "sol": "abi.encode(\"61,119,206,148,108,189,55,200,37,81,3,91,117,237,166,161,245,128,16,129,99,141,69,137,129,142,56,142,225,200,215,196\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.151ZHelper.toUint": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toUint(bytes)",
          "parameters": [
            {
              "js": "[205,236,241,147,218,81,72,21,28,205,61,155,45,217,166,113,53,41,189,249,8,112,90,222,28,189,25,22,117,151,12,145]",
              "sol": "abi.encode(\"205,236,241,147,218,81,72,21,28,205,61,155,45,217,166,113,53,41,189,249,8,112,90,222,28,189,25,22,117,151,12,145\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.151ZHelper.toUintStrict": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toUintStrict(bytes)",
          "parameters": [
            {
              "js": "[49,134,90,149,110,190,178,150,107,116,249,25,161,153,202,2,168,103,22,137,130,122,189,19,215,130,236,252,149,25,96,190]",
              "sol": "abi.encode(\"49,134,90,149,110,190,178,150,107,116,249,25,161,153,202,2,168,103,22,137,130,122,189,19,215,130,236,252,149,25,96,190\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.151ZHelper.toAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toAddress(bytes)",
          "parameters": [
            {
              "js": "[253,27,126,155,26,237,243,176,92,56,48,112,150,176,183,196,178,153,37,120,59,11,202,113,213,202,62,49,243,174,178,95]",
              "sol": "abi.encode(\"253,27,126,155,26,237,243,176,92,56,48,112,150,176,183,196,178,153,37,120,59,11,202,113,213,202,62,49,243,174,178,95\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.152ZHelper.toBoolean": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toBoolean(bytes)",
          "parameters": [
            {
              "js": "[61,163,88,25,44,21,46,75,51,140,113,226,225,110,6,155,6,118,137,16,218,15,125,56,61,196,169,57,36,243,18,81]",
              "sol": "abi.encode(\"61,163,88,25,44,21,46,75,51,140,113,226,225,110,6,155,6,118,137,16,218,15,125,56,61,196,169,57,36,243,18,81\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.152ZHelper.bytesToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute bytesToString(bytes)",
          "parameters": [
            {
              "js": "[210,133,204,165,30,61,190,59,22,211,223,248,12,222,185,122,156,75,96,11,101,230,196,121,39,214,48,211,76,243,160,33]",
              "sol": "abi.encode(\"210,133,204,165,30,61,190,59,22,211,223,248,12,222,185,122,156,75,96,11,101,230,196,121,39,214,48,211,76,243,160,33\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.152ZHelper.customDestructure": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customDestructure(bytes)",
          "parameters": [
            {
              "js": "[71,238,148,145,104,147,213,229,142,176,127,222,15,218,84,3,181,127,189,110,133,112,113,134,54,205,36,61,250,105,181,148]",
              "sol": "abi.encode(\"71,238,148,145,104,147,213,229,142,176,127,222,15,218,84,3,181,127,189,110,133,112,113,134,54,205,36,61,250,105,181,148\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.153ZHelper.customNestedDestructure": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customNestedDestructure(bytes)",
          "parameters": [
            {
              "js": "[121,16,75,145,160,218,123,194,146,107,237,175,207,68,49,69,40,146,70,172,154,35,117,132,128,208,205,56,240,250,162,190]",
              "sol": "abi.encode(\"121,16,75,145,160,218,123,194,146,107,237,175,207,68,49,69,40,146,70,172,154,35,117,132,128,208,205,56,240,250,162,190\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:15:56.153ZHelper.customNestedToRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customNestedToRlpBytes(bytes)",
          "parameters": [
            {
              "js": "[69,172,35,23,108,199,176,187,142,10,8,109,240,112,142,50,97,87,77,192,101,81,148,206,239,174,220,185,95,155,57,170]",
              "sol": "abi.encode(\"69,172,35,23,108,199,176,187,142,10,8,109,240,112,142,50,97,87,77,192,101,81,148,206,239,174,220,185,95,155,57,170\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}