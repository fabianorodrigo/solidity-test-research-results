,{
  "2020-11-10T19:48:38.341ZProxyRLPReader.testtoRlpItem": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoRlpItem(bytes)",
          "parameters": [
            {
              "js": "[117,217,36,39,233,222,105,185,6,73,177,202,211,217,186,64,5,142,169,82,41,213,48,138,149,253,148,130,249,86,191,59]",
              "sol": "abi.encode(\"117,217,36,39,233,222,105,185,6,73,177,202,211,217,186,64,5,142,169,82,41,213,48,138,149,253,148,130,249,86,191,59\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.342ZProxyRLPReader.testrlpLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrlpLen(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 1,\"memPtr\": 2}",
              "sol": "RLPReader.RLPItem(1,2)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.342ZProxyRLPReader.testpayloadLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testpayloadLen(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 255,\"memPtr\": 34}",
              "sol": "RLPReader.RLPItem(255,34)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.342ZProxyRLPReader.testtoList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoList(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 20,\"memPtr\": 255}",
              "sol": "RLPReader.RLPItem(20,255)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.343ZProxyRLPReader.testisList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "66-66",
          "restrictions": [
            "item.len == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testisList(RLPReader.RLPItem) WHEN item.len==0",
          "parameters": [
            {
              "js": "{\"len\": 0,\"memPtr\": 20}",
              "sol": "RLPReader.RLPItem(0,20)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "item.len != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testisList(RLPReader.RLPItem) WHEN item.len!=0",
          "parameters": [
            {
              "js": "{\"len\": 34,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(34,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.343ZProxyRLPReader.testtoRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoRlpBytes(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 2,\"memPtr\": 22}",
              "sol": "RLPReader.RLPItem(2,22)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.344ZProxyRLPReader.testtoBoolean": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoBoolean(RLPReader.RLPItem) WHEN item.len==1",
          "parameters": [
            {
              "js": "{\"len\": 1,\"memPtr\": 32}",
              "sol": "RLPReader.RLPItem(1,32)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoBoolean(RLPReader.RLPItem) when NOT comply with: item.len == 1",
            "parameters": [
              {
                "js": "{len : 2,memPtr : 32}",
                "sol": "RLPReader.RLPItem(2,32)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:48:38.344ZProxyRLPReader.testtoAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoAddress(RLPReader.RLPItem) WHEN item.len==21",
          "parameters": [
            {
              "js": "{\"len\": 21,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(21,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoAddress(RLPReader.RLPItem) when NOT comply with: item.len == 21",
            "parameters": [
              {
                "js": "{len : 22,memPtr : 257}",
                "sol": "RLPReader.RLPItem(22,257)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:48:38.345ZProxyRLPReader.testtoUint": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoUint(RLPReader.RLPItem) WHEN item.len>0,item.len<=33",
          "parameters": [
            {
              "js": "{\"len\": 20,\"memPtr\": 34}",
              "sol": "RLPReader.RLPItem(20,34)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoUint(RLPReader.RLPItem) when NOT comply with: item.len > 0",
            "parameters": [
              {
                "js": "{len : 0,memPtr : 34}",
                "sol": "RLPReader.RLPItem(0,34)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail testtoUint(RLPReader.RLPItem) when NOT comply with: item.len <= 33",
            "parameters": [
              {
                "js": "{len : 34,memPtr : 34}",
                "sol": "RLPReader.RLPItem(34,34)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:48:38.345ZProxyRLPReader.testtoUintStrict": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoUintStrict(RLPReader.RLPItem) WHEN item.len==33",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 33}",
              "sol": "RLPReader.RLPItem(33,33)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoUintStrict(RLPReader.RLPItem) when NOT comply with: item.len == 33",
            "parameters": [
              {
                "js": "{len : 34,memPtr : 33}",
                "sol": "RLPReader.RLPItem(34,33)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:48:38.346ZProxyRLPReader.testtoBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoBytes(RLPReader.RLPItem) WHEN item.len>0",
          "parameters": [
            {
              "js": "{\"len\": 3,\"memPtr\": 3}",
              "sol": "RLPReader.RLPItem(3,3)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoBytes(RLPReader.RLPItem) when NOT comply with: item.len > 0",
            "parameters": [
              {
                "js": "{len : 0,memPtr : 3}",
                "sol": "RLPReader.RLPItem(0,3)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T19:48:38.347ZHelper.isList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isList(bytes)",
          "parameters": [
            {
              "js": "[121,139,131,119,41,162,125,17,186,179,242,133,19,213,136,166,8,188,244,85,253,6,186,126,64,48,5,141,31,144,219,237]",
              "sol": "abi.encode(\"121,139,131,119,41,162,125,17,186,179,242,133,19,213,136,166,8,188,244,85,253,6,186,126,64,48,5,141,31,144,219,237\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.347ZHelper.itemLength": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute itemLength(bytes)",
          "parameters": [
            {
              "js": "[55,229,3,238,100,196,91,172,100,55,0,200,41,196,108,60,147,182,106,97,131,163,116,233,238,35,253,190,47,51,251,173]",
              "sol": "abi.encode(\"55,229,3,238,100,196,91,172,100,55,0,200,41,196,108,60,147,182,106,97,131,163,116,233,238,35,253,190,47,51,251,173\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.347ZHelper.rlpLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute rlpLen(bytes)",
          "parameters": [
            {
              "js": "[237,118,131,50,59,101,123,189,42,246,99,202,52,218,97,233,14,158,250,178,153,84,54,25,63,113,138,244,72,144,67,119]",
              "sol": "abi.encode(\"237,118,131,50,59,101,123,189,42,246,99,202,52,218,97,233,14,158,250,178,153,84,54,25,63,113,138,244,72,144,67,119\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.348ZHelper.payloadLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute payloadLen(bytes)",
          "parameters": [
            {
              "js": "[88,89,59,92,35,15,69,162,255,106,124,12,237,120,176,218,80,237,55,198,218,149,30,70,133,127,22,125,245,51,119,144]",
              "sol": "abi.encode(\"88,89,59,92,35,15,69,162,255,106,124,12,237,120,176,218,80,237,55,198,218,149,30,70,133,127,22,125,245,51,119,144\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.348ZHelper.numItems": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute numItems(bytes)",
          "parameters": [
            {
              "js": "[83,42,36,196,41,8,21,18,240,98,198,144,102,75,85,89,28,164,192,16,113,254,141,15,108,162,235,233,171,212,100,55]",
              "sol": "abi.encode(\"83,42,36,196,41,8,21,18,240,98,198,144,102,75,85,89,28,164,192,16,113,254,141,15,108,162,235,233,171,212,100,55\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.348ZHelper.toRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toRlpBytes(bytes)",
          "parameters": [
            {
              "js": "[83,204,118,36,152,111,33,75,30,66,94,65,123,113,166,90,27,79,54,144,102,214,235,98,222,247,140,136,71,33,5,146]",
              "sol": "abi.encode(\"83,204,118,36,152,111,33,75,30,66,94,65,123,113,166,90,27,79,54,144,102,214,235,98,222,247,140,136,71,33,5,146\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.348ZHelper.toBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toBytes(bytes)",
          "parameters": [
            {
              "js": "[1,172,85,167,69,78,188,223,204,54,49,91,90,174,75,109,241,196,11,151,254,240,225,241,255,83,5,45,52,171,36,145]",
              "sol": "abi.encode(\"1,172,85,167,69,78,188,223,204,54,49,91,90,174,75,109,241,196,11,151,254,240,225,241,255,83,5,45,52,171,36,145\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.348ZHelper.toUint": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toUint(bytes)",
          "parameters": [
            {
              "js": "[220,212,243,230,134,63,164,124,154,233,216,98,42,111,38,145,159,91,112,18,153,17,226,167,54,108,11,130,108,213,98,236]",
              "sol": "abi.encode(\"220,212,243,230,134,63,164,124,154,233,216,98,42,111,38,145,159,91,112,18,153,17,226,167,54,108,11,130,108,213,98,236\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.349ZHelper.toUintStrict": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toUintStrict(bytes)",
          "parameters": [
            {
              "js": "[229,14,78,91,22,60,104,237,218,30,70,92,54,26,96,130,126,18,145,170,52,254,135,88,126,136,38,196,28,254,121,105]",
              "sol": "abi.encode(\"229,14,78,91,22,60,104,237,218,30,70,92,54,26,96,130,126,18,145,170,52,254,135,88,126,136,38,196,28,254,121,105\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.349ZHelper.toAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toAddress(bytes)",
          "parameters": [
            {
              "js": "[155,98,92,123,191,28,103,177,61,219,117,124,187,78,18,113,163,251,215,229,96,123,69,118,34,196,181,198,1,97,136,187]",
              "sol": "abi.encode(\"155,98,92,123,191,28,103,177,61,219,117,124,187,78,18,113,163,251,215,229,96,123,69,118,34,196,181,198,1,97,136,187\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.349ZHelper.toBoolean": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toBoolean(bytes)",
          "parameters": [
            {
              "js": "[121,211,115,36,128,105,137,208,81,102,163,87,63,233,147,62,128,43,166,134,222,150,9,174,36,171,229,203,104,203,248,165]",
              "sol": "abi.encode(\"121,211,115,36,128,105,137,208,81,102,163,87,63,233,147,62,128,43,166,134,222,150,9,174,36,171,229,203,104,203,248,165\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.349ZHelper.bytesToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute bytesToString(bytes)",
          "parameters": [
            {
              "js": "[119,176,147,231,236,73,54,208,254,54,146,251,81,240,195,219,68,255,11,99,82,132,170,143,154,18,70,155,46,3,75,148]",
              "sol": "abi.encode(\"119,176,147,231,236,73,54,208,254,54,146,251,81,240,195,219,68,255,11,99,82,132,170,143,154,18,70,155,46,3,75,148\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.350ZHelper.customDestructure": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customDestructure(bytes)",
          "parameters": [
            {
              "js": "[195,80,21,131,204,13,162,126,109,15,196,19,244,248,151,34,67,142,215,244,13,229,147,61,129,175,227,36,197,229,97,105]",
              "sol": "abi.encode(\"195,80,21,131,204,13,162,126,109,15,196,19,244,248,151,34,67,142,215,244,13,229,147,61,129,175,227,36,197,229,97,105\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.350ZHelper.customNestedDestructure": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customNestedDestructure(bytes)",
          "parameters": [
            {
              "js": "[164,44,26,249,236,216,5,103,159,4,154,175,198,202,165,208,120,84,4,103,247,117,186,189,145,11,244,24,94,190,243,17]",
              "sol": "abi.encode(\"164,44,26,249,236,216,5,103,159,4,154,175,198,202,165,208,120,84,4,103,247,117,186,189,145,11,244,24,94,190,243,17\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:48:38.350ZHelper.customNestedToRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customNestedToRlpBytes(bytes)",
          "parameters": [
            {
              "js": "[56,204,226,250,175,150,21,185,211,189,57,50,56,204,224,244,180,55,171,106,225,19,11,166,225,27,117,92,69,25,30,217]",
              "sol": "abi.encode(\"56,204,226,250,175,150,21,185,211,189,57,50,56,204,224,244,180,55,171,106,225,19,11,166,225,27,117,92,69,25,30,217\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}