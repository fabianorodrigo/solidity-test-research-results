,{
  "2020-11-11T17:43:11.402ZProxyRLPReader.testtoRlpItem": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoRlpItem(bytes)",
          "parameters": [
            {
              "js": "[77,169,189,96,220,21,101,130,200,221,135,202,52,128,208,186,7,211,103,169,199,147,83,202,97,4,59,71,21,35,3,34]",
              "sol": "abi.encode(\"77,169,189,96,220,21,101,130,200,221,135,202,52,128,208,186,7,211,103,169,199,147,83,202,97,4,59,71,21,35,3,34\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.404ZProxyRLPReader.testrlpLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrlpLen(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 256}",
              "sol": "RLPReader.RLPItem(33,256)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.404ZProxyRLPReader.testpayloadLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testpayloadLen(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 257,\"memPtr\": 31}",
              "sol": "RLPReader.RLPItem(257,31)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.405ZProxyRLPReader.testtoList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoList(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 22}",
              "sol": "RLPReader.RLPItem(33,22)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.405ZProxyRLPReader.testisList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "66-66",
          "restrictions": [
            "item.len == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testisList(RLPReader.RLPItem) WHEN item.len==0",
          "parameters": [
            {
              "js": "{\"len\": 0,\"memPtr\": 31}",
              "sol": "RLPReader.RLPItem(0,31)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "item.len != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testisList(RLPReader.RLPItem) WHEN item.len!=0",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(33,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.406ZProxyRLPReader.testtoRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoRlpBytes(RLPReader.RLPItem)",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 257}",
              "sol": "RLPReader.RLPItem(33,257)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.407ZProxyRLPReader.testtoBoolean": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoBoolean(RLPReader.RLPItem) WHEN item.len==1",
          "parameters": [
            {
              "js": "{\"len\": 1,\"memPtr\": 0}",
              "sol": "RLPReader.RLPItem(1,0)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoBoolean(RLPReader.RLPItem) when NOT comply with: item.len == 1",
            "parameters": [
              {
                "js": "{len : 2,memPtr : 0}",
                "sol": "RLPReader.RLPItem(2,0)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T17:43:11.408ZProxyRLPReader.testtoAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoAddress(RLPReader.RLPItem) WHEN item.len==21",
          "parameters": [
            {
              "js": "{\"len\": 21,\"memPtr\": 2}",
              "sol": "RLPReader.RLPItem(21,2)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoAddress(RLPReader.RLPItem) when NOT comply with: item.len == 21",
            "parameters": [
              {
                "js": "{len : 22,memPtr : 2}",
                "sol": "RLPReader.RLPItem(22,2)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T17:43:11.408ZProxyRLPReader.testtoUint": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoUint(RLPReader.RLPItem) WHEN item.len>0,item.len<=33",
          "parameters": [
            {
              "js": "{\"len\": 20,\"memPtr\": 256}",
              "sol": "RLPReader.RLPItem(20,256)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoUint(RLPReader.RLPItem) when NOT comply with: item.len > 0",
            "parameters": [
              {
                "js": "{len : 0,memPtr : 256}",
                "sol": "RLPReader.RLPItem(0,256)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail testtoUint(RLPReader.RLPItem) when NOT comply with: item.len <= 33",
            "parameters": [
              {
                "js": "{len : 34,memPtr : 256}",
                "sol": "RLPReader.RLPItem(34,256)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T17:43:11.410ZProxyRLPReader.testtoUintStrict": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoUintStrict(RLPReader.RLPItem) WHEN item.len==33",
          "parameters": [
            {
              "js": "{\"len\": 33,\"memPtr\": 32}",
              "sol": "RLPReader.RLPItem(33,32)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoUintStrict(RLPReader.RLPItem) when NOT comply with: item.len == 33",
            "parameters": [
              {
                "js": "{len : 34,memPtr : 32}",
                "sol": "RLPReader.RLPItem(34,32)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T17:43:11.411ZProxyRLPReader.testtoBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoBytes(RLPReader.RLPItem) WHEN item.len>0",
          "parameters": [
            {
              "js": "{\"len\": 22,\"memPtr\": 33}",
              "sol": "RLPReader.RLPItem(22,33)"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testtoBytes(RLPReader.RLPItem) when NOT comply with: item.len > 0",
            "parameters": [
              {
                "js": "{len : 0,memPtr : 33}",
                "sol": "RLPReader.RLPItem(0,33)"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T17:43:11.413ZHelper.isList": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isList(bytes)",
          "parameters": [
            {
              "js": "[88,240,229,195,208,16,84,156,121,163,134,153,79,154,196,51,241,202,172,110,26,170,91,175,165,54,50,193,62,161,12,222]",
              "sol": "abi.encode(\"88,240,229,195,208,16,84,156,121,163,134,153,79,154,196,51,241,202,172,110,26,170,91,175,165,54,50,193,62,161,12,222\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.413ZHelper.itemLength": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute itemLength(bytes)",
          "parameters": [
            {
              "js": "[207,83,251,200,165,151,232,187,203,120,215,126,98,193,155,42,125,95,118,242,34,150,161,231,89,30,234,132,15,80,143,189]",
              "sol": "abi.encode(\"207,83,251,200,165,151,232,187,203,120,215,126,98,193,155,42,125,95,118,242,34,150,161,231,89,30,234,132,15,80,143,189\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.414ZHelper.rlpLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute rlpLen(bytes)",
          "parameters": [
            {
              "js": "[197,33,150,239,141,246,175,76,56,7,146,46,186,253,52,71,52,204,36,90,220,255,3,170,174,212,84,54,240,7,152,43]",
              "sol": "abi.encode(\"197,33,150,239,141,246,175,76,56,7,146,46,186,253,52,71,52,204,36,90,220,255,3,170,174,212,84,54,240,7,152,43\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.414ZHelper.payloadLen": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute payloadLen(bytes)",
          "parameters": [
            {
              "js": "[35,128,254,147,93,33,22,188,89,62,206,93,156,238,189,23,98,21,142,117,52,60,42,136,201,89,7,219,150,232,114,84]",
              "sol": "abi.encode(\"35,128,254,147,93,33,22,188,89,62,206,93,156,238,189,23,98,21,142,117,52,60,42,136,201,89,7,219,150,232,114,84\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.415ZHelper.numItems": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute numItems(bytes)",
          "parameters": [
            {
              "js": "[45,248,1,98,239,163,239,197,54,66,227,235,197,255,203,105,98,50,143,4,225,115,204,213,143,31,229,187,70,136,41,219]",
              "sol": "abi.encode(\"45,248,1,98,239,163,239,197,54,66,227,235,197,255,203,105,98,50,143,4,225,115,204,213,143,31,229,187,70,136,41,219\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.415ZHelper.toRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toRlpBytes(bytes)",
          "parameters": [
            {
              "js": "[157,253,125,11,51,37,148,62,226,5,0,68,65,31,85,58,242,200,72,253,126,39,158,197,99,56,210,59,196,165,228,223]",
              "sol": "abi.encode(\"157,253,125,11,51,37,148,62,226,5,0,68,65,31,85,58,242,200,72,253,126,39,158,197,99,56,210,59,196,165,228,223\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.416ZHelper.toBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toBytes(bytes)",
          "parameters": [
            {
              "js": "[248,20,226,116,48,178,131,124,153,98,49,77,196,237,234,119,85,213,28,42,93,183,166,181,208,167,213,210,101,10,39,97]",
              "sol": "abi.encode(\"248,20,226,116,48,178,131,124,153,98,49,77,196,237,234,119,85,213,28,42,93,183,166,181,208,167,213,210,101,10,39,97\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.416ZHelper.toUint": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toUint(bytes)",
          "parameters": [
            {
              "js": "[39,72,15,47,121,7,175,121,114,198,88,157,29,237,163,172,7,191,118,230,133,45,105,94,226,213,199,59,11,82,13,115]",
              "sol": "abi.encode(\"39,72,15,47,121,7,175,121,114,198,88,157,29,237,163,172,7,191,118,230,133,45,105,94,226,213,199,59,11,82,13,115\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.416ZHelper.toUintStrict": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toUintStrict(bytes)",
          "parameters": [
            {
              "js": "[75,196,64,102,136,212,242,37,107,14,191,162,241,47,0,66,33,9,118,247,54,144,185,104,127,53,194,240,17,37,99,68]",
              "sol": "abi.encode(\"75,196,64,102,136,212,242,37,107,14,191,162,241,47,0,66,33,9,118,247,54,144,185,104,127,53,194,240,17,37,99,68\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.416ZHelper.toAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toAddress(bytes)",
          "parameters": [
            {
              "js": "[166,139,18,180,160,2,132,224,76,135,147,222,180,153,86,251,46,40,60,26,216,150,72,141,54,112,206,20,226,226,166,183]",
              "sol": "abi.encode(\"166,139,18,180,160,2,132,224,76,135,147,222,180,153,86,251,46,40,60,26,216,150,72,141,54,112,206,20,226,226,166,183\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.417ZHelper.toBoolean": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute toBoolean(bytes)",
          "parameters": [
            {
              "js": "[81,190,127,155,239,206,127,171,0,195,241,36,67,98,174,161,163,106,177,63,237,211,109,191,8,149,211,73,127,78,167,85]",
              "sol": "abi.encode(\"81,190,127,155,239,206,127,171,0,195,241,36,67,98,174,161,163,106,177,63,237,211,109,191,8,149,211,73,127,78,167,85\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.417ZHelper.bytesToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute bytesToString(bytes)",
          "parameters": [
            {
              "js": "[99,228,14,31,66,135,134,212,203,123,52,192,113,206,37,203,93,129,196,175,95,87,212,63,69,126,109,213,84,77,120,190]",
              "sol": "abi.encode(\"99,228,14,31,66,135,134,212,203,123,52,192,113,206,37,203,93,129,196,175,95,87,212,63,69,126,109,213,84,77,120,190\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.417ZHelper.customDestructure": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customDestructure(bytes)",
          "parameters": [
            {
              "js": "[199,5,123,3,100,93,236,24,222,115,255,104,194,172,221,231,128,16,221,115,101,31,218,24,117,110,136,209,15,249,158,8]",
              "sol": "abi.encode(\"199,5,123,3,100,93,236,24,222,115,255,104,194,172,221,231,128,16,221,115,101,31,218,24,117,110,136,209,15,249,158,8\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.418ZHelper.customNestedDestructure": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customNestedDestructure(bytes)",
          "parameters": [
            {
              "js": "[38,190,45,13,6,185,225,205,55,131,135,48,63,56,105,255,246,66,87,249,129,135,54,181,191,215,66,165,190,82,210,110]",
              "sol": "abi.encode(\"38,190,45,13,6,185,225,205,55,131,135,48,63,56,105,255,246,66,87,249,129,135,54,181,191,215,66,165,190,82,210,110\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T17:43:11.418ZHelper.customNestedToRlpBytes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute customNestedToRlpBytes(bytes)",
          "parameters": [
            {
              "js": "[189,192,173,189,66,67,171,85,155,44,246,26,225,248,93,191,69,222,249,79,42,164,240,34,33,187,27,90,213,24,229,156]",
              "sol": "abi.encode(\"189,192,173,189,66,67,171,85,155,44,246,26,225,248,93,191,69,222,249,79,42,164,240,34,33,187,27,90,213,24,229,156\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}