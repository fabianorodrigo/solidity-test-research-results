,{
  "2020-11-10T06:27:08.822ZAiakos.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint) WHEN _requiredNumberOfMaintainers>0",
          "parameters": [
            {
              "js": "2014223714",
              "sol": "2014223714"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint) when NOT comply with: _requiredNumberOfMaintainers > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T06:27:14.689ZProxyReleases.testinit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testinit(Releases.Release,string,bytes32)",
          "parameters": [
            {
              "js": "{\"version\": \"initialized\",\"sha256Hash\": [209,133,53,99,43,209,230,92,97,189,245,83,143,148,215,78,252,160,47,103,81,192,135,100,235,67,21,245,54,34,236,255],\"approvalCounter\": 2014223716,\"initialized\": true,\"approved\": true}",
              "sol": "Releases.Release(\"initialized\",stringToBytes32(\"209,133,53,99,43,209,230,92,97,189,245,83,143,148,215,78,252,160,47,103,81,192,135,100,235,67,21,245,54,34,236,255\"),2014223716,true,true)"
            },
            {
              "js": "\"y8ctzq\"",
              "sol": "\"y8ctzq\""
            },
            {
              "js": "[69,150,173,134,126,187,160,243,148,5,169,199,142,29,153,194,98,124,118,165,4,225,243,68,63,203,232,92,90,254,185,85]",
              "sol": "stringToBytes32(\"69,150,173,134,126,187,160,243,148,5,169,199,142,29,153,194,98,124,118,165,4,225,243,68,63,203,232,92,90,254,185,85\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T06:27:14.690ZProxyReleases.testcheck": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcheck(Releases.Release,bytes32) WHEN release.sha256Hash==sha256Hash",
          "parameters": [
            {
              "js": "{\"version\": \"\\x19Ethereum Signed Message:\\n32\",\"sha256Hash\": [62,166,110,65,114,37,236,242,2,0,191,30,181,191,127,204,1,151,230,171,154,9,233,236,208,37,110,15,130,126,91,188],\"approvalCounter\": 18,\"initialized\": true,\"approved\": true}",
              "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\\n32\",stringToBytes32(\"62,166,110,65,114,37,236,242,2,0,191,30,181,191,127,204,1,151,230,171,154,9,233,236,208,37,110,15,130,126,91,188\"),18,true,true)"
            },
            {
              "js": "[62,166,110,65,114,37,236,242,2,0,191,30,181,191,127,204,1,151,230,171,154,9,233,236,208,37,110,15,130,126,91,188]",
              "sol": "stringToBytes32(\"62,166,110,65,114,37,236,242,2,0,191,30,181,191,127,204,1,151,230,171,154,9,233,236,208,37,110,15,130,126,91,188\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testcheck(Releases.Release,bytes32) when NOT comply with: release.sha256Hash == sha256Hash",
            "parameters": [
              {
                "js": "{version : \"\\x19Ethereum Signed Message:\n32\",sha256Hash : [195,116,206,152,61,77,120,189,122,73,39,202,247,94,219,221,22,236,237,255,47,191,104,56,66,154,43,83,62,179,45,153],approvalCounter : 18,initialized : true,approved : true}",
                "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\n32\",stringToBytes32(\"195,116,206,152,61,77,120,189,122,73,39,202,247,94,219,221,22,236,237,255,47,191,104,56,66,154,43,83,62,179,45,153\"),18,true,true)"
              },
              {
                "js": "[62,166,110,65,114,37,236,242,2,0,191,30,181,191,127,204,1,151,230,171,154,9,233,236,208,37,110,15,130,126,91,188]",
                "sol": "stringToBytes32(\"62,166,110,65,114,37,236,242,2,0,191,30,181,191,127,204,1,151,230,171,154,9,233,236,208,37,110,15,130,126,91,188\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T06:27:14.692ZProxyReleases.testaddApproval": {
    "branches": {
      "0": {
        "branch": {
          "loc": "64-68",
          "restrictions": [
            "release.approvalCounter == requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter==requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"y8ctzq\",\"sha256Hash\": [237,92,200,150,157,237,34,185,166,108,242,97,203,208,209,197,44,199,25,229,193,53,1,221,243,70,86,69,79,40,27,107],\"approvalCounter\": 1336,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"y8ctzq\",stringToBytes32(\"237,92,200,150,157,237,34,185,166,108,242,97,203,208,209,197,44,199,25,229,193,53,1,221,243,70,86,69,79,40,27,107\"),1336,true,false)"
            },
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1336",
              "sol": "1336"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"y8ctzq\",sha256Hash : [237,92,200,150,157,237,34,185,166,108,242,97,203,208,209,197,44,199,25,229,193,53,1,221,243,70,86,69,79,40,27,107],approvalCounter : 1336,initialized : true,approved : \"true\"}",
                "sol": "Releases.Release(\"y8ctzq\",stringToBytes32(\"237,92,200,150,157,237,34,185,166,108,242,97,203,208,209,197,44,199,25,229,193,53,1,221,243,70,86,69,79,40,27,107\"),1336,true,true)"
              },
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1336",
                "sol": "1336"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "release.approvalCounter != requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter!=requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"hh8oql\",\"sha256Hash\": [147,225,252,220,18,81,175,255,109,63,82,245,214,166,73,154,127,129,37,86,246,110,15,112,250,229,223,90,23,155,152,42],\"approvalCounter\": 2,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"hh8oql\",stringToBytes32(\"147,225,252,220,18,81,175,255,109,63,82,245,214,166,73,154,127,129,37,86,246,110,15,112,250,229,223,90,23,155,152,42\"),2,true,false)"
            },
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "6",
              "sol": "6"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"hh8oql\",sha256Hash : [147,225,252,220,18,81,175,255,109,63,82,245,214,166,73,154,127,129,37,86,246,110,15,112,250,229,223,90,23,155,152,42],approvalCounter : 2,initialized : true,approved : \"true\"}",
                "sol": "Releases.Release(\"hh8oql\",stringToBytes32(\"147,225,252,220,18,81,175,255,109,63,82,245,214,166,73,154,127,129,37,86,246,110,15,112,250,229,223,90,23,155,152,42\"),2,true,true)"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "6",
                "sol": "6"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T06:27:14.694ZAiakos.addMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute addMaintainer(address) WHEN msg.sender==_owner,_maintainerAddress!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: _maintainerAddress != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T06:27:14.695ZAiakos.deployRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "75-81",
          "restrictions": [
            "MemberAccess.Identifier != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier!=true",
          "parameters": [
            {
              "js": "\"superuser\"",
              "sol": "\"superuser\""
            },
            {
              "js": "[128,65,43,148,157,192,78,29,136,85,210,106,151,154,103,205,154,67,223,192,233,229,216,209,174,87,151,178,93,244,151,69]",
              "sol": "stringToBytes32(\"128,65,43,148,157,192,78,29,136,85,210,106,151,154,103,205,154,67,223,192,233,229,216,209,174,87,151,178,93,244,151,69\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "79-81",
          "restrictions": [
            "MemberAccess.Identifier == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"whitelist\"",
              "sol": "\"whitelist\""
            },
            {
              "js": "[188,125,72,241,62,54,168,55,23,1,214,31,152,189,32,40,105,77,206,5,240,255,110,138,102,194,245,135,205,138,231,114]",
              "sol": "stringToBytes32(\"188,125,72,241,62,54,168,55,23,1,214,31,152,189,32,40,105,77,206,5,240,255,110,138,102,194,245,135,205,138,231,114\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "84-87",
          "restrictions": [
            "approvalGranted == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted==true",
          "parameters": [
            {
              "js": "\"RevertWithReason\"",
              "sol": "\"RevertWithReason\""
            },
            {
              "js": "[98,50,82,99,9,193,222,210,134,177,203,51,27,127,148,224,219,228,88,1,173,34,159,223,91,92,213,171,18,53,165,115]",
              "sol": "stringToBytes32(\"98,50,82,99,9,193,222,210,134,177,203,51,27,127,148,224,219,228,88,1,173,34,159,223,91,92,213,171,18,53,165,115\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "3": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted!=true",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "[229,209,41,6,240,244,212,105,13,194,233,50,165,101,247,77,200,171,123,99,164,127,120,227,128,204,19,168,20,127,15,185]",
              "sol": "stringToBytes32(\"229,209,41,6,240,244,212,105,13,194,233,50,165,101,247,77,200,171,123,99,164,127,120,227,128,204,19,168,20,127,15,185\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "4": {
        "branch": {
          "loc": "88-91",
          "restrictions": [
            "releaseApproved == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved==true",
          "parameters": [
            {
              "js": "\"initialized\"",
              "sol": "\"initialized\""
            },
            {
              "js": "[251,223,115,72,71,206,47,27,55,36,250,95,222,60,237,81,172,120,64,219,6,243,108,144,104,147,83,13,229,92,4,138]",
              "sol": "stringToBytes32(\"251,223,115,72,71,206,47,27,55,36,250,95,222,60,237,81,172,120,64,219,6,243,108,144,104,147,83,13,229,92,4,138\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "5": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "releaseApproved != true",
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved!=true,approvalGranted!=true",
          "parameters": [
            {
              "js": "\"minter\"",
              "sol": "\"minter\""
            },
            {
              "js": "[2,227,156,248,195,236,229,167,25,177,193,228,106,26,19,218,148,225,96,84,67,231,102,52,68,145,149,146,105,43,12,90]",
              "sol": "stringToBytes32(\"2,227,156,248,195,236,229,167,25,177,193,228,106,26,19,218,148,225,96,84,67,231,102,52,68,145,149,146,105,43,12,90\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T06:27:14.696ZAiakos.checkRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute checkRelease(string,bytes32) WHEN _sha256Hash!=0x0,MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"ERC1820_ACCEPT_MAGIC\"",
              "sol": "\"ERC1820_ACCEPT_MAGIC\""
            },
            {
              "js": "[217,12,243,244,168,13,19,192,119,99,130,98,117,208,236,4,162,13,28,195,239,12,62,236,144,203,15,41,193,42,43,199]",
              "sol": "stringToBytes32(\"217,12,243,244,168,13,19,192,119,99,130,98,117,208,236,4,162,13,28,195,239,12,62,236,144,203,15,41,193,42,43,199\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail checkRelease(string,bytes32) when NOT comply with: _sha256Hash != 0x0",
            "parameters": [
              {
                "js": "\"ERC1820_ACCEPT_MAGIC\"",
                "sol": "\"ERC1820_ACCEPT_MAGIC\""
              },
              {
                "js": "\"0x0\"",
                "sol": "0x0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T06:27:14.697ZAiakos.getReleaseInfo": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getReleaseInfo(string)",
          "parameters": [
            {
              "js": "\"bouncer\"",
              "sol": "\"bouncer\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T06:27:14.697ZAiakos.amIMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute amIMaintainer()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T06:27:14.698ZAiakos.isMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isMaintainer(address)",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T06:27:14.698ZAiakos.getRequiredNumberOfMaintainers": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getRequiredNumberOfMaintainers()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T06:27:14.698ZAiakos.transferOwnership": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute transferOwnership(address) WHEN _newOwner!=0x0000000000000000000000000000000000000000,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: _newOwner != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
}