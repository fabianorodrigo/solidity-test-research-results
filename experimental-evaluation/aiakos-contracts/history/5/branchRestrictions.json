,{
  "2020-11-10T13:10:41.150ZAiakos.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint) WHEN _requiredNumberOfMaintainers>0",
          "parameters": [
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint) when NOT comply with: _requiredNumberOfMaintainers > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T13:10:46.990ZProxyReleases.testinit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testinit(Releases.Release,string,bytes32)",
          "parameters": [
            {
              "js": "{\"version\": \"\\x19Ethereum Signed Message:\\n32\",\"sha256Hash\": [29,71,121,102,202,225,104,168,181,47,88,245,164,215,227,42,172,69,196,36,209,49,194,26,22,164,125,19,42,129,212,142],\"approvalCounter\": 17,\"initialized\": false,\"approved\": true}",
              "sol": "Releases.Release(\"\\x19Ethereum Signed Message:\\n32\",stringToBytes32(\"29,71,121,102,202,225,104,168,181,47,88,245,164,215,227,42,172,69,196,36,209,49,194,26,22,164,125,19,42,129,212,142\"),17,false,true)"
            },
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "[161,121,48,60,129,211,48,161,98,108,219,114,185,81,29,26,208,90,98,3,99,185,13,216,107,12,16,139,107,2,224,12]",
              "sol": "stringToBytes32(\"161,121,48,60,129,211,48,161,98,108,219,114,185,81,29,26,208,90,98,3,99,185,13,216,107,12,16,139,107,2,224,12\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:10:46.991ZProxyReleases.testcheck": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcheck(Releases.Release,bytes32) WHEN release.sha256Hash==sha256Hash",
          "parameters": [
            {
              "js": "{\"version\": \"IsLibrary\",\"sha256Hash\": [214,56,123,177,36,220,163,42,202,168,80,224,3,76,149,123,170,53,153,196,99,15,250,232,232,115,138,87,55,241,231,144],\"approvalCounter\": 255,\"initialized\": true,\"approved\": false}",
              "sol": "Releases.Release(\"IsLibrary\",stringToBytes32(\"214,56,123,177,36,220,163,42,202,168,80,224,3,76,149,123,170,53,153,196,99,15,250,232,232,115,138,87,55,241,231,144\"),255,true,false)"
            },
            {
              "js": "[214,56,123,177,36,220,163,42,202,168,80,224,3,76,149,123,170,53,153,196,99,15,250,232,232,115,138,87,55,241,231,144]",
              "sol": "stringToBytes32(\"214,56,123,177,36,220,163,42,202,168,80,224,3,76,149,123,170,53,153,196,99,15,250,232,232,115,138,87,55,241,231,144\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testcheck(Releases.Release,bytes32) when NOT comply with: release.sha256Hash == sha256Hash",
            "parameters": [
              {
                "js": "{version : \"IsLibrary\",sha256Hash : [83,197,94,185,228,118,63,39,21,43,57,169,128,160,37,245,80,29,155,45,38,239,56,172,179,41,33,241,225,25,222,11],approvalCounter : 255,initialized : true,approved : false}",
                "sol": "Releases.Release(\"IsLibrary\",stringToBytes32(\"83,197,94,185,228,118,63,39,21,43,57,169,128,160,37,245,80,29,155,45,38,239,56,172,179,41,33,241,225,25,222,11\"),255,true,false)"
              },
              {
                "js": "[214,56,123,177,36,220,163,42,202,168,80,224,3,76,149,123,170,53,153,196,99,15,250,232,232,115,138,87,55,241,231,144]",
                "sol": "stringToBytes32(\"214,56,123,177,36,220,163,42,202,168,80,224,3,76,149,123,170,53,153,196,99,15,250,232,232,115,138,87,55,241,231,144\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T13:10:46.993ZProxyReleases.testaddApproval": {
    "branches": {
      "0": {
        "branch": {
          "loc": "64-68",
          "restrictions": [
            "release.approvalCounter == requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter==requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"2rs6p4\",\"sha256Hash\": [175,244,6,26,219,96,226,180,122,68,52,206,209,173,185,14,94,117,166,241,76,7,50,203,54,120,178,1,107,167,29,244],\"approvalCounter\": 3,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"2rs6p4\",stringToBytes32(\"175,244,6,26,219,96,226,180,122,68,52,206,209,173,185,14,94,117,166,241,76,7,50,203,54,120,178,1,107,167,29,244\"),3,false,false)"
            },
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"2rs6p4\",sha256Hash : [175,244,6,26,219,96,226,180,122,68,52,206,209,173,185,14,94,117,166,241,76,7,50,203,54,120,178,1,107,167,29,244],approvalCounter : 3,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"2rs6p4\",stringToBytes32(\"175,244,6,26,219,96,226,180,122,68,52,206,209,173,185,14,94,117,166,241,76,7,50,203,54,120,178,1,107,167,29,244\"),3,false,true)"
              },
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "3",
                "sol": "3"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "release.approvalCounter != requiredNumberOfMaintainers"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testaddApproval(Releases.Release,address,uint) WHEN release.approvalCounter!=requiredNumberOfMaintainers,release.approved!=true",
          "parameters": [
            {
              "js": "{\"version\": \"superuser\",\"sha256Hash\": [200,68,241,21,65,222,150,208,46,31,227,132,234,62,193,15,173,222,138,55,185,31,177,145,245,85,141,184,13,220,24,234],\"approvalCounter\": 1337,\"initialized\": false,\"approved\": false}",
              "sol": "Releases.Release(\"superuser\",stringToBytes32(\"200,68,241,21,65,222,150,208,46,31,227,132,234,62,193,15,173,222,138,55,185,31,177,145,245,85,141,184,13,220,24,234\"),1337,false,false)"
            },
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223715",
              "sol": "2014223715"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testaddApproval(Releases.Release,address,uint) when NOT comply with: release.approved != true",
            "parameters": [
              {
                "js": "{version : \"superuser\",sha256Hash : [200,68,241,21,65,222,150,208,46,31,227,132,234,62,193,15,173,222,138,55,185,31,177,145,245,85,141,184,13,220,24,234],approvalCounter : 1337,initialized : false,approved : \"true\"}",
                "sol": "Releases.Release(\"superuser\",stringToBytes32(\"200,68,241,21,65,222,150,208,46,31,227,132,234,62,193,15,173,222,138,55,185,31,177,145,245,85,141,184,13,220,24,234\"),1337,false,true)"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T13:10:46.997ZAiakos.addMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute addMaintainer(address) WHEN msg.sender==_owner,_maintainerAddress!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail addMaintainer(address) when NOT comply with: _maintainerAddress != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T13:10:46.998ZAiakos.deployRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "75-81",
          "restrictions": [
            "MemberAccess.Identifier != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier!=true",
          "parameters": [
            {
              "js": "\"initialized\"",
              "sol": "\"initialized\""
            },
            {
              "js": "[85,249,83,255,54,138,127,27,251,158,230,254,41,48,0,101,202,237,235,253,183,197,90,187,45,135,184,246,94,167,197,60]",
              "sol": "stringToBytes32(\"85,249,83,255,54,138,127,27,251,158,230,254,41,48,0,101,202,237,235,253,183,197,90,187,45,135,184,246,94,167,197,60\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "79-81",
          "restrictions": [
            "MemberAccess.Identifier == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "[199,154,248,69,183,38,250,235,237,171,171,107,199,79,30,220,24,23,215,247,92,171,69,214,66,218,31,237,83,71,47,246]",
              "sol": "stringToBytes32(\"199,154,248,69,183,38,250,235,237,171,171,107,199,79,30,220,24,23,215,247,92,171,69,214,66,218,31,237,83,71,47,246\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "84-87",
          "restrictions": [
            "approvalGranted == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted==true",
          "parameters": [
            {
              "js": "\"kkilmd\"",
              "sol": "\"kkilmd\""
            },
            {
              "js": "[93,113,201,159,102,164,48,33,143,43,72,228,201,11,245,213,68,37,200,92,10,204,57,184,213,81,141,159,229,209,69,189]",
              "sol": "stringToBytes32(\"93,113,201,159,102,164,48,33,143,43,72,228,201,11,245,213,68,37,200,92,10,204,57,184,213,81,141,159,229,209,69,189\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "3": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN approvalGranted!=true",
          "parameters": [
            {
              "js": "\"kkilmd\"",
              "sol": "\"kkilmd\""
            },
            {
              "js": "[89,127,160,171,235,33,62,134,10,207,81,45,65,163,182,221,220,73,70,144,58,150,55,251,157,183,74,116,36,16,209,79]",
              "sol": "stringToBytes32(\"89,127,160,171,235,33,62,134,10,207,81,45,65,163,182,221,220,73,70,144,58,150,55,251,157,183,74,116,36,16,209,79\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "4": {
        "branch": {
          "loc": "88-91",
          "restrictions": [
            "releaseApproved == true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved==true",
          "parameters": [
            {
              "js": "\"PayableExample\"",
              "sol": "\"PayableExample\""
            },
            {
              "js": "[38,86,163,141,86,99,205,151,29,177,28,174,113,27,215,85,232,13,37,23,185,106,92,254,107,208,191,76,52,88,255,240]",
              "sol": "stringToBytes32(\"38,86,163,141,86,99,205,151,29,177,28,174,113,27,215,85,232,13,37,23,185,106,92,254,107,208,191,76,52,88,255,240\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "5": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "releaseApproved != true",
            "approvalGranted != true"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute deployRelease(string,bytes32) WHEN releaseApproved!=true,approvalGranted!=true",
          "parameters": [
            {
              "js": "\"bouncer\"",
              "sol": "\"bouncer\""
            },
            {
              "js": "[75,31,203,39,90,240,30,32,248,239,58,75,89,225,40,252,100,109,93,148,205,248,109,51,137,191,175,62,95,191,108,67]",
              "sol": "stringToBytes32(\"75,31,203,39,90,240,30,32,248,239,58,75,89,225,40,252,100,109,93,148,205,248,109,51,137,191,175,62,95,191,108,67\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:10:47.000ZAiakos.checkRelease": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute checkRelease(string,bytes32) WHEN _sha256Hash!=0x0,MemberAccess.Identifier==true",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "[242,83,97,30,106,172,67,136,210,134,235,38,254,103,167,195,54,180,154,214,135,97,19,102,242,170,107,162,251,219,184,12]",
              "sol": "stringToBytes32(\"242,83,97,30,106,172,67,136,210,134,235,38,254,103,167,195,54,180,154,214,135,97,19,102,242,170,107,162,251,219,184,12\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail checkRelease(string,bytes32) when NOT comply with: _sha256Hash != 0x0",
            "parameters": [
              {
                "js": "\"Example\"",
                "sol": "\"Example\""
              },
              {
                "js": "\"0x0\"",
                "sol": "0x0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T13:10:47.001ZAiakos.getReleaseInfo": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getReleaseInfo(string)",
          "parameters": [
            {
              "js": "\"12upxi\"",
              "sol": "\"12upxi\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:10:47.002ZAiakos.amIMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute amIMaintainer()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:10:47.002ZAiakos.isMaintainer": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute isMaintainer(address)",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:10:47.002ZAiakos.getRequiredNumberOfMaintainers": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getRequiredNumberOfMaintainers()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:10:47.003ZAiakos.transferOwnership": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute transferOwnership(address) WHEN _newOwner!=0x0000000000000000000000000000000000000000,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: _newOwner != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail transferOwnership(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
}