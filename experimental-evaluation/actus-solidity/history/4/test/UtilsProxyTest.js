const truffleAssert = require('truffle-assertions');
const BusinessDayConvention = artifacts.require("BusinessDayConvention");
const ContractDefaultConvention = artifacts.require("ContractDefaultConvention");
const ContractRoleConvention = artifacts.require("ContractRoleConvention");
const DayCountConvention = artifacts.require("DayCountConvention");
const EndOfMonthConvention = artifacts.require("EndOfMonthConvention");
const Core = artifacts.require("Core");
const FloatMath = artifacts.require("FloatMath");
const Schedule = artifacts.require("Schedule");
const Utils = artifacts.require("Utils");
const PAMEngine = artifacts.require("PAMEngine");
const BokkyPooBahsDateTimeLibrary = artifacts.require("BokkyPooBahsDateTimeLibrary");
const SignedSafeMath = artifacts.require("openzeppelin-solidity/contracts/drafts/SignedSafeMath.sol");
const SafeMath = artifacts.require("openzeppelin-solidity/contracts/math/SafeMath.sol");
const ProxyBokkyPooBahsDateTimeLibrary = artifacts.require("ProxyBokkyPooBahsDateTimeLibrary");
const ProxyFloatMath = artifacts.require("ProxyFloatMath");
const ProxyContractRoleConvention = artifacts.require("ProxyContractRoleConvention");
const ProxyDayCountConvention = artifacts.require("ProxyDayCountConvention");
const ProxyEndOfMonthConvention = artifacts.require("ProxyEndOfMonthConvention");
const ProxyContractDefaultConvention = artifacts.require("ProxyContractDefaultConvention");
const ProxyBusinessDayConvention = artifacts.require("ProxyBusinessDayConvention");
const ProxySchedule = artifacts.require("ProxySchedule");
const ProxyUtils = artifacts.require("ProxyUtils");

contract("contractProxyUtils",(accounts)=>{
    let contractProxyUtils = null;
  let trace = false;
  let contractSafeMath = null;
  let contractSignedSafeMath = null;
  let contractFloatMath = null;
  let contractBokkyPooBahsDateTimeLibrary = null;
  let contractEndOfMonthConvention = null;
  let contractCore = null;
  let contractContractDefaultConvention = null;
  let contractSchedule = null;
  let contractUtils = null;
  let contractPAMEngine = null;
  let contractDayCountConvention = null;
  let contractContractRoleConvention = null;
  let contractBusinessDayConvention = null;
  beforeEach(async () => {
    contractSafeMath = await SafeMath.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: SafeMath.new({from: accounts[0]}');
    contractSignedSafeMath = await SignedSafeMath.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: SignedSafeMath.new({from: accounts[0]}');
    contractFloatMath = await FloatMath.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: FloatMath.new({from: accounts[0]}');
    contractBokkyPooBahsDateTimeLibrary = await BokkyPooBahsDateTimeLibrary.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: BokkyPooBahsDateTimeLibrary.new({from: accounts[0]}');
    EndOfMonthConvention.link("BokkyPooBahsDateTimeLibrary",contractBokkyPooBahsDateTimeLibrary.address);
    contractEndOfMonthConvention = await EndOfMonthConvention.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: EndOfMonthConvention.new({from: accounts[0]}');
    contractCore = await Core.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: Core.new({from: accounts[0]}');
    contractContractDefaultConvention = await ContractDefaultConvention.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: ContractDefaultConvention.new({from: accounts[0]}');
    Schedule.link("BokkyPooBahsDateTimeLibrary",contractBokkyPooBahsDateTimeLibrary.address);
    contractSchedule = await Schedule.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: Schedule.new({from: accounts[0]}');
    Utils.link("BokkyPooBahsDateTimeLibrary",contractBokkyPooBahsDateTimeLibrary.address);
    contractUtils = await Utils.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: Utils.new({from: accounts[0]}');
    PAMEngine.link("SafeMath",contractSafeMath.address);
     PAMEngine.link("SignedSafeMath",contractSignedSafeMath.address);
     PAMEngine.link("FloatMath",contractFloatMath.address);
    contractPAMEngine = await PAMEngine.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: PAMEngine.new({from: accounts[0]}');
    DayCountConvention.link("SafeMath",contractSafeMath.address);
     DayCountConvention.link("SignedSafeMath",contractSignedSafeMath.address);
     DayCountConvention.link("BokkyPooBahsDateTimeLibrary",contractBokkyPooBahsDateTimeLibrary.address);
     DayCountConvention.link("FloatMath",contractFloatMath.address);
    contractDayCountConvention = await DayCountConvention.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: DayCountConvention.new({from: accounts[0]}');
    contractContractRoleConvention = await ContractRoleConvention.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: ContractRoleConvention.new({from: accounts[0]}');
    BusinessDayConvention.link("BokkyPooBahsDateTimeLibrary",contractBokkyPooBahsDateTimeLibrary.address);
    contractBusinessDayConvention = await BusinessDayConvention.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: BusinessDayConvention.new({from: accounts[0]}');
      ProxyUtils.link("BokkyPooBahsDateTimeLibrary",contractBokkyPooBahsDateTimeLibrary.address);
    contractProxyUtils = await ProxyUtils.new({ from: accounts[0] });
});
  
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p==Definitions.P.D', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 399,"p": 0,"s": 1,"isSet": false}, 2014223715,{from: accounts[0]});
  });
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p==Definitions.P.W', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 96,"p": 1,"s": 1,"isSet": false}, 399,{from: accounts[0]});
  });
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p==Definitions.P.M', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 131,"p": 2,"s": 1,"isSet": false}, 2014223714,{from: accounts[0]});
  });
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p==Definitions.P.Q', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 901,"p": 3,"s": 1,"isSet": true}, 70,{from: accounts[0]});
  });
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p==Definitions.P.H', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 1338,"p": 4,"s": 1,"isSet": false}, 1,{from: accounts[0]});
  });
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p==Definitions.P.Y', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 6,"p": 5,"s": 0,"isSet": false}, 79,{from: accounts[0]});
  });
  it('Should execute testgetTimestampPlusPeriod(Definitions.IPS,uint256) WHEN cycle.p!=Definitions.P.Y,cycle.p!=Definitions.P.H,cycle.p!=Definitions.P.Q,cycle.p!=Definitions.P.M,cycle.p!=Definitions.P.W,cycle.p!=Definitions.P.D', async () => {
    let result = await contractProxyUtils.testgetTimestampPlusPeriod({"i": 40,"p": 99999,"s": 0,"isSet": true}, 24,{from: accounts[0]});
  });
  it('Should execute testsortProtoEventSchedule(Definitions.ProtoEvent[MAX_EVENT_SCHEDULE_SIZE],uint256)', async () => {
    let result = await contractProxyUtils.testsortProtoEventSchedule([{"eventTime": 120,"eventTimeWithEpochOffset": 160,"scheduleTime": 150,"eventType": 3,"currency": accounts[2],"pofType": 4,"stfType": 14},{"eventTime": 4899,"eventTimeWithEpochOffset": 901,"scheduleTime": 30,"eventType": 2,"currency": accounts[1],"pofType": 11,"stfType": 14},{"eventTime": 367,"eventTimeWithEpochOffset": 48,"scheduleTime": 139,"eventType": 0,"currency": accounts[6],"pofType": 5,"stfType": 6},{"eventTime": 120,"eventTimeWithEpochOffset": 366,"scheduleTime": 1460,"eventType": 20,"currency": accounts[9],"pofType": 18,"stfType": 10},{"eventTime": 49,"eventTimeWithEpochOffset": 1532892062,"scheduleTime": 401,"eventType": 1,"currency": accounts[8],"pofType": 8,"stfType": 4},{"eventTime": 2447,"eventTimeWithEpochOffset": 0,"scheduleTime": 1971,"eventType": 0,"currency": accounts[7],"pofType": 1,"stfType": 0},{"eventTime": 150,"eventTimeWithEpochOffset": 4899,"scheduleTime": 131,"eventType": 5,"currency": accounts[1],"pofType": 14,"stfType": 15},{"eventTime": 140,"eventTimeWithEpochOffset": 86399,"scheduleTime": 110,"eventType": 4,"currency": accounts[0],"pofType": 9,"stfType": 13},{"eventTime": 110,"eventTimeWithEpochOffset": 101,"scheduleTime": 4900,"eventType": 15,"currency": accounts[2],"pofType": 4,"stfType": 14},{"eventTime": 21,"eventTimeWithEpochOffset": 27,"scheduleTime": 367,"eventType": 10,"currency": accounts[9],"pofType": 6,"stfType": 4},{"eventTime": 32076,"eventTimeWithEpochOffset": 89,"scheduleTime": 1462,"eventType": 3,"currency": accounts[5],"pofType": 12,"stfType": 8},{"eventTime": 400,"eventTimeWithEpochOffset": 21,"scheduleTime": 255,"eventType": 18,"currency": accounts[7],"pofType": 8,"stfType": 9},{"eventTime": 119,"eventTimeWithEpochOffset": 2014223715,"scheduleTime": 63,"eventType": 0,"currency": accounts[7],"pofType": 8,"stfType": 12},{"eventTime": 48,"eventTimeWithEpochOffset": 0,"scheduleTime": 900,"eventType": 6,"currency": accounts[6],"pofType": 9,"stfType": 7},{"eventTime": 10,"eventTimeWithEpochOffset": 15,"scheduleTime": 27,"eventType": 2,"currency": accounts[4],"pofType": 10,"stfType": 12},{"eventTime": 0,"eventTimeWithEpochOffset": 949,"scheduleTime": 101,"eventType": 18,"currency": accounts[0],"pofType": 1,"stfType": 4},{"eventTime": 4001,"eventTimeWithEpochOffset": 2446,"scheduleTime": 130,"eventType": 0,"currency": accounts[2],"pofType": 9,"stfType": 6},{"eventTime": 51,"eventTimeWithEpochOffset": 368,"scheduleTime": 2440587,"eventType": 3,"currency": accounts[6],"pofType": 9,"stfType": 20},{"eventTime": 11,"eventTimeWithEpochOffset": 4900,"scheduleTime": 0,"eventType": 3,"currency": accounts[3],"pofType": 14,"stfType": 4},{"eventTime": 9999,"eventTimeWithEpochOffset": 2447,"scheduleTime": 950,"eventType": 8,"currency": accounts[3],"pofType": 4,"stfType": 7},{"eventTime": 159,"eventTimeWithEpochOffset": 1461000,"scheduleTime": 4801,"eventType": 20,"currency": accounts[4],"pofType": 5,"stfType": 18},{"eventTime": 160,"eventTimeWithEpochOffset": 81,"scheduleTime": 1,"eventType": 1,"currency": accounts[8],"pofType": 6,"stfType": 14},{"eventTime": 1338,"eventTimeWithEpochOffset": 21,"scheduleTime": 4899,"eventType": 19,"currency": accounts[6],"pofType": 10,"stfType": 2},{"eventTime": 71,"eventTimeWithEpochOffset": 95,"scheduleTime": 151,"eventType": 11,"currency": accounts[2],"pofType": 9,"stfType": 5},{"eventTime": 89,"eventTimeWithEpochOffset": 366,"scheduleTime": 64,"eventType": 10,"currency": accounts[8],"pofType": 11,"stfType": 4},{"eventTime": 367,"eventTimeWithEpochOffset": 1532892063,"scheduleTime": 8,"eventType": 20,"currency": accounts[9],"pofType": 16,"stfType": 3},{"eventTime": 91,"eventTimeWithEpochOffset": 70,"scheduleTime": 50,"eventType": 4,"currency": accounts[5],"pofType": 9,"stfType": 10},{"eventTime": 14,"eventTimeWithEpochOffset": 71,"scheduleTime": 19,"eventType": 2,"currency": accounts[6],"pofType": 9,"stfType": 5},{"eventTime": 146097,"eventTimeWithEpochOffset": 17,"scheduleTime": 31,"eventType": 17,"currency": accounts[0],"pofType": 20,"stfType": 1},{"eventTime": 50,"eventTimeWithEpochOffset": 10001,"scheduleTime": 150,"eventType": 13,"currency": accounts[2],"pofType": 7,"stfType": 17},{"eventTime": 140,"eventTimeWithEpochOffset": 110,"scheduleTime": 2014223715,"eventType": 9,"currency": accounts[4],"pofType": 2,"stfType": 11},{"eventTime": 41,"eventTimeWithEpochOffset": 146096,"scheduleTime": 901,"eventType": 14,"currency": accounts[7],"pofType": 6,"stfType": 20},{"eventTime": 1338,"eventTimeWithEpochOffset": 2440587,"scheduleTime": 151,"eventType": 6,"currency": accounts[0],"pofType": 1,"stfType": 19},{"eventTime": 256,"eventTimeWithEpochOffset": 49,"scheduleTime": 254,"eventType": 6,"currency": accounts[1],"pofType": 7,"stfType": 17},{"eventTime": 86400,"eventTimeWithEpochOffset": 146097,"scheduleTime": 365,"eventType": 1,"currency": accounts[1],"pofType": 2,"stfType": 12},{"eventTime": 2448,"eventTimeWithEpochOffset": 1336,"scheduleTime": 951,"eventType": 20,"currency": accounts[0],"pofType": 15,"stfType": 7},{"eventTime": 71,"eventTimeWithEpochOffset": 12,"scheduleTime": 28,"eventType": 14,"currency": accounts[9],"pofType": 14,"stfType": 3},{"eventTime": 4900,"eventTimeWithEpochOffset": 254,"scheduleTime": 70,"eventType": 15,"currency": accounts[7],"pofType": 7,"stfType": 0},{"eventTime": 15,"eventTimeWithEpochOffset": 69,"scheduleTime": 20,"eventType": 8,"currency": accounts[4],"pofType": 17,"stfType": 18},{"eventTime": 18,"eventTimeWithEpochOffset": 71,"scheduleTime": 10,"eventType": 18,"currency": accounts[1],"pofType": 2,"stfType": 8},{"eventTime": 1461002,"eventTimeWithEpochOffset": 59,"scheduleTime": 12,"eventType": 8,"currency": accounts[9],"pofType": 9,"stfType": 16},{"eventTime": 368,"eventTimeWithEpochOffset": 30,"scheduleTime": 2446,"eventType": 14,"currency": accounts[8],"pofType": 5,"stfType": 15},{"eventTime": 109,"eventTimeWithEpochOffset": 151,"scheduleTime": 110,"eventType": 15,"currency": accounts[7],"pofType": 11,"stfType": 19},{"eventTime": 3999,"eventTimeWithEpochOffset": 150,"scheduleTime": 19,"eventType": 6,"currency": accounts[9],"pofType": 1,"stfType": 4},{"eventTime": 96,"eventTimeWithEpochOffset": 89,"scheduleTime": 4899,"eventType": 17,"currency": accounts[3],"pofType": 3,"stfType": 10},{"eventTime": 10,"eventTimeWithEpochOffset": 368,"scheduleTime": 12,"eventType": 1,"currency": accounts[6],"pofType": 3,"stfType": 1},{"eventTime": 254,"eventTimeWithEpochOffset": 8,"scheduleTime": 10000,"eventType": 20,"currency": accounts[4],"pofType": 10,"stfType": 17},{"eventTime": 28,"eventTimeWithEpochOffset": 15,"scheduleTime": 9,"eventType": 19,"currency": accounts[0],"pofType": 8,"stfType": 14},{"eventTime": 256,"eventTimeWithEpochOffset": 900,"scheduleTime": 1461002,"eventType": 12,"currency": accounts[9],"pofType": 8,"stfType": 12},{"eventTime": 1532892064,"eventTimeWithEpochOffset": 161,"scheduleTime": 365,"eventType": 5,"currency": accounts[3],"pofType": 17,"stfType": 5},{"eventTime": 146098,"eventTimeWithEpochOffset": 69,"scheduleTime": 361,"eventType": 11,"currency": accounts[8],"pofType": 13,"stfType": 1},{"eventTime": 21,"eventTimeWithEpochOffset": 26,"scheduleTime": 96,"eventType": 8,"currency": accounts[1],"pofType": 4,"stfType": 17},{"eventTime": 1462,"eventTimeWithEpochOffset": 3,"scheduleTime": 89,"eventType": 0,"currency": accounts[4],"pofType": 2,"stfType": 12},{"eventTime": 364,"eventTimeWithEpochOffset": 18,"scheduleTime": 1,"eventType": 11,"currency": accounts[2],"pofType": 20,"stfType": 11},{"eventTime": 255,"eventTimeWithEpochOffset": 28,"scheduleTime": 27,"eventType": 10,"currency": accounts[3],"pofType": 8,"stfType": 11},{"eventTime": 146098,"eventTimeWithEpochOffset": 2447,"scheduleTime": 1461,"eventType": 0,"currency": accounts[5],"pofType": 13,"stfType": 3},{"eventTime": 70,"eventTimeWithEpochOffset": 3,"scheduleTime": 2447,"eventType": 20,"currency": accounts[0],"pofType": 18,"stfType": 14},{"eventTime": 28,"eventTimeWithEpochOffset": 20,"scheduleTime": 14,"eventType": 20,"currency": accounts[3],"pofType": 9,"stfType": 19},{"eventTime": 1969,"eventTimeWithEpochOffset": 68570,"scheduleTime": 59,"eventType": 13,"currency": accounts[8],"pofType": 16,"stfType": 14},{"eventTime": 1461,"eventTimeWithEpochOffset": 23,"scheduleTime": 1971,"eventType": 17,"currency": accounts[9],"pofType": 7,"stfType": 3},{"eventTime": 899,"eventTimeWithEpochOffset": 131,"scheduleTime": 2440588,"eventType": 8,"currency": accounts[0],"pofType": 20,"stfType": 4},{"eventTime": 4801,"eventTimeWithEpochOffset": 141,"scheduleTime": 2440588,"eventType": 10,"currency": accounts[5],"pofType": 12,"stfType": 2},{"eventTime": 4899,"eventTimeWithEpochOffset": 26,"scheduleTime": 65,"eventType": 3,"currency": accounts[3],"pofType": 6,"stfType": 16},{"eventTime": 1969,"eventTimeWithEpochOffset": 2440589,"scheduleTime": 2014223714,"eventType": 5,"currency": accounts[5],"pofType": 16,"stfType": 6}], 41,{from: accounts[0]});
  });
  it('Should execute testquickSortProtoEventSchedule(Definitions.ProtoEvent[MAX_EVENT_SCHEDULE_SIZE],uint,uint)', async () => {
    let result = await contractProxyUtils.testquickSortProtoEventSchedule([{"eventTime": 2014223714,"eventTimeWithEpochOffset": 32075,"scheduleTime": 48,"eventType": 10,"currency": accounts[6],"pofType": 14,"stfType": 8},{"eventTime": 2440588,"eventTimeWithEpochOffset": 2448,"scheduleTime": 4801,"eventType": 20,"currency": accounts[1],"pofType": 3,"stfType": 6},{"eventTime": 4000,"eventTimeWithEpochOffset": 32076,"scheduleTime": 90,"eventType": 12,"currency": accounts[5],"pofType": 12,"stfType": 11},{"eventTime": 2014223714,"eventTimeWithEpochOffset": 41,"scheduleTime": 63,"eventType": 15,"currency": accounts[1],"pofType": 20,"stfType": 14},{"eventTime": 110,"eventTimeWithEpochOffset": 21,"scheduleTime": 367,"eventType": 3,"currency": accounts[2],"pofType": 11,"stfType": 8},{"eventTime": 121,"eventTimeWithEpochOffset": 68568,"scheduleTime": 100,"eventType": 18,"currency": accounts[0],"pofType": 16,"stfType": 2},{"eventTime": 400,"eventTimeWithEpochOffset": 4901,"scheduleTime": 86399,"eventType": 5,"currency": accounts[1],"pofType": 11,"stfType": 19},{"eventTime": 27,"eventTimeWithEpochOffset": 399,"scheduleTime": 1,"eventType": 1,"currency": accounts[5],"pofType": 14,"stfType": 10},{"eventTime": 141,"eventTimeWithEpochOffset": 81,"scheduleTime": 130,"eventType": 14,"currency": accounts[7],"pofType": 1,"stfType": 11},{"eventTime": 129,"eventTimeWithEpochOffset": 361,"scheduleTime": 86399,"eventType": 11,"currency": accounts[2],"pofType": 11,"stfType": 1},{"eventTime": 69,"eventTimeWithEpochOffset": 97,"scheduleTime": 3999,"eventType": 3,"currency": accounts[7],"pofType": 3,"stfType": 9},{"eventTime": 4801,"eventTimeWithEpochOffset": 159,"scheduleTime": 48,"eventType": 6,"currency": accounts[5],"pofType": 10,"stfType": 11},{"eventTime": 95,"eventTimeWithEpochOffset": 68570,"scheduleTime": 359,"eventType": 17,"currency": accounts[2],"pofType": 18,"stfType": 10},{"eventTime": 68570,"eventTimeWithEpochOffset": 7,"scheduleTime": 1336,"eventType": 18,"currency": accounts[6],"pofType": 17,"stfType": 14},{"eventTime": 949,"eventTimeWithEpochOffset": 26,"scheduleTime": 12,"eventType": 10,"currency": accounts[4],"pofType": 13,"stfType": 0},{"eventTime": 30,"eventTimeWithEpochOffset": 2447,"scheduleTime": 99,"eventType": 20,"currency": accounts[9],"pofType": 0,"stfType": 2},{"eventTime": 900,"eventTimeWithEpochOffset": 365,"scheduleTime": 111,"eventType": 14,"currency": accounts[5],"pofType": 0,"stfType": 3},{"eventTime": 2446,"eventTimeWithEpochOffset": 901,"scheduleTime": 1336,"eventType": 9,"currency": accounts[9],"pofType": 4,"stfType": 11},{"eventTime": 70,"eventTimeWithEpochOffset": 95,"scheduleTime": 1532892062,"eventType": 17,"currency": accounts[9],"pofType": 6,"stfType": 15},{"eventTime": 32074,"eventTimeWithEpochOffset": 12,"scheduleTime": 64,"eventType": 17,"currency": accounts[7],"pofType": 12,"stfType": 15},{"eventTime": 24,"eventTimeWithEpochOffset": 120,"scheduleTime": 359,"eventType": 0,"currency": accounts[7],"pofType": 11,"stfType": 9},{"eventTime": 951,"eventTimeWithEpochOffset": 59,"scheduleTime": 1462,"eventType": 13,"currency": accounts[7],"pofType": 10,"stfType": 1},{"eventTime": 110,"eventTimeWithEpochOffset": 24,"scheduleTime": 365,"eventType": 13,"currency": accounts[0],"pofType": 14,"stfType": 10},{"eventTime": 4901,"eventTimeWithEpochOffset": 109,"scheduleTime": 20,"eventType": 13,"currency": accounts[5],"pofType": 17,"stfType": 13},{"eventTime": 255,"eventTimeWithEpochOffset": 2440589,"scheduleTime": 9,"eventType": 8,"currency": accounts[7],"pofType": 5,"stfType": 2},{"eventTime": 49,"eventTimeWithEpochOffset": 367,"scheduleTime": 68570,"eventType": 0,"currency": accounts[5],"pofType": 12,"stfType": 14},{"eventTime": 95,"eventTimeWithEpochOffset": 1461002,"scheduleTime": 1338,"eventType": 10,"currency": accounts[7],"pofType": 16,"stfType": 2},{"eventTime": 80,"eventTimeWithEpochOffset": 40,"scheduleTime": 48,"eventType": 9,"currency": accounts[5],"pofType": 4,"stfType": 9},{"eventTime": 28,"eventTimeWithEpochOffset": 4901,"scheduleTime": 91,"eventType": 1,"currency": accounts[5],"pofType": 4,"stfType": 1},{"eventTime": 20,"eventTimeWithEpochOffset": 96,"scheduleTime": 159,"eventType": 14,"currency": accounts[9],"pofType": 2,"stfType": 13},{"eventTime": 16,"eventTimeWithEpochOffset": 32074,"scheduleTime": 4801,"eventType": 13,"currency": accounts[3],"pofType": 13,"stfType": 6},{"eventTime": 4000,"eventTimeWithEpochOffset": 151,"scheduleTime": 1970,"eventType": 5,"currency": accounts[6],"pofType": 12,"stfType": 8},{"eventTime": 27,"eventTimeWithEpochOffset": 20,"scheduleTime": 150,"eventType": 12,"currency": accounts[7],"pofType": 2,"stfType": 18},{"eventTime": 1,"eventTimeWithEpochOffset": 1461001,"scheduleTime": 8,"eventType": 19,"currency": accounts[7],"pofType": 7,"stfType": 14},{"eventTime": 1460,"eventTimeWithEpochOffset": 17,"scheduleTime": 2440588,"eventType": 0,"currency": accounts[2],"pofType": 10,"stfType": 14},{"eventTime": 23,"eventTimeWithEpochOffset": 2014223716,"scheduleTime": 1336,"eventType": 6,"currency": accounts[4],"pofType": 3,"stfType": 14},{"eventTime": 32075,"eventTimeWithEpochOffset": 64,"scheduleTime": 68569,"eventType": 1,"currency": accounts[6],"pofType": 2,"stfType": 5},{"eventTime": 3,"eventTimeWithEpochOffset": 25,"scheduleTime": 79,"eventType": 18,"currency": accounts[1],"pofType": 12,"stfType": 13},{"eventTime": 51,"eventTimeWithEpochOffset": 2440587,"scheduleTime": 1462,"eventType": 5,"currency": accounts[6],"pofType": 9,"stfType": 12},{"eventTime": 10,"eventTimeWithEpochOffset": 150,"scheduleTime": 14,"eventType": 13,"currency": accounts[0],"pofType": 3,"stfType": 10},{"eventTime": 2014223714,"eventTimeWithEpochOffset": 12,"scheduleTime": 91,"eventType": 0,"currency": accounts[1],"pofType": 13,"stfType": 2},{"eventTime": 4000,"eventTimeWithEpochOffset": 27,"scheduleTime": 1336,"eventType": 7,"currency": accounts[2],"pofType": 2,"stfType": 3},{"eventTime": 150,"eventTimeWithEpochOffset": 7,"scheduleTime": 146096,"eventType": 12,"currency": accounts[8],"pofType": 16,"stfType": 19},{"eventTime": 64,"eventTimeWithEpochOffset": 4801,"scheduleTime": 1336,"eventType": 8,"currency": accounts[9],"pofType": 5,"stfType": 12},{"eventTime": 10,"eventTimeWithEpochOffset": 951,"scheduleTime": 97,"eventType": 8,"currency": accounts[0],"pofType": 4,"stfType": 20},{"eventTime": 4899,"eventTimeWithEpochOffset": 256,"scheduleTime": 1970,"eventType": 17,"currency": accounts[6],"pofType": 2,"stfType": 3},{"eventTime": 9999,"eventTimeWithEpochOffset": 68570,"scheduleTime": 14,"eventType": 8,"currency": accounts[3],"pofType": 1,"stfType": 19},{"eventTime": 4001,"eventTimeWithEpochOffset": 10001,"scheduleTime": 101,"eventType": 13,"currency": accounts[9],"pofType": 16,"stfType": 0},{"eventTime": 32076,"eventTimeWithEpochOffset": 66,"scheduleTime": 14,"eventType": 1,"currency": accounts[8],"pofType": 0,"stfType": 18},{"eventTime": 4899,"eventTimeWithEpochOffset": 141,"scheduleTime": 100,"eventType": 4,"currency": accounts[0],"pofType": 14,"stfType": 14},{"eventTime": 48,"eventTimeWithEpochOffset": 23,"scheduleTime": 2014223714,"eventType": 9,"currency": accounts[1],"pofType": 19,"stfType": 4},{"eventTime": 359,"eventTimeWithEpochOffset": 61,"scheduleTime": 254,"eventType": 2,"currency": accounts[2],"pofType": 13,"stfType": 14},{"eventTime": 41,"eventTimeWithEpochOffset": 161,"scheduleTime": 367,"eventType": 8,"currency": accounts[5],"pofType": 12,"stfType": 12},{"eventTime": 361,"eventTimeWithEpochOffset": 60,"scheduleTime": 256,"eventType": 8,"currency": accounts[0],"pofType": 20,"stfType": 19},{"eventTime": 2440588,"eventTimeWithEpochOffset": 90,"scheduleTime": 1460,"eventType": 19,"currency": accounts[1],"pofType": 11,"stfType": 6},{"eventTime": 2,"eventTimeWithEpochOffset": 51,"scheduleTime": 1969,"eventType": 11,"currency": accounts[7],"pofType": 18,"stfType": 13},{"eventTime": 2440588,"eventTimeWithEpochOffset": 95,"scheduleTime": 40,"eventType": 17,"currency": accounts[4],"pofType": 16,"stfType": 4},{"eventTime": 4001,"eventTimeWithEpochOffset": 21,"scheduleTime": 68569,"eventType": 20,"currency": accounts[4],"pofType": 8,"stfType": 14},{"eventTime": 949,"eventTimeWithEpochOffset": 364,"scheduleTime": 66,"eventType": 18,"currency": accounts[3],"pofType": 15,"stfType": 6},{"eventTime": 2440587,"eventTimeWithEpochOffset": 86401,"scheduleTime": 400,"eventType": 10,"currency": accounts[5],"pofType": 2,"stfType": 14},{"eventTime": 68570,"eventTimeWithEpochOffset": 9999,"scheduleTime": 68569,"eventType": 14,"currency": accounts[4],"pofType": 11,"stfType": 11},{"eventTime": 2447,"eventTimeWithEpochOffset": 1461,"scheduleTime": 399,"eventType": 11,"currency": accounts[8],"pofType": 17,"stfType": 2},{"eventTime": 255,"eventTimeWithEpochOffset": 366,"scheduleTime": 1461001,"eventType": 18,"currency": accounts[9],"pofType": 2,"stfType": 14},{"eventTime": 1337,"eventTimeWithEpochOffset": 99,"scheduleTime": 4901,"eventType": 11,"currency": accounts[0],"pofType": 10,"stfType": 12}], 1970, 28,{from: accounts[0]});
  });
  it('Should execute testisInPeriod(uint256,uint256,uint256) WHEN startTimestamp<timestamp,endTimestamp>=timestamp', async () => {
    let result = await contractProxyUtils.testisInPeriod(10000, 7, 146097,{from: accounts[0]});
  });
  it('Should execute testisInPeriod(uint256,uint256,uint256) WHEN endTimestamp<timestamp', async () => {
    let result = await contractProxyUtils.testisInPeriod(32076, 81, 1971,{from: accounts[0]});
  });
});
