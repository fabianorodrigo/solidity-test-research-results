,{
  "2020-11-10T17:22:03.188ZMerkleShip.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.865ZProxySafeMath.testmul": {
    "branches": {
      "0": {
        "branch": {
          "loc": "15-17",
          "restrictions": [
            "a == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testmul(uint256,uint256) WHEN a==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "39",
              "sol": "39"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "a != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testmul(uint256,uint256) WHEN a!=0",
          "parameters": [
            {
              "js": "11",
              "sol": "11"
            },
            {
              "js": "63",
              "sol": "63"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.866ZProxySafeMath.testdiv": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testdiv(uint256,uint256) WHEN b>0",
          "parameters": [
            {
              "js": "101",
              "sol": "101"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testdiv(uint256,uint256) when NOT comply with: b > 0",
            "parameters": [
              {
                "js": "101",
                "sol": "101"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.866ZProxySafeMath.testsub": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testsub(uint256,uint256) WHEN b<=a",
          "parameters": [
            {
              "js": "47",
              "sol": "47"
            },
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testsub(uint256,uint256) when NOT comply with: b <= a",
            "parameters": [
              {
                "js": "47",
                "sol": "47"
              },
              {
                "js": 48,
                "sol": 48
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.867ZProxySafeMath.testadd": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testadd(uint256,uint256)",
          "parameters": [
            {
              "js": "40",
              "sol": "40"
            },
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.867ZProxySafeMath.testmod": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testmod(uint256,uint256) WHEN b!=0",
          "parameters": [
            {
              "js": "13",
              "sol": "13"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail testmod(uint256,uint256) when NOT comply with: b != 0",
            "parameters": [
              {
                "js": "13",
                "sol": "13"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.868ZMerkleShip.emergencyStop": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute emergencyStop(string) WHEN msg.sender==admin,isStopped==false",
          "parameters": [
            {
              "js": "\"victory by abandonment\"",
              "sol": "\"victory by abandonment\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail emergencyStop(string) when NOT comply with: msg.sender == admin",
            "parameters": [
              {
                "js": "\"victory by abandonment\"",
                "sol": "\"victory by abandonment\""
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.869ZMerkleShip.proposeGame": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute proposeGame(uint96,bytes32) WHEN isStopped==false,msg.value==_wager",
          "parameters": [
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "[233,52,158,93,133,247,141,249,49,70,55,96,176,178,230,195,194,50,64,239,77,208,125,160,158,192,135,231,184,117,99,18]",
              "sol": "stringToBytes32(\"233,52,158,93,133,247,141,249,49,70,55,96,176,178,230,195,194,50,64,239,77,208,125,160,158,192,135,231,184,117,99,18\")"
            },
            {
              "js": "{from:accounts[0],value:4}",
              "sol": "{\"from\":\"0x0\",\"value\":\"4\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail proposeGame(uint96,bytes32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "4",
                "sol": "4"
              },
              {
                "js": "[233,52,158,93,133,247,141,249,49,70,55,96,176,178,230,195,194,50,64,239,77,208,125,160,158,192,135,231,184,117,99,18]",
                "sol": "stringToBytes32(\"233,52,158,93,133,247,141,249,49,70,55,96,176,178,230,195,194,50,64,239,77,208,125,160,158,192,135,231,184,117,99,18\")"
              },
              {
                "js": "{from:accounts[0],value:4}",
                "sol": "{\"from\":\"0x0\",\"value\":\"4\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail proposeGame(uint96,bytes32) when NOT comply with: msg.value == _wager",
            "parameters": [
              {
                "js": 5,
                "sol": 5
              },
              {
                "js": "[233,52,158,93,133,247,141,249,49,70,55,96,176,178,230,195,194,50,64,239,77,208,125,160,158,192,135,231,184,117,99,18]",
                "sol": "stringToBytes32(\"233,52,158,93,133,247,141,249,49,70,55,96,176,178,230,195,194,50,64,239,77,208,125,160,158,192,135,231,184,117,99,18\")"
              },
              {
                "js": "{from:accounts[0],value:4}",
                "sol": "{\"from\":\"0x0\",\"value\":\"4\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.870ZMerkleShip.acceptGame": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute acceptGame(uint32,bytes32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "12",
              "sol": "12"
            },
            {
              "js": "[112,205,171,239,22,61,22,135,225,59,133,100,23,247,119,107,148,193,145,136,217,153,95,124,207,18,231,11,184,151,32,250]",
              "sol": "stringToBytes32(\"112,205,171,239,22,61,22,135,225,59,133,100,23,247,119,107,148,193,145,136,217,153,95,124,207,18,231,11,184,151,32,250\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail acceptGame(uint32,bytes32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "12",
                "sol": "12"
              },
              {
                "js": "[112,205,171,239,22,61,22,135,225,59,133,100,23,247,119,107,148,193,145,136,217,153,95,124,207,18,231,11,184,151,32,250]",
                "sol": "stringToBytes32(\"112,205,171,239,22,61,22,135,225,59,133,100,23,247,119,107,148,193,145,136,217,153,95,124,207,18,231,11,184,151,32,250\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.871ZMerkleShip.cancelProposedGame": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute cancelProposedGame(uint32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail cancelProposedGame(uint32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.872ZMerkleShip.guessAndReveal": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute guessAndReveal(uint32,uint8[2],bytes32[6],string,string) WHEN isStopped==false",
          "parameters": [
            {
              "js": "179",
              "sol": "179"
            },
            {
              "js": "[2,48]",
              "sol": "[uint8(2),uint8(48)]"
            },
            {
              "js": "[[165,194,61,253,150,218,69,124,208,238,203,60,20,47,222,31,136,186,114,105,98,198,21,115,176,220,217,220,226,113,60,25],[122,247,233,85,7,208,228,212,243,207,172,247,113,104,114,125,169,243,227,88,8,87,228,106,27,248,164,137,76,254,74,154],[105,151,204,73,52,38,103,71,95,191,223,9,216,3,147,187,86,54,96,14,84,237,227,121,0,81,221,58,17,231,15,52],[241,88,124,207,97,5,193,239,126,117,173,149,25,212,27,245,44,177,222,72,136,205,102,239,116,247,158,105,197,228,94,107],[202,182,207,233,45,17,39,210,237,30,130,202,115,14,213,165,137,85,92,150,163,220,47,99,67,145,46,35,21,29,209,75],[51,120,132,78,105,73,230,140,38,234,168,100,57,3,110,181,37,157,143,6,143,141,92,178,231,27,102,97,222,33,63,123]]",
              "sol": "[bytes32(stringToBytes32(\"165,194,61,253,150,218,69,124,208,238,203,60,20,47,222,31,136,186,114,105,98,198,21,115,176,220,217,220,226,113,60,25\")),bytes32(stringToBytes32(\"122,247,233,85,7,208,228,212,243,207,172,247,113,104,114,125,169,243,227,88,8,87,228,106,27,248,164,137,76,254,74,154\")),bytes32(stringToBytes32(\"105,151,204,73,52,38,103,71,95,191,223,9,216,3,147,187,86,54,96,14,84,237,227,121,0,81,221,58,17,231,15,52\")),bytes32(stringToBytes32(\"241,88,124,207,97,5,193,239,126,117,173,149,25,212,27,245,44,177,222,72,136,205,102,239,116,247,158,105,197,228,94,107\")),bytes32(stringToBytes32(\"202,182,207,233,45,17,39,210,237,30,130,202,115,14,213,165,137,85,92,150,163,220,47,99,67,145,46,35,21,29,209,75\")),bytes32(stringToBytes32(\"51,120,132,78,105,73,230,140,38,234,168,100,57,3,110,181,37,157,143,6,143,141,92,178,231,27,102,97,222,33,63,123\"))]"
            },
            {
              "js": "\"game resolved in an emergency\"",
              "sol": "\"game resolved in an emergency\""
            },
            {
              "js": "\"verified victory by hit count\"",
              "sol": "\"verified victory by hit count\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail guessAndReveal(uint32,uint8[2],bytes32[6],string,string) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "179",
                "sol": "179"
              },
              {
                "js": "[2,48]",
                "sol": "[uint8(2),uint8(48)]"
              },
              {
                "js": "[[165,194,61,253,150,218,69,124,208,238,203,60,20,47,222,31,136,186,114,105,98,198,21,115,176,220,217,220,226,113,60,25],[122,247,233,85,7,208,228,212,243,207,172,247,113,104,114,125,169,243,227,88,8,87,228,106,27,248,164,137,76,254,74,154],[105,151,204,73,52,38,103,71,95,191,223,9,216,3,147,187,86,54,96,14,84,237,227,121,0,81,221,58,17,231,15,52],[241,88,124,207,97,5,193,239,126,117,173,149,25,212,27,245,44,177,222,72,136,205,102,239,116,247,158,105,197,228,94,107],[202,182,207,233,45,17,39,210,237,30,130,202,115,14,213,165,137,85,92,150,163,220,47,99,67,145,46,35,21,29,209,75],[51,120,132,78,105,73,230,140,38,234,168,100,57,3,110,181,37,157,143,6,143,141,92,178,231,27,102,97,222,33,63,123]]",
                "sol": "[bytes32(stringToBytes32(\"165,194,61,253,150,218,69,124,208,238,203,60,20,47,222,31,136,186,114,105,98,198,21,115,176,220,217,220,226,113,60,25\")),bytes32(stringToBytes32(\"122,247,233,85,7,208,228,212,243,207,172,247,113,104,114,125,169,243,227,88,8,87,228,106,27,248,164,137,76,254,74,154\")),bytes32(stringToBytes32(\"105,151,204,73,52,38,103,71,95,191,223,9,216,3,147,187,86,54,96,14,84,237,227,121,0,81,221,58,17,231,15,52\")),bytes32(stringToBytes32(\"241,88,124,207,97,5,193,239,126,117,173,149,25,212,27,245,44,177,222,72,136,205,102,239,116,247,158,105,197,228,94,107\")),bytes32(stringToBytes32(\"202,182,207,233,45,17,39,210,237,30,130,202,115,14,213,165,137,85,92,150,163,220,47,99,67,145,46,35,21,29,209,75\")),bytes32(stringToBytes32(\"51,120,132,78,105,73,230,140,38,234,168,100,57,3,110,181,37,157,143,6,143,141,92,178,231,27,102,97,222,33,63,123\"))]"
              },
              {
                "js": "\"game resolved in an emergency\"",
                "sol": "\"game resolved in an emergency\""
              },
              {
                "js": "\"verified victory by hit count\"",
                "sol": "\"verified victory by hit count\""
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.881ZMerkleShip.resolveAbandonedGame": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveAbandonedGame(uint32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "13",
              "sol": "13"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveAbandonedGame(uint32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "13",
                "sol": "13"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.882ZMerkleShip.concedeGame": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute concedeGame(uint32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail concedeGame(uint32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "4",
                "sol": "4"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.883ZMerkleShip.challengeVictory": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengeVictory(uint32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "41",
              "sol": "41"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail challengeVictory(uint32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "41",
                "sol": "41"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.884ZMerkleShip.answerChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute answerChallenge(uint32,string[64]) WHEN isStopped==false",
          "parameters": [
            {
              "js": "7",
              "sol": "7"
            },
            {
              "js": "[\"n890xk\",\"victory by unanswered challenge\",\"77cf3m\",\"victory by unchallenged hit count\",\"victory by unchallenged hit count\",\"victory by abandonment\",\"n890xk\",\"victory by abandonment\",\"victory by concession\",\"bj00ja\",\"victory by concession\",\"game resolved in an emergency\",\"77cf3m\",\"game resolved in an emergency\",\"bj00ja\",\"victory by abandonment\",\"77cf3m\",\"xxq0s\",\"n890xk\",\"victory by abandonment\",\"xxq0s\",\"game resolved in an emergency\",\"victory by unchallenged hit count\",\"victory by unchallenged hit count\",\"verified victory by hit count\",\"verified victory by hit count\",\"victory by unchallenged hit count\",\"bj00ja\",\"bj00ja\",\"77cf3m\",\"victory by unanswered challenge\",\"victory by unanswered challenge\",\"uzfxm8\",\"victory by unanswered challenge\",\"victory by concession\",\"bj00ja\",\"verified victory by hit count\",\"bj00ja\",\"game resolved in an emergency\",\"victory by unanswered challenge\",\"xxq0s\",\"bj00ja\",\"game resolved in an emergency\",\"victory by abandonment\",\"xxq0s\",\"77cf3m\",\"77cf3m\",\"victory by abandonment\",\"victory by unchallenged hit count\",\"verified victory by hit count\",\"game resolved in an emergency\",\"victory by concession\",\"victory by unanswered challenge\",\"verified victory by hit count\",\"77cf3m\",\"victory by unanswered challenge\",\"victory by concession\",\"game resolved in an emergency\",\"game resolved in an emergency\",\"uzfxm8\",\"victory by unanswered challenge\",\"victory by abandonment\",\"victory by unanswered challenge\",\"victory by abandonment\"]",
              "sol": "[string(\"n890xk\"),string(\"victory by unanswered challenge\"),string(\"77cf3m\"),string(\"victory by unchallenged hit count\"),string(\"victory by unchallenged hit count\"),string(\"victory by abandonment\"),string(\"n890xk\"),string(\"victory by abandonment\"),string(\"victory by concession\"),string(\"bj00ja\"),string(\"victory by concession\"),string(\"game resolved in an emergency\"),string(\"77cf3m\"),string(\"game resolved in an emergency\"),string(\"bj00ja\"),string(\"victory by abandonment\"),string(\"77cf3m\"),string(\"xxq0s\"),string(\"n890xk\"),string(\"victory by abandonment\"),string(\"xxq0s\"),string(\"game resolved in an emergency\"),string(\"victory by unchallenged hit count\"),string(\"victory by unchallenged hit count\"),string(\"verified victory by hit count\"),string(\"verified victory by hit count\"),string(\"victory by unchallenged hit count\"),string(\"bj00ja\"),string(\"bj00ja\"),string(\"77cf3m\"),string(\"victory by unanswered challenge\"),string(\"victory by unanswered challenge\"),string(\"uzfxm8\"),string(\"victory by unanswered challenge\"),string(\"victory by concession\"),string(\"bj00ja\"),string(\"verified victory by hit count\"),string(\"bj00ja\"),string(\"game resolved in an emergency\"),string(\"victory by unanswered challenge\"),string(\"xxq0s\"),string(\"bj00ja\"),string(\"game resolved in an emergency\"),string(\"victory by abandonment\"),string(\"xxq0s\"),string(\"77cf3m\"),string(\"77cf3m\"),string(\"victory by abandonment\"),string(\"victory by unchallenged hit count\"),string(\"verified victory by hit count\"),string(\"game resolved in an emergency\"),string(\"victory by concession\"),string(\"victory by unanswered challenge\"),string(\"verified victory by hit count\"),string(\"77cf3m\"),string(\"victory by unanswered challenge\"),string(\"victory by concession\"),string(\"game resolved in an emergency\"),string(\"game resolved in an emergency\"),string(\"uzfxm8\"),string(\"victory by unanswered challenge\"),string(\"victory by abandonment\"),string(\"victory by unanswered challenge\"),string(\"victory by abandonment\")]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail answerChallenge(uint32,string[64]) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "7",
                "sol": "7"
              },
              {
                "js": "[\"n890xk\",\"victory by unanswered challenge\",\"77cf3m\",\"victory by unchallenged hit count\",\"victory by unchallenged hit count\",\"victory by abandonment\",\"n890xk\",\"victory by abandonment\",\"victory by concession\",\"bj00ja\",\"victory by concession\",\"game resolved in an emergency\",\"77cf3m\",\"game resolved in an emergency\",\"bj00ja\",\"victory by abandonment\",\"77cf3m\",\"xxq0s\",\"n890xk\",\"victory by abandonment\",\"xxq0s\",\"game resolved in an emergency\",\"victory by unchallenged hit count\",\"victory by unchallenged hit count\",\"verified victory by hit count\",\"verified victory by hit count\",\"victory by unchallenged hit count\",\"bj00ja\",\"bj00ja\",\"77cf3m\",\"victory by unanswered challenge\",\"victory by unanswered challenge\",\"uzfxm8\",\"victory by unanswered challenge\",\"victory by concession\",\"bj00ja\",\"verified victory by hit count\",\"bj00ja\",\"game resolved in an emergency\",\"victory by unanswered challenge\",\"xxq0s\",\"bj00ja\",\"game resolved in an emergency\",\"victory by abandonment\",\"xxq0s\",\"77cf3m\",\"77cf3m\",\"victory by abandonment\",\"victory by unchallenged hit count\",\"verified victory by hit count\",\"game resolved in an emergency\",\"victory by concession\",\"victory by unanswered challenge\",\"verified victory by hit count\",\"77cf3m\",\"victory by unanswered challenge\",\"victory by concession\",\"game resolved in an emergency\",\"game resolved in an emergency\",\"uzfxm8\",\"victory by unanswered challenge\",\"victory by abandonment\",\"victory by unanswered challenge\",\"victory by abandonment\"]",
                "sol": "[string(\"n890xk\"),string(\"victory by unanswered challenge\"),string(\"77cf3m\"),string(\"victory by unchallenged hit count\"),string(\"victory by unchallenged hit count\"),string(\"victory by abandonment\"),string(\"n890xk\"),string(\"victory by abandonment\"),string(\"victory by concession\"),string(\"bj00ja\"),string(\"victory by concession\"),string(\"game resolved in an emergency\"),string(\"77cf3m\"),string(\"game resolved in an emergency\"),string(\"bj00ja\"),string(\"victory by abandonment\"),string(\"77cf3m\"),string(\"xxq0s\"),string(\"n890xk\"),string(\"victory by abandonment\"),string(\"xxq0s\"),string(\"game resolved in an emergency\"),string(\"victory by unchallenged hit count\"),string(\"victory by unchallenged hit count\"),string(\"verified victory by hit count\"),string(\"verified victory by hit count\"),string(\"victory by unchallenged hit count\"),string(\"bj00ja\"),string(\"bj00ja\"),string(\"77cf3m\"),string(\"victory by unanswered challenge\"),string(\"victory by unanswered challenge\"),string(\"uzfxm8\"),string(\"victory by unanswered challenge\"),string(\"victory by concession\"),string(\"bj00ja\"),string(\"verified victory by hit count\"),string(\"bj00ja\"),string(\"game resolved in an emergency\"),string(\"victory by unanswered challenge\"),string(\"xxq0s\"),string(\"bj00ja\"),string(\"game resolved in an emergency\"),string(\"victory by abandonment\"),string(\"xxq0s\"),string(\"77cf3m\"),string(\"77cf3m\"),string(\"victory by abandonment\"),string(\"victory by unchallenged hit count\"),string(\"verified victory by hit count\"),string(\"game resolved in an emergency\"),string(\"victory by concession\"),string(\"victory by unanswered challenge\"),string(\"verified victory by hit count\"),string(\"77cf3m\"),string(\"victory by unanswered challenge\"),string(\"victory by concession\"),string(\"game resolved in an emergency\"),string(\"game resolved in an emergency\"),string(\"uzfxm8\"),string(\"victory by unanswered challenge\"),string(\"victory by abandonment\"),string(\"victory by unanswered challenge\"),string(\"victory by abandonment\")]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.886ZMerkleShip.resolveUnclaimedVictory": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveUnclaimedVictory(uint32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "40",
              "sol": "40"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveUnclaimedVictory(uint32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "40",
                "sol": "40"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.887ZMerkleShip.resolveUnansweredChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveUnansweredChallenge(uint32) WHEN isStopped==false",
          "parameters": [
            {
              "js": "8",
              "sol": "8"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveUnansweredChallenge(uint32) when NOT comply with: isStopped == false",
            "parameters": [
              {
                "js": "8",
                "sol": "8"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.887ZMerkleShip.withdraw": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute withdraw() WHEN userBalance>0",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.888ZMerkleShip.emergencyResolve": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute emergencyResolve(uint32) WHEN isStopped==true",
          "parameters": [
            {
              "js": "12",
              "sol": "12"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail emergencyResolve(uint32) when NOT comply with: isStopped == true",
            "parameters": [
              {
                "js": "12",
                "sol": "12"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T17:22:07.889ZMerkleShip.getBalance": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getBalance()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.896ZProxyMerkleShip.test_reveal": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_reveal(uint32,bytes32[6],string)",
          "parameters": [
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "[[56,0,104,58,231,133,227,230,93,254,21,88,105,157,138,189,86,249,87,168,225,199,159,138,30,32,132,5,92,102,92,123],[252,21,187,49,233,237,54,68,15,245,212,224,144,73,206,12,14,133,6,54,29,61,83,234,85,126,0,138,115,120,176,46],[228,8,131,97,199,57,75,236,220,72,186,210,50,125,129,170,135,236,143,155,90,58,210,11,97,209,119,73,223,71,83,6],[121,226,208,196,20,76,138,69,86,50,215,48,230,69,244,32,108,217,45,27,200,186,116,27,135,57,214,206,127,217,46,35],[233,23,96,40,10,82,40,173,197,157,119,106,141,4,208,136,127,171,226,47,51,12,122,175,0,41,182,53,229,151,20,147],[201,191,213,232,175,146,74,77,248,70,60,138,88,163,128,36,60,167,222,220,122,46,232,111,217,47,120,42,10,219,156,5]]",
              "sol": "[bytes32(stringToBytes32(\"56,0,104,58,231,133,227,230,93,254,21,88,105,157,138,189,86,249,87,168,225,199,159,138,30,32,132,5,92,102,92,123\")),bytes32(stringToBytes32(\"252,21,187,49,233,237,54,68,15,245,212,224,144,73,206,12,14,133,6,54,29,61,83,234,85,126,0,138,115,120,176,46\")),bytes32(stringToBytes32(\"228,8,131,97,199,57,75,236,220,72,186,210,50,125,129,170,135,236,143,155,90,58,210,11,97,209,119,73,223,71,83,6\")),bytes32(stringToBytes32(\"121,226,208,196,20,76,138,69,86,50,215,48,230,69,244,32,108,217,45,27,200,186,116,27,135,57,214,206,127,217,46,35\")),bytes32(stringToBytes32(\"233,23,96,40,10,82,40,173,197,157,119,106,141,4,208,136,127,171,226,47,51,12,122,175,0,41,182,53,229,151,20,147\")),bytes32(stringToBytes32(\"201,191,213,232,175,146,74,77,248,70,60,138,88,163,128,36,60,167,222,220,122,46,232,111,217,47,120,42,10,219,156,5\"))]"
            },
            {
              "js": "\"game resolved in an emergency\"",
              "sol": "\"game resolved in an emergency\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.897ZProxyMerkleShip.test_checkForVictoryByHit": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_checkForVictoryByHit(uint32)",
          "parameters": [
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.897ZProxyMerkleShip.test_zeroOutStorage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_zeroOutStorage(uint32)",
          "parameters": [
            {
              "js": "9",
              "sol": "9"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.898ZProxyMerkleShip.test_checkShipCount": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_checkShipCount(string[64])",
          "parameters": [
            {
              "js": "[\"verified victory by hit count\",\"uzfxm8\",\"uzfxm8\",\"n890xk\",\"victory by concession\",\"xxq0s\",\"victory by unanswered challenge\",\"victory by concession\",\"victory by abandonment\",\"verified victory by hit count\",\"n890xk\",\"bj00ja\",\"77cf3m\",\"bj00ja\",\"77cf3m\",\"n890xk\",\"xxq0s\",\"verified victory by hit count\",\"dwie4q\",\"xxq0s\",\"victory by unanswered challenge\",\"verified victory by hit count\",\"victory by abandonment\",\"victory by unanswered challenge\",\"victory by unchallenged hit count\",\"ox243l\",\"77cf3m\",\"77cf3m\",\"uzfxm8\",\"77cf3m\",\"uzfxm8\",\"victory by unchallenged hit count\",\"verified victory by hit count\",\"victory by abandonment\",\"victory by abandonment\",\"verified victory by hit count\",\"uzfxm8\",\"game resolved in an emergency\",\"n890xk\",\"77cf3m\",\"game resolved in an emergency\",\"xxq0s\",\"game resolved in an emergency\",\"victory by unanswered challenge\",\"dwie4q\",\"uzfxm8\",\"wem54n\",\"verified victory by hit count\",\"uzfxm8\",\"n890xk\",\"game resolved in an emergency\",\"n890xk\",\"verified victory by hit count\",\"victory by concession\",\"verified victory by hit count\",\"uzfxm8\",\"victory by abandonment\",\"bj00ja\",\"wem54n\",\"ox243l\",\"ox243l\",\"uzfxm8\",\"victory by concession\",\"game resolved in an emergency\"]",
              "sol": "[string(\"verified victory by hit count\"),string(\"uzfxm8\"),string(\"uzfxm8\"),string(\"n890xk\"),string(\"victory by concession\"),string(\"xxq0s\"),string(\"victory by unanswered challenge\"),string(\"victory by concession\"),string(\"victory by abandonment\"),string(\"verified victory by hit count\"),string(\"n890xk\"),string(\"bj00ja\"),string(\"77cf3m\"),string(\"bj00ja\"),string(\"77cf3m\"),string(\"n890xk\"),string(\"xxq0s\"),string(\"verified victory by hit count\"),string(\"dwie4q\"),string(\"xxq0s\"),string(\"victory by unanswered challenge\"),string(\"verified victory by hit count\"),string(\"victory by abandonment\"),string(\"victory by unanswered challenge\"),string(\"victory by unchallenged hit count\"),string(\"ox243l\"),string(\"77cf3m\"),string(\"77cf3m\"),string(\"uzfxm8\"),string(\"77cf3m\"),string(\"uzfxm8\"),string(\"victory by unchallenged hit count\"),string(\"verified victory by hit count\"),string(\"victory by abandonment\"),string(\"victory by abandonment\"),string(\"verified victory by hit count\"),string(\"uzfxm8\"),string(\"game resolved in an emergency\"),string(\"n890xk\"),string(\"77cf3m\"),string(\"game resolved in an emergency\"),string(\"xxq0s\"),string(\"game resolved in an emergency\"),string(\"victory by unanswered challenge\"),string(\"dwie4q\"),string(\"uzfxm8\"),string(\"wem54n\"),string(\"verified victory by hit count\"),string(\"uzfxm8\"),string(\"n890xk\"),string(\"game resolved in an emergency\"),string(\"n890xk\"),string(\"verified victory by hit count\"),string(\"victory by concession\"),string(\"verified victory by hit count\"),string(\"uzfxm8\"),string(\"victory by abandonment\"),string(\"bj00ja\"),string(\"wem54n\"),string(\"ox243l\"),string(\"ox243l\"),string(\"uzfxm8\"),string(\"victory by concession\"),string(\"game resolved in an emergency\")]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.898ZProxyMerkleShip.test_checkShipLength": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_checkShipLength(string[64])",
          "parameters": [
            {
              "js": "[\"dwie4q\",\"n890xk\",\"dwie4q\",\"verified victory by hit count\",\"victory by unanswered challenge\",\"victory by unanswered challenge\",\"dwie4q\",\"77cf3m\",\"victory by abandonment\",\"victory by concession\",\"n890xk\",\"game resolved in an emergency\",\"game resolved in an emergency\",\"hpnnet\",\"hpnnet\",\"u188l7\",\"uzfxm8\",\"verified victory by hit count\",\"game resolved in an emergency\",\"uzfxm8\",\"verified victory by hit count\",\"verified victory by hit count\",\"verified victory by hit count\",\"wem54n\",\"77cf3m\",\"7kjez4b\",\"victory by concession\",\"7kjez4b\",\"victory by unchallenged hit count\",\"7kjez4b\",\"victory by unchallenged hit count\",\"victory by unanswered challenge\",\"dwie4q\",\"bj00ja\",\"uzfxm8\",\"ox243l\",\"uzfxm8\",\"victory by abandonment\",\"bj00ja\",\"n890xk\",\"game resolved in an emergency\",\"u188l7\",\"victory by unchallenged hit count\",\"ox243l\",\"u188l7\",\"n890xk\",\"77cf3m\",\"victory by concession\",\"victory by concession\",\"hpnnet\",\"xxq0s\",\"victory by unanswered challenge\",\"n890xk\",\"dwie4q\",\"game resolved in an emergency\",\"ox243l\",\"victory by unchallenged hit count\",\"n890xk\",\"victory by unchallenged hit count\",\"e45rgl\",\"victory by unchallenged hit count\",\"verified victory by hit count\",\"victory by concession\",\"bj00ja\"]",
              "sol": "[string(\"dwie4q\"),string(\"n890xk\"),string(\"dwie4q\"),string(\"verified victory by hit count\"),string(\"victory by unanswered challenge\"),string(\"victory by unanswered challenge\"),string(\"dwie4q\"),string(\"77cf3m\"),string(\"victory by abandonment\"),string(\"victory by concession\"),string(\"n890xk\"),string(\"game resolved in an emergency\"),string(\"game resolved in an emergency\"),string(\"hpnnet\"),string(\"hpnnet\"),string(\"u188l7\"),string(\"uzfxm8\"),string(\"verified victory by hit count\"),string(\"game resolved in an emergency\"),string(\"uzfxm8\"),string(\"verified victory by hit count\"),string(\"verified victory by hit count\"),string(\"verified victory by hit count\"),string(\"wem54n\"),string(\"77cf3m\"),string(\"7kjez4b\"),string(\"victory by concession\"),string(\"7kjez4b\"),string(\"victory by unchallenged hit count\"),string(\"7kjez4b\"),string(\"victory by unchallenged hit count\"),string(\"victory by unanswered challenge\"),string(\"dwie4q\"),string(\"bj00ja\"),string(\"uzfxm8\"),string(\"ox243l\"),string(\"uzfxm8\"),string(\"victory by abandonment\"),string(\"bj00ja\"),string(\"n890xk\"),string(\"game resolved in an emergency\"),string(\"u188l7\"),string(\"victory by unchallenged hit count\"),string(\"ox243l\"),string(\"u188l7\"),string(\"n890xk\"),string(\"77cf3m\"),string(\"victory by concession\"),string(\"victory by concession\"),string(\"hpnnet\"),string(\"xxq0s\"),string(\"victory by unanswered challenge\"),string(\"n890xk\"),string(\"dwie4q\"),string(\"game resolved in an emergency\"),string(\"ox243l\"),string(\"victory by unchallenged hit count\"),string(\"n890xk\"),string(\"victory by unchallenged hit count\"),string(\"e45rgl\"),string(\"victory by unchallenged hit count\"),string(\"verified victory by hit count\"),string(\"victory by concession\"),string(\"bj00ja\")]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.899ZProxyMerkleShip.test_hashEach": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_hashEach(string[64])",
          "parameters": [
            {
              "js": "[\"game resolved in an emergency\",\"wem54n\",\"77cf3m\",\"game resolved in an emergency\",\"victory by unchallenged hit count\",\"hpnnet\",\"77cf3m\",\"wem54n\",\"game resolved in an emergency\",\"uzfxm8\",\"victory by unanswered challenge\",\"victory by abandonment\",\"uzfxm8\",\"victory by abandonment\",\"ox243l\",\"xxq0s\",\"hpnnet\",\"dwie4q\",\"hpnnet\",\"verified victory by hit count\",\"e45rgl\",\"hpnnet\",\"u188l7\",\"xxq0s\",\"bj00ja\",\"ox243l\",\"ox243l\",\"77cf3m\",\"verified victory by hit count\",\"e45rgl\",\"7kjez4b\",\"bj00ja\",\"dwie4q\",\"7kjez4b\",\"hgl3ac\",\"victory by unanswered challenge\",\"victory by unanswered challenge\",\"uzfxm8\",\"victory by concession\",\"dwie4q\",\"xxq0s\",\"e45rgl\",\"bj00ja\",\"victory by abandonment\",\"ox243l\",\"dwie4q\",\"n890xk\",\"xxq0s\",\"verified victory by hit count\",\"ox243l\",\"uzfxm8\",\"n890xk\",\"77cf3m\",\"n890xk\",\"bj00ja\",\"e45rgl\",\"xxq0s\",\"n890xk\",\"verified victory by hit count\",\"ox243l\",\"77cf3m\",\"7kjez4b\",\"verified victory by hit count\",\"victory by concession\"]",
              "sol": "[string(\"game resolved in an emergency\"),string(\"wem54n\"),string(\"77cf3m\"),string(\"game resolved in an emergency\"),string(\"victory by unchallenged hit count\"),string(\"hpnnet\"),string(\"77cf3m\"),string(\"wem54n\"),string(\"game resolved in an emergency\"),string(\"uzfxm8\"),string(\"victory by unanswered challenge\"),string(\"victory by abandonment\"),string(\"uzfxm8\"),string(\"victory by abandonment\"),string(\"ox243l\"),string(\"xxq0s\"),string(\"hpnnet\"),string(\"dwie4q\"),string(\"hpnnet\"),string(\"verified victory by hit count\"),string(\"e45rgl\"),string(\"hpnnet\"),string(\"u188l7\"),string(\"xxq0s\"),string(\"bj00ja\"),string(\"ox243l\"),string(\"ox243l\"),string(\"77cf3m\"),string(\"verified victory by hit count\"),string(\"e45rgl\"),string(\"7kjez4b\"),string(\"bj00ja\"),string(\"dwie4q\"),string(\"7kjez4b\"),string(\"hgl3ac\"),string(\"victory by unanswered challenge\"),string(\"victory by unanswered challenge\"),string(\"uzfxm8\"),string(\"victory by concession\"),string(\"dwie4q\"),string(\"xxq0s\"),string(\"e45rgl\"),string(\"bj00ja\"),string(\"victory by abandonment\"),string(\"ox243l\"),string(\"dwie4q\"),string(\"n890xk\"),string(\"xxq0s\"),string(\"verified victory by hit count\"),string(\"ox243l\"),string(\"uzfxm8\"),string(\"n890xk\"),string(\"77cf3m\"),string(\"n890xk\"),string(\"bj00ja\"),string(\"e45rgl\"),string(\"xxq0s\"),string(\"n890xk\"),string(\"verified victory by hit count\"),string(\"ox243l\"),string(\"77cf3m\"),string(\"7kjez4b\"),string(\"verified victory by hit count\"),string(\"victory by concession\")]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.900ZProxyMerkleShip.test_sortArray": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_sortArray(bytes32[])",
          "parameters": [
            {
              "js": "[[89,77,202,26,10,72,203,183,249,14,4,232,226,160,9,104,38,135,33,186,119,218,243,189,171,52,112,96,22,137,8,239],[205,197,227,226,25,219,73,153,20,23,62,172,132,82,148,57,154,122,132,210,133,36,23,45,89,222,26,58,221,157,106,253],[181,159,8,230,82,117,230,92,142,38,85,6,244,38,203,60,227,205,169,129,85,240,28,243,143,51,15,17,188,185,85,4]]",
              "sol": "[bytes32(stringToBytes32(\"89,77,202,26,10,72,203,183,249,14,4,232,226,160,9,104,38,135,33,186,119,218,243,189,171,52,112,96,22,137,8,239\")),bytes32(stringToBytes32(\"205,197,227,226,25,219,73,153,20,23,62,172,132,82,148,57,154,122,132,210,133,36,23,45,89,222,26,58,221,157,106,253\")),bytes32(stringToBytes32(\"181,159,8,230,82,117,230,92,142,38,85,6,244,38,203,60,227,205,169,129,85,240,28,243,143,51,15,17,188,185,85,4\"))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.900ZProxyMerkleShip.test_quickSort": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_quickSort(bytes32[],int,int)",
          "parameters": [
            {
              "js": "[[226,139,33,142,246,224,207,37,252,138,19,86,88,210,35,196,192,92,86,79,1,2,35,167,128,38,214,15,74,186,62,64],[186,211,74,137,102,46,184,188,28,13,148,157,236,220,56,6,199,9,245,181,168,62,172,101,121,120,188,174,231,76,15,177],[249,229,216,248,19,199,203,127,13,41,12,68,195,226,239,108,171,171,132,46,105,90,214,117,79,222,108,246,37,218,96,224],[32,159,61,20,207,214,4,4,109,76,158,151,242,27,77,47,194,27,246,254,115,151,82,97,194,43,74,22,71,152,238,196],[63,191,253,226,94,52,196,49,126,244,171,55,225,54,40,160,42,61,55,127,39,254,22,33,245,49,63,37,109,204,216,68],[70,111,220,146,206,217,0,185,48,211,154,197,73,84,78,39,102,179,59,217,43,42,86,84,83,159,157,246,210,154,169,107]]",
              "sol": "[bytes32(stringToBytes32(\"226,139,33,142,246,224,207,37,252,138,19,86,88,210,35,196,192,92,86,79,1,2,35,167,128,38,214,15,74,186,62,64\")),bytes32(stringToBytes32(\"186,211,74,137,102,46,184,188,28,13,148,157,236,220,56,6,199,9,245,181,168,62,172,101,121,120,188,174,231,76,15,177\")),bytes32(stringToBytes32(\"249,229,216,248,19,199,203,127,13,41,12,68,195,226,239,108,171,171,132,46,105,90,214,117,79,222,108,246,37,218,96,224\")),bytes32(stringToBytes32(\"32,159,61,20,207,214,4,4,109,76,158,151,242,27,77,47,194,27,246,254,115,151,82,97,194,43,74,22,71,152,238,196\")),bytes32(stringToBytes32(\"63,191,253,226,94,52,196,49,126,244,171,55,225,54,40,160,42,61,55,127,39,254,22,33,245,49,63,37,109,204,216,68\")),bytes32(stringToBytes32(\"70,111,220,146,206,217,0,185,48,211,154,197,73,84,78,39,102,179,59,217,43,42,86,84,83,159,157,246,210,154,169,107\"))]"
            },
            {
              "js": "179",
              "sol": "179"
            },
            {
              "js": "47",
              "sol": "47"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.901ZProxyMerkleShip.test_computeMerkleTree": {
    "branches": {
      "0": {
        "branch": {
          "loc": "948-964",
          "restrictions": [
            "_data.length >= 2"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_computeMerkleTree(bytes32[]) WHEN _data.length>=2",
          "parameters": [
            {
              "js": "[[153,5,228,155,118,192,71,46,184,20,125,254,90,41,167,98,56,103,101,249,60,175,195,85,222,71,111,179,108,230,74,145],[115,211,199,187,135,194,64,34,16,251,100,133,16,110,234,81,179,166,48,175,87,26,91,69,99,15,134,112,242,155,144,204],[212,62,176,186,182,235,99,191,241,152,177,14,149,133,51,27,62,180,171,234,238,135,63,31,147,89,164,34,175,186,11,63],[215,52,40,198,222,108,7,248,21,160,112,189,247,245,6,144,121,184,245,5,244,106,137,213,219,133,90,147,238,138,86,166],[234,53,104,172,255,114,121,102,129,21,225,173,22,20,12,232,33,32,153,29,132,15,196,175,135,236,20,38,52,102,90,15],[111,13,245,116,193,24,172,21,23,150,111,57,3,239,113,52,198,217,120,76,113,2,142,147,187,50,88,160,107,59,58,109],[241,89,145,0,240,158,67,151,202,167,230,243,40,165,26,202,29,209,90,78,221,204,119,18,40,164,44,73,20,41,137,126],[234,86,106,151,215,22,90,148,172,186,154,72,84,253,202,19,152,249,190,89,120,93,252,166,181,119,36,157,15,145,93,228],[121,38,146,104,200,89,103,135,158,208,33,49,221,56,83,234,67,240,216,36,139,20,175,48,224,114,217,241,161,28,234,220],[82,93,13,123,170,142,199,186,147,118,161,154,93,254,192,77,63,185,57,178,95,236,52,95,110,35,63,140,144,11,97,89],[103,49,75,245,162,181,150,30,115,94,36,247,135,12,244,174,106,181,109,80,137,229,148,121,101,86,173,76,228,35,129,220],[189,111,71,35,241,106,216,223,113,229,225,176,182,9,194,196,33,254,164,19,73,128,144,88,172,181,190,68,176,163,82,130],[49,184,8,150,52,181,29,173,105,97,43,53,141,163,236,127,223,199,204,108,135,58,236,155,132,106,229,215,43,103,220,91],[52,57,240,225,181,179,70,39,128,245,43,163,221,63,177,13,140,67,166,188,192,52,140,184,59,203,127,137,171,234,77,151],[194,206,138,230,43,42,53,168,137,158,105,239,210,53,115,19,18,177,4,147,136,47,21,150,150,194,119,248,129,138,159,27],[202,37,174,38,210,47,104,142,82,152,28,77,186,99,207,150,208,182,113,249,112,248,138,11,190,132,142,31,150,119,66,50],[229,8,175,191,23,192,164,57,201,156,86,167,202,14,138,225,229,83,223,243,227,22,125,180,114,62,19,115,32,80,201,248],[154,118,179,194,80,33,50,126,176,144,215,101,181,220,6,238,237,147,245,181,78,127,83,204,228,61,97,161,145,219,164,78],[241,241,198,244,184,109,228,94,92,86,193,179,126,91,245,21,101,91,47,45,244,88,12,207,171,102,57,76,77,138,41,14],[118,213,149,34,19,182,131,235,17,195,169,128,63,78,176,110,133,251,161,192,26,79,211,112,17,138,218,41,175,242,230,77],[63,78,57,121,3,0,145,183,200,172,138,175,79,135,151,49,223,229,254,67,191,78,56,119,55,172,205,215,194,12,56,235],[12,251,236,182,176,194,193,15,61,101,186,146,59,153,134,2,105,30,191,117,207,169,117,15,118,26,86,151,27,176,249,188],[204,90,154,71,61,120,210,65,99,156,105,128,112,176,177,195,198,117,71,186,178,45,177,22,204,205,223,52,101,134,83,89],[47,62,245,6,65,154,124,194,4,69,64,225,78,125,249,62,104,69,200,24,24,126,199,47,111,162,181,81,155,75,88,136],[136,130,96,204,240,9,223,229,183,167,178,151,78,168,198,218,19,68,108,190,156,136,152,215,98,54,236,5,141,222,178,250],[39,18,46,242,20,239,249,239,95,232,243,200,201,102,158,175,210,109,10,7,192,162,205,202,76,217,166,15,153,119,51,75],[62,131,88,66,106,171,43,16,186,8,30,87,230,200,24,247,32,50,141,110,2,101,245,239,247,207,64,247,179,148,197,108],[54,45,248,217,56,180,2,199,201,43,40,247,111,54,140,188,52,117,138,87,64,85,122,136,39,11,57,157,69,43,251,9],[13,93,125,24,118,103,182,51,228,218,115,163,40,170,72,52,41,56,8,74,48,120,34,128,78,188,110,124,79,198,64,229],[209,68,243,216,206,251,141,242,217,140,235,185,54,151,207,106,140,107,88,255,174,176,111,130,248,1,2,217,242,190,58,188],[2,220,214,59,219,132,134,109,15,65,148,181,118,124,191,114,94,207,249,204,11,103,175,220,86,162,76,182,76,107,125,227],[19,104,72,187,12,204,203,211,0,191,22,120,96,77,250,220,167,239,68,211,68,206,42,171,248,173,153,249,206,169,22,13],[68,85,11,172,125,55,255,219,233,127,199,209,79,160,226,80,214,91,92,19,199,6,103,83,132,92,174,2,88,160,192,156],[206,159,190,226,145,18,12,120,238,119,76,92,15,75,123,143,159,156,223,182,206,77,215,209,46,81,75,251,152,255,162,164],[68,114,92,141,171,6,22,150,109,4,206,153,172,49,238,243,119,117,242,20,1,172,163,206,117,18,221,58,164,53,123,52],[226,222,167,184,8,71,155,43,186,220,85,152,161,65,164,37,53,225,231,11,71,230,224,210,36,63,33,39,90,186,50,47],[20,16,46,182,58,240,238,254,240,108,108,234,130,73,130,75,44,145,92,141,124,84,30,192,178,88,189,241,80,200,199,108],[112,3,158,17,160,72,206,119,113,25,39,23,41,126,2,248,89,60,179,243,21,206,7,20,203,125,83,230,165,255,164,128],[68,161,2,150,201,9,61,83,10,131,73,91,59,175,159,225,49,241,65,118,88,38,3,233,45,20,154,100,41,65,120,30],[37,182,1,112,101,166,239,191,111,210,188,87,53,195,125,129,192,47,148,221,165,121,4,244,66,244,165,90,170,254,217,71],[121,55,108,127,246,146,224,180,211,132,188,46,137,98,26,246,70,194,151,120,73,15,244,5,194,67,50,159,182,63,24,41],[221,158,55,199,112,84,46,82,96,60,244,139,221,178,127,230,162,198,143,130,11,229,94,36,182,110,4,63,213,21,85,40],[173,170,77,85,219,108,227,200,122,104,119,121,135,81,249,101,140,2,92,194,138,2,15,147,190,144,30,144,136,77,153,197],[132,10,134,156,192,174,98,62,228,139,217,227,80,27,230,97,31,32,152,69,216,154,117,46,6,38,148,236,238,55,17,153],[167,246,249,37,100,170,248,141,165,170,32,161,97,88,188,22,233,144,249,195,214,122,205,116,229,119,2,172,222,131,225,229],[242,62,243,128,117,13,88,17,98,76,51,140,35,193,235,237,160,55,91,184,44,72,189,220,154,21,88,66,184,102,156,32],[177,1,110,212,131,193,143,10,52,141,90,127,229,235,252,173,26,234,19,177,227,8,173,149,8,126,128,58,118,133,104,13],[188,67,74,165,204,45,248,222,100,8,231,184,34,141,23,166,142,248,69,128,99,228,162,226,233,217,10,114,213,227,73,58],[19,29,49,112,236,92,135,89,203,187,238,135,21,184,27,146,93,116,159,43,0,226,174,234,70,182,118,181,84,102,23,230],[153,117,194,252,204,121,87,65,243,63,168,118,132,41,205,119,223,80,60,198,164,233,66,226,232,166,128,175,93,251,172,140],[0,4,110,151,69,231,217,65,86,230,221,16,0,34,111,77,69,41,74,218,198,202,198,104,111,3,254,157,255,206,106,156],[147,23,47,193,165,103,136,249,34,201,98,40,95,62,186,150,67,229,253,193,68,193,59,203,20,157,158,229,185,56,15,175],[142,139,91,223,141,164,119,152,192,181,20,235,124,26,6,162,155,6,52,88,122,231,244,245,103,154,253,125,244,159,7,172],[202,49,96,37,141,133,249,219,84,178,92,184,76,54,172,41,22,72,20,251,45,136,113,6,176,79,240,230,202,233,27,255],[36,150,90,236,91,79,187,49,128,238,131,75,34,192,48,187,160,6,29,165,246,167,3,82,181,133,2,25,241,223,234,46],[12,142,252,175,143,7,102,155,209,207,232,143,69,16,37,102,58,225,21,154,12,123,82,142,100,115,202,129,181,207,46,79],[107,162,250,222,234,59,151,87,4,50,80,49,104,198,147,236,33,251,165,130,72,20,1,56,220,157,249,237,128,63,49,31],[104,109,85,157,49,140,141,237,22,11,96,78,142,190,104,248,102,11,113,248,248,83,50,199,11,203,75,214,85,84,189,245],[34,21,119,4,135,134,27,25,63,204,78,230,162,1,234,44,84,112,222,125,226,85,14,188,140,137,176,184,161,249,108,44],[92,82,90,56,107,254,89,168,142,123,250,97,122,127,227,255,149,196,172,116,123,53,193,202,227,38,221,7,149,50,137,131],[227,153,207,170,187,180,138,206,247,47,6,56,141,202,189,73,85,49,198,75,99,51,156,217,241,99,231,57,119,183,254,230],[253,94,179,94,61,159,2,195,219,184,107,208,190,122,138,132,100,43,39,61,65,228,43,215,117,42,221,202,179,192,28,162],[197,174,144,158,49,77,84,173,144,31,151,167,216,92,140,152,45,101,170,197,249,185,160,109,152,123,116,46,70,50,94,109],[116,221,122,67,42,102,72,121,203,20,75,73,223,23,90,180,255,231,18,4,206,240,17,244,142,130,102,121,136,86,56,33],[183,38,84,82,165,54,241,224,236,188,74,233,197,241,139,10,255,255,113,89,186,211,233,117,53,80,96,255,207,34,83,230],[201,120,35,124,73,129,188,239,187,240,92,205,126,223,234,198,27,189,250,39,162,163,54,255,39,126,13,189,255,19,73,38],[20,5,186,62,88,27,65,204,246,208,45,206,49,233,117,134,38,183,153,32,212,119,215,23,92,38,243,5,221,71,73,121],[118,162,135,74,77,147,208,203,102,21,140,25,53,216,40,130,135,166,206,1,3,15,96,123,229,156,203,19,96,220,186,74],[184,3,227,106,112,242,235,200,31,37,92,252,101,132,65,50,29,214,38,16,80,74,245,68,255,113,189,139,194,242,89,83],[57,99,180,21,15,248,220,82,233,97,197,42,17,175,93,29,58,43,92,208,59,213,171,88,217,217,58,24,237,165,50,246],[70,147,202,208,200,43,208,36,162,77,171,75,198,93,226,172,129,25,252,187,180,252,79,142,121,7,231,140,57,128,58,142],[84,131,169,69,37,206,169,200,189,213,209,245,69,167,137,191,122,136,86,17,127,214,255,37,249,39,147,157,182,9,34,161],[23,5,45,45,87,78,180,215,230,51,190,20,245,46,0,118,122,3,109,56,22,190,69,225,82,240,161,36,162,202,73,115],[194,136,14,143,56,94,217,171,186,51,51,3,107,128,110,200,175,242,63,231,223,205,230,23,154,57,131,21,43,56,104,185],[101,9,48,61,129,128,217,69,228,50,136,118,225,71,76,198,11,107,195,196,190,246,214,167,253,51,51,4,122,75,207,64],[219,91,45,183,48,52,17,118,79,53,155,157,17,109,5,242,81,98,126,152,0,172,90,159,139,201,60,223,113,92,167,54],[91,197,66,3,255,92,80,151,119,194,106,220,235,82,31,217,71,96,209,64,23,157,108,142,23,123,238,228,156,69,251,110],[212,219,168,11,246,8,102,106,97,26,126,25,47,51,132,146,244,71,128,175,143,235,75,194,25,79,237,200,26,161,167,159],[8,25,131,81,90,171,121,51,90,73,132,196,75,187,224,4,186,191,104,209,185,169,50,79,21,5,236,200,250,182,113,108],[200,151,234,100,10,153,102,181,73,182,68,149,29,216,65,72,52,238,14,219,208,229,126,216,15,37,185,30,122,8,125,106],[123,29,169,156,110,33,197,199,76,79,148,83,224,115,82,92,33,254,194,16,89,156,19,160,237,94,58,103,98,41,13,104],[189,233,21,164,40,52,184,48,196,63,160,74,140,106,146,221,73,157,90,21,11,212,186,80,32,116,231,34,230,31,31,102],[115,88,0,220,160,218,220,117,118,70,222,227,44,100,84,54,81,211,129,152,150,45,163,54,38,2,248,145,54,51,151,72],[159,73,41,216,99,172,111,129,16,84,154,105,73,244,155,56,183,130,63,187,82,91,220,72,27,228,90,33,141,183,6,172],[228,16,174,50,80,222,131,127,48,41,109,154,80,216,255,178,105,225,46,183,30,29,8,152,149,23,129,253,176,92,37,139],[104,131,138,214,169,22,11,74,13,216,123,7,195,184,197,39,91,152,101,226,57,84,101,44,144,210,179,253,39,137,255,227],[19,21,212,51,165,65,68,117,188,51,13,46,108,50,74,203,145,26,41,213,151,151,228,148,110,37,141,224,23,15,212,87],[145,33,47,208,4,137,174,116,73,33,31,41,124,122,171,121,38,79,186,75,56,134,88,216,148,197,217,89,158,207,251,208],[248,58,181,171,67,223,89,234,124,100,99,91,66,235,254,32,172,146,59,213,3,101,20,80,141,171,251,189,185,173,171,137],[109,248,213,158,10,148,50,88,156,233,62,210,45,255,93,214,80,99,104,241,38,12,62,72,119,37,203,211,12,255,20,179],[149,169,41,28,4,57,112,103,218,124,16,77,189,57,230,196,252,37,120,191,17,14,248,44,141,137,163,81,139,136,3,44],[87,184,90,21,23,67,251,116,98,106,49,209,139,232,120,127,29,14,19,5,11,196,126,166,187,120,248,220,140,168,202,41],[20,27,148,44,127,240,52,68,141,110,162,74,45,168,171,229,97,148,72,74,241,71,183,80,177,60,99,102,249,27,80,131],[139,170,10,241,36,208,21,208,128,78,48,190,152,5,71,181,214,249,213,238,28,214,230,163,56,152,26,148,118,173,19,158],[167,127,32,13,140,92,244,33,112,218,43,12,80,127,87,177,155,58,46,49,139,186,223,142,121,216,250,215,153,146,212,111],[246,2,235,248,71,135,32,194,251,229,41,241,8,78,220,238,23,13,75,178,202,212,45,145,200,88,205,15,169,1,118,126],[142,201,14,229,109,108,74,185,108,15,165,75,106,83,15,121,83,88,216,39,237,170,5,69,190,214,18,191,196,175,238,105],[136,166,32,12,209,69,10,71,87,33,218,96,75,61,19,221,112,95,164,88,249,202,206,238,47,148,250,246,40,234,143,137],[156,28,234,163,119,240,50,99,245,210,17,45,77,133,217,195,174,246,180,134,223,123,22,62,179,92,161,226,115,6,164,17],[52,14,9,51,167,10,132,181,172,25,132,224,161,56,208,104,77,211,160,196,141,172,92,94,122,107,1,20,198,216,36,22],[249,154,27,13,226,3,163,251,130,104,138,178,221,61,9,100,83,243,44,235,67,79,29,102,67,36,138,21,131,25,91,128],[122,22,178,190,189,78,147,115,219,103,182,211,21,68,78,231,186,165,59,127,51,74,220,134,174,83,184,214,245,153,222,187],[145,226,124,70,2,39,204,131,105,179,61,0,104,5,247,64,187,168,168,59,19,223,15,220,201,226,109,1,145,160,15,164],[249,105,175,174,20,13,99,241,159,141,37,29,17,211,205,40,203,37,0,122,23,99,244,195,243,139,168,243,155,47,49,150],[150,42,118,200,235,113,9,136,119,23,108,246,153,135,48,35,107,96,58,242,30,214,248,59,194,19,37,84,98,187,83,156],[145,37,126,27,167,133,109,248,20,82,206,234,212,153,39,55,171,58,22,88,222,89,220,221,23,67,74,111,220,147,255,247],[54,89,29,6,62,169,188,255,158,129,236,126,31,137,245,245,30,46,235,223,249,242,105,232,117,171,170,51,49,30,245,110],[106,211,31,15,35,243,135,119,121,89,206,203,115,104,34,113,166,38,183,67,180,224,253,211,64,222,64,191,111,96,77,140],[153,5,29,220,252,29,157,36,79,172,228,49,9,104,178,156,135,83,106,252,115,33,85,189,205,222,143,92,102,90,84,194],[246,162,117,166,251,5,14,170,240,42,170,237,187,185,146,11,127,84,238,200,155,74,238,4,94,209,30,30,74,169,174,59],[86,149,171,37,237,107,37,120,63,143,83,179,237,234,248,164,35,45,81,223,102,201,73,52,188,172,3,125,181,245,141,211],[252,191,46,214,153,85,209,134,176,222,1,64,161,173,118,154,63,176,57,29,210,84,54,212,12,106,111,136,20,210,94,83],[186,40,216,245,162,197,254,73,15,65,44,62,59,155,175,208,239,78,214,4,202,203,174,233,238,158,158,111,180,31,215,30],[40,243,28,4,207,87,200,196,73,46,185,221,202,70,232,119,86,214,202,6,167,50,18,236,40,15,232,166,53,61,53,164],[83,55,230,177,99,121,96,168,37,29,216,21,149,31,47,212,90,14,16,76,171,204,213,17,14,84,9,195,91,75,251,75],[176,41,72,86,85,20,131,248,167,150,220,153,94,108,29,246,165,47,26,197,199,150,176,71,211,207,90,223,97,15,136,167],[24,39,2,86,195,115,81,139,48,91,253,103,78,238,169,30,16,83,197,205,122,125,152,166,238,165,49,180,177,174,188,83],[23,195,153,161,246,142,116,248,173,92,98,105,227,34,69,214,105,124,230,200,62,12,71,132,95,156,236,237,18,20,229,176],[130,77,167,165,165,190,232,228,53,180,198,239,79,140,98,6,178,23,174,99,33,166,114,43,91,146,33,127,23,90,244,248],[28,149,106,116,22,1,65,57,3,146,70,17,239,151,177,240,69,191,192,124,244,44,139,18,53,45,118,54,21,34,1,51],[120,158,84,84,128,147,210,67,93,38,89,228,83,190,225,163,162,252,13,6,122,136,77,194,18,99,16,112,7,211,0,30],[166,145,5,17,108,175,250,220,27,189,222,124,196,15,251,113,144,223,25,160,63,116,200,52,28,117,149,218,185,194,161,55],[170,241,51,61,218,96,154,35,139,63,182,70,238,144,162,41,186,54,136,244,134,31,222,0,144,224,60,118,62,178,225,46],[225,131,54,103,54,93,169,88,232,201,198,240,193,21,50,141,172,252,246,210,108,68,167,239,134,41,227,177,7,218,178,136],[125,212,215,62,24,249,181,186,36,234,119,85,181,34,49,58,204,28,122,146,42,212,138,208,30,178,45,90,197,0,47,97],[145,156,200,246,28,122,112,223,99,247,246,38,232,59,37,97,54,103,161,38,254,26,184,167,66,86,66,14,42,6,139,173],[78,17,207,165,80,46,210,2,103,76,191,130,244,37,26,31,114,115,80,51,12,114,163,28,31,153,134,65,25,23,219,57],[35,45,250,73,228,129,251,93,217,237,14,75,255,3,170,196,53,188,247,44,84,135,211,94,230,173,232,122,5,3,236,129],[196,195,107,74,38,28,241,12,91,49,4,143,189,12,54,181,142,136,128,76,144,253,66,217,96,61,227,122,180,228,15,21],[246,146,208,138,180,169,28,21,140,129,182,203,193,180,90,118,115,237,6,15,118,2,186,42,153,124,243,66,163,167,92,75],[133,40,254,231,64,150,176,53,154,141,18,189,88,132,188,119,19,162,96,155,130,255,174,250,128,107,76,145,55,52,166,22],[133,177,213,21,91,234,181,184,94,194,177,32,110,74,142,180,4,184,234,67,3,61,8,118,94,64,180,169,68,79,123,164],[236,102,38,49,7,242,142,126,23,7,50,41,233,73,70,199,69,184,247,55,88,116,16,116,79,237,80,219,32,178,74,46],[155,127,113,236,209,32,185,186,158,98,66,19,155,236,121,57,163,118,103,60,225,91,238,109,66,215,185,104,40,134,144,8],[91,206,115,106,234,115,227,59,6,30,240,32,184,139,108,44,57,51,61,210,214,221,92,87,252,111,137,45,84,142,18,58],[176,215,179,245,251,206,223,214,83,89,132,147,250,121,159,136,73,253,189,224,62,219,71,253,19,161,243,138,189,207,166,238],[142,19,250,195,142,49,221,255,96,209,213,39,53,184,50,178,152,85,29,217,109,109,177,124,160,88,88,220,223,158,186,24],[49,163,191,43,219,167,53,196,43,125,105,105,198,160,194,182,49,44,132,108,251,29,93,228,167,155,175,217,113,7,102,16],[251,74,167,215,97,14,52,65,31,122,180,129,114,113,52,105,81,192,11,247,101,100,226,196,5,98,74,242,219,68,101,181],[196,208,231,170,187,203,86,62,108,227,204,96,217,164,90,166,133,178,126,36,225,238,31,20,45,100,236,191,165,83,126,231],[113,41,43,17,147,55,89,182,157,166,243,63,38,124,231,73,56,248,26,160,127,94,185,41,34,151,47,91,187,109,251,169],[181,163,16,253,130,5,150,173,240,154,81,57,98,82,39,234,46,50,130,131,140,236,15,104,254,162,11,65,143,117,230,130],[65,108,171,217,172,226,248,128,207,187,61,126,17,97,93,63,161,227,236,117,88,114,208,15,16,164,29,1,119,104,89,119],[103,147,186,166,251,23,52,58,72,231,36,53,62,86,2,159,238,158,164,227,102,63,251,5,69,206,16,7,6,252,138,54],[209,203,150,153,206,183,27,186,51,160,144,217,39,100,195,253,34,204,186,141,39,202,197,9,124,212,159,174,78,152,94,233],[61,43,207,157,102,115,101,197,77,69,102,99,240,23,87,37,165,231,119,101,52,10,230,45,247,230,11,126,65,161,58,129],[120,137,29,157,91,239,113,43,210,220,98,84,132,227,156,182,68,156,243,226,206,208,25,180,136,100,187,114,245,58,199,115],[239,68,113,239,47,189,84,5,127,27,52,182,6,69,66,14,94,115,200,181,136,140,6,229,223,84,222,5,51,62,74,77],[169,205,160,129,122,112,38,72,152,20,71,195,33,150,195,6,93,96,177,151,87,40,117,223,240,90,180,120,138,86,119,172],[248,225,229,88,237,137,216,35,83,31,254,93,137,226,40,23,199,179,163,234,158,240,169,111,1,31,174,57,78,65,6,76],[118,218,11,250,11,170,2,35,173,110,216,253,28,206,57,203,101,93,73,232,116,81,123,145,92,185,164,52,248,82,171,130],[105,121,134,120,14,94,90,185,179,235,129,50,214,119,138,42,253,151,147,191,14,90,150,224,65,181,105,78,186,137,135,13],[97,60,154,2,136,205,151,254,147,207,217,8,109,102,146,227,70,39,25,106,219,5,62,49,128,177,211,153,47,252,181,240],[157,44,35,126,44,225,31,185,56,111,148,16,205,101,191,212,145,90,230,233,97,93,2,92,232,82,69,90,193,43,152,200],[41,28,59,221,24,24,233,179,201,236,57,106,139,104,19,132,212,76,35,236,151,170,123,21,169,92,215,165,97,108,70,174],[150,179,251,55,83,149,48,24,100,41,157,121,6,64,98,17,214,13,204,80,15,114,116,97,194,52,214,154,230,108,124,175],[107,115,191,64,75,224,78,29,250,47,12,211,94,150,208,185,36,97,147,42,245,108,226,30,121,90,232,104,145,73,65,144],[53,115,98,65,198,129,103,227,160,100,146,232,194,211,147,101,184,68,28,68,159,74,112,203,47,225,81,141,80,87,255,71],[82,35,181,136,93,179,4,96,1,233,208,216,44,133,142,7,139,114,234,123,136,164,109,236,27,197,54,231,184,200,173,61],[95,237,230,147,251,144,67,94,87,165,47,19,222,149,72,221,27,26,36,240,209,36,107,38,18,161,242,50,30,231,199,143],[211,193,198,12,157,194,107,194,61,12,123,92,6,157,108,167,7,103,37,32,171,78,237,37,250,209,5,26,167,100,246,86],[89,237,115,211,124,208,184,166,140,141,215,0,200,5,138,248,31,121,62,21,168,156,52,182,245,225,111,6,116,101,219,239],[249,94,137,42,50,179,201,99,59,66,206,26,102,117,193,65,12,252,126,199,244,78,208,134,16,50,79,146,107,1,72,18],[236,204,33,10,214,254,32,66,32,237,141,72,45,40,159,225,72,182,181,180,248,248,110,136,152,101,119,125,82,236,147,152],[180,128,141,167,19,124,178,201,97,245,231,219,139,186,185,211,200,252,168,45,207,187,14,129,61,38,84,158,174,242,59,113],[213,33,88,91,73,187,159,23,255,9,4,118,52,139,150,125,34,93,149,72,123,237,146,76,223,24,53,112,93,54,238,139],[156,78,153,148,19,152,239,62,47,55,242,6,20,88,254,178,16,129,221,233,39,128,203,184,128,213,114,35,45,235,85,56],[159,14,161,175,181,70,15,67,59,215,175,124,76,84,52,71,211,109,91,9,161,139,21,212,173,244,44,98,79,173,201,197],[129,99,174,114,131,184,18,213,219,153,151,5,122,117,39,212,33,205,187,94,165,244,1,64,187,99,127,75,157,152,23,210],[248,169,226,104,232,28,210,105,191,1,220,192,57,58,16,59,128,198,150,241,43,123,170,223,26,16,204,138,75,158,148,224],[203,20,153,52,36,107,202,106,181,86,142,28,225,17,114,91,102,239,252,116,78,249,46,45,152,25,125,93,102,27,158,31],[183,35,202,38,39,254,33,245,123,202,178,248,64,139,235,81,128,252,166,125,191,220,184,100,1,49,43,231,103,80,178,96],[1,209,109,144,162,42,195,202,59,59,103,190,146,28,170,126,7,181,25,199,101,6,222,217,226,126,190,3,237,197,12,2],[101,79,255,54,239,127,162,60,227,142,249,242,229,83,69,7,102,128,0,226,124,239,0,135,167,16,253,26,13,248,11,11],[31,116,105,161,160,166,56,32,187,139,209,67,127,51,170,100,89,47,136,172,101,95,240,112,89,203,136,35,176,236,236,90],[165,118,236,27,171,122,106,214,147,97,194,109,135,57,206,58,120,228,126,179,180,218,150,88,63,58,112,162,165,205,58,135],[30,189,6,188,158,250,255,89,230,62,181,242,127,163,255,20,205,9,113,83,42,197,103,81,102,48,12,75,129,184,141,90],[212,179,174,184,168,30,218,43,174,193,204,164,223,220,236,126,82,180,117,49,66,208,219,141,91,247,95,157,196,110,82,176],[111,207,77,147,37,180,62,118,239,29,61,214,42,204,26,34,17,83,248,87,62,154,10,203,177,213,179,121,125,175,13,145],[208,30,185,56,65,171,106,27,213,141,73,209,242,141,112,66,150,251,84,158,4,22,219,203,182,15,86,134,77,6,45,9]]",
              "sol": "[bytes32(stringToBytes32(\"153,5,228,155,118,192,71,46,184,20,125,254,90,41,167,98,56,103,101,249,60,175,195,85,222,71,111,179,108,230,74,145\")),bytes32(stringToBytes32(\"115,211,199,187,135,194,64,34,16,251,100,133,16,110,234,81,179,166,48,175,87,26,91,69,99,15,134,112,242,155,144,204\")),bytes32(stringToBytes32(\"212,62,176,186,182,235,99,191,241,152,177,14,149,133,51,27,62,180,171,234,238,135,63,31,147,89,164,34,175,186,11,63\")),bytes32(stringToBytes32(\"215,52,40,198,222,108,7,248,21,160,112,189,247,245,6,144,121,184,245,5,244,106,137,213,219,133,90,147,238,138,86,166\")),bytes32(stringToBytes32(\"234,53,104,172,255,114,121,102,129,21,225,173,22,20,12,232,33,32,153,29,132,15,196,175,135,236,20,38,52,102,90,15\")),bytes32(stringToBytes32(\"111,13,245,116,193,24,172,21,23,150,111,57,3,239,113,52,198,217,120,76,113,2,142,147,187,50,88,160,107,59,58,109\")),bytes32(stringToBytes32(\"241,89,145,0,240,158,67,151,202,167,230,243,40,165,26,202,29,209,90,78,221,204,119,18,40,164,44,73,20,41,137,126\")),bytes32(stringToBytes32(\"234,86,106,151,215,22,90,148,172,186,154,72,84,253,202,19,152,249,190,89,120,93,252,166,181,119,36,157,15,145,93,228\")),bytes32(stringToBytes32(\"121,38,146,104,200,89,103,135,158,208,33,49,221,56,83,234,67,240,216,36,139,20,175,48,224,114,217,241,161,28,234,220\")),bytes32(stringToBytes32(\"82,93,13,123,170,142,199,186,147,118,161,154,93,254,192,77,63,185,57,178,95,236,52,95,110,35,63,140,144,11,97,89\")),bytes32(stringToBytes32(\"103,49,75,245,162,181,150,30,115,94,36,247,135,12,244,174,106,181,109,80,137,229,148,121,101,86,173,76,228,35,129,220\")),bytes32(stringToBytes32(\"189,111,71,35,241,106,216,223,113,229,225,176,182,9,194,196,33,254,164,19,73,128,144,88,172,181,190,68,176,163,82,130\")),bytes32(stringToBytes32(\"49,184,8,150,52,181,29,173,105,97,43,53,141,163,236,127,223,199,204,108,135,58,236,155,132,106,229,215,43,103,220,91\")),bytes32(stringToBytes32(\"52,57,240,225,181,179,70,39,128,245,43,163,221,63,177,13,140,67,166,188,192,52,140,184,59,203,127,137,171,234,77,151\")),bytes32(stringToBytes32(\"194,206,138,230,43,42,53,168,137,158,105,239,210,53,115,19,18,177,4,147,136,47,21,150,150,194,119,248,129,138,159,27\")),bytes32(stringToBytes32(\"202,37,174,38,210,47,104,142,82,152,28,77,186,99,207,150,208,182,113,249,112,248,138,11,190,132,142,31,150,119,66,50\")),bytes32(stringToBytes32(\"229,8,175,191,23,192,164,57,201,156,86,167,202,14,138,225,229,83,223,243,227,22,125,180,114,62,19,115,32,80,201,248\")),bytes32(stringToBytes32(\"154,118,179,194,80,33,50,126,176,144,215,101,181,220,6,238,237,147,245,181,78,127,83,204,228,61,97,161,145,219,164,78\")),bytes32(stringToBytes32(\"241,241,198,244,184,109,228,94,92,86,193,179,126,91,245,21,101,91,47,45,244,88,12,207,171,102,57,76,77,138,41,14\")),bytes32(stringToBytes32(\"118,213,149,34,19,182,131,235,17,195,169,128,63,78,176,110,133,251,161,192,26,79,211,112,17,138,218,41,175,242,230,77\")),bytes32(stringToBytes32(\"63,78,57,121,3,0,145,183,200,172,138,175,79,135,151,49,223,229,254,67,191,78,56,119,55,172,205,215,194,12,56,235\")),bytes32(stringToBytes32(\"12,251,236,182,176,194,193,15,61,101,186,146,59,153,134,2,105,30,191,117,207,169,117,15,118,26,86,151,27,176,249,188\")),bytes32(stringToBytes32(\"204,90,154,71,61,120,210,65,99,156,105,128,112,176,177,195,198,117,71,186,178,45,177,22,204,205,223,52,101,134,83,89\")),bytes32(stringToBytes32(\"47,62,245,6,65,154,124,194,4,69,64,225,78,125,249,62,104,69,200,24,24,126,199,47,111,162,181,81,155,75,88,136\")),bytes32(stringToBytes32(\"136,130,96,204,240,9,223,229,183,167,178,151,78,168,198,218,19,68,108,190,156,136,152,215,98,54,236,5,141,222,178,250\")),bytes32(stringToBytes32(\"39,18,46,242,20,239,249,239,95,232,243,200,201,102,158,175,210,109,10,7,192,162,205,202,76,217,166,15,153,119,51,75\")),bytes32(stringToBytes32(\"62,131,88,66,106,171,43,16,186,8,30,87,230,200,24,247,32,50,141,110,2,101,245,239,247,207,64,247,179,148,197,108\")),bytes32(stringToBytes32(\"54,45,248,217,56,180,2,199,201,43,40,247,111,54,140,188,52,117,138,87,64,85,122,136,39,11,57,157,69,43,251,9\")),bytes32(stringToBytes32(\"13,93,125,24,118,103,182,51,228,218,115,163,40,170,72,52,41,56,8,74,48,120,34,128,78,188,110,124,79,198,64,229\")),bytes32(stringToBytes32(\"209,68,243,216,206,251,141,242,217,140,235,185,54,151,207,106,140,107,88,255,174,176,111,130,248,1,2,217,242,190,58,188\")),bytes32(stringToBytes32(\"2,220,214,59,219,132,134,109,15,65,148,181,118,124,191,114,94,207,249,204,11,103,175,220,86,162,76,182,76,107,125,227\")),bytes32(stringToBytes32(\"19,104,72,187,12,204,203,211,0,191,22,120,96,77,250,220,167,239,68,211,68,206,42,171,248,173,153,249,206,169,22,13\")),bytes32(stringToBytes32(\"68,85,11,172,125,55,255,219,233,127,199,209,79,160,226,80,214,91,92,19,199,6,103,83,132,92,174,2,88,160,192,156\")),bytes32(stringToBytes32(\"206,159,190,226,145,18,12,120,238,119,76,92,15,75,123,143,159,156,223,182,206,77,215,209,46,81,75,251,152,255,162,164\")),bytes32(stringToBytes32(\"68,114,92,141,171,6,22,150,109,4,206,153,172,49,238,243,119,117,242,20,1,172,163,206,117,18,221,58,164,53,123,52\")),bytes32(stringToBytes32(\"226,222,167,184,8,71,155,43,186,220,85,152,161,65,164,37,53,225,231,11,71,230,224,210,36,63,33,39,90,186,50,47\")),bytes32(stringToBytes32(\"20,16,46,182,58,240,238,254,240,108,108,234,130,73,130,75,44,145,92,141,124,84,30,192,178,88,189,241,80,200,199,108\")),bytes32(stringToBytes32(\"112,3,158,17,160,72,206,119,113,25,39,23,41,126,2,248,89,60,179,243,21,206,7,20,203,125,83,230,165,255,164,128\")),bytes32(stringToBytes32(\"68,161,2,150,201,9,61,83,10,131,73,91,59,175,159,225,49,241,65,118,88,38,3,233,45,20,154,100,41,65,120,30\")),bytes32(stringToBytes32(\"37,182,1,112,101,166,239,191,111,210,188,87,53,195,125,129,192,47,148,221,165,121,4,244,66,244,165,90,170,254,217,71\")),bytes32(stringToBytes32(\"121,55,108,127,246,146,224,180,211,132,188,46,137,98,26,246,70,194,151,120,73,15,244,5,194,67,50,159,182,63,24,41\")),bytes32(stringToBytes32(\"221,158,55,199,112,84,46,82,96,60,244,139,221,178,127,230,162,198,143,130,11,229,94,36,182,110,4,63,213,21,85,40\")),bytes32(stringToBytes32(\"173,170,77,85,219,108,227,200,122,104,119,121,135,81,249,101,140,2,92,194,138,2,15,147,190,144,30,144,136,77,153,197\")),bytes32(stringToBytes32(\"132,10,134,156,192,174,98,62,228,139,217,227,80,27,230,97,31,32,152,69,216,154,117,46,6,38,148,236,238,55,17,153\")),bytes32(stringToBytes32(\"167,246,249,37,100,170,248,141,165,170,32,161,97,88,188,22,233,144,249,195,214,122,205,116,229,119,2,172,222,131,225,229\")),bytes32(stringToBytes32(\"242,62,243,128,117,13,88,17,98,76,51,140,35,193,235,237,160,55,91,184,44,72,189,220,154,21,88,66,184,102,156,32\")),bytes32(stringToBytes32(\"177,1,110,212,131,193,143,10,52,141,90,127,229,235,252,173,26,234,19,177,227,8,173,149,8,126,128,58,118,133,104,13\")),bytes32(stringToBytes32(\"188,67,74,165,204,45,248,222,100,8,231,184,34,141,23,166,142,248,69,128,99,228,162,226,233,217,10,114,213,227,73,58\")),bytes32(stringToBytes32(\"19,29,49,112,236,92,135,89,203,187,238,135,21,184,27,146,93,116,159,43,0,226,174,234,70,182,118,181,84,102,23,230\")),bytes32(stringToBytes32(\"153,117,194,252,204,121,87,65,243,63,168,118,132,41,205,119,223,80,60,198,164,233,66,226,232,166,128,175,93,251,172,140\")),bytes32(stringToBytes32(\"0,4,110,151,69,231,217,65,86,230,221,16,0,34,111,77,69,41,74,218,198,202,198,104,111,3,254,157,255,206,106,156\")),bytes32(stringToBytes32(\"147,23,47,193,165,103,136,249,34,201,98,40,95,62,186,150,67,229,253,193,68,193,59,203,20,157,158,229,185,56,15,175\")),bytes32(stringToBytes32(\"142,139,91,223,141,164,119,152,192,181,20,235,124,26,6,162,155,6,52,88,122,231,244,245,103,154,253,125,244,159,7,172\")),bytes32(stringToBytes32(\"202,49,96,37,141,133,249,219,84,178,92,184,76,54,172,41,22,72,20,251,45,136,113,6,176,79,240,230,202,233,27,255\")),bytes32(stringToBytes32(\"36,150,90,236,91,79,187,49,128,238,131,75,34,192,48,187,160,6,29,165,246,167,3,82,181,133,2,25,241,223,234,46\")),bytes32(stringToBytes32(\"12,142,252,175,143,7,102,155,209,207,232,143,69,16,37,102,58,225,21,154,12,123,82,142,100,115,202,129,181,207,46,79\")),bytes32(stringToBytes32(\"107,162,250,222,234,59,151,87,4,50,80,49,104,198,147,236,33,251,165,130,72,20,1,56,220,157,249,237,128,63,49,31\")),bytes32(stringToBytes32(\"104,109,85,157,49,140,141,237,22,11,96,78,142,190,104,248,102,11,113,248,248,83,50,199,11,203,75,214,85,84,189,245\")),bytes32(stringToBytes32(\"34,21,119,4,135,134,27,25,63,204,78,230,162,1,234,44,84,112,222,125,226,85,14,188,140,137,176,184,161,249,108,44\")),bytes32(stringToBytes32(\"92,82,90,56,107,254,89,168,142,123,250,97,122,127,227,255,149,196,172,116,123,53,193,202,227,38,221,7,149,50,137,131\")),bytes32(stringToBytes32(\"227,153,207,170,187,180,138,206,247,47,6,56,141,202,189,73,85,49,198,75,99,51,156,217,241,99,231,57,119,183,254,230\")),bytes32(stringToBytes32(\"253,94,179,94,61,159,2,195,219,184,107,208,190,122,138,132,100,43,39,61,65,228,43,215,117,42,221,202,179,192,28,162\")),bytes32(stringToBytes32(\"197,174,144,158,49,77,84,173,144,31,151,167,216,92,140,152,45,101,170,197,249,185,160,109,152,123,116,46,70,50,94,109\")),bytes32(stringToBytes32(\"116,221,122,67,42,102,72,121,203,20,75,73,223,23,90,180,255,231,18,4,206,240,17,244,142,130,102,121,136,86,56,33\")),bytes32(stringToBytes32(\"183,38,84,82,165,54,241,224,236,188,74,233,197,241,139,10,255,255,113,89,186,211,233,117,53,80,96,255,207,34,83,230\")),bytes32(stringToBytes32(\"201,120,35,124,73,129,188,239,187,240,92,205,126,223,234,198,27,189,250,39,162,163,54,255,39,126,13,189,255,19,73,38\")),bytes32(stringToBytes32(\"20,5,186,62,88,27,65,204,246,208,45,206,49,233,117,134,38,183,153,32,212,119,215,23,92,38,243,5,221,71,73,121\")),bytes32(stringToBytes32(\"118,162,135,74,77,147,208,203,102,21,140,25,53,216,40,130,135,166,206,1,3,15,96,123,229,156,203,19,96,220,186,74\")),bytes32(stringToBytes32(\"184,3,227,106,112,242,235,200,31,37,92,252,101,132,65,50,29,214,38,16,80,74,245,68,255,113,189,139,194,242,89,83\")),bytes32(stringToBytes32(\"57,99,180,21,15,248,220,82,233,97,197,42,17,175,93,29,58,43,92,208,59,213,171,88,217,217,58,24,237,165,50,246\")),bytes32(stringToBytes32(\"70,147,202,208,200,43,208,36,162,77,171,75,198,93,226,172,129,25,252,187,180,252,79,142,121,7,231,140,57,128,58,142\")),bytes32(stringToBytes32(\"84,131,169,69,37,206,169,200,189,213,209,245,69,167,137,191,122,136,86,17,127,214,255,37,249,39,147,157,182,9,34,161\")),bytes32(stringToBytes32(\"23,5,45,45,87,78,180,215,230,51,190,20,245,46,0,118,122,3,109,56,22,190,69,225,82,240,161,36,162,202,73,115\")),bytes32(stringToBytes32(\"194,136,14,143,56,94,217,171,186,51,51,3,107,128,110,200,175,242,63,231,223,205,230,23,154,57,131,21,43,56,104,185\")),bytes32(stringToBytes32(\"101,9,48,61,129,128,217,69,228,50,136,118,225,71,76,198,11,107,195,196,190,246,214,167,253,51,51,4,122,75,207,64\")),bytes32(stringToBytes32(\"219,91,45,183,48,52,17,118,79,53,155,157,17,109,5,242,81,98,126,152,0,172,90,159,139,201,60,223,113,92,167,54\")),bytes32(stringToBytes32(\"91,197,66,3,255,92,80,151,119,194,106,220,235,82,31,217,71,96,209,64,23,157,108,142,23,123,238,228,156,69,251,110\")),bytes32(stringToBytes32(\"212,219,168,11,246,8,102,106,97,26,126,25,47,51,132,146,244,71,128,175,143,235,75,194,25,79,237,200,26,161,167,159\")),bytes32(stringToBytes32(\"8,25,131,81,90,171,121,51,90,73,132,196,75,187,224,4,186,191,104,209,185,169,50,79,21,5,236,200,250,182,113,108\")),bytes32(stringToBytes32(\"200,151,234,100,10,153,102,181,73,182,68,149,29,216,65,72,52,238,14,219,208,229,126,216,15,37,185,30,122,8,125,106\")),bytes32(stringToBytes32(\"123,29,169,156,110,33,197,199,76,79,148,83,224,115,82,92,33,254,194,16,89,156,19,160,237,94,58,103,98,41,13,104\")),bytes32(stringToBytes32(\"189,233,21,164,40,52,184,48,196,63,160,74,140,106,146,221,73,157,90,21,11,212,186,80,32,116,231,34,230,31,31,102\")),bytes32(stringToBytes32(\"115,88,0,220,160,218,220,117,118,70,222,227,44,100,84,54,81,211,129,152,150,45,163,54,38,2,248,145,54,51,151,72\")),bytes32(stringToBytes32(\"159,73,41,216,99,172,111,129,16,84,154,105,73,244,155,56,183,130,63,187,82,91,220,72,27,228,90,33,141,183,6,172\")),bytes32(stringToBytes32(\"228,16,174,50,80,222,131,127,48,41,109,154,80,216,255,178,105,225,46,183,30,29,8,152,149,23,129,253,176,92,37,139\")),bytes32(stringToBytes32(\"104,131,138,214,169,22,11,74,13,216,123,7,195,184,197,39,91,152,101,226,57,84,101,44,144,210,179,253,39,137,255,227\")),bytes32(stringToBytes32(\"19,21,212,51,165,65,68,117,188,51,13,46,108,50,74,203,145,26,41,213,151,151,228,148,110,37,141,224,23,15,212,87\")),bytes32(stringToBytes32(\"145,33,47,208,4,137,174,116,73,33,31,41,124,122,171,121,38,79,186,75,56,134,88,216,148,197,217,89,158,207,251,208\")),bytes32(stringToBytes32(\"248,58,181,171,67,223,89,234,124,100,99,91,66,235,254,32,172,146,59,213,3,101,20,80,141,171,251,189,185,173,171,137\")),bytes32(stringToBytes32(\"109,248,213,158,10,148,50,88,156,233,62,210,45,255,93,214,80,99,104,241,38,12,62,72,119,37,203,211,12,255,20,179\")),bytes32(stringToBytes32(\"149,169,41,28,4,57,112,103,218,124,16,77,189,57,230,196,252,37,120,191,17,14,248,44,141,137,163,81,139,136,3,44\")),bytes32(stringToBytes32(\"87,184,90,21,23,67,251,116,98,106,49,209,139,232,120,127,29,14,19,5,11,196,126,166,187,120,248,220,140,168,202,41\")),bytes32(stringToBytes32(\"20,27,148,44,127,240,52,68,141,110,162,74,45,168,171,229,97,148,72,74,241,71,183,80,177,60,99,102,249,27,80,131\")),bytes32(stringToBytes32(\"139,170,10,241,36,208,21,208,128,78,48,190,152,5,71,181,214,249,213,238,28,214,230,163,56,152,26,148,118,173,19,158\")),bytes32(stringToBytes32(\"167,127,32,13,140,92,244,33,112,218,43,12,80,127,87,177,155,58,46,49,139,186,223,142,121,216,250,215,153,146,212,111\")),bytes32(stringToBytes32(\"246,2,235,248,71,135,32,194,251,229,41,241,8,78,220,238,23,13,75,178,202,212,45,145,200,88,205,15,169,1,118,126\")),bytes32(stringToBytes32(\"142,201,14,229,109,108,74,185,108,15,165,75,106,83,15,121,83,88,216,39,237,170,5,69,190,214,18,191,196,175,238,105\")),bytes32(stringToBytes32(\"136,166,32,12,209,69,10,71,87,33,218,96,75,61,19,221,112,95,164,88,249,202,206,238,47,148,250,246,40,234,143,137\")),bytes32(stringToBytes32(\"156,28,234,163,119,240,50,99,245,210,17,45,77,133,217,195,174,246,180,134,223,123,22,62,179,92,161,226,115,6,164,17\")),bytes32(stringToBytes32(\"52,14,9,51,167,10,132,181,172,25,132,224,161,56,208,104,77,211,160,196,141,172,92,94,122,107,1,20,198,216,36,22\")),bytes32(stringToBytes32(\"249,154,27,13,226,3,163,251,130,104,138,178,221,61,9,100,83,243,44,235,67,79,29,102,67,36,138,21,131,25,91,128\")),bytes32(stringToBytes32(\"122,22,178,190,189,78,147,115,219,103,182,211,21,68,78,231,186,165,59,127,51,74,220,134,174,83,184,214,245,153,222,187\")),bytes32(stringToBytes32(\"145,226,124,70,2,39,204,131,105,179,61,0,104,5,247,64,187,168,168,59,19,223,15,220,201,226,109,1,145,160,15,164\")),bytes32(stringToBytes32(\"249,105,175,174,20,13,99,241,159,141,37,29,17,211,205,40,203,37,0,122,23,99,244,195,243,139,168,243,155,47,49,150\")),bytes32(stringToBytes32(\"150,42,118,200,235,113,9,136,119,23,108,246,153,135,48,35,107,96,58,242,30,214,248,59,194,19,37,84,98,187,83,156\")),bytes32(stringToBytes32(\"145,37,126,27,167,133,109,248,20,82,206,234,212,153,39,55,171,58,22,88,222,89,220,221,23,67,74,111,220,147,255,247\")),bytes32(stringToBytes32(\"54,89,29,6,62,169,188,255,158,129,236,126,31,137,245,245,30,46,235,223,249,242,105,232,117,171,170,51,49,30,245,110\")),bytes32(stringToBytes32(\"106,211,31,15,35,243,135,119,121,89,206,203,115,104,34,113,166,38,183,67,180,224,253,211,64,222,64,191,111,96,77,140\")),bytes32(stringToBytes32(\"153,5,29,220,252,29,157,36,79,172,228,49,9,104,178,156,135,83,106,252,115,33,85,189,205,222,143,92,102,90,84,194\")),bytes32(stringToBytes32(\"246,162,117,166,251,5,14,170,240,42,170,237,187,185,146,11,127,84,238,200,155,74,238,4,94,209,30,30,74,169,174,59\")),bytes32(stringToBytes32(\"86,149,171,37,237,107,37,120,63,143,83,179,237,234,248,164,35,45,81,223,102,201,73,52,188,172,3,125,181,245,141,211\")),bytes32(stringToBytes32(\"252,191,46,214,153,85,209,134,176,222,1,64,161,173,118,154,63,176,57,29,210,84,54,212,12,106,111,136,20,210,94,83\")),bytes32(stringToBytes32(\"186,40,216,245,162,197,254,73,15,65,44,62,59,155,175,208,239,78,214,4,202,203,174,233,238,158,158,111,180,31,215,30\")),bytes32(stringToBytes32(\"40,243,28,4,207,87,200,196,73,46,185,221,202,70,232,119,86,214,202,6,167,50,18,236,40,15,232,166,53,61,53,164\")),bytes32(stringToBytes32(\"83,55,230,177,99,121,96,168,37,29,216,21,149,31,47,212,90,14,16,76,171,204,213,17,14,84,9,195,91,75,251,75\")),bytes32(stringToBytes32(\"176,41,72,86,85,20,131,248,167,150,220,153,94,108,29,246,165,47,26,197,199,150,176,71,211,207,90,223,97,15,136,167\")),bytes32(stringToBytes32(\"24,39,2,86,195,115,81,139,48,91,253,103,78,238,169,30,16,83,197,205,122,125,152,166,238,165,49,180,177,174,188,83\")),bytes32(stringToBytes32(\"23,195,153,161,246,142,116,248,173,92,98,105,227,34,69,214,105,124,230,200,62,12,71,132,95,156,236,237,18,20,229,176\")),bytes32(stringToBytes32(\"130,77,167,165,165,190,232,228,53,180,198,239,79,140,98,6,178,23,174,99,33,166,114,43,91,146,33,127,23,90,244,248\")),bytes32(stringToBytes32(\"28,149,106,116,22,1,65,57,3,146,70,17,239,151,177,240,69,191,192,124,244,44,139,18,53,45,118,54,21,34,1,51\")),bytes32(stringToBytes32(\"120,158,84,84,128,147,210,67,93,38,89,228,83,190,225,163,162,252,13,6,122,136,77,194,18,99,16,112,7,211,0,30\")),bytes32(stringToBytes32(\"166,145,5,17,108,175,250,220,27,189,222,124,196,15,251,113,144,223,25,160,63,116,200,52,28,117,149,218,185,194,161,55\")),bytes32(stringToBytes32(\"170,241,51,61,218,96,154,35,139,63,182,70,238,144,162,41,186,54,136,244,134,31,222,0,144,224,60,118,62,178,225,46\")),bytes32(stringToBytes32(\"225,131,54,103,54,93,169,88,232,201,198,240,193,21,50,141,172,252,246,210,108,68,167,239,134,41,227,177,7,218,178,136\")),bytes32(stringToBytes32(\"125,212,215,62,24,249,181,186,36,234,119,85,181,34,49,58,204,28,122,146,42,212,138,208,30,178,45,90,197,0,47,97\")),bytes32(stringToBytes32(\"145,156,200,246,28,122,112,223,99,247,246,38,232,59,37,97,54,103,161,38,254,26,184,167,66,86,66,14,42,6,139,173\")),bytes32(stringToBytes32(\"78,17,207,165,80,46,210,2,103,76,191,130,244,37,26,31,114,115,80,51,12,114,163,28,31,153,134,65,25,23,219,57\")),bytes32(stringToBytes32(\"35,45,250,73,228,129,251,93,217,237,14,75,255,3,170,196,53,188,247,44,84,135,211,94,230,173,232,122,5,3,236,129\")),bytes32(stringToBytes32(\"196,195,107,74,38,28,241,12,91,49,4,143,189,12,54,181,142,136,128,76,144,253,66,217,96,61,227,122,180,228,15,21\")),bytes32(stringToBytes32(\"246,146,208,138,180,169,28,21,140,129,182,203,193,180,90,118,115,237,6,15,118,2,186,42,153,124,243,66,163,167,92,75\")),bytes32(stringToBytes32(\"133,40,254,231,64,150,176,53,154,141,18,189,88,132,188,119,19,162,96,155,130,255,174,250,128,107,76,145,55,52,166,22\")),bytes32(stringToBytes32(\"133,177,213,21,91,234,181,184,94,194,177,32,110,74,142,180,4,184,234,67,3,61,8,118,94,64,180,169,68,79,123,164\")),bytes32(stringToBytes32(\"236,102,38,49,7,242,142,126,23,7,50,41,233,73,70,199,69,184,247,55,88,116,16,116,79,237,80,219,32,178,74,46\")),bytes32(stringToBytes32(\"155,127,113,236,209,32,185,186,158,98,66,19,155,236,121,57,163,118,103,60,225,91,238,109,66,215,185,104,40,134,144,8\")),bytes32(stringToBytes32(\"91,206,115,106,234,115,227,59,6,30,240,32,184,139,108,44,57,51,61,210,214,221,92,87,252,111,137,45,84,142,18,58\")),bytes32(stringToBytes32(\"176,215,179,245,251,206,223,214,83,89,132,147,250,121,159,136,73,253,189,224,62,219,71,253,19,161,243,138,189,207,166,238\")),bytes32(stringToBytes32(\"142,19,250,195,142,49,221,255,96,209,213,39,53,184,50,178,152,85,29,217,109,109,177,124,160,88,88,220,223,158,186,24\")),bytes32(stringToBytes32(\"49,163,191,43,219,167,53,196,43,125,105,105,198,160,194,182,49,44,132,108,251,29,93,228,167,155,175,217,113,7,102,16\")),bytes32(stringToBytes32(\"251,74,167,215,97,14,52,65,31,122,180,129,114,113,52,105,81,192,11,247,101,100,226,196,5,98,74,242,219,68,101,181\")),bytes32(stringToBytes32(\"196,208,231,170,187,203,86,62,108,227,204,96,217,164,90,166,133,178,126,36,225,238,31,20,45,100,236,191,165,83,126,231\")),bytes32(stringToBytes32(\"113,41,43,17,147,55,89,182,157,166,243,63,38,124,231,73,56,248,26,160,127,94,185,41,34,151,47,91,187,109,251,169\")),bytes32(stringToBytes32(\"181,163,16,253,130,5,150,173,240,154,81,57,98,82,39,234,46,50,130,131,140,236,15,104,254,162,11,65,143,117,230,130\")),bytes32(stringToBytes32(\"65,108,171,217,172,226,248,128,207,187,61,126,17,97,93,63,161,227,236,117,88,114,208,15,16,164,29,1,119,104,89,119\")),bytes32(stringToBytes32(\"103,147,186,166,251,23,52,58,72,231,36,53,62,86,2,159,238,158,164,227,102,63,251,5,69,206,16,7,6,252,138,54\")),bytes32(stringToBytes32(\"209,203,150,153,206,183,27,186,51,160,144,217,39,100,195,253,34,204,186,141,39,202,197,9,124,212,159,174,78,152,94,233\")),bytes32(stringToBytes32(\"61,43,207,157,102,115,101,197,77,69,102,99,240,23,87,37,165,231,119,101,52,10,230,45,247,230,11,126,65,161,58,129\")),bytes32(stringToBytes32(\"120,137,29,157,91,239,113,43,210,220,98,84,132,227,156,182,68,156,243,226,206,208,25,180,136,100,187,114,245,58,199,115\")),bytes32(stringToBytes32(\"239,68,113,239,47,189,84,5,127,27,52,182,6,69,66,14,94,115,200,181,136,140,6,229,223,84,222,5,51,62,74,77\")),bytes32(stringToBytes32(\"169,205,160,129,122,112,38,72,152,20,71,195,33,150,195,6,93,96,177,151,87,40,117,223,240,90,180,120,138,86,119,172\")),bytes32(stringToBytes32(\"248,225,229,88,237,137,216,35,83,31,254,93,137,226,40,23,199,179,163,234,158,240,169,111,1,31,174,57,78,65,6,76\")),bytes32(stringToBytes32(\"118,218,11,250,11,170,2,35,173,110,216,253,28,206,57,203,101,93,73,232,116,81,123,145,92,185,164,52,248,82,171,130\")),bytes32(stringToBytes32(\"105,121,134,120,14,94,90,185,179,235,129,50,214,119,138,42,253,151,147,191,14,90,150,224,65,181,105,78,186,137,135,13\")),bytes32(stringToBytes32(\"97,60,154,2,136,205,151,254,147,207,217,8,109,102,146,227,70,39,25,106,219,5,62,49,128,177,211,153,47,252,181,240\")),bytes32(stringToBytes32(\"157,44,35,126,44,225,31,185,56,111,148,16,205,101,191,212,145,90,230,233,97,93,2,92,232,82,69,90,193,43,152,200\")),bytes32(stringToBytes32(\"41,28,59,221,24,24,233,179,201,236,57,106,139,104,19,132,212,76,35,236,151,170,123,21,169,92,215,165,97,108,70,174\")),bytes32(stringToBytes32(\"150,179,251,55,83,149,48,24,100,41,157,121,6,64,98,17,214,13,204,80,15,114,116,97,194,52,214,154,230,108,124,175\")),bytes32(stringToBytes32(\"107,115,191,64,75,224,78,29,250,47,12,211,94,150,208,185,36,97,147,42,245,108,226,30,121,90,232,104,145,73,65,144\")),bytes32(stringToBytes32(\"53,115,98,65,198,129,103,227,160,100,146,232,194,211,147,101,184,68,28,68,159,74,112,203,47,225,81,141,80,87,255,71\")),bytes32(stringToBytes32(\"82,35,181,136,93,179,4,96,1,233,208,216,44,133,142,7,139,114,234,123,136,164,109,236,27,197,54,231,184,200,173,61\")),bytes32(stringToBytes32(\"95,237,230,147,251,144,67,94,87,165,47,19,222,149,72,221,27,26,36,240,209,36,107,38,18,161,242,50,30,231,199,143\")),bytes32(stringToBytes32(\"211,193,198,12,157,194,107,194,61,12,123,92,6,157,108,167,7,103,37,32,171,78,237,37,250,209,5,26,167,100,246,86\")),bytes32(stringToBytes32(\"89,237,115,211,124,208,184,166,140,141,215,0,200,5,138,248,31,121,62,21,168,156,52,182,245,225,111,6,116,101,219,239\")),bytes32(stringToBytes32(\"249,94,137,42,50,179,201,99,59,66,206,26,102,117,193,65,12,252,126,199,244,78,208,134,16,50,79,146,107,1,72,18\")),bytes32(stringToBytes32(\"236,204,33,10,214,254,32,66,32,237,141,72,45,40,159,225,72,182,181,180,248,248,110,136,152,101,119,125,82,236,147,152\")),bytes32(stringToBytes32(\"180,128,141,167,19,124,178,201,97,245,231,219,139,186,185,211,200,252,168,45,207,187,14,129,61,38,84,158,174,242,59,113\")),bytes32(stringToBytes32(\"213,33,88,91,73,187,159,23,255,9,4,118,52,139,150,125,34,93,149,72,123,237,146,76,223,24,53,112,93,54,238,139\")),bytes32(stringToBytes32(\"156,78,153,148,19,152,239,62,47,55,242,6,20,88,254,178,16,129,221,233,39,128,203,184,128,213,114,35,45,235,85,56\")),bytes32(stringToBytes32(\"159,14,161,175,181,70,15,67,59,215,175,124,76,84,52,71,211,109,91,9,161,139,21,212,173,244,44,98,79,173,201,197\")),bytes32(stringToBytes32(\"129,99,174,114,131,184,18,213,219,153,151,5,122,117,39,212,33,205,187,94,165,244,1,64,187,99,127,75,157,152,23,210\")),bytes32(stringToBytes32(\"248,169,226,104,232,28,210,105,191,1,220,192,57,58,16,59,128,198,150,241,43,123,170,223,26,16,204,138,75,158,148,224\")),bytes32(stringToBytes32(\"203,20,153,52,36,107,202,106,181,86,142,28,225,17,114,91,102,239,252,116,78,249,46,45,152,25,125,93,102,27,158,31\")),bytes32(stringToBytes32(\"183,35,202,38,39,254,33,245,123,202,178,248,64,139,235,81,128,252,166,125,191,220,184,100,1,49,43,231,103,80,178,96\")),bytes32(stringToBytes32(\"1,209,109,144,162,42,195,202,59,59,103,190,146,28,170,126,7,181,25,199,101,6,222,217,226,126,190,3,237,197,12,2\")),bytes32(stringToBytes32(\"101,79,255,54,239,127,162,60,227,142,249,242,229,83,69,7,102,128,0,226,124,239,0,135,167,16,253,26,13,248,11,11\")),bytes32(stringToBytes32(\"31,116,105,161,160,166,56,32,187,139,209,67,127,51,170,100,89,47,136,172,101,95,240,112,89,203,136,35,176,236,236,90\")),bytes32(stringToBytes32(\"165,118,236,27,171,122,106,214,147,97,194,109,135,57,206,58,120,228,126,179,180,218,150,88,63,58,112,162,165,205,58,135\")),bytes32(stringToBytes32(\"30,189,6,188,158,250,255,89,230,62,181,242,127,163,255,20,205,9,113,83,42,197,103,81,102,48,12,75,129,184,141,90\")),bytes32(stringToBytes32(\"212,179,174,184,168,30,218,43,174,193,204,164,223,220,236,126,82,180,117,49,66,208,219,141,91,247,95,157,196,110,82,176\")),bytes32(stringToBytes32(\"111,207,77,147,37,180,62,118,239,29,61,214,42,204,26,34,17,83,248,87,62,154,10,203,177,213,179,121,125,175,13,145\")),bytes32(stringToBytes32(\"208,30,185,56,65,171,106,27,213,141,73,209,242,141,112,66,150,251,84,158,4,22,219,203,182,15,86,134,77,6,45,9\"))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "962-964",
          "restrictions": [
            "_data.length == 2"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_computeMerkleTree(bytes32[]) WHEN _data.length==2",
          "parameters": [
            {
              "js": "[[169,145,126,154,204,107,205,91,228,211,72,100,220,74,237,246,255,204,15,199,89,111,4,187,109,211,118,112,7,131,85,163],[10,223,181,116,56,161,252,69,104,189,27,6,253,217,209,11,21,217,9,150,209,199,221,49,46,150,147,66,238,216,250,86]]",
              "sol": "[bytes32(stringToBytes32(\"169,145,126,154,204,107,205,91,228,211,72,100,220,74,237,246,255,204,15,199,89,111,4,187,109,211,118,112,7,131,85,163\")),bytes32(stringToBytes32(\"10,223,181,116,56,161,252,69,104,189,27,6,253,217,209,11,21,217,9,150,209,199,221,49,46,150,147,66,238,216,250,86\"))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "2": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "_data.length != 2"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_computeMerkleTree(bytes32[]) WHEN _data.length!=2",
          "parameters": [
            {
              "js": "[[206,8,21,161,150,160,156,213,255,88,176,64,230,26,113,116,93,6,15,112,208,51,16,110,79,59,44,42,141,237,44,124],[143,240,24,185,171,179,20,173,50,227,9,30,246,186,195,118,228,179,124,113,70,44,17,58,135,144,179,243,7,155,41,154],[87,40,79,78,41,130,156,190,108,166,139,150,153,205,212,200,100,115,148,34,45,212,175,28,101,73,81,253,91,90,8,60],[94,54,213,164,201,77,20,26,253,170,136,155,19,53,190,229,191,159,196,217,198,96,158,14,56,98,14,70,52,236,96,210],[55,203,106,61,46,184,213,1,83,191,234,168,248,129,55,13,214,15,254,185,52,40,234,136,255,224,252,39,194,221,225,254],[171,87,211,255,107,234,156,37,78,204,47,76,175,88,103,42,157,156,116,72,220,104,179,110,234,144,224,163,5,31,46,180],[160,162,59,161,242,224,23,218,146,252,186,113,115,155,88,18,21,211,32,170,21,92,93,9,79,43,26,32,101,173,197,223],[110,131,89,115,15,17,90,166,47,239,64,158,147,151,20,172,170,108,51,115,57,155,148,174,229,1,80,2,88,37,122,50],[201,232,106,227,185,140,53,35,237,189,203,0,77,136,5,231,103,185,20,237,96,205,18,51,175,63,86,198,60,32,123,39],[154,183,147,97,94,137,23,50,148,45,192,12,28,29,149,218,137,161,29,132,245,29,199,214,5,83,249,27,12,11,178,168],[239,224,240,13,101,218,60,58,98,70,135,162,93,38,66,88,189,230,249,217,26,152,142,74,125,155,169,142,190,104,29,179],[180,244,119,79,41,54,240,228,150,99,36,201,202,185,211,172,132,33,233,229,236,156,250,11,184,13,220,18,251,119,228,52],[233,122,206,231,40,183,144,182,219,81,228,137,203,65,243,176,63,54,180,186,40,194,141,191,117,78,6,141,5,34,151,135],[61,255,16,36,101,120,176,246,121,223,33,231,120,121,31,175,25,48,105,169,210,139,253,168,62,174,84,80,23,14,32,209],[171,24,0,164,91,222,184,212,252,93,109,200,46,173,104,80,1,148,134,250,193,116,29,132,140,240,235,75,169,154,47,11],[127,201,38,162,238,210,122,186,231,122,144,211,213,71,53,122,242,248,253,225,39,247,143,8,85,143,192,133,184,140,18,92],[199,181,85,56,120,173,86,3,150,177,49,88,30,226,206,177,251,209,90,9,107,43,89,244,120,226,246,18,93,3,202,69],[140,212,17,121,50,202,195,247,94,85,126,54,5,108,53,141,49,92,184,218,59,93,32,2,66,197,36,50,26,122,138,108],[46,76,2,119,139,29,165,82,237,217,53,150,86,196,145,148,93,234,121,141,70,53,93,30,41,6,51,249,124,195,241,201],[224,190,240,188,2,143,242,252,202,190,0,21,47,94,137,115,224,214,229,17,55,62,51,52,79,67,211,171,216,164,202,90],[229,186,131,204,156,232,32,44,178,34,97,58,149,148,92,197,86,114,128,251,201,112,65,84,170,2,130,28,2,165,95,89],[199,62,64,90,232,200,228,34,173,139,215,104,132,21,157,251,140,61,82,102,146,158,216,79,132,100,123,221,190,90,205,84],[110,74,42,238,199,6,77,194,42,81,3,128,186,93,213,178,252,46,130,76,29,133,15,209,155,14,77,206,69,56,34,226],[69,73,203,4,84,232,31,96,83,176,208,71,232,84,47,228,223,121,102,28,13,43,147,175,52,105,149,249,213,214,154,204],[96,121,104,227,159,68,151,124,184,32,154,123,245,171,173,103,57,36,177,186,189,156,144,70,129,13,166,227,103,5,109,62],[213,89,215,79,75,216,129,173,202,123,33,187,101,93,1,10,17,219,96,63,122,108,206,15,164,14,250,232,45,235,45,35],[153,238,53,137,114,208,149,126,87,92,138,211,21,163,218,60,33,211,52,66,105,252,166,10,46,36,45,58,234,11,37,209],[97,224,65,203,88,145,117,1,165,65,247,32,179,202,144,147,54,201,34,225,177,116,101,141,240,106,8,230,36,229,117,205],[169,196,47,53,87,181,42,174,147,149,145,223,27,206,54,239,186,253,44,144,72,92,92,118,172,235,52,120,215,220,107,175],[128,251,130,246,30,200,254,127,190,149,192,25,214,47,185,105,18,183,26,150,10,157,201,89,46,25,1,167,236,214,178,113],[168,135,230,105,222,50,198,87,124,128,171,29,179,201,30,109,220,139,232,202,227,247,59,105,53,89,13,129,72,168,181,146],[188,220,106,194,96,174,242,17,66,215,138,73,123,131,151,39,17,167,155,11,28,17,179,54,33,138,184,77,161,75,221,43],[76,43,230,68,142,203,148,161,155,243,141,204,198,81,59,29,76,16,197,171,170,162,199,29,35,213,250,118,151,32,100,31],[250,192,111,202,115,185,109,179,89,225,142,194,121,216,214,155,236,95,121,158,87,178,72,18,103,143,131,123,209,75,182,149],[56,22,244,158,100,143,172,170,41,34,157,66,178,87,114,215,14,5,18,163,110,242,167,250,209,4,168,41,206,142,96,177],[134,198,108,4,249,77,215,110,39,182,218,195,109,206,214,150,100,109,180,124,197,51,30,131,28,106,117,51,185,3,38,50],[246,155,67,175,203,64,153,250,69,150,249,235,187,5,30,22,98,72,104,69,93,54,84,162,12,210,15,43,158,84,146,3],[77,29,217,151,243,178,11,116,50,12,97,91,92,158,81,67,244,66,32,75,13,143,35,27,16,61,241,41,175,90,171,226],[192,65,177,99,207,252,136,15,18,124,180,68,228,13,68,226,67,126,210,112,152,211,5,100,149,246,8,190,79,252,42,24],[193,203,151,36,167,31,5,113,37,57,33,253,71,232,216,176,71,63,237,104,15,215,67,220,57,48,225,98,67,120,74,211],[1,140,219,141,203,154,222,99,64,2,215,153,187,121,50,70,187,234,75,132,37,15,212,81,225,17,94,161,125,158,173,87],[3,56,135,246,184,162,105,8,144,249,69,32,113,55,3,119,170,232,55,75,162,113,40,4,176,103,48,233,139,143,42,131],[22,39,102,1,102,22,49,212,246,31,61,210,200,130,33,188,255,182,243,95,48,119,65,201,81,89,215,42,181,156,189,88],[203,102,64,246,211,229,107,0,151,84,244,29,7,246,67,14,86,2,117,209,93,191,221,22,149,186,74,67,54,4,182,8],[93,162,245,49,169,0,64,43,0,138,195,111,118,193,138,104,202,89,228,15,83,62,183,211,167,78,213,126,178,21,29,186],[64,127,127,192,175,248,60,143,31,5,214,76,213,194,150,73,213,230,35,181,216,229,144,48,107,225,130,59,146,26,107,228],[219,146,103,240,175,93,234,109,196,236,113,133,148,49,158,240,248,230,106,84,121,59,146,214,143,22,20,63,90,117,178,96],[182,172,113,129,234,242,238,86,164,186,103,46,217,102,27,29,234,104,125,68,130,92,220,104,164,131,28,101,242,63,212,112],[219,108,9,94,198,216,241,225,168,151,65,37,219,249,106,203,154,3,102,148,137,47,207,190,50,180,177,133,22,8,116,219],[74,143,202,175,0,224,155,191,234,100,196,205,16,20,61,23,115,201,206,137,4,133,199,217,145,209,136,6,214,122,78,64],[96,242,102,106,41,101,120,79,18,88,250,18,114,230,211,120,255,171,26,81,56,171,181,111,93,124,95,223,62,76,251,9],[19,253,122,126,250,4,44,177,148,166,5,104,115,11,77,102,42,127,145,75,44,147,19,182,99,150,236,62,125,111,5,197],[27,134,38,12,231,251,232,95,123,238,254,177,123,5,210,73,139,206,69,206,1,71,151,44,55,105,79,132,135,246,89,90],[105,141,139,146,44,33,11,101,67,194,211,163,116,87,30,105,190,122,214,199,14,94,233,54,253,217,69,68,76,112,169,224],[21,46,100,190,173,233,1,215,56,167,164,162,215,123,142,80,236,235,65,211,2,42,42,22,82,187,145,82,173,207,236,89],[202,64,19,10,246,139,28,216,81,119,113,42,94,146,0,89,221,244,85,122,113,232,243,226,20,80,28,98,47,208,151,215],[107,175,86,18,130,198,146,157,203,169,46,7,113,132,228,94,42,232,233,159,238,41,26,240,160,76,147,3,159,134,111,55],[47,13,143,66,112,152,75,91,47,226,113,166,111,228,172,189,110,167,156,93,114,151,134,150,40,201,81,91,203,175,80,168],[218,62,68,197,118,68,211,112,237,52,178,76,17,107,232,235,121,115,12,153,64,128,193,144,195,216,17,55,110,75,168,236],[158,15,246,162,112,33,192,73,134,84,104,32,92,144,60,15,30,2,117,57,225,59,246,203,200,103,99,53,235,86,176,88],[180,47,161,51,78,221,124,46,26,49,224,87,255,196,193,25,107,28,166,75,152,166,100,204,149,89,130,71,55,170,118,142],[113,2,30,175,36,45,127,72,243,47,154,173,113,12,116,214,175,209,229,145,144,207,14,155,248,100,30,119,114,16,26,163],[66,10,186,48,122,53,26,207,7,126,232,243,131,120,122,250,67,229,135,115,101,69,62,172,46,70,181,1,114,120,50,59],[231,87,41,230,253,92,232,104,232,87,204,119,197,65,32,13,68,230,117,157,63,182,233,109,160,20,138,197,145,58,24,205],[175,119,196,213,218,19,11,20,22,223,167,253,13,72,79,208,16,63,196,135,221,80,143,112,179,219,61,188,25,181,2,21]]",
              "sol": "[bytes32(stringToBytes32(\"206,8,21,161,150,160,156,213,255,88,176,64,230,26,113,116,93,6,15,112,208,51,16,110,79,59,44,42,141,237,44,124\")),bytes32(stringToBytes32(\"143,240,24,185,171,179,20,173,50,227,9,30,246,186,195,118,228,179,124,113,70,44,17,58,135,144,179,243,7,155,41,154\")),bytes32(stringToBytes32(\"87,40,79,78,41,130,156,190,108,166,139,150,153,205,212,200,100,115,148,34,45,212,175,28,101,73,81,253,91,90,8,60\")),bytes32(stringToBytes32(\"94,54,213,164,201,77,20,26,253,170,136,155,19,53,190,229,191,159,196,217,198,96,158,14,56,98,14,70,52,236,96,210\")),bytes32(stringToBytes32(\"55,203,106,61,46,184,213,1,83,191,234,168,248,129,55,13,214,15,254,185,52,40,234,136,255,224,252,39,194,221,225,254\")),bytes32(stringToBytes32(\"171,87,211,255,107,234,156,37,78,204,47,76,175,88,103,42,157,156,116,72,220,104,179,110,234,144,224,163,5,31,46,180\")),bytes32(stringToBytes32(\"160,162,59,161,242,224,23,218,146,252,186,113,115,155,88,18,21,211,32,170,21,92,93,9,79,43,26,32,101,173,197,223\")),bytes32(stringToBytes32(\"110,131,89,115,15,17,90,166,47,239,64,158,147,151,20,172,170,108,51,115,57,155,148,174,229,1,80,2,88,37,122,50\")),bytes32(stringToBytes32(\"201,232,106,227,185,140,53,35,237,189,203,0,77,136,5,231,103,185,20,237,96,205,18,51,175,63,86,198,60,32,123,39\")),bytes32(stringToBytes32(\"154,183,147,97,94,137,23,50,148,45,192,12,28,29,149,218,137,161,29,132,245,29,199,214,5,83,249,27,12,11,178,168\")),bytes32(stringToBytes32(\"239,224,240,13,101,218,60,58,98,70,135,162,93,38,66,88,189,230,249,217,26,152,142,74,125,155,169,142,190,104,29,179\")),bytes32(stringToBytes32(\"180,244,119,79,41,54,240,228,150,99,36,201,202,185,211,172,132,33,233,229,236,156,250,11,184,13,220,18,251,119,228,52\")),bytes32(stringToBytes32(\"233,122,206,231,40,183,144,182,219,81,228,137,203,65,243,176,63,54,180,186,40,194,141,191,117,78,6,141,5,34,151,135\")),bytes32(stringToBytes32(\"61,255,16,36,101,120,176,246,121,223,33,231,120,121,31,175,25,48,105,169,210,139,253,168,62,174,84,80,23,14,32,209\")),bytes32(stringToBytes32(\"171,24,0,164,91,222,184,212,252,93,109,200,46,173,104,80,1,148,134,250,193,116,29,132,140,240,235,75,169,154,47,11\")),bytes32(stringToBytes32(\"127,201,38,162,238,210,122,186,231,122,144,211,213,71,53,122,242,248,253,225,39,247,143,8,85,143,192,133,184,140,18,92\")),bytes32(stringToBytes32(\"199,181,85,56,120,173,86,3,150,177,49,88,30,226,206,177,251,209,90,9,107,43,89,244,120,226,246,18,93,3,202,69\")),bytes32(stringToBytes32(\"140,212,17,121,50,202,195,247,94,85,126,54,5,108,53,141,49,92,184,218,59,93,32,2,66,197,36,50,26,122,138,108\")),bytes32(stringToBytes32(\"46,76,2,119,139,29,165,82,237,217,53,150,86,196,145,148,93,234,121,141,70,53,93,30,41,6,51,249,124,195,241,201\")),bytes32(stringToBytes32(\"224,190,240,188,2,143,242,252,202,190,0,21,47,94,137,115,224,214,229,17,55,62,51,52,79,67,211,171,216,164,202,90\")),bytes32(stringToBytes32(\"229,186,131,204,156,232,32,44,178,34,97,58,149,148,92,197,86,114,128,251,201,112,65,84,170,2,130,28,2,165,95,89\")),bytes32(stringToBytes32(\"199,62,64,90,232,200,228,34,173,139,215,104,132,21,157,251,140,61,82,102,146,158,216,79,132,100,123,221,190,90,205,84\")),bytes32(stringToBytes32(\"110,74,42,238,199,6,77,194,42,81,3,128,186,93,213,178,252,46,130,76,29,133,15,209,155,14,77,206,69,56,34,226\")),bytes32(stringToBytes32(\"69,73,203,4,84,232,31,96,83,176,208,71,232,84,47,228,223,121,102,28,13,43,147,175,52,105,149,249,213,214,154,204\")),bytes32(stringToBytes32(\"96,121,104,227,159,68,151,124,184,32,154,123,245,171,173,103,57,36,177,186,189,156,144,70,129,13,166,227,103,5,109,62\")),bytes32(stringToBytes32(\"213,89,215,79,75,216,129,173,202,123,33,187,101,93,1,10,17,219,96,63,122,108,206,15,164,14,250,232,45,235,45,35\")),bytes32(stringToBytes32(\"153,238,53,137,114,208,149,126,87,92,138,211,21,163,218,60,33,211,52,66,105,252,166,10,46,36,45,58,234,11,37,209\")),bytes32(stringToBytes32(\"97,224,65,203,88,145,117,1,165,65,247,32,179,202,144,147,54,201,34,225,177,116,101,141,240,106,8,230,36,229,117,205\")),bytes32(stringToBytes32(\"169,196,47,53,87,181,42,174,147,149,145,223,27,206,54,239,186,253,44,144,72,92,92,118,172,235,52,120,215,220,107,175\")),bytes32(stringToBytes32(\"128,251,130,246,30,200,254,127,190,149,192,25,214,47,185,105,18,183,26,150,10,157,201,89,46,25,1,167,236,214,178,113\")),bytes32(stringToBytes32(\"168,135,230,105,222,50,198,87,124,128,171,29,179,201,30,109,220,139,232,202,227,247,59,105,53,89,13,129,72,168,181,146\")),bytes32(stringToBytes32(\"188,220,106,194,96,174,242,17,66,215,138,73,123,131,151,39,17,167,155,11,28,17,179,54,33,138,184,77,161,75,221,43\")),bytes32(stringToBytes32(\"76,43,230,68,142,203,148,161,155,243,141,204,198,81,59,29,76,16,197,171,170,162,199,29,35,213,250,118,151,32,100,31\")),bytes32(stringToBytes32(\"250,192,111,202,115,185,109,179,89,225,142,194,121,216,214,155,236,95,121,158,87,178,72,18,103,143,131,123,209,75,182,149\")),bytes32(stringToBytes32(\"56,22,244,158,100,143,172,170,41,34,157,66,178,87,114,215,14,5,18,163,110,242,167,250,209,4,168,41,206,142,96,177\")),bytes32(stringToBytes32(\"134,198,108,4,249,77,215,110,39,182,218,195,109,206,214,150,100,109,180,124,197,51,30,131,28,106,117,51,185,3,38,50\")),bytes32(stringToBytes32(\"246,155,67,175,203,64,153,250,69,150,249,235,187,5,30,22,98,72,104,69,93,54,84,162,12,210,15,43,158,84,146,3\")),bytes32(stringToBytes32(\"77,29,217,151,243,178,11,116,50,12,97,91,92,158,81,67,244,66,32,75,13,143,35,27,16,61,241,41,175,90,171,226\")),bytes32(stringToBytes32(\"192,65,177,99,207,252,136,15,18,124,180,68,228,13,68,226,67,126,210,112,152,211,5,100,149,246,8,190,79,252,42,24\")),bytes32(stringToBytes32(\"193,203,151,36,167,31,5,113,37,57,33,253,71,232,216,176,71,63,237,104,15,215,67,220,57,48,225,98,67,120,74,211\")),bytes32(stringToBytes32(\"1,140,219,141,203,154,222,99,64,2,215,153,187,121,50,70,187,234,75,132,37,15,212,81,225,17,94,161,125,158,173,87\")),bytes32(stringToBytes32(\"3,56,135,246,184,162,105,8,144,249,69,32,113,55,3,119,170,232,55,75,162,113,40,4,176,103,48,233,139,143,42,131\")),bytes32(stringToBytes32(\"22,39,102,1,102,22,49,212,246,31,61,210,200,130,33,188,255,182,243,95,48,119,65,201,81,89,215,42,181,156,189,88\")),bytes32(stringToBytes32(\"203,102,64,246,211,229,107,0,151,84,244,29,7,246,67,14,86,2,117,209,93,191,221,22,149,186,74,67,54,4,182,8\")),bytes32(stringToBytes32(\"93,162,245,49,169,0,64,43,0,138,195,111,118,193,138,104,202,89,228,15,83,62,183,211,167,78,213,126,178,21,29,186\")),bytes32(stringToBytes32(\"64,127,127,192,175,248,60,143,31,5,214,76,213,194,150,73,213,230,35,181,216,229,144,48,107,225,130,59,146,26,107,228\")),bytes32(stringToBytes32(\"219,146,103,240,175,93,234,109,196,236,113,133,148,49,158,240,248,230,106,84,121,59,146,214,143,22,20,63,90,117,178,96\")),bytes32(stringToBytes32(\"182,172,113,129,234,242,238,86,164,186,103,46,217,102,27,29,234,104,125,68,130,92,220,104,164,131,28,101,242,63,212,112\")),bytes32(stringToBytes32(\"219,108,9,94,198,216,241,225,168,151,65,37,219,249,106,203,154,3,102,148,137,47,207,190,50,180,177,133,22,8,116,219\")),bytes32(stringToBytes32(\"74,143,202,175,0,224,155,191,234,100,196,205,16,20,61,23,115,201,206,137,4,133,199,217,145,209,136,6,214,122,78,64\")),bytes32(stringToBytes32(\"96,242,102,106,41,101,120,79,18,88,250,18,114,230,211,120,255,171,26,81,56,171,181,111,93,124,95,223,62,76,251,9\")),bytes32(stringToBytes32(\"19,253,122,126,250,4,44,177,148,166,5,104,115,11,77,102,42,127,145,75,44,147,19,182,99,150,236,62,125,111,5,197\")),bytes32(stringToBytes32(\"27,134,38,12,231,251,232,95,123,238,254,177,123,5,210,73,139,206,69,206,1,71,151,44,55,105,79,132,135,246,89,90\")),bytes32(stringToBytes32(\"105,141,139,146,44,33,11,101,67,194,211,163,116,87,30,105,190,122,214,199,14,94,233,54,253,217,69,68,76,112,169,224\")),bytes32(stringToBytes32(\"21,46,100,190,173,233,1,215,56,167,164,162,215,123,142,80,236,235,65,211,2,42,42,22,82,187,145,82,173,207,236,89\")),bytes32(stringToBytes32(\"202,64,19,10,246,139,28,216,81,119,113,42,94,146,0,89,221,244,85,122,113,232,243,226,20,80,28,98,47,208,151,215\")),bytes32(stringToBytes32(\"107,175,86,18,130,198,146,157,203,169,46,7,113,132,228,94,42,232,233,159,238,41,26,240,160,76,147,3,159,134,111,55\")),bytes32(stringToBytes32(\"47,13,143,66,112,152,75,91,47,226,113,166,111,228,172,189,110,167,156,93,114,151,134,150,40,201,81,91,203,175,80,168\")),bytes32(stringToBytes32(\"218,62,68,197,118,68,211,112,237,52,178,76,17,107,232,235,121,115,12,153,64,128,193,144,195,216,17,55,110,75,168,236\")),bytes32(stringToBytes32(\"158,15,246,162,112,33,192,73,134,84,104,32,92,144,60,15,30,2,117,57,225,59,246,203,200,103,99,53,235,86,176,88\")),bytes32(stringToBytes32(\"180,47,161,51,78,221,124,46,26,49,224,87,255,196,193,25,107,28,166,75,152,166,100,204,149,89,130,71,55,170,118,142\")),bytes32(stringToBytes32(\"113,2,30,175,36,45,127,72,243,47,154,173,113,12,116,214,175,209,229,145,144,207,14,155,248,100,30,119,114,16,26,163\")),bytes32(stringToBytes32(\"66,10,186,48,122,53,26,207,7,126,232,243,131,120,122,250,67,229,135,115,101,69,62,172,46,70,181,1,114,120,50,59\")),bytes32(stringToBytes32(\"231,87,41,230,253,92,232,104,232,87,204,119,197,65,32,13,68,230,117,157,63,182,233,109,160,20,138,197,145,58,24,205\")),bytes32(stringToBytes32(\"175,119,196,213,218,19,11,20,22,223,167,253,13,72,79,208,16,63,196,135,221,80,143,112,179,219,61,188,25,181,2,21\"))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.910ZProxyMerkleShip.test_verifyMerkleProof": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_verifyMerkleProof(bytes32[6],bytes32,string)",
          "parameters": [
            {
              "js": "[[80,214,122,103,239,152,148,168,114,165,41,14,152,30,183,239,33,35,142,113,236,87,73,97,175,199,212,42,233,172,10,16],[142,142,210,159,141,79,181,143,22,214,177,199,129,216,22,253,122,7,71,95,222,158,70,125,66,67,115,243,217,88,112,200],[214,89,106,111,93,145,21,197,93,125,203,155,182,29,158,6,186,189,138,147,5,171,62,16,196,240,65,215,246,17,165,55],[249,39,222,55,133,205,227,135,91,98,42,231,187,132,120,206,160,170,76,233,86,118,151,34,165,25,230,220,14,238,37,127],[107,246,49,109,78,180,54,62,131,13,172,48,230,29,150,198,137,36,206,186,126,133,179,32,198,147,109,177,135,133,181,122],[143,184,222,142,128,22,99,83,225,218,96,11,90,31,87,63,107,128,178,96,16,206,152,52,12,24,168,138,161,59,140,195]]",
              "sol": "[bytes32(stringToBytes32(\"80,214,122,103,239,152,148,168,114,165,41,14,152,30,183,239,33,35,142,113,236,87,73,97,175,199,212,42,233,172,10,16\")),bytes32(stringToBytes32(\"142,142,210,159,141,79,181,143,22,214,177,199,129,216,22,253,122,7,71,95,222,158,70,125,66,67,115,243,217,88,112,200\")),bytes32(stringToBytes32(\"214,89,106,111,93,145,21,197,93,125,203,155,182,29,158,6,186,189,138,147,5,171,62,16,196,240,65,215,246,17,165,55\")),bytes32(stringToBytes32(\"249,39,222,55,133,205,227,135,91,98,42,231,187,132,120,206,160,170,76,233,86,118,151,34,165,25,230,220,14,238,37,127\")),bytes32(stringToBytes32(\"107,246,49,109,78,180,54,62,131,13,172,48,230,29,150,198,137,36,206,186,126,133,179,32,198,147,109,177,135,133,181,122\")),bytes32(stringToBytes32(\"143,184,222,142,128,22,99,83,225,218,96,11,90,31,87,63,107,128,178,96,16,206,152,52,12,24,168,138,161,59,140,195\"))]"
            },
            {
              "js": "[87,247,229,195,237,199,34,133,165,207,49,224,227,65,224,91,231,156,16,184,6,41,8,96,91,189,40,197,81,227,34,229]",
              "sol": "stringToBytes32(\"87,247,229,195,237,199,34,133,165,207,49,224,227,65,224,91,231,156,16,184,6,41,8,96,91,189,40,197,81,227,34,229\")"
            },
            {
              "js": "\"hpnnet\"",
              "sol": "\"hpnnet\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.910ZProxyMerkleShip.test_isCoordinateValid": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_isCoordinateValid(uint8,uint8)",
          "parameters": [
            {
              "js": "11",
              "sol": "11"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.911ZProxyMerkleShip.test_coordinateToIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_coordinateToIndex(uint8,uint8)",
          "parameters": [
            {
              "js": "99",
              "sol": "99"
            },
            {
              "js": "8",
              "sol": "8"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.911ZProxyMerkleShip.test_subString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_subString(string,uint256)",
          "parameters": [
            {
              "js": "\"ox243l\"",
              "sol": "\"ox243l\""
            },
            {
              "js": "63",
              "sol": "63"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T17:22:07.911ZProxyMerkleShip.test_isStringValid": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute test_isStringValid(string)",
          "parameters": [
            {
              "js": "\"uzfxm8\"",
              "sol": "\"uzfxm8\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}