,{
  "2020-11-11T19:12:36.054ZPaymentTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "28",
              "sol": "28"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "28",
                "sol": "28"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:12:42.374ZRedeemableTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "255",
              "sol": "255"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:12:48.563ZOffChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:12:54.890ZPartialRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892063",
              "sol": "1532892063"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:01.410ZOnChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,IERC20,address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:08.078ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "28",
              "sol": "28"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "10001",
              "sol": "10001"
            },
            {
              "js": "{from:accounts[9]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "28",
                "sol": "28"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"accounts[8]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "28",
                "sol": "28"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:16.113ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "1338",
              "sol": "1338"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:22.693ZFullRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:29.451ZOnChainVoting.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,address,uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<_endTime,_issuer!=0x0000000000000000000000000000000000000000,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+205",
              "sol": "block.timestamp+205"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp < _endTime",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
                "sol": "block.timestamp"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+205",
                "sol": "block.timestamp+205"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+205",
                "sol": "block.timestamp+205"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+205",
                "sol": "block.timestamp+205"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.182ZRedeemableToken.setRedemption": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setRedemption(address) WHEN msg.sender==_owner,_redemption!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: _redemption != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.184ZRedeemableToken.redeemAllTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemAllTokens(address) WHEN msg.sender==redemption,msg.sender==_owner,balance>0",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.186ZRedeemableToken.redeemPartialTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemPartialTokens(address,uint256) WHEN msg.sender==redemption,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"accounts[8]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.188ZOffChainPayments.recordPayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute recordPayments(address[],uint256[],uint256[],bytes32[]) WHEN msg.sender==_owner,_securityHolders.length>0,_securityHolders.length==_offchainPaymentHashes.length,_securityHolders.length==_paymentTimestamps.length,_securityHolders.length==_paymentValues.length",
          "parameters": [
            {
              "js": "[accounts[5],accounts[1],accounts[7],accounts[2],accounts[5],accounts[1],accounts[8],accounts[6],accounts[8],accounts[5],accounts[5],accounts[1],accounts[4],accounts[9],accounts[8],accounts[9],accounts[3],accounts[9],accounts[3],accounts[3],accounts[7],accounts[1],accounts[0],accounts[2],accounts[2],accounts[5],accounts[5],accounts[2],accounts[7],accounts[7],accounts[5],accounts[6],accounts[5],accounts[5],accounts[9],accounts[8],accounts[2],accounts[3],accounts[7],accounts[5],accounts[4],accounts[4],accounts[9],accounts[1],accounts[3],accounts[3],accounts[9],accounts[0],accounts[2],accounts[4],accounts[4],accounts[1],accounts[3],accounts[4],accounts[8],accounts[0],accounts[0],accounts[7],accounts[3],accounts[2],accounts[3],accounts[5],accounts[6],accounts[6],accounts[3]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[256,1,4,2014223716,28,10000,2,66,29,257,6,254,1,26,1532892064,2014223714,10001,1337,1337,5,27,10000,26,27,96,2014223715,9999,26,1337,256,1532892062,1336,29,254,256,95,5,27,1,97,5,26,27,96,1336,1532892062,256,29,29,9999,66,29,97,254,255,96,10000,0,2014223716,0,4,1532892064,1532892064,66,5]",
              "sol": "[uint256(256),uint256(1),uint256(4),uint256(2014223716),uint256(28),uint256(10000),uint256(2),uint256(66),uint256(29),uint256(257),uint256(6),uint256(254),uint256(1),uint256(26),uint256(1532892064),uint256(2014223714),uint256(10001),uint256(1337),uint256(1337),uint256(5),uint256(27),uint256(10000),uint256(26),uint256(27),uint256(96),uint256(2014223715),uint256(9999),uint256(26),uint256(1337),uint256(256),uint256(1532892062),uint256(1336),uint256(29),uint256(254),uint256(256),uint256(95),uint256(5),uint256(27),uint256(1),uint256(97),uint256(5),uint256(26),uint256(27),uint256(96),uint256(1336),uint256(1532892062),uint256(256),uint256(29),uint256(29),uint256(9999),uint256(66),uint256(29),uint256(97),uint256(254),uint256(255),uint256(96),uint256(10000),uint256(0),uint256(2014223716),uint256(0),uint256(4),uint256(1532892064),uint256(1532892064),uint256(66),uint256(5)]"
            },
            {
              "js": "[6,2014223714,29,66,2014223716,1,10001,96,255,65,1532892063,254,64,9999,10001,28,2014223714,9999,65,4,9999,2014223715,66,1532892064,1532892063,1,1532892063,1532892063,254,1337,2014223715,1532892064,6,3,29,256,2,256,1532892062,97,2014223716,256,1532892062,64,2,97,2014223715,96,254,2,10000,1,2,95,2,1532892063,0,64,27,10000,96,255,65,6,2014223715]",
              "sol": "[uint256(6),uint256(2014223714),uint256(29),uint256(66),uint256(2014223716),uint256(1),uint256(10001),uint256(96),uint256(255),uint256(65),uint256(1532892063),uint256(254),uint256(64),uint256(9999),uint256(10001),uint256(28),uint256(2014223714),uint256(9999),uint256(65),uint256(4),uint256(9999),uint256(2014223715),uint256(66),uint256(1532892064),uint256(1532892063),uint256(1),uint256(1532892063),uint256(1532892063),uint256(254),uint256(1337),uint256(2014223715),uint256(1532892064),uint256(6),uint256(3),uint256(29),uint256(256),uint256(2),uint256(256),uint256(1532892062),uint256(97),uint256(2014223716),uint256(256),uint256(1532892062),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(96),uint256(254),uint256(2),uint256(10000),uint256(1),uint256(2),uint256(95),uint256(2),uint256(1532892063),uint256(0),uint256(64),uint256(27),uint256(10000),uint256(96),uint256(255),uint256(65),uint256(6),uint256(2014223715)]"
            },
            {
              "js": "[[180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184],[255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146],[151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65],[106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63],[110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243],[182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119],[89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54],[75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18],[109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19],[96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237],[226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73],[81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67],[28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238],[215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218],[186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249],[32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218],[234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126],[52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89],[49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34],[133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119],[32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92],[248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210],[78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151],[30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98],[224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8],[66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214],[140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161],[45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206],[146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55],[246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72],[231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68],[23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94],[235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40],[78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178],[91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12],[242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52],[189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26],[9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160],[218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191],[135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249],[161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158],[34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175],[186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75],[175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5],[177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195],[170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247],[240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116],[205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157],[119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174],[141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10],[247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17],[141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222],[160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180],[173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208],[217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61],[48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126],[98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191],[9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178],[56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54],[132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8],[59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131],[194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148],[79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216],[218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131],[47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112]]",
              "sol": "[bytes32(stringToBytes32(\"180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184\")),bytes32(stringToBytes32(\"255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146\")),bytes32(stringToBytes32(\"151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65\")),bytes32(stringToBytes32(\"106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63\")),bytes32(stringToBytes32(\"110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243\")),bytes32(stringToBytes32(\"182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119\")),bytes32(stringToBytes32(\"89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54\")),bytes32(stringToBytes32(\"75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18\")),bytes32(stringToBytes32(\"109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19\")),bytes32(stringToBytes32(\"96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237\")),bytes32(stringToBytes32(\"226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73\")),bytes32(stringToBytes32(\"81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67\")),bytes32(stringToBytes32(\"28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238\")),bytes32(stringToBytes32(\"215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218\")),bytes32(stringToBytes32(\"186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249\")),bytes32(stringToBytes32(\"32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218\")),bytes32(stringToBytes32(\"234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126\")),bytes32(stringToBytes32(\"52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89\")),bytes32(stringToBytes32(\"49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34\")),bytes32(stringToBytes32(\"133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119\")),bytes32(stringToBytes32(\"32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92\")),bytes32(stringToBytes32(\"248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210\")),bytes32(stringToBytes32(\"78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151\")),bytes32(stringToBytes32(\"30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98\")),bytes32(stringToBytes32(\"224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8\")),bytes32(stringToBytes32(\"66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214\")),bytes32(stringToBytes32(\"140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161\")),bytes32(stringToBytes32(\"45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206\")),bytes32(stringToBytes32(\"146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55\")),bytes32(stringToBytes32(\"246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72\")),bytes32(stringToBytes32(\"231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68\")),bytes32(stringToBytes32(\"23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94\")),bytes32(stringToBytes32(\"235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40\")),bytes32(stringToBytes32(\"78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178\")),bytes32(stringToBytes32(\"91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12\")),bytes32(stringToBytes32(\"242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52\")),bytes32(stringToBytes32(\"189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26\")),bytes32(stringToBytes32(\"9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160\")),bytes32(stringToBytes32(\"218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191\")),bytes32(stringToBytes32(\"135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249\")),bytes32(stringToBytes32(\"161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158\")),bytes32(stringToBytes32(\"34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175\")),bytes32(stringToBytes32(\"186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75\")),bytes32(stringToBytes32(\"175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5\")),bytes32(stringToBytes32(\"177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195\")),bytes32(stringToBytes32(\"170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247\")),bytes32(stringToBytes32(\"240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116\")),bytes32(stringToBytes32(\"205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157\")),bytes32(stringToBytes32(\"119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174\")),bytes32(stringToBytes32(\"141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10\")),bytes32(stringToBytes32(\"247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17\")),bytes32(stringToBytes32(\"141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222\")),bytes32(stringToBytes32(\"160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180\")),bytes32(stringToBytes32(\"173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208\")),bytes32(stringToBytes32(\"217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61\")),bytes32(stringToBytes32(\"48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126\")),bytes32(stringToBytes32(\"98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191\")),bytes32(stringToBytes32(\"9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178\")),bytes32(stringToBytes32(\"56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54\")),bytes32(stringToBytes32(\"132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8\")),bytes32(stringToBytes32(\"59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131\")),bytes32(stringToBytes32(\"194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148\")),bytes32(stringToBytes32(\"79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216\")),bytes32(stringToBytes32(\"218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131\")),bytes32(stringToBytes32(\"47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112\"))]"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[5],accounts[1],accounts[7],accounts[2],accounts[5],accounts[1],accounts[8],accounts[6],accounts[8],accounts[5],accounts[5],accounts[1],accounts[4],accounts[9],accounts[8],accounts[9],accounts[3],accounts[9],accounts[3],accounts[3],accounts[7],accounts[1],accounts[0],accounts[2],accounts[2],accounts[5],accounts[5],accounts[2],accounts[7],accounts[7],accounts[5],accounts[6],accounts[5],accounts[5],accounts[9],accounts[8],accounts[2],accounts[3],accounts[7],accounts[5],accounts[4],accounts[4],accounts[9],accounts[1],accounts[3],accounts[3],accounts[9],accounts[0],accounts[2],accounts[4],accounts[4],accounts[1],accounts[3],accounts[4],accounts[8],accounts[0],accounts[0],accounts[7],accounts[3],accounts[2],accounts[3],accounts[5],accounts[6],accounts[6],accounts[3]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[256,1,4,2014223716,28,10000,2,66,29,257,6,254,1,26,1532892064,2014223714,10001,1337,1337,5,27,10000,26,27,96,2014223715,9999,26,1337,256,1532892062,1336,29,254,256,95,5,27,1,97,5,26,27,96,1336,1532892062,256,29,29,9999,66,29,97,254,255,96,10000,0,2014223716,0,4,1532892064,1532892064,66,5]",
                "sol": "[uint256(256),uint256(1),uint256(4),uint256(2014223716),uint256(28),uint256(10000),uint256(2),uint256(66),uint256(29),uint256(257),uint256(6),uint256(254),uint256(1),uint256(26),uint256(1532892064),uint256(2014223714),uint256(10001),uint256(1337),uint256(1337),uint256(5),uint256(27),uint256(10000),uint256(26),uint256(27),uint256(96),uint256(2014223715),uint256(9999),uint256(26),uint256(1337),uint256(256),uint256(1532892062),uint256(1336),uint256(29),uint256(254),uint256(256),uint256(95),uint256(5),uint256(27),uint256(1),uint256(97),uint256(5),uint256(26),uint256(27),uint256(96),uint256(1336),uint256(1532892062),uint256(256),uint256(29),uint256(29),uint256(9999),uint256(66),uint256(29),uint256(97),uint256(254),uint256(255),uint256(96),uint256(10000),uint256(0),uint256(2014223716),uint256(0),uint256(4),uint256(1532892064),uint256(1532892064),uint256(66),uint256(5)]"
              },
              {
                "js": "[6,2014223714,29,66,2014223716,1,10001,96,255,65,1532892063,254,64,9999,10001,28,2014223714,9999,65,4,9999,2014223715,66,1532892064,1532892063,1,1532892063,1532892063,254,1337,2014223715,1532892064,6,3,29,256,2,256,1532892062,97,2014223716,256,1532892062,64,2,97,2014223715,96,254,2,10000,1,2,95,2,1532892063,0,64,27,10000,96,255,65,6,2014223715]",
                "sol": "[uint256(6),uint256(2014223714),uint256(29),uint256(66),uint256(2014223716),uint256(1),uint256(10001),uint256(96),uint256(255),uint256(65),uint256(1532892063),uint256(254),uint256(64),uint256(9999),uint256(10001),uint256(28),uint256(2014223714),uint256(9999),uint256(65),uint256(4),uint256(9999),uint256(2014223715),uint256(66),uint256(1532892064),uint256(1532892063),uint256(1),uint256(1532892063),uint256(1532892063),uint256(254),uint256(1337),uint256(2014223715),uint256(1532892064),uint256(6),uint256(3),uint256(29),uint256(256),uint256(2),uint256(256),uint256(1532892062),uint256(97),uint256(2014223716),uint256(256),uint256(1532892062),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(96),uint256(254),uint256(2),uint256(10000),uint256(1),uint256(2),uint256(95),uint256(2),uint256(1532892063),uint256(0),uint256(64),uint256(27),uint256(10000),uint256(96),uint256(255),uint256(65),uint256(6),uint256(2014223715)]"
              },
              {
                "js": "[[180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184],[255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146],[151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65],[106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63],[110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243],[182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119],[89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54],[75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18],[109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19],[96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237],[226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73],[81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67],[28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238],[215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218],[186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249],[32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218],[234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126],[52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89],[49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34],[133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119],[32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92],[248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210],[78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151],[30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98],[224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8],[66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214],[140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161],[45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206],[146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55],[246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72],[231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68],[23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94],[235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40],[78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178],[91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12],[242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52],[189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26],[9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160],[218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191],[135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249],[161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158],[34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175],[186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75],[175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5],[177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195],[170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247],[240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116],[205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157],[119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174],[141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10],[247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17],[141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222],[160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180],[173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208],[217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61],[48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126],[98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191],[9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178],[56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54],[132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8],[59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131],[194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148],[79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216],[218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131],[47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112]]",
                "sol": "[bytes32(stringToBytes32(\"180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184\")),bytes32(stringToBytes32(\"255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146\")),bytes32(stringToBytes32(\"151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65\")),bytes32(stringToBytes32(\"106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63\")),bytes32(stringToBytes32(\"110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243\")),bytes32(stringToBytes32(\"182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119\")),bytes32(stringToBytes32(\"89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54\")),bytes32(stringToBytes32(\"75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18\")),bytes32(stringToBytes32(\"109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19\")),bytes32(stringToBytes32(\"96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237\")),bytes32(stringToBytes32(\"226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73\")),bytes32(stringToBytes32(\"81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67\")),bytes32(stringToBytes32(\"28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238\")),bytes32(stringToBytes32(\"215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218\")),bytes32(stringToBytes32(\"186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249\")),bytes32(stringToBytes32(\"32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218\")),bytes32(stringToBytes32(\"234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126\")),bytes32(stringToBytes32(\"52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89\")),bytes32(stringToBytes32(\"49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34\")),bytes32(stringToBytes32(\"133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119\")),bytes32(stringToBytes32(\"32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92\")),bytes32(stringToBytes32(\"248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210\")),bytes32(stringToBytes32(\"78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151\")),bytes32(stringToBytes32(\"30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98\")),bytes32(stringToBytes32(\"224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8\")),bytes32(stringToBytes32(\"66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214\")),bytes32(stringToBytes32(\"140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161\")),bytes32(stringToBytes32(\"45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206\")),bytes32(stringToBytes32(\"146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55\")),bytes32(stringToBytes32(\"246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72\")),bytes32(stringToBytes32(\"231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68\")),bytes32(stringToBytes32(\"23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94\")),bytes32(stringToBytes32(\"235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40\")),bytes32(stringToBytes32(\"78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178\")),bytes32(stringToBytes32(\"91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12\")),bytes32(stringToBytes32(\"242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52\")),bytes32(stringToBytes32(\"189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26\")),bytes32(stringToBytes32(\"9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160\")),bytes32(stringToBytes32(\"218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191\")),bytes32(stringToBytes32(\"135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249\")),bytes32(stringToBytes32(\"161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158\")),bytes32(stringToBytes32(\"34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175\")),bytes32(stringToBytes32(\"186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75\")),bytes32(stringToBytes32(\"175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5\")),bytes32(stringToBytes32(\"177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195\")),bytes32(stringToBytes32(\"170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247\")),bytes32(stringToBytes32(\"240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116\")),bytes32(stringToBytes32(\"205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157\")),bytes32(stringToBytes32(\"119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174\")),bytes32(stringToBytes32(\"141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10\")),bytes32(stringToBytes32(\"247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17\")),bytes32(stringToBytes32(\"141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222\")),bytes32(stringToBytes32(\"160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180\")),bytes32(stringToBytes32(\"173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208\")),bytes32(stringToBytes32(\"217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61\")),bytes32(stringToBytes32(\"48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126\")),bytes32(stringToBytes32(\"98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191\")),bytes32(stringToBytes32(\"9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178\")),bytes32(stringToBytes32(\"56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54\")),bytes32(stringToBytes32(\"132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8\")),bytes32(stringToBytes32(\"59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131\")),bytes32(stringToBytes32(\"194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148\")),bytes32(stringToBytes32(\"79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216\")),bytes32(stringToBytes32(\"218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131\")),bytes32(stringToBytes32(\"47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[256,1,4,2014223716,28,10000,2,66,29,257,6,254,1,26,1532892064,2014223714,10001,1337,1337,5,27,10000,26,27,96,2014223715,9999,26,1337,256,1532892062,1336,29,254,256,95,5,27,1,97,5,26,27,96,1336,1532892062,256,29,29,9999,66,29,97,254,255,96,10000,0,2014223716,0,4,1532892064,1532892064,66,5]",
                "sol": "[uint256(256),uint256(1),uint256(4),uint256(2014223716),uint256(28),uint256(10000),uint256(2),uint256(66),uint256(29),uint256(257),uint256(6),uint256(254),uint256(1),uint256(26),uint256(1532892064),uint256(2014223714),uint256(10001),uint256(1337),uint256(1337),uint256(5),uint256(27),uint256(10000),uint256(26),uint256(27),uint256(96),uint256(2014223715),uint256(9999),uint256(26),uint256(1337),uint256(256),uint256(1532892062),uint256(1336),uint256(29),uint256(254),uint256(256),uint256(95),uint256(5),uint256(27),uint256(1),uint256(97),uint256(5),uint256(26),uint256(27),uint256(96),uint256(1336),uint256(1532892062),uint256(256),uint256(29),uint256(29),uint256(9999),uint256(66),uint256(29),uint256(97),uint256(254),uint256(255),uint256(96),uint256(10000),uint256(0),uint256(2014223716),uint256(0),uint256(4),uint256(1532892064),uint256(1532892064),uint256(66),uint256(5)]"
              },
              {
                "js": "[6,2014223714,29,66,2014223716,1,10001,96,255,65,1532892063,254,64,9999,10001,28,2014223714,9999,65,4,9999,2014223715,66,1532892064,1532892063,1,1532892063,1532892063,254,1337,2014223715,1532892064,6,3,29,256,2,256,1532892062,97,2014223716,256,1532892062,64,2,97,2014223715,96,254,2,10000,1,2,95,2,1532892063,0,64,27,10000,96,255,65,6,2014223715]",
                "sol": "[uint256(6),uint256(2014223714),uint256(29),uint256(66),uint256(2014223716),uint256(1),uint256(10001),uint256(96),uint256(255),uint256(65),uint256(1532892063),uint256(254),uint256(64),uint256(9999),uint256(10001),uint256(28),uint256(2014223714),uint256(9999),uint256(65),uint256(4),uint256(9999),uint256(2014223715),uint256(66),uint256(1532892064),uint256(1532892063),uint256(1),uint256(1532892063),uint256(1532892063),uint256(254),uint256(1337),uint256(2014223715),uint256(1532892064),uint256(6),uint256(3),uint256(29),uint256(256),uint256(2),uint256(256),uint256(1532892062),uint256(97),uint256(2014223716),uint256(256),uint256(1532892062),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(96),uint256(254),uint256(2),uint256(10000),uint256(1),uint256(2),uint256(95),uint256(2),uint256(1532892063),uint256(0),uint256(64),uint256(27),uint256(10000),uint256(96),uint256(255),uint256(65),uint256(6),uint256(2014223715)]"
              },
              {
                "js": "[[180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184],[255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146],[151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65],[106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63],[110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243],[182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119],[89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54],[75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18],[109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19],[96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237],[226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73],[81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67],[28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238],[215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218],[186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249],[32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218],[234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126],[52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89],[49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34],[133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119],[32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92],[248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210],[78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151],[30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98],[224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8],[66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214],[140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161],[45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206],[146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55],[246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72],[231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68],[23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94],[235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40],[78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178],[91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12],[242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52],[189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26],[9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160],[218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191],[135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249],[161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158],[34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175],[186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75],[175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5],[177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195],[170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247],[240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116],[205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157],[119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174],[141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10],[247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17],[141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222],[160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180],[173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208],[217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61],[48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126],[98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191],[9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178],[56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54],[132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8],[59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131],[194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148],[79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216],[218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131],[47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112]]",
                "sol": "[bytes32(stringToBytes32(\"180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184\")),bytes32(stringToBytes32(\"255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146\")),bytes32(stringToBytes32(\"151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65\")),bytes32(stringToBytes32(\"106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63\")),bytes32(stringToBytes32(\"110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243\")),bytes32(stringToBytes32(\"182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119\")),bytes32(stringToBytes32(\"89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54\")),bytes32(stringToBytes32(\"75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18\")),bytes32(stringToBytes32(\"109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19\")),bytes32(stringToBytes32(\"96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237\")),bytes32(stringToBytes32(\"226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73\")),bytes32(stringToBytes32(\"81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67\")),bytes32(stringToBytes32(\"28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238\")),bytes32(stringToBytes32(\"215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218\")),bytes32(stringToBytes32(\"186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249\")),bytes32(stringToBytes32(\"32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218\")),bytes32(stringToBytes32(\"234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126\")),bytes32(stringToBytes32(\"52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89\")),bytes32(stringToBytes32(\"49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34\")),bytes32(stringToBytes32(\"133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119\")),bytes32(stringToBytes32(\"32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92\")),bytes32(stringToBytes32(\"248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210\")),bytes32(stringToBytes32(\"78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151\")),bytes32(stringToBytes32(\"30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98\")),bytes32(stringToBytes32(\"224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8\")),bytes32(stringToBytes32(\"66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214\")),bytes32(stringToBytes32(\"140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161\")),bytes32(stringToBytes32(\"45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206\")),bytes32(stringToBytes32(\"146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55\")),bytes32(stringToBytes32(\"246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72\")),bytes32(stringToBytes32(\"231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68\")),bytes32(stringToBytes32(\"23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94\")),bytes32(stringToBytes32(\"235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40\")),bytes32(stringToBytes32(\"78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178\")),bytes32(stringToBytes32(\"91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12\")),bytes32(stringToBytes32(\"242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52\")),bytes32(stringToBytes32(\"189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26\")),bytes32(stringToBytes32(\"9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160\")),bytes32(stringToBytes32(\"218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191\")),bytes32(stringToBytes32(\"135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249\")),bytes32(stringToBytes32(\"161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158\")),bytes32(stringToBytes32(\"34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175\")),bytes32(stringToBytes32(\"186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75\")),bytes32(stringToBytes32(\"175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5\")),bytes32(stringToBytes32(\"177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195\")),bytes32(stringToBytes32(\"170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247\")),bytes32(stringToBytes32(\"240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116\")),bytes32(stringToBytes32(\"205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157\")),bytes32(stringToBytes32(\"119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174\")),bytes32(stringToBytes32(\"141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10\")),bytes32(stringToBytes32(\"247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17\")),bytes32(stringToBytes32(\"141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222\")),bytes32(stringToBytes32(\"160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180\")),bytes32(stringToBytes32(\"173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208\")),bytes32(stringToBytes32(\"217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61\")),bytes32(stringToBytes32(\"48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126\")),bytes32(stringToBytes32(\"98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191\")),bytes32(stringToBytes32(\"9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178\")),bytes32(stringToBytes32(\"56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54\")),bytes32(stringToBytes32(\"132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8\")),bytes32(stringToBytes32(\"59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131\")),bytes32(stringToBytes32(\"194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148\")),bytes32(stringToBytes32(\"79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216\")),bytes32(stringToBytes32(\"218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131\")),bytes32(stringToBytes32(\"47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _offchainPaymentHashes.length",
            "parameters": [
              {
                "js": "[accounts[7],accounts[5],accounts[4],accounts[7],accounts[2],accounts[1],accounts[0],accounts[3],accounts[3],accounts[6],accounts[1],accounts[5],accounts[2],accounts[0],accounts[6],accounts[9],accounts[8],accounts[2],accounts[4],accounts[6],accounts[6],accounts[8],accounts[4],accounts[5],accounts[4],accounts[3],accounts[7],accounts[0],accounts[2],accounts[5],accounts[2],accounts[6],accounts[1],accounts[7],accounts[8],accounts[1],accounts[6],accounts[3],accounts[9],accounts[4],accounts[2],accounts[9],accounts[9],accounts[7],accounts[3],accounts[3],accounts[0],accounts[4],accounts[3],accounts[3],accounts[4],accounts[2],accounts[1],accounts[1],accounts[0],accounts[3],accounts[6],accounts[3],accounts[8],accounts[0],accounts[2],accounts[6],accounts[0],accounts[1],accounts[7],accounts[0]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[256,1,4,2014223716,28,10000,2,66,29,257,6,254,1,26,1532892064,2014223714,10001,1337,1337,5,27,10000,26,27,96,2014223715,9999,26,1337,256,1532892062,1336,29,254,256,95,5,27,1,97,5,26,27,96,1336,1532892062,256,29,29,9999,66,29,97,254,255,96,10000,0,2014223716,0,4,1532892064,1532892064,66,5]",
                "sol": "[uint256(256),uint256(1),uint256(4),uint256(2014223716),uint256(28),uint256(10000),uint256(2),uint256(66),uint256(29),uint256(257),uint256(6),uint256(254),uint256(1),uint256(26),uint256(1532892064),uint256(2014223714),uint256(10001),uint256(1337),uint256(1337),uint256(5),uint256(27),uint256(10000),uint256(26),uint256(27),uint256(96),uint256(2014223715),uint256(9999),uint256(26),uint256(1337),uint256(256),uint256(1532892062),uint256(1336),uint256(29),uint256(254),uint256(256),uint256(95),uint256(5),uint256(27),uint256(1),uint256(97),uint256(5),uint256(26),uint256(27),uint256(96),uint256(1336),uint256(1532892062),uint256(256),uint256(29),uint256(29),uint256(9999),uint256(66),uint256(29),uint256(97),uint256(254),uint256(255),uint256(96),uint256(10000),uint256(0),uint256(2014223716),uint256(0),uint256(4),uint256(1532892064),uint256(1532892064),uint256(66),uint256(5)]"
              },
              {
                "js": "[6,2014223714,29,66,2014223716,1,10001,96,255,65,1532892063,254,64,9999,10001,28,2014223714,9999,65,4,9999,2014223715,66,1532892064,1532892063,1,1532892063,1532892063,254,1337,2014223715,1532892064,6,3,29,256,2,256,1532892062,97,2014223716,256,1532892062,64,2,97,2014223715,96,254,2,10000,1,2,95,2,1532892063,0,64,27,10000,96,255,65,6,2014223715]",
                "sol": "[uint256(6),uint256(2014223714),uint256(29),uint256(66),uint256(2014223716),uint256(1),uint256(10001),uint256(96),uint256(255),uint256(65),uint256(1532892063),uint256(254),uint256(64),uint256(9999),uint256(10001),uint256(28),uint256(2014223714),uint256(9999),uint256(65),uint256(4),uint256(9999),uint256(2014223715),uint256(66),uint256(1532892064),uint256(1532892063),uint256(1),uint256(1532892063),uint256(1532892063),uint256(254),uint256(1337),uint256(2014223715),uint256(1532892064),uint256(6),uint256(3),uint256(29),uint256(256),uint256(2),uint256(256),uint256(1532892062),uint256(97),uint256(2014223716),uint256(256),uint256(1532892062),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(96),uint256(254),uint256(2),uint256(10000),uint256(1),uint256(2),uint256(95),uint256(2),uint256(1532892063),uint256(0),uint256(64),uint256(27),uint256(10000),uint256(96),uint256(255),uint256(65),uint256(6),uint256(2014223715)]"
              },
              {
                "js": "[[180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184],[255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146],[151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65],[106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63],[110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243],[182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119],[89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54],[75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18],[109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19],[96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237],[226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73],[81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67],[28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238],[215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218],[186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249],[32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218],[234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126],[52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89],[49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34],[133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119],[32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92],[248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210],[78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151],[30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98],[224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8],[66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214],[140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161],[45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206],[146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55],[246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72],[231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68],[23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94],[235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40],[78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178],[91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12],[242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52],[189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26],[9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160],[218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191],[135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249],[161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158],[34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175],[186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75],[175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5],[177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195],[170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247],[240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116],[205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157],[119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174],[141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10],[247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17],[141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222],[160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180],[173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208],[217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61],[48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126],[98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191],[9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178],[56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54],[132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8],[59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131],[194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148],[79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216],[218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131],[47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112]]",
                "sol": "[bytes32(stringToBytes32(\"180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184\")),bytes32(stringToBytes32(\"255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146\")),bytes32(stringToBytes32(\"151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65\")),bytes32(stringToBytes32(\"106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63\")),bytes32(stringToBytes32(\"110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243\")),bytes32(stringToBytes32(\"182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119\")),bytes32(stringToBytes32(\"89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54\")),bytes32(stringToBytes32(\"75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18\")),bytes32(stringToBytes32(\"109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19\")),bytes32(stringToBytes32(\"96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237\")),bytes32(stringToBytes32(\"226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73\")),bytes32(stringToBytes32(\"81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67\")),bytes32(stringToBytes32(\"28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238\")),bytes32(stringToBytes32(\"215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218\")),bytes32(stringToBytes32(\"186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249\")),bytes32(stringToBytes32(\"32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218\")),bytes32(stringToBytes32(\"234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126\")),bytes32(stringToBytes32(\"52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89\")),bytes32(stringToBytes32(\"49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34\")),bytes32(stringToBytes32(\"133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119\")),bytes32(stringToBytes32(\"32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92\")),bytes32(stringToBytes32(\"248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210\")),bytes32(stringToBytes32(\"78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151\")),bytes32(stringToBytes32(\"30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98\")),bytes32(stringToBytes32(\"224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8\")),bytes32(stringToBytes32(\"66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214\")),bytes32(stringToBytes32(\"140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161\")),bytes32(stringToBytes32(\"45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206\")),bytes32(stringToBytes32(\"146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55\")),bytes32(stringToBytes32(\"246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72\")),bytes32(stringToBytes32(\"231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68\")),bytes32(stringToBytes32(\"23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94\")),bytes32(stringToBytes32(\"235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40\")),bytes32(stringToBytes32(\"78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178\")),bytes32(stringToBytes32(\"91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12\")),bytes32(stringToBytes32(\"242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52\")),bytes32(stringToBytes32(\"189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26\")),bytes32(stringToBytes32(\"9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160\")),bytes32(stringToBytes32(\"218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191\")),bytes32(stringToBytes32(\"135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249\")),bytes32(stringToBytes32(\"161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158\")),bytes32(stringToBytes32(\"34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175\")),bytes32(stringToBytes32(\"186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75\")),bytes32(stringToBytes32(\"175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5\")),bytes32(stringToBytes32(\"177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195\")),bytes32(stringToBytes32(\"170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247\")),bytes32(stringToBytes32(\"240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116\")),bytes32(stringToBytes32(\"205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157\")),bytes32(stringToBytes32(\"119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174\")),bytes32(stringToBytes32(\"141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10\")),bytes32(stringToBytes32(\"247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17\")),bytes32(stringToBytes32(\"141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222\")),bytes32(stringToBytes32(\"160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180\")),bytes32(stringToBytes32(\"173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208\")),bytes32(stringToBytes32(\"217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61\")),bytes32(stringToBytes32(\"48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126\")),bytes32(stringToBytes32(\"98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191\")),bytes32(stringToBytes32(\"9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178\")),bytes32(stringToBytes32(\"56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54\")),bytes32(stringToBytes32(\"132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8\")),bytes32(stringToBytes32(\"59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131\")),bytes32(stringToBytes32(\"194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148\")),bytes32(stringToBytes32(\"79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216\")),bytes32(stringToBytes32(\"218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131\")),bytes32(stringToBytes32(\"47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentTimestamps.length",
            "parameters": [
              {
                "js": "[accounts[7],accounts[1],accounts[8],accounts[1],accounts[7],accounts[0],accounts[3],accounts[0],accounts[4],accounts[0],accounts[9],accounts[1],accounts[1],accounts[1],accounts[7],accounts[1],accounts[3],accounts[2],accounts[6],accounts[4],accounts[4],accounts[0],accounts[0],accounts[0],accounts[2],accounts[9],accounts[4],accounts[2],accounts[6],accounts[5],accounts[5],accounts[0],accounts[4],accounts[1],accounts[8],accounts[1],accounts[6],accounts[7],accounts[3],accounts[6],accounts[0],accounts[2],accounts[6],accounts[7],accounts[0],accounts[3],accounts[0],accounts[6],accounts[2],accounts[2],accounts[5],accounts[5],accounts[1],accounts[8],accounts[0],accounts[1],accounts[5],accounts[9],accounts[1],accounts[1],accounts[7],accounts[2],accounts[9],accounts[2],accounts[5],accounts[7]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[256,1,4,2014223716,28,10000,2,66,29,257,6,254,1,26,1532892064,2014223714,10001,1337,1337,5,27,10000,26,27,96,2014223715,9999,26,1337,256,1532892062,1336,29,254,256,95,5,27,1,97,5,26,27,96,1336,1532892062,256,29,29,9999,66,29,97,254,255,96,10000,0,2014223716,0,4,1532892064,1532892064,66,5]",
                "sol": "[uint256(256),uint256(1),uint256(4),uint256(2014223716),uint256(28),uint256(10000),uint256(2),uint256(66),uint256(29),uint256(257),uint256(6),uint256(254),uint256(1),uint256(26),uint256(1532892064),uint256(2014223714),uint256(10001),uint256(1337),uint256(1337),uint256(5),uint256(27),uint256(10000),uint256(26),uint256(27),uint256(96),uint256(2014223715),uint256(9999),uint256(26),uint256(1337),uint256(256),uint256(1532892062),uint256(1336),uint256(29),uint256(254),uint256(256),uint256(95),uint256(5),uint256(27),uint256(1),uint256(97),uint256(5),uint256(26),uint256(27),uint256(96),uint256(1336),uint256(1532892062),uint256(256),uint256(29),uint256(29),uint256(9999),uint256(66),uint256(29),uint256(97),uint256(254),uint256(255),uint256(96),uint256(10000),uint256(0),uint256(2014223716),uint256(0),uint256(4),uint256(1532892064),uint256(1532892064),uint256(66),uint256(5)]"
              },
              {
                "js": "[6,2014223714,29,66,2014223716,1,10001,96,255,65,1532892063,254,64,9999,10001,28,2014223714,9999,65,4,9999,2014223715,66,1532892064,1532892063,1,1532892063,1532892063,254,1337,2014223715,1532892064,6,3,29,256,2,256,1532892062,97,2014223716,256,1532892062,64,2,97,2014223715,96,254,2,10000,1,2,95,2,1532892063,0,64,27,10000,96,255,65,6,2014223715]",
                "sol": "[uint256(6),uint256(2014223714),uint256(29),uint256(66),uint256(2014223716),uint256(1),uint256(10001),uint256(96),uint256(255),uint256(65),uint256(1532892063),uint256(254),uint256(64),uint256(9999),uint256(10001),uint256(28),uint256(2014223714),uint256(9999),uint256(65),uint256(4),uint256(9999),uint256(2014223715),uint256(66),uint256(1532892064),uint256(1532892063),uint256(1),uint256(1532892063),uint256(1532892063),uint256(254),uint256(1337),uint256(2014223715),uint256(1532892064),uint256(6),uint256(3),uint256(29),uint256(256),uint256(2),uint256(256),uint256(1532892062),uint256(97),uint256(2014223716),uint256(256),uint256(1532892062),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(96),uint256(254),uint256(2),uint256(10000),uint256(1),uint256(2),uint256(95),uint256(2),uint256(1532892063),uint256(0),uint256(64),uint256(27),uint256(10000),uint256(96),uint256(255),uint256(65),uint256(6),uint256(2014223715)]"
              },
              {
                "js": "[[180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184],[255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146],[151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65],[106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63],[110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243],[182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119],[89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54],[75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18],[109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19],[96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237],[226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73],[81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67],[28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238],[215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218],[186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249],[32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218],[234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126],[52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89],[49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34],[133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119],[32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92],[248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210],[78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151],[30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98],[224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8],[66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214],[140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161],[45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206],[146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55],[246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72],[231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68],[23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94],[235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40],[78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178],[91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12],[242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52],[189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26],[9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160],[218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191],[135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249],[161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158],[34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175],[186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75],[175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5],[177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195],[170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247],[240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116],[205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157],[119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174],[141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10],[247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17],[141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222],[160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180],[173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208],[217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61],[48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126],[98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191],[9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178],[56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54],[132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8],[59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131],[194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148],[79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216],[218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131],[47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112]]",
                "sol": "[bytes32(stringToBytes32(\"180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184\")),bytes32(stringToBytes32(\"255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146\")),bytes32(stringToBytes32(\"151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65\")),bytes32(stringToBytes32(\"106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63\")),bytes32(stringToBytes32(\"110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243\")),bytes32(stringToBytes32(\"182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119\")),bytes32(stringToBytes32(\"89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54\")),bytes32(stringToBytes32(\"75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18\")),bytes32(stringToBytes32(\"109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19\")),bytes32(stringToBytes32(\"96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237\")),bytes32(stringToBytes32(\"226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73\")),bytes32(stringToBytes32(\"81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67\")),bytes32(stringToBytes32(\"28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238\")),bytes32(stringToBytes32(\"215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218\")),bytes32(stringToBytes32(\"186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249\")),bytes32(stringToBytes32(\"32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218\")),bytes32(stringToBytes32(\"234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126\")),bytes32(stringToBytes32(\"52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89\")),bytes32(stringToBytes32(\"49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34\")),bytes32(stringToBytes32(\"133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119\")),bytes32(stringToBytes32(\"32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92\")),bytes32(stringToBytes32(\"248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210\")),bytes32(stringToBytes32(\"78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151\")),bytes32(stringToBytes32(\"30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98\")),bytes32(stringToBytes32(\"224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8\")),bytes32(stringToBytes32(\"66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214\")),bytes32(stringToBytes32(\"140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161\")),bytes32(stringToBytes32(\"45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206\")),bytes32(stringToBytes32(\"146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55\")),bytes32(stringToBytes32(\"246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72\")),bytes32(stringToBytes32(\"231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68\")),bytes32(stringToBytes32(\"23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94\")),bytes32(stringToBytes32(\"235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40\")),bytes32(stringToBytes32(\"78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178\")),bytes32(stringToBytes32(\"91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12\")),bytes32(stringToBytes32(\"242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52\")),bytes32(stringToBytes32(\"189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26\")),bytes32(stringToBytes32(\"9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160\")),bytes32(stringToBytes32(\"218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191\")),bytes32(stringToBytes32(\"135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249\")),bytes32(stringToBytes32(\"161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158\")),bytes32(stringToBytes32(\"34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175\")),bytes32(stringToBytes32(\"186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75\")),bytes32(stringToBytes32(\"175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5\")),bytes32(stringToBytes32(\"177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195\")),bytes32(stringToBytes32(\"170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247\")),bytes32(stringToBytes32(\"240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116\")),bytes32(stringToBytes32(\"205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157\")),bytes32(stringToBytes32(\"119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174\")),bytes32(stringToBytes32(\"141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10\")),bytes32(stringToBytes32(\"247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17\")),bytes32(stringToBytes32(\"141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222\")),bytes32(stringToBytes32(\"160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180\")),bytes32(stringToBytes32(\"173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208\")),bytes32(stringToBytes32(\"217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61\")),bytes32(stringToBytes32(\"48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126\")),bytes32(stringToBytes32(\"98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191\")),bytes32(stringToBytes32(\"9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178\")),bytes32(stringToBytes32(\"56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54\")),bytes32(stringToBytes32(\"132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8\")),bytes32(stringToBytes32(\"59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131\")),bytes32(stringToBytes32(\"194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148\")),bytes32(stringToBytes32(\"79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216\")),bytes32(stringToBytes32(\"218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131\")),bytes32(stringToBytes32(\"47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentValues.length",
            "parameters": [
              {
                "js": "[accounts[5],accounts[2],accounts[9],accounts[7],accounts[6],accounts[8],accounts[2],accounts[7],accounts[9],accounts[5],accounts[9],accounts[6],accounts[6],accounts[9],accounts[9],accounts[1],accounts[6],accounts[6],accounts[5],accounts[0],accounts[3],accounts[8],accounts[6],accounts[8],accounts[0],accounts[7],accounts[1],accounts[7],accounts[5],accounts[4],accounts[2],accounts[1],accounts[2],accounts[8],accounts[3],accounts[9],accounts[3],accounts[3],accounts[9],accounts[7],accounts[8],accounts[4],accounts[4],accounts[3],accounts[1],accounts[8],accounts[0],accounts[9],accounts[3],accounts[0],accounts[1],accounts[7],accounts[0],accounts[3],accounts[8],accounts[1],accounts[0],accounts[8],accounts[9],accounts[9],accounts[7],accounts[9],accounts[0],accounts[7],accounts[7],accounts[5]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[256,1,4,2014223716,28,10000,2,66,29,257,6,254,1,26,1532892064,2014223714,10001,1337,1337,5,27,10000,26,27,96,2014223715,9999,26,1337,256,1532892062,1336,29,254,256,95,5,27,1,97,5,26,27,96,1336,1532892062,256,29,29,9999,66,29,97,254,255,96,10000,0,2014223716,0,4,1532892064,1532892064,66,5]",
                "sol": "[uint256(256),uint256(1),uint256(4),uint256(2014223716),uint256(28),uint256(10000),uint256(2),uint256(66),uint256(29),uint256(257),uint256(6),uint256(254),uint256(1),uint256(26),uint256(1532892064),uint256(2014223714),uint256(10001),uint256(1337),uint256(1337),uint256(5),uint256(27),uint256(10000),uint256(26),uint256(27),uint256(96),uint256(2014223715),uint256(9999),uint256(26),uint256(1337),uint256(256),uint256(1532892062),uint256(1336),uint256(29),uint256(254),uint256(256),uint256(95),uint256(5),uint256(27),uint256(1),uint256(97),uint256(5),uint256(26),uint256(27),uint256(96),uint256(1336),uint256(1532892062),uint256(256),uint256(29),uint256(29),uint256(9999),uint256(66),uint256(29),uint256(97),uint256(254),uint256(255),uint256(96),uint256(10000),uint256(0),uint256(2014223716),uint256(0),uint256(4),uint256(1532892064),uint256(1532892064),uint256(66),uint256(5)]"
              },
              {
                "js": "[6,2014223714,29,66,2014223716,1,10001,96,255,65,1532892063,254,64,9999,10001,28,2014223714,9999,65,4,9999,2014223715,66,1532892064,1532892063,1,1532892063,1532892063,254,1337,2014223715,1532892064,6,3,29,256,2,256,1532892062,97,2014223716,256,1532892062,64,2,97,2014223715,96,254,2,10000,1,2,95,2,1532892063,0,64,27,10000,96,255,65,6,2014223715]",
                "sol": "[uint256(6),uint256(2014223714),uint256(29),uint256(66),uint256(2014223716),uint256(1),uint256(10001),uint256(96),uint256(255),uint256(65),uint256(1532892063),uint256(254),uint256(64),uint256(9999),uint256(10001),uint256(28),uint256(2014223714),uint256(9999),uint256(65),uint256(4),uint256(9999),uint256(2014223715),uint256(66),uint256(1532892064),uint256(1532892063),uint256(1),uint256(1532892063),uint256(1532892063),uint256(254),uint256(1337),uint256(2014223715),uint256(1532892064),uint256(6),uint256(3),uint256(29),uint256(256),uint256(2),uint256(256),uint256(1532892062),uint256(97),uint256(2014223716),uint256(256),uint256(1532892062),uint256(64),uint256(2),uint256(97),uint256(2014223715),uint256(96),uint256(254),uint256(2),uint256(10000),uint256(1),uint256(2),uint256(95),uint256(2),uint256(1532892063),uint256(0),uint256(64),uint256(27),uint256(10000),uint256(96),uint256(255),uint256(65),uint256(6),uint256(2014223715)]"
              },
              {
                "js": "[[180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184],[255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146],[151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65],[106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63],[110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243],[182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119],[89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54],[75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18],[109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19],[96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237],[226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73],[81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67],[28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238],[215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218],[186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249],[32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218],[234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126],[52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89],[49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34],[133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119],[32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92],[248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210],[78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151],[30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98],[224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8],[66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214],[140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161],[45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206],[146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55],[246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72],[231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68],[23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94],[235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40],[78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178],[91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12],[242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52],[189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26],[9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160],[218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191],[135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249],[161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158],[34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175],[186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75],[175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5],[177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195],[170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247],[240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116],[205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157],[119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174],[141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10],[247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17],[141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222],[160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180],[173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208],[217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61],[48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126],[98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191],[9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178],[56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54],[132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8],[59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131],[194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148],[79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216],[218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131],[47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112]]",
                "sol": "[bytes32(stringToBytes32(\"180,74,198,199,52,155,132,158,38,145,35,183,28,235,93,106,194,0,160,221,202,216,194,60,83,212,176,25,5,11,30,184\")),bytes32(stringToBytes32(\"255,82,139,239,159,50,126,33,51,83,252,59,144,0,228,121,232,139,187,70,95,116,224,122,93,114,138,234,146,195,20,146\")),bytes32(stringToBytes32(\"151,157,221,192,112,20,56,254,6,191,195,104,21,174,211,139,98,244,211,84,39,123,93,51,198,161,60,89,57,233,94,65\")),bytes32(stringToBytes32(\"106,223,62,102,204,139,5,14,15,167,81,205,187,36,119,50,12,72,29,59,152,6,10,39,110,189,69,39,24,249,0,63\")),bytes32(stringToBytes32(\"110,53,46,65,33,137,20,248,175,251,251,123,229,244,115,184,131,60,112,1,14,245,123,30,221,6,43,193,113,175,189,243\")),bytes32(stringToBytes32(\"182,77,116,16,196,138,212,232,114,213,170,228,131,157,220,209,132,67,84,209,53,155,251,175,143,189,202,154,50,143,126,119\")),bytes32(stringToBytes32(\"89,226,8,69,162,49,122,49,158,243,224,220,77,82,212,57,11,191,172,224,231,31,17,221,22,196,108,133,117,132,194,54\")),bytes32(stringToBytes32(\"75,39,211,104,181,101,151,143,126,143,49,181,253,30,57,189,234,3,168,137,177,195,167,8,133,209,16,131,155,207,54,18\")),bytes32(stringToBytes32(\"109,40,157,99,123,131,69,84,196,246,209,179,247,244,156,128,142,205,24,47,197,255,223,69,142,44,20,238,31,174,10,19\")),bytes32(stringToBytes32(\"96,28,84,184,22,117,103,41,80,101,91,188,177,199,124,80,19,167,95,161,87,130,132,36,177,24,221,212,205,95,178,237\")),bytes32(stringToBytes32(\"226,151,4,16,165,162,137,64,177,191,124,3,157,37,215,71,146,136,217,43,100,0,80,245,137,33,223,107,83,116,157,73\")),bytes32(stringToBytes32(\"81,95,216,151,4,176,58,72,32,15,74,193,202,31,159,142,103,182,1,26,162,124,156,228,98,151,154,198,72,81,172,67\")),bytes32(stringToBytes32(\"28,56,136,103,171,213,125,222,187,188,204,255,203,151,130,94,121,80,178,155,194,22,7,70,169,78,212,42,165,132,43,238\")),bytes32(stringToBytes32(\"215,105,188,84,119,57,62,164,116,31,130,238,160,188,137,116,149,22,17,210,156,203,169,90,99,204,165,43,252,101,252,218\")),bytes32(stringToBytes32(\"186,203,162,183,0,201,204,65,86,234,162,21,252,220,67,31,26,57,74,218,141,147,36,49,111,44,120,77,237,129,186,249\")),bytes32(stringToBytes32(\"32,27,73,209,86,84,177,179,218,36,1,140,8,140,191,180,192,228,178,55,217,74,154,88,16,79,152,52,26,226,165,218\")),bytes32(stringToBytes32(\"234,182,131,214,195,175,30,40,45,208,219,190,183,37,13,249,222,97,71,66,116,121,128,40,169,93,113,237,69,82,37,126\")),bytes32(stringToBytes32(\"52,42,55,98,51,158,226,208,144,250,233,28,56,40,135,53,108,33,197,110,88,144,204,118,80,205,30,129,230,115,210,89\")),bytes32(stringToBytes32(\"49,118,53,139,54,150,225,98,223,49,129,250,232,145,0,46,97,22,13,211,121,113,19,202,226,226,25,45,214,213,42,34\")),bytes32(stringToBytes32(\"133,2,9,144,107,79,12,188,83,42,11,198,250,136,246,243,154,63,132,88,142,27,41,32,187,193,105,54,32,222,80,119\")),bytes32(stringToBytes32(\"32,251,35,92,204,122,76,221,7,55,38,180,143,97,128,167,112,252,169,174,65,237,157,187,218,196,70,93,104,251,143,92\")),bytes32(stringToBytes32(\"248,67,141,159,1,27,207,153,126,128,74,79,17,76,93,226,154,251,20,20,38,188,131,220,82,134,130,114,142,153,90,210\")),bytes32(stringToBytes32(\"78,121,15,174,29,77,36,42,175,249,255,45,215,238,7,44,168,62,169,137,213,26,179,89,255,220,238,123,167,146,231,151\")),bytes32(stringToBytes32(\"30,60,142,78,139,30,187,46,140,251,153,122,200,16,10,47,90,20,113,211,65,44,27,171,220,202,173,235,138,66,232,98\")),bytes32(stringToBytes32(\"224,192,99,114,131,145,66,205,35,125,39,121,27,19,25,51,233,112,49,149,86,243,41,158,237,41,145,65,170,18,196,8\")),bytes32(stringToBytes32(\"66,94,11,31,81,132,139,178,29,143,240,125,19,251,14,143,102,20,20,115,230,235,67,186,112,116,164,190,168,80,103,214\")),bytes32(stringToBytes32(\"140,22,107,84,55,93,95,18,241,160,185,91,36,42,96,117,127,59,193,125,112,158,175,221,112,208,102,69,230,96,30,161\")),bytes32(stringToBytes32(\"45,186,231,103,195,129,93,54,248,194,240,116,110,9,142,62,70,212,87,168,213,235,71,63,1,243,117,196,86,115,94,206\")),bytes32(stringToBytes32(\"146,215,178,110,254,199,41,229,54,41,229,1,174,211,40,180,16,74,10,147,129,75,179,189,146,158,82,81,218,150,19,55\")),bytes32(stringToBytes32(\"246,210,121,127,138,200,210,208,17,105,118,252,131,165,66,213,226,172,99,137,241,88,161,174,196,95,20,36,40,165,207,72\")),bytes32(stringToBytes32(\"231,226,88,244,74,184,253,110,170,137,169,70,49,50,120,18,17,251,215,241,181,152,145,58,87,99,18,215,211,251,42,68\")),bytes32(stringToBytes32(\"23,41,195,64,251,46,149,18,169,193,116,22,125,47,24,24,191,128,194,181,11,108,156,191,7,255,70,165,192,111,184,94\")),bytes32(stringToBytes32(\"235,225,86,70,87,41,68,100,180,8,219,121,239,106,89,247,52,159,0,64,228,34,237,59,137,187,88,90,121,14,98,40\")),bytes32(stringToBytes32(\"78,132,101,154,123,166,27,75,10,9,105,115,211,2,169,23,234,126,87,43,222,125,211,208,109,175,89,117,149,203,116,178\")),bytes32(stringToBytes32(\"91,255,125,231,57,80,61,139,214,203,41,177,70,39,136,23,134,238,99,211,181,131,225,212,204,46,77,78,201,221,135,12\")),bytes32(stringToBytes32(\"242,89,250,79,148,32,134,171,144,198,23,19,116,63,245,177,244,78,62,159,198,133,85,148,230,21,156,238,11,238,222,52\")),bytes32(stringToBytes32(\"189,91,22,164,6,18,224,235,140,234,47,38,212,18,33,53,194,23,31,25,255,109,167,175,194,212,32,253,83,173,122,26\")),bytes32(stringToBytes32(\"9,144,98,171,68,196,120,133,117,217,144,60,106,118,195,178,246,8,135,97,56,99,142,142,87,50,128,17,210,13,183,160\")),bytes32(stringToBytes32(\"218,140,250,138,215,213,111,204,155,85,202,151,223,40,91,54,138,83,229,52,233,71,162,60,76,158,110,247,8,74,229,191\")),bytes32(stringToBytes32(\"135,25,58,236,178,95,70,41,198,54,164,0,218,136,146,21,89,35,6,12,42,40,230,12,42,26,6,177,47,121,144,249\")),bytes32(stringToBytes32(\"161,50,39,49,159,37,221,176,230,45,242,227,208,230,85,185,87,5,203,56,92,7,56,231,212,235,201,16,70,126,112,158\")),bytes32(stringToBytes32(\"34,104,3,180,39,72,157,199,25,126,12,166,95,216,143,249,8,204,65,167,57,10,200,96,87,76,170,177,236,33,178,175\")),bytes32(stringToBytes32(\"186,59,255,24,124,214,109,200,50,116,138,242,61,168,92,46,68,229,160,178,232,228,251,230,49,65,27,84,90,243,5,75\")),bytes32(stringToBytes32(\"175,152,46,36,40,13,31,151,26,199,211,17,108,160,94,47,19,150,189,52,5,39,16,46,112,201,41,16,5,24,77,5\")),bytes32(stringToBytes32(\"177,41,243,9,84,87,246,67,255,157,40,56,178,205,171,96,181,65,74,43,42,116,22,2,93,157,10,133,158,159,89,195\")),bytes32(stringToBytes32(\"170,155,32,22,203,95,200,58,248,137,224,116,182,199,157,58,242,92,230,194,107,74,252,108,169,175,109,37,139,245,154,247\")),bytes32(stringToBytes32(\"240,90,135,238,166,166,205,50,30,110,203,200,231,163,134,28,249,102,57,25,88,80,97,209,161,126,242,180,225,107,36,116\")),bytes32(stringToBytes32(\"205,166,173,220,200,216,234,67,65,46,44,12,180,121,135,233,119,132,114,108,21,80,110,249,182,120,90,229,156,99,100,157\")),bytes32(stringToBytes32(\"119,4,136,214,103,61,57,205,42,26,56,173,209,231,160,14,49,82,100,35,132,86,81,195,159,193,157,174,220,153,205,174\")),bytes32(stringToBytes32(\"141,121,141,148,145,136,252,253,90,238,118,102,115,14,184,209,25,63,170,103,138,29,166,67,145,246,127,245,138,241,77,10\")),bytes32(stringToBytes32(\"247,42,153,125,242,168,217,240,157,233,209,244,96,244,172,206,206,143,171,141,45,46,140,85,147,185,28,115,66,116,3,17\")),bytes32(stringToBytes32(\"141,233,174,168,243,125,132,213,158,194,87,254,156,244,181,17,53,146,150,67,150,52,144,117,43,207,33,124,217,241,60,222\")),bytes32(stringToBytes32(\"160,148,189,93,21,241,252,77,68,3,78,251,137,249,210,155,222,215,141,119,250,43,138,15,212,123,171,179,250,59,206,180\")),bytes32(stringToBytes32(\"173,157,188,29,46,219,209,162,58,52,232,30,37,237,55,64,159,242,221,63,236,171,205,198,189,138,59,72,40,158,174,208\")),bytes32(stringToBytes32(\"217,128,253,128,83,112,229,106,169,217,177,229,17,125,246,57,199,176,159,72,39,120,153,114,94,150,60,124,173,134,74,61\")),bytes32(stringToBytes32(\"48,241,31,241,31,37,82,21,27,71,48,161,9,172,93,75,77,27,81,35,79,218,138,239,32,114,104,97,111,162,65,126\")),bytes32(stringToBytes32(\"98,138,84,39,189,220,148,135,159,116,30,130,161,227,119,12,207,42,59,7,226,70,46,245,129,82,160,40,192,161,118,191\")),bytes32(stringToBytes32(\"9,65,192,38,240,162,245,126,50,106,206,121,38,224,197,218,49,87,65,177,12,199,18,250,224,113,167,115,19,12,122,178\")),bytes32(stringToBytes32(\"56,66,20,54,167,160,164,182,13,150,174,169,205,190,60,184,191,159,174,171,178,139,209,103,232,133,46,179,64,137,32,54\")),bytes32(stringToBytes32(\"132,77,244,82,231,211,166,180,131,5,254,152,7,103,164,71,65,27,146,252,182,37,72,226,16,243,224,79,62,84,205,8\")),bytes32(stringToBytes32(\"59,189,223,140,185,72,162,0,137,34,247,186,206,251,150,245,52,222,143,231,101,188,110,207,188,157,95,202,203,108,46,131\")),bytes32(stringToBytes32(\"194,183,128,235,59,168,68,224,182,197,100,204,169,18,177,112,210,24,18,119,179,137,67,207,39,106,203,20,176,228,215,148\")),bytes32(stringToBytes32(\"79,226,129,69,183,177,8,173,227,91,200,51,213,231,169,67,112,23,161,254,159,114,181,53,1,180,176,94,96,155,35,216\")),bytes32(stringToBytes32(\"218,112,142,189,202,135,167,89,93,173,82,131,204,8,47,236,234,10,36,191,172,170,177,142,55,66,162,41,218,13,159,131\")),bytes32(stringToBytes32(\"47,250,79,8,157,126,78,0,104,90,195,97,223,184,222,96,200,187,227,225,145,207,171,230,6,240,91,110,176,181,36,112\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.203ZOffChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,bytes32) WHEN _securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "[253,86,171,34,88,233,108,227,33,190,216,203,67,2,198,116,18,147,69,70,242,67,244,63,149,223,185,183,240,133,76,149]",
              "sol": "stringToBytes32(\"253,86,171,34,88,233,108,227,33,190,216,203,67,2,198,116,18,147,69,70,242,67,244,63,149,223,185,183,240,133,76,149\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,bytes32) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "[253,86,171,34,88,233,108,227,33,190,216,203,67,2,198,116,18,147,69,70,242,67,244,63,149,223,185,183,240,133,76,149]",
                "sol": "stringToBytes32(\"253,86,171,34,88,233,108,227,33,190,216,203,67,2,198,116,18,147,69,70,242,67,244,63,149,223,185,183,240,133,76,149\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.205ZOffChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.206ZOffChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "169-192",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "[82,179,176,185,196,111,83,8,24,190,143,255,206,208,195,188,124,222,103,48,42,54,64,33,130,149,3,152,254,19,183,239]",
              "sol": "stringToBytes32(\"82,179,176,185,196,111,83,8,24,190,143,255,206,208,195,188,124,222,103,48,42,54,64,33,130,149,3,152,254,19,183,239\")"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "[82,179,176,185,196,111,83,8,24,190,143,255,206,208,195,188,124,222,103,48,42,54,64,33,130,149,3,152,254,19,183,239]",
                "sol": "stringToBytes32(\"82,179,176,185,196,111,83,8,24,190,143,255,206,208,195,188,124,222,103,48,42,54,64,33,130,149,3,152,254,19,183,239\")"
              },
              {
                "js": "66",
                "sol": "66"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[82,179,176,185,196,111,83,8,24,190,143,255,206,208,195,188,124,222,103,48,42,54,64,33,130,149,3,152,254,19,183,239]",
                "sol": "stringToBytes32(\"82,179,176,185,196,111,83,8,24,190,143,255,206,208,195,188,124,222,103,48,42,54,64,33,130,149,3,152,254,19,183,239\")"
              },
              {
                "js": "66",
                "sol": "66"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "177-192",
          "restrictions": [
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "[101,58,103,190,26,196,176,145,130,97,148,193,181,200,99,182,117,185,234,121,36,121,89,197,95,28,167,13,11,214,47,64]",
              "sol": "stringToBytes32(\"101,58,103,190,26,196,176,145,130,97,148,193,181,200,99,182,117,185,234,121,36,121,89,197,95,28,167,13,11,214,47,64\")"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "[101,58,103,190,26,196,176,145,130,97,148,193,181,200,99,182,117,185,234,121,36,121,89,197,95,28,167,13,11,214,47,64]",
                "sol": "stringToBytes32(\"101,58,103,190,26,196,176,145,130,97,148,193,181,200,99,182,117,185,234,121,36,121,89,197,95,28,167,13,11,214,47,64\")"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[101,58,103,190,26,196,176,145,130,97,148,193,181,200,99,182,117,185,234,121,36,121,89,197,95,28,167,13,11,214,47,64]",
                "sol": "stringToBytes32(\"101,58,103,190,26,196,176,145,130,97,148,193,181,200,99,182,117,185,234,121,36,121,89,197,95,28,167,13,11,214,47,64\")"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.209ZOnChainVoting.placeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute placeVote(string) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<endTime",
          "parameters": [
            {
              "js": "\"UsesExample\"",
              "sol": "\"UsesExample\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.209ZOnChainVoting.submitUserVotes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute submitUserVotes(bytes32[],bytes32[]) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,_usersSaltHash.length==_usersVote.length,_usersSaltHash.length!=0",
          "parameters": [
            {
              "js": "[[252,245,238,187,232,150,113,67,94,106,0,247,80,67,247,117,242,41,95,55,141,231,207,164,19,65,166,233,76,83,140,82],[188,1,26,151,160,145,97,119,175,187,247,133,146,78,212,1,31,170,136,91,90,112,186,34,80,29,93,95,251,33,255,246],[37,179,27,246,241,98,188,246,182,157,163,73,54,5,255,83,165,43,222,103,27,222,135,181,208,25,23,3,148,203,218,71],[115,106,40,14,16,177,233,252,6,179,119,189,9,25,248,136,1,84,171,178,225,153,115,235,149,192,233,142,53,243,100,69],[122,97,136,238,222,188,125,65,69,85,211,34,101,165,29,40,189,115,222,31,243,13,102,244,242,30,3,12,162,30,175,113],[132,40,23,175,127,195,102,141,224,227,234,183,178,19,114,217,238,48,226,181,207,72,202,226,138,221,136,52,104,213,13,22],[186,44,186,112,223,85,100,72,84,175,12,95,183,183,71,32,236,123,158,128,241,44,137,139,44,222,10,195,55,23,235,123],[138,46,13,192,228,215,11,203,72,188,124,194,110,106,44,52,155,154,163,69,216,112,58,25,28,253,46,74,151,144,4,128],[12,231,79,114,32,147,171,47,134,52,195,234,239,32,224,99,195,1,253,54,237,206,105,117,211,150,7,144,88,53,38,86],[56,211,47,151,116,26,163,235,143,130,243,172,171,222,199,180,196,103,230,251,127,8,66,58,2,157,221,165,63,173,129,244],[182,8,100,196,155,132,176,181,155,133,51,38,192,221,163,218,207,15,230,159,171,145,255,203,156,147,21,155,146,51,49,178],[238,15,133,135,224,94,190,87,114,31,134,13,212,46,70,239,60,121,73,174,227,75,253,253,180,111,207,96,218,193,9,69],[218,21,74,116,145,14,235,81,141,209,163,140,21,84,238,10,193,37,8,148,161,34,181,18,62,236,203,56,211,66,161,88],[142,69,186,245,237,31,112,6,119,106,199,56,184,86,40,45,177,131,0,126,255,97,196,23,222,163,78,76,89,225,15,29],[99,59,59,227,86,79,248,247,200,196,76,87,116,101,221,26,203,21,253,139,65,115,92,123,72,146,7,100,30,83,115,236],[149,177,199,178,242,173,12,211,204,20,72,196,49,212,83,123,53,173,241,6,30,69,222,7,87,99,231,124,193,105,246,126],[197,64,71,172,175,207,142,32,179,127,217,203,48,13,62,114,188,130,122,138,156,11,187,138,142,21,103,199,11,179,82,65],[45,186,210,182,190,228,166,197,128,210,159,57,17,187,123,19,120,6,215,189,94,30,118,106,117,125,120,113,229,238,94,40],[212,1,250,239,209,237,58,120,69,187,94,97,193,52,27,240,183,24,15,228,54,80,157,39,131,157,197,175,189,233,63,168],[48,24,173,33,246,128,110,49,212,206,228,19,70,75,237,0,199,168,243,18,207,168,230,30,202,247,87,184,67,53,130,24],[82,197,57,108,48,93,66,93,11,167,87,132,183,187,16,108,56,247,231,71,34,41,43,174,153,120,64,198,38,45,220,55],[61,57,150,89,43,184,238,9,178,232,108,28,17,141,125,205,200,178,89,166,66,104,47,187,91,99,64,1,212,134,170,20],[252,136,34,240,155,62,45,63,3,233,49,237,69,40,116,62,187,57,231,71,205,111,212,19,217,55,103,184,134,157,196,193],[171,240,158,70,118,24,168,105,90,233,89,60,169,6,51,166,44,169,17,144,18,96,73,214,138,117,72,246,111,230,39,150],[134,248,166,166,184,186,14,125,5,214,22,182,2,206,4,78,201,71,109,61,113,16,156,130,224,100,25,78,149,150,55,137],[39,163,98,254,66,222,36,84,118,189,47,122,61,129,178,226,1,245,224,7,27,83,200,239,173,85,250,186,99,162,42,152],[160,68,117,65,175,56,50,53,224,86,59,196,185,158,106,173,4,174,65,64,32,45,229,114,109,115,104,112,122,80,13,37],[186,183,100,35,196,85,206,208,26,181,89,227,144,30,89,80,139,173,230,228,178,66,25,28,133,109,228,228,197,147,181,90],[81,217,161,106,201,167,77,203,221,91,157,32,58,156,163,187,104,157,159,129,91,168,250,151,243,231,202,78,219,7,161,242],[7,12,226,151,169,111,56,252,55,91,39,71,73,201,68,182,37,8,68,141,56,171,255,48,88,207,55,88,16,164,195,51],[4,116,227,167,113,57,237,4,157,181,5,126,64,193,135,244,110,94,190,245,56,239,143,28,155,117,115,237,178,5,102,204],[93,132,20,42,45,24,7,160,248,33,252,118,64,125,58,149,164,62,230,118,40,64,163,2,36,62,167,71,21,126,105,44],[40,101,117,108,124,7,38,48,48,231,118,138,34,2,81,88,114,155,157,59,66,210,40,170,161,149,185,39,36,125,246,142],[204,117,209,194,35,191,53,124,49,202,60,192,59,21,102,213,117,114,2,246,235,204,46,77,35,230,81,87,246,66,139,85],[33,106,52,88,41,8,132,82,192,93,104,228,250,84,161,71,152,231,193,32,142,35,93,4,0,132,160,170,100,244,181,145],[200,137,105,254,145,167,236,117,159,186,82,156,49,55,98,180,179,244,47,166,19,129,105,191,52,169,165,242,191,22,154,182],[99,170,87,132,204,237,108,57,87,135,69,11,39,38,64,168,250,248,192,210,189,0,129,173,190,212,61,7,212,134,132,144],[138,109,139,65,31,244,124,217,237,177,143,42,18,147,8,65,74,116,163,213,210,229,188,53,90,84,238,61,199,114,43,86],[151,30,216,121,21,49,152,155,143,89,25,251,90,72,39,229,248,175,90,1,226,199,5,202,245,168,141,224,192,15,2,148],[99,170,70,150,120,38,111,99,249,63,33,222,140,98,174,207,38,200,187,67,113,157,119,149,117,197,31,44,91,90,17,179],[254,140,125,73,105,28,245,139,192,103,49,228,169,194,248,80,187,209,46,173,147,151,34,18,89,96,249,162,19,56,247,233],[225,15,101,22,190,165,252,28,115,237,173,80,255,59,102,19,7,113,44,56,131,208,247,150,29,5,9,187,13,204,219,17],[135,139,255,96,180,30,39,126,162,26,60,235,194,73,48,7,64,67,30,192,137,141,119,86,113,130,165,163,85,157,81,248],[151,125,90,36,193,0,44,225,158,98,233,151,159,242,80,159,25,180,127,88,151,222,122,218,200,27,178,80,200,161,229,75],[168,25,99,11,160,108,48,203,212,66,132,198,77,7,92,81,101,86,204,51,127,221,3,119,175,179,17,28,91,122,47,108],[246,162,253,195,109,228,140,35,110,188,9,174,88,117,104,175,122,111,24,187,64,183,159,54,249,155,79,245,30,237,64,88],[1,242,188,171,77,195,8,39,62,207,99,201,123,94,42,147,123,166,196,110,132,35,63,203,191,40,174,7,139,48,223,18],[224,180,101,75,231,121,234,114,211,242,223,144,145,211,62,201,147,6,101,130,158,187,210,203,255,93,145,84,157,5,37,30],[220,152,10,217,89,158,156,236,67,7,209,65,37,135,225,81,1,101,253,250,112,235,54,161,178,191,73,107,229,71,215,109],[224,106,246,124,198,209,255,83,45,9,39,128,246,73,162,151,18,63,26,188,54,184,20,16,15,141,37,73,55,138,130,71],[210,239,107,136,129,183,165,181,18,165,60,38,122,167,254,173,178,133,104,215,92,235,209,214,208,144,224,107,158,173,187,75],[247,50,134,33,156,10,80,101,110,118,95,207,155,146,90,102,128,240,8,237,200,121,45,113,235,30,141,178,49,119,243,139],[91,60,132,69,62,131,61,135,33,110,205,144,42,17,31,124,134,102,168,51,77,162,234,92,158,211,164,155,214,34,192,82],[206,8,64,9,182,154,201,27,37,130,35,143,221,186,26,156,31,132,235,81,13,83,144,81,131,189,98,153,186,242,174,2],[118,9,190,208,249,144,241,22,112,209,73,250,51,1,135,0,182,106,125,233,97,95,184,236,72,175,110,107,185,49,16,159],[73,125,161,136,129,6,148,23,252,187,85,194,215,74,44,211,118,9,98,43,34,98,91,102,69,11,194,146,104,35,43,233],[111,218,93,154,100,40,210,98,143,214,33,79,54,78,144,184,246,254,19,27,164,31,255,116,105,20,206,97,213,1,106,139],[98,228,3,199,208,63,165,129,253,145,213,22,166,255,111,190,57,121,110,32,244,243,230,88,6,148,59,169,247,40,35,176],[65,166,192,116,1,1,50,32,205,74,222,112,86,240,255,115,184,182,14,149,246,193,55,80,39,126,192,106,185,189,48,1],[114,60,215,90,108,253,25,88,98,128,51,67,31,144,109,136,93,52,220,13,73,191,219,158,193,115,171,81,78,16,63,219],[72,111,114,135,179,203,149,184,200,34,106,250,52,132,110,214,219,136,129,85,66,9,4,217,151,22,128,35,84,91,173,238],[7,45,58,52,140,17,117,148,67,173,236,225,129,169,31,161,139,50,41,151,235,143,22,32,219,90,236,114,41,248,151,229],[59,170,90,39,194,191,96,215,138,150,122,230,75,164,234,205,58,80,63,242,180,39,19,107,93,28,102,247,135,198,64,22],[39,163,210,67,15,22,47,95,234,93,77,180,165,223,188,149,224,204,184,65,250,129,230,244,126,25,30,91,114,58,126,244],[72,3,177,216,170,9,106,246,47,94,196,217,118,97,140,92,86,168,68,157,166,28,221,186,146,105,229,37,238,226,181,153],[225,61,9,35,84,55,39,76,54,49,187,46,19,27,176,68,25,15,31,43,45,39,53,138,230,218,70,155,189,179,5,80],[230,118,92,2,227,214,151,12,233,130,99,7,5,153,46,89,252,147,238,200,88,159,13,93,54,60,25,97,8,144,84,208],[3,153,73,108,180,114,3,2,161,156,23,162,25,2,74,137,162,105,175,109,202,46,248,5,236,131,230,140,93,77,237,108],[221,189,191,127,68,21,165,12,80,163,55,72,69,232,21,194,63,116,22,204,249,97,15,103,69,165,186,189,204,88,230,48],[248,190,184,188,65,55,211,68,60,97,78,67,21,227,175,188,79,100,236,41,11,24,177,51,101,75,250,178,57,171,53,249],[150,253,184,193,108,250,4,128,199,135,111,108,113,16,38,120,206,100,37,236,26,38,139,98,249,244,219,224,58,80,167,181],[100,155,109,194,228,149,180,98,81,190,1,234,133,5,71,185,94,131,80,119,236,133,5,146,208,104,21,150,146,80,226,250],[179,188,5,65,7,50,51,144,188,8,196,50,82,141,56,142,174,110,59,216,55,189,234,25,238,224,158,153,239,26,183,173],[62,23,104,171,120,120,79,137,59,201,125,242,18,78,155,169,245,148,23,115,251,96,119,95,1,168,104,219,28,12,92,200],[56,244,132,206,94,233,54,109,90,180,231,64,148,185,131,193,221,172,127,184,94,227,189,175,90,166,157,4,123,121,139,207],[243,200,151,182,173,127,137,235,96,233,182,98,175,216,37,94,119,42,178,196,73,146,115,218,82,211,132,56,162,166,224,12],[37,106,173,42,80,245,78,107,187,191,253,59,247,22,74,105,28,228,62,192,72,23,84,81,224,144,90,124,218,33,95,190],[147,80,39,36,11,219,182,220,69,46,66,64,254,13,239,110,5,183,140,56,146,221,127,207,94,144,31,190,45,158,18,195],[173,242,81,24,180,172,187,151,47,61,171,4,27,227,211,236,189,173,13,81,19,172,241,254,209,45,77,24,99,178,231,142],[173,126,159,57,62,88,52,112,133,212,175,177,148,145,193,108,169,204,233,74,39,21,124,168,88,122,138,199,240,17,132,217],[241,101,69,170,99,235,53,50,93,199,73,105,187,254,182,151,168,244,58,13,141,54,133,242,248,58,113,138,22,25,161,56],[4,96,17,79,249,216,230,23,70,226,234,20,65,22,210,24,179,142,246,102,117,189,204,131,185,75,186,16,134,190,100,156],[97,89,142,254,167,34,171,12,158,49,104,103,84,205,196,234,54,0,35,140,43,58,206,27,43,204,29,6,42,79,142,196],[7,57,175,45,119,2,121,2,92,149,87,147,12,176,214,202,102,224,30,229,29,191,193,55,44,27,104,42,42,164,218,53],[123,5,81,206,101,238,72,96,10,43,2,202,76,128,133,91,246,205,72,71,132,40,71,32,95,221,235,18,178,43,137,168],[60,8,85,223,162,226,43,225,205,156,151,89,68,60,203,23,136,192,22,152,146,165,6,64,190,73,178,190,206,104,78,200],[136,97,237,8,146,28,152,172,121,164,187,107,148,206,197,121,164,130,216,25,65,71,214,147,82,166,76,86,191,197,85,19],[236,11,229,14,212,192,201,37,224,224,73,177,90,89,213,82,83,3,70,64,146,189,118,162,141,53,112,25,18,213,242,1],[202,184,158,249,91,161,82,165,170,143,36,172,112,21,247,110,248,243,231,158,145,74,41,77,94,205,223,98,71,6,242,233],[32,84,208,148,41,184,44,132,243,75,57,19,55,9,144,114,156,183,237,232,20,50,72,145,76,111,49,31,72,85,91,107],[90,232,10,149,64,117,133,12,92,67,194,124,35,84,146,97,207,190,190,235,151,90,164,175,76,86,87,156,29,158,138,111],[226,211,101,209,141,44,180,94,192,160,151,134,146,26,39,139,91,167,123,50,195,169,113,96,53,52,4,89,199,173,175,159],[137,173,117,15,207,1,62,156,58,13,28,206,232,101,175,115,39,125,158,239,133,29,9,152,149,240,195,194,67,107,201,73],[98,179,81,215,202,177,92,164,211,195,187,178,73,160,174,46,42,53,110,43,224,109,66,187,154,228,117,37,11,60,159,27],[47,200,241,108,65,233,138,27,216,113,254,133,238,1,92,68,54,226,188,226,4,188,60,224,216,108,85,253,148,53,40,143]]",
              "sol": "[bytes32(stringToBytes32(\"252,245,238,187,232,150,113,67,94,106,0,247,80,67,247,117,242,41,95,55,141,231,207,164,19,65,166,233,76,83,140,82\")),bytes32(stringToBytes32(\"188,1,26,151,160,145,97,119,175,187,247,133,146,78,212,1,31,170,136,91,90,112,186,34,80,29,93,95,251,33,255,246\")),bytes32(stringToBytes32(\"37,179,27,246,241,98,188,246,182,157,163,73,54,5,255,83,165,43,222,103,27,222,135,181,208,25,23,3,148,203,218,71\")),bytes32(stringToBytes32(\"115,106,40,14,16,177,233,252,6,179,119,189,9,25,248,136,1,84,171,178,225,153,115,235,149,192,233,142,53,243,100,69\")),bytes32(stringToBytes32(\"122,97,136,238,222,188,125,65,69,85,211,34,101,165,29,40,189,115,222,31,243,13,102,244,242,30,3,12,162,30,175,113\")),bytes32(stringToBytes32(\"132,40,23,175,127,195,102,141,224,227,234,183,178,19,114,217,238,48,226,181,207,72,202,226,138,221,136,52,104,213,13,22\")),bytes32(stringToBytes32(\"186,44,186,112,223,85,100,72,84,175,12,95,183,183,71,32,236,123,158,128,241,44,137,139,44,222,10,195,55,23,235,123\")),bytes32(stringToBytes32(\"138,46,13,192,228,215,11,203,72,188,124,194,110,106,44,52,155,154,163,69,216,112,58,25,28,253,46,74,151,144,4,128\")),bytes32(stringToBytes32(\"12,231,79,114,32,147,171,47,134,52,195,234,239,32,224,99,195,1,253,54,237,206,105,117,211,150,7,144,88,53,38,86\")),bytes32(stringToBytes32(\"56,211,47,151,116,26,163,235,143,130,243,172,171,222,199,180,196,103,230,251,127,8,66,58,2,157,221,165,63,173,129,244\")),bytes32(stringToBytes32(\"182,8,100,196,155,132,176,181,155,133,51,38,192,221,163,218,207,15,230,159,171,145,255,203,156,147,21,155,146,51,49,178\")),bytes32(stringToBytes32(\"238,15,133,135,224,94,190,87,114,31,134,13,212,46,70,239,60,121,73,174,227,75,253,253,180,111,207,96,218,193,9,69\")),bytes32(stringToBytes32(\"218,21,74,116,145,14,235,81,141,209,163,140,21,84,238,10,193,37,8,148,161,34,181,18,62,236,203,56,211,66,161,88\")),bytes32(stringToBytes32(\"142,69,186,245,237,31,112,6,119,106,199,56,184,86,40,45,177,131,0,126,255,97,196,23,222,163,78,76,89,225,15,29\")),bytes32(stringToBytes32(\"99,59,59,227,86,79,248,247,200,196,76,87,116,101,221,26,203,21,253,139,65,115,92,123,72,146,7,100,30,83,115,236\")),bytes32(stringToBytes32(\"149,177,199,178,242,173,12,211,204,20,72,196,49,212,83,123,53,173,241,6,30,69,222,7,87,99,231,124,193,105,246,126\")),bytes32(stringToBytes32(\"197,64,71,172,175,207,142,32,179,127,217,203,48,13,62,114,188,130,122,138,156,11,187,138,142,21,103,199,11,179,82,65\")),bytes32(stringToBytes32(\"45,186,210,182,190,228,166,197,128,210,159,57,17,187,123,19,120,6,215,189,94,30,118,106,117,125,120,113,229,238,94,40\")),bytes32(stringToBytes32(\"212,1,250,239,209,237,58,120,69,187,94,97,193,52,27,240,183,24,15,228,54,80,157,39,131,157,197,175,189,233,63,168\")),bytes32(stringToBytes32(\"48,24,173,33,246,128,110,49,212,206,228,19,70,75,237,0,199,168,243,18,207,168,230,30,202,247,87,184,67,53,130,24\")),bytes32(stringToBytes32(\"82,197,57,108,48,93,66,93,11,167,87,132,183,187,16,108,56,247,231,71,34,41,43,174,153,120,64,198,38,45,220,55\")),bytes32(stringToBytes32(\"61,57,150,89,43,184,238,9,178,232,108,28,17,141,125,205,200,178,89,166,66,104,47,187,91,99,64,1,212,134,170,20\")),bytes32(stringToBytes32(\"252,136,34,240,155,62,45,63,3,233,49,237,69,40,116,62,187,57,231,71,205,111,212,19,217,55,103,184,134,157,196,193\")),bytes32(stringToBytes32(\"171,240,158,70,118,24,168,105,90,233,89,60,169,6,51,166,44,169,17,144,18,96,73,214,138,117,72,246,111,230,39,150\")),bytes32(stringToBytes32(\"134,248,166,166,184,186,14,125,5,214,22,182,2,206,4,78,201,71,109,61,113,16,156,130,224,100,25,78,149,150,55,137\")),bytes32(stringToBytes32(\"39,163,98,254,66,222,36,84,118,189,47,122,61,129,178,226,1,245,224,7,27,83,200,239,173,85,250,186,99,162,42,152\")),bytes32(stringToBytes32(\"160,68,117,65,175,56,50,53,224,86,59,196,185,158,106,173,4,174,65,64,32,45,229,114,109,115,104,112,122,80,13,37\")),bytes32(stringToBytes32(\"186,183,100,35,196,85,206,208,26,181,89,227,144,30,89,80,139,173,230,228,178,66,25,28,133,109,228,228,197,147,181,90\")),bytes32(stringToBytes32(\"81,217,161,106,201,167,77,203,221,91,157,32,58,156,163,187,104,157,159,129,91,168,250,151,243,231,202,78,219,7,161,242\")),bytes32(stringToBytes32(\"7,12,226,151,169,111,56,252,55,91,39,71,73,201,68,182,37,8,68,141,56,171,255,48,88,207,55,88,16,164,195,51\")),bytes32(stringToBytes32(\"4,116,227,167,113,57,237,4,157,181,5,126,64,193,135,244,110,94,190,245,56,239,143,28,155,117,115,237,178,5,102,204\")),bytes32(stringToBytes32(\"93,132,20,42,45,24,7,160,248,33,252,118,64,125,58,149,164,62,230,118,40,64,163,2,36,62,167,71,21,126,105,44\")),bytes32(stringToBytes32(\"40,101,117,108,124,7,38,48,48,231,118,138,34,2,81,88,114,155,157,59,66,210,40,170,161,149,185,39,36,125,246,142\")),bytes32(stringToBytes32(\"204,117,209,194,35,191,53,124,49,202,60,192,59,21,102,213,117,114,2,246,235,204,46,77,35,230,81,87,246,66,139,85\")),bytes32(stringToBytes32(\"33,106,52,88,41,8,132,82,192,93,104,228,250,84,161,71,152,231,193,32,142,35,93,4,0,132,160,170,100,244,181,145\")),bytes32(stringToBytes32(\"200,137,105,254,145,167,236,117,159,186,82,156,49,55,98,180,179,244,47,166,19,129,105,191,52,169,165,242,191,22,154,182\")),bytes32(stringToBytes32(\"99,170,87,132,204,237,108,57,87,135,69,11,39,38,64,168,250,248,192,210,189,0,129,173,190,212,61,7,212,134,132,144\")),bytes32(stringToBytes32(\"138,109,139,65,31,244,124,217,237,177,143,42,18,147,8,65,74,116,163,213,210,229,188,53,90,84,238,61,199,114,43,86\")),bytes32(stringToBytes32(\"151,30,216,121,21,49,152,155,143,89,25,251,90,72,39,229,248,175,90,1,226,199,5,202,245,168,141,224,192,15,2,148\")),bytes32(stringToBytes32(\"99,170,70,150,120,38,111,99,249,63,33,222,140,98,174,207,38,200,187,67,113,157,119,149,117,197,31,44,91,90,17,179\")),bytes32(stringToBytes32(\"254,140,125,73,105,28,245,139,192,103,49,228,169,194,248,80,187,209,46,173,147,151,34,18,89,96,249,162,19,56,247,233\")),bytes32(stringToBytes32(\"225,15,101,22,190,165,252,28,115,237,173,80,255,59,102,19,7,113,44,56,131,208,247,150,29,5,9,187,13,204,219,17\")),bytes32(stringToBytes32(\"135,139,255,96,180,30,39,126,162,26,60,235,194,73,48,7,64,67,30,192,137,141,119,86,113,130,165,163,85,157,81,248\")),bytes32(stringToBytes32(\"151,125,90,36,193,0,44,225,158,98,233,151,159,242,80,159,25,180,127,88,151,222,122,218,200,27,178,80,200,161,229,75\")),bytes32(stringToBytes32(\"168,25,99,11,160,108,48,203,212,66,132,198,77,7,92,81,101,86,204,51,127,221,3,119,175,179,17,28,91,122,47,108\")),bytes32(stringToBytes32(\"246,162,253,195,109,228,140,35,110,188,9,174,88,117,104,175,122,111,24,187,64,183,159,54,249,155,79,245,30,237,64,88\")),bytes32(stringToBytes32(\"1,242,188,171,77,195,8,39,62,207,99,201,123,94,42,147,123,166,196,110,132,35,63,203,191,40,174,7,139,48,223,18\")),bytes32(stringToBytes32(\"224,180,101,75,231,121,234,114,211,242,223,144,145,211,62,201,147,6,101,130,158,187,210,203,255,93,145,84,157,5,37,30\")),bytes32(stringToBytes32(\"220,152,10,217,89,158,156,236,67,7,209,65,37,135,225,81,1,101,253,250,112,235,54,161,178,191,73,107,229,71,215,109\")),bytes32(stringToBytes32(\"224,106,246,124,198,209,255,83,45,9,39,128,246,73,162,151,18,63,26,188,54,184,20,16,15,141,37,73,55,138,130,71\")),bytes32(stringToBytes32(\"210,239,107,136,129,183,165,181,18,165,60,38,122,167,254,173,178,133,104,215,92,235,209,214,208,144,224,107,158,173,187,75\")),bytes32(stringToBytes32(\"247,50,134,33,156,10,80,101,110,118,95,207,155,146,90,102,128,240,8,237,200,121,45,113,235,30,141,178,49,119,243,139\")),bytes32(stringToBytes32(\"91,60,132,69,62,131,61,135,33,110,205,144,42,17,31,124,134,102,168,51,77,162,234,92,158,211,164,155,214,34,192,82\")),bytes32(stringToBytes32(\"206,8,64,9,182,154,201,27,37,130,35,143,221,186,26,156,31,132,235,81,13,83,144,81,131,189,98,153,186,242,174,2\")),bytes32(stringToBytes32(\"118,9,190,208,249,144,241,22,112,209,73,250,51,1,135,0,182,106,125,233,97,95,184,236,72,175,110,107,185,49,16,159\")),bytes32(stringToBytes32(\"73,125,161,136,129,6,148,23,252,187,85,194,215,74,44,211,118,9,98,43,34,98,91,102,69,11,194,146,104,35,43,233\")),bytes32(stringToBytes32(\"111,218,93,154,100,40,210,98,143,214,33,79,54,78,144,184,246,254,19,27,164,31,255,116,105,20,206,97,213,1,106,139\")),bytes32(stringToBytes32(\"98,228,3,199,208,63,165,129,253,145,213,22,166,255,111,190,57,121,110,32,244,243,230,88,6,148,59,169,247,40,35,176\")),bytes32(stringToBytes32(\"65,166,192,116,1,1,50,32,205,74,222,112,86,240,255,115,184,182,14,149,246,193,55,80,39,126,192,106,185,189,48,1\")),bytes32(stringToBytes32(\"114,60,215,90,108,253,25,88,98,128,51,67,31,144,109,136,93,52,220,13,73,191,219,158,193,115,171,81,78,16,63,219\")),bytes32(stringToBytes32(\"72,111,114,135,179,203,149,184,200,34,106,250,52,132,110,214,219,136,129,85,66,9,4,217,151,22,128,35,84,91,173,238\")),bytes32(stringToBytes32(\"7,45,58,52,140,17,117,148,67,173,236,225,129,169,31,161,139,50,41,151,235,143,22,32,219,90,236,114,41,248,151,229\")),bytes32(stringToBytes32(\"59,170,90,39,194,191,96,215,138,150,122,230,75,164,234,205,58,80,63,242,180,39,19,107,93,28,102,247,135,198,64,22\")),bytes32(stringToBytes32(\"39,163,210,67,15,22,47,95,234,93,77,180,165,223,188,149,224,204,184,65,250,129,230,244,126,25,30,91,114,58,126,244\")),bytes32(stringToBytes32(\"72,3,177,216,170,9,106,246,47,94,196,217,118,97,140,92,86,168,68,157,166,28,221,186,146,105,229,37,238,226,181,153\")),bytes32(stringToBytes32(\"225,61,9,35,84,55,39,76,54,49,187,46,19,27,176,68,25,15,31,43,45,39,53,138,230,218,70,155,189,179,5,80\")),bytes32(stringToBytes32(\"230,118,92,2,227,214,151,12,233,130,99,7,5,153,46,89,252,147,238,200,88,159,13,93,54,60,25,97,8,144,84,208\")),bytes32(stringToBytes32(\"3,153,73,108,180,114,3,2,161,156,23,162,25,2,74,137,162,105,175,109,202,46,248,5,236,131,230,140,93,77,237,108\")),bytes32(stringToBytes32(\"221,189,191,127,68,21,165,12,80,163,55,72,69,232,21,194,63,116,22,204,249,97,15,103,69,165,186,189,204,88,230,48\")),bytes32(stringToBytes32(\"248,190,184,188,65,55,211,68,60,97,78,67,21,227,175,188,79,100,236,41,11,24,177,51,101,75,250,178,57,171,53,249\")),bytes32(stringToBytes32(\"150,253,184,193,108,250,4,128,199,135,111,108,113,16,38,120,206,100,37,236,26,38,139,98,249,244,219,224,58,80,167,181\")),bytes32(stringToBytes32(\"100,155,109,194,228,149,180,98,81,190,1,234,133,5,71,185,94,131,80,119,236,133,5,146,208,104,21,150,146,80,226,250\")),bytes32(stringToBytes32(\"179,188,5,65,7,50,51,144,188,8,196,50,82,141,56,142,174,110,59,216,55,189,234,25,238,224,158,153,239,26,183,173\")),bytes32(stringToBytes32(\"62,23,104,171,120,120,79,137,59,201,125,242,18,78,155,169,245,148,23,115,251,96,119,95,1,168,104,219,28,12,92,200\")),bytes32(stringToBytes32(\"56,244,132,206,94,233,54,109,90,180,231,64,148,185,131,193,221,172,127,184,94,227,189,175,90,166,157,4,123,121,139,207\")),bytes32(stringToBytes32(\"243,200,151,182,173,127,137,235,96,233,182,98,175,216,37,94,119,42,178,196,73,146,115,218,82,211,132,56,162,166,224,12\")),bytes32(stringToBytes32(\"37,106,173,42,80,245,78,107,187,191,253,59,247,22,74,105,28,228,62,192,72,23,84,81,224,144,90,124,218,33,95,190\")),bytes32(stringToBytes32(\"147,80,39,36,11,219,182,220,69,46,66,64,254,13,239,110,5,183,140,56,146,221,127,207,94,144,31,190,45,158,18,195\")),bytes32(stringToBytes32(\"173,242,81,24,180,172,187,151,47,61,171,4,27,227,211,236,189,173,13,81,19,172,241,254,209,45,77,24,99,178,231,142\")),bytes32(stringToBytes32(\"173,126,159,57,62,88,52,112,133,212,175,177,148,145,193,108,169,204,233,74,39,21,124,168,88,122,138,199,240,17,132,217\")),bytes32(stringToBytes32(\"241,101,69,170,99,235,53,50,93,199,73,105,187,254,182,151,168,244,58,13,141,54,133,242,248,58,113,138,22,25,161,56\")),bytes32(stringToBytes32(\"4,96,17,79,249,216,230,23,70,226,234,20,65,22,210,24,179,142,246,102,117,189,204,131,185,75,186,16,134,190,100,156\")),bytes32(stringToBytes32(\"97,89,142,254,167,34,171,12,158,49,104,103,84,205,196,234,54,0,35,140,43,58,206,27,43,204,29,6,42,79,142,196\")),bytes32(stringToBytes32(\"7,57,175,45,119,2,121,2,92,149,87,147,12,176,214,202,102,224,30,229,29,191,193,55,44,27,104,42,42,164,218,53\")),bytes32(stringToBytes32(\"123,5,81,206,101,238,72,96,10,43,2,202,76,128,133,91,246,205,72,71,132,40,71,32,95,221,235,18,178,43,137,168\")),bytes32(stringToBytes32(\"60,8,85,223,162,226,43,225,205,156,151,89,68,60,203,23,136,192,22,152,146,165,6,64,190,73,178,190,206,104,78,200\")),bytes32(stringToBytes32(\"136,97,237,8,146,28,152,172,121,164,187,107,148,206,197,121,164,130,216,25,65,71,214,147,82,166,76,86,191,197,85,19\")),bytes32(stringToBytes32(\"236,11,229,14,212,192,201,37,224,224,73,177,90,89,213,82,83,3,70,64,146,189,118,162,141,53,112,25,18,213,242,1\")),bytes32(stringToBytes32(\"202,184,158,249,91,161,82,165,170,143,36,172,112,21,247,110,248,243,231,158,145,74,41,77,94,205,223,98,71,6,242,233\")),bytes32(stringToBytes32(\"32,84,208,148,41,184,44,132,243,75,57,19,55,9,144,114,156,183,237,232,20,50,72,145,76,111,49,31,72,85,91,107\")),bytes32(stringToBytes32(\"90,232,10,149,64,117,133,12,92,67,194,124,35,84,146,97,207,190,190,235,151,90,164,175,76,86,87,156,29,158,138,111\")),bytes32(stringToBytes32(\"226,211,101,209,141,44,180,94,192,160,151,134,146,26,39,139,91,167,123,50,195,169,113,96,53,52,4,89,199,173,175,159\")),bytes32(stringToBytes32(\"137,173,117,15,207,1,62,156,58,13,28,206,232,101,175,115,39,125,158,239,133,29,9,152,149,240,195,194,67,107,201,73\")),bytes32(stringToBytes32(\"98,179,81,215,202,177,92,164,211,195,187,178,73,160,174,46,42,53,110,43,224,109,66,187,154,228,117,37,11,60,159,27\")),bytes32(stringToBytes32(\"47,200,241,108,65,233,138,27,216,113,254,133,238,1,92,68,54,226,188,226,4,188,60,224,216,108,85,253,148,53,40,143\"))]"
            },
            {
              "js": "[[162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35],[14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236],[187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132],[7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88],[60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112],[225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82],[37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47],[38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215],[7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59],[18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25],[96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242],[99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77],[40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114],[122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185],[97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150],[29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30],[87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23],[249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252],[200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181],[135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209],[195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207],[252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241],[178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213],[90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185],[245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229],[53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20],[226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25],[143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132],[140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106],[114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167],[185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253],[140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174],[77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206],[161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14],[241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81],[169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163],[252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8],[180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205],[138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251],[172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192],[222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36],[254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40],[18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65],[54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157],[169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24],[177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151],[207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193],[148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17],[53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154],[197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122],[66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116],[109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78],[43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85],[76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195],[156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163],[87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104],[61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17],[59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2],[194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63],[16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114],[255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71],[103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63],[245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38],[167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224],[99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43],[27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201],[182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11],[184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58],[104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143],[14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39],[46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84],[176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8],[20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187],[76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46],[55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66],[236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57],[137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16],[98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141],[1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196],[195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183],[174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40],[251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164],[113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154],[72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225],[227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245],[18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108],[187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134],[211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146],[205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94],[162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2],[206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250],[102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234],[237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147],[28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124],[72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216]]",
              "sol": "[bytes32(stringToBytes32(\"162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35\")),bytes32(stringToBytes32(\"14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236\")),bytes32(stringToBytes32(\"187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132\")),bytes32(stringToBytes32(\"7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88\")),bytes32(stringToBytes32(\"60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112\")),bytes32(stringToBytes32(\"225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82\")),bytes32(stringToBytes32(\"37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47\")),bytes32(stringToBytes32(\"38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215\")),bytes32(stringToBytes32(\"7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59\")),bytes32(stringToBytes32(\"18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25\")),bytes32(stringToBytes32(\"96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242\")),bytes32(stringToBytes32(\"99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77\")),bytes32(stringToBytes32(\"40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114\")),bytes32(stringToBytes32(\"122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185\")),bytes32(stringToBytes32(\"97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150\")),bytes32(stringToBytes32(\"29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30\")),bytes32(stringToBytes32(\"87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23\")),bytes32(stringToBytes32(\"249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252\")),bytes32(stringToBytes32(\"200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181\")),bytes32(stringToBytes32(\"135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209\")),bytes32(stringToBytes32(\"195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207\")),bytes32(stringToBytes32(\"252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241\")),bytes32(stringToBytes32(\"178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213\")),bytes32(stringToBytes32(\"90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185\")),bytes32(stringToBytes32(\"245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229\")),bytes32(stringToBytes32(\"53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20\")),bytes32(stringToBytes32(\"226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25\")),bytes32(stringToBytes32(\"143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132\")),bytes32(stringToBytes32(\"140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106\")),bytes32(stringToBytes32(\"114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167\")),bytes32(stringToBytes32(\"185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253\")),bytes32(stringToBytes32(\"140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174\")),bytes32(stringToBytes32(\"77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206\")),bytes32(stringToBytes32(\"161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14\")),bytes32(stringToBytes32(\"241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81\")),bytes32(stringToBytes32(\"169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163\")),bytes32(stringToBytes32(\"252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8\")),bytes32(stringToBytes32(\"180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205\")),bytes32(stringToBytes32(\"138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251\")),bytes32(stringToBytes32(\"172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192\")),bytes32(stringToBytes32(\"222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36\")),bytes32(stringToBytes32(\"254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40\")),bytes32(stringToBytes32(\"18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65\")),bytes32(stringToBytes32(\"54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157\")),bytes32(stringToBytes32(\"169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24\")),bytes32(stringToBytes32(\"177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151\")),bytes32(stringToBytes32(\"207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193\")),bytes32(stringToBytes32(\"148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17\")),bytes32(stringToBytes32(\"53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154\")),bytes32(stringToBytes32(\"197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122\")),bytes32(stringToBytes32(\"66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116\")),bytes32(stringToBytes32(\"109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78\")),bytes32(stringToBytes32(\"43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85\")),bytes32(stringToBytes32(\"76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195\")),bytes32(stringToBytes32(\"156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163\")),bytes32(stringToBytes32(\"87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104\")),bytes32(stringToBytes32(\"61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17\")),bytes32(stringToBytes32(\"59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2\")),bytes32(stringToBytes32(\"194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63\")),bytes32(stringToBytes32(\"16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114\")),bytes32(stringToBytes32(\"255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71\")),bytes32(stringToBytes32(\"103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63\")),bytes32(stringToBytes32(\"245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38\")),bytes32(stringToBytes32(\"167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224\")),bytes32(stringToBytes32(\"99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43\")),bytes32(stringToBytes32(\"27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201\")),bytes32(stringToBytes32(\"182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11\")),bytes32(stringToBytes32(\"184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58\")),bytes32(stringToBytes32(\"104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143\")),bytes32(stringToBytes32(\"14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39\")),bytes32(stringToBytes32(\"46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84\")),bytes32(stringToBytes32(\"176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8\")),bytes32(stringToBytes32(\"20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187\")),bytes32(stringToBytes32(\"76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46\")),bytes32(stringToBytes32(\"55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66\")),bytes32(stringToBytes32(\"236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57\")),bytes32(stringToBytes32(\"137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16\")),bytes32(stringToBytes32(\"98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141\")),bytes32(stringToBytes32(\"1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196\")),bytes32(stringToBytes32(\"195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183\")),bytes32(stringToBytes32(\"174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40\")),bytes32(stringToBytes32(\"251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164\")),bytes32(stringToBytes32(\"113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154\")),bytes32(stringToBytes32(\"72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225\")),bytes32(stringToBytes32(\"227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245\")),bytes32(stringToBytes32(\"18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108\")),bytes32(stringToBytes32(\"187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134\")),bytes32(stringToBytes32(\"211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146\")),bytes32(stringToBytes32(\"205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94\")),bytes32(stringToBytes32(\"162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2\")),bytes32(stringToBytes32(\"206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250\")),bytes32(stringToBytes32(\"102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234\")),bytes32(stringToBytes32(\"237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147\")),bytes32(stringToBytes32(\"28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124\")),bytes32(stringToBytes32(\"72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216\"))]"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[[252,245,238,187,232,150,113,67,94,106,0,247,80,67,247,117,242,41,95,55,141,231,207,164,19,65,166,233,76,83,140,82],[188,1,26,151,160,145,97,119,175,187,247,133,146,78,212,1,31,170,136,91,90,112,186,34,80,29,93,95,251,33,255,246],[37,179,27,246,241,98,188,246,182,157,163,73,54,5,255,83,165,43,222,103,27,222,135,181,208,25,23,3,148,203,218,71],[115,106,40,14,16,177,233,252,6,179,119,189,9,25,248,136,1,84,171,178,225,153,115,235,149,192,233,142,53,243,100,69],[122,97,136,238,222,188,125,65,69,85,211,34,101,165,29,40,189,115,222,31,243,13,102,244,242,30,3,12,162,30,175,113],[132,40,23,175,127,195,102,141,224,227,234,183,178,19,114,217,238,48,226,181,207,72,202,226,138,221,136,52,104,213,13,22],[186,44,186,112,223,85,100,72,84,175,12,95,183,183,71,32,236,123,158,128,241,44,137,139,44,222,10,195,55,23,235,123],[138,46,13,192,228,215,11,203,72,188,124,194,110,106,44,52,155,154,163,69,216,112,58,25,28,253,46,74,151,144,4,128],[12,231,79,114,32,147,171,47,134,52,195,234,239,32,224,99,195,1,253,54,237,206,105,117,211,150,7,144,88,53,38,86],[56,211,47,151,116,26,163,235,143,130,243,172,171,222,199,180,196,103,230,251,127,8,66,58,2,157,221,165,63,173,129,244],[182,8,100,196,155,132,176,181,155,133,51,38,192,221,163,218,207,15,230,159,171,145,255,203,156,147,21,155,146,51,49,178],[238,15,133,135,224,94,190,87,114,31,134,13,212,46,70,239,60,121,73,174,227,75,253,253,180,111,207,96,218,193,9,69],[218,21,74,116,145,14,235,81,141,209,163,140,21,84,238,10,193,37,8,148,161,34,181,18,62,236,203,56,211,66,161,88],[142,69,186,245,237,31,112,6,119,106,199,56,184,86,40,45,177,131,0,126,255,97,196,23,222,163,78,76,89,225,15,29],[99,59,59,227,86,79,248,247,200,196,76,87,116,101,221,26,203,21,253,139,65,115,92,123,72,146,7,100,30,83,115,236],[149,177,199,178,242,173,12,211,204,20,72,196,49,212,83,123,53,173,241,6,30,69,222,7,87,99,231,124,193,105,246,126],[197,64,71,172,175,207,142,32,179,127,217,203,48,13,62,114,188,130,122,138,156,11,187,138,142,21,103,199,11,179,82,65],[45,186,210,182,190,228,166,197,128,210,159,57,17,187,123,19,120,6,215,189,94,30,118,106,117,125,120,113,229,238,94,40],[212,1,250,239,209,237,58,120,69,187,94,97,193,52,27,240,183,24,15,228,54,80,157,39,131,157,197,175,189,233,63,168],[48,24,173,33,246,128,110,49,212,206,228,19,70,75,237,0,199,168,243,18,207,168,230,30,202,247,87,184,67,53,130,24],[82,197,57,108,48,93,66,93,11,167,87,132,183,187,16,108,56,247,231,71,34,41,43,174,153,120,64,198,38,45,220,55],[61,57,150,89,43,184,238,9,178,232,108,28,17,141,125,205,200,178,89,166,66,104,47,187,91,99,64,1,212,134,170,20],[252,136,34,240,155,62,45,63,3,233,49,237,69,40,116,62,187,57,231,71,205,111,212,19,217,55,103,184,134,157,196,193],[171,240,158,70,118,24,168,105,90,233,89,60,169,6,51,166,44,169,17,144,18,96,73,214,138,117,72,246,111,230,39,150],[134,248,166,166,184,186,14,125,5,214,22,182,2,206,4,78,201,71,109,61,113,16,156,130,224,100,25,78,149,150,55,137],[39,163,98,254,66,222,36,84,118,189,47,122,61,129,178,226,1,245,224,7,27,83,200,239,173,85,250,186,99,162,42,152],[160,68,117,65,175,56,50,53,224,86,59,196,185,158,106,173,4,174,65,64,32,45,229,114,109,115,104,112,122,80,13,37],[186,183,100,35,196,85,206,208,26,181,89,227,144,30,89,80,139,173,230,228,178,66,25,28,133,109,228,228,197,147,181,90],[81,217,161,106,201,167,77,203,221,91,157,32,58,156,163,187,104,157,159,129,91,168,250,151,243,231,202,78,219,7,161,242],[7,12,226,151,169,111,56,252,55,91,39,71,73,201,68,182,37,8,68,141,56,171,255,48,88,207,55,88,16,164,195,51],[4,116,227,167,113,57,237,4,157,181,5,126,64,193,135,244,110,94,190,245,56,239,143,28,155,117,115,237,178,5,102,204],[93,132,20,42,45,24,7,160,248,33,252,118,64,125,58,149,164,62,230,118,40,64,163,2,36,62,167,71,21,126,105,44],[40,101,117,108,124,7,38,48,48,231,118,138,34,2,81,88,114,155,157,59,66,210,40,170,161,149,185,39,36,125,246,142],[204,117,209,194,35,191,53,124,49,202,60,192,59,21,102,213,117,114,2,246,235,204,46,77,35,230,81,87,246,66,139,85],[33,106,52,88,41,8,132,82,192,93,104,228,250,84,161,71,152,231,193,32,142,35,93,4,0,132,160,170,100,244,181,145],[200,137,105,254,145,167,236,117,159,186,82,156,49,55,98,180,179,244,47,166,19,129,105,191,52,169,165,242,191,22,154,182],[99,170,87,132,204,237,108,57,87,135,69,11,39,38,64,168,250,248,192,210,189,0,129,173,190,212,61,7,212,134,132,144],[138,109,139,65,31,244,124,217,237,177,143,42,18,147,8,65,74,116,163,213,210,229,188,53,90,84,238,61,199,114,43,86],[151,30,216,121,21,49,152,155,143,89,25,251,90,72,39,229,248,175,90,1,226,199,5,202,245,168,141,224,192,15,2,148],[99,170,70,150,120,38,111,99,249,63,33,222,140,98,174,207,38,200,187,67,113,157,119,149,117,197,31,44,91,90,17,179],[254,140,125,73,105,28,245,139,192,103,49,228,169,194,248,80,187,209,46,173,147,151,34,18,89,96,249,162,19,56,247,233],[225,15,101,22,190,165,252,28,115,237,173,80,255,59,102,19,7,113,44,56,131,208,247,150,29,5,9,187,13,204,219,17],[135,139,255,96,180,30,39,126,162,26,60,235,194,73,48,7,64,67,30,192,137,141,119,86,113,130,165,163,85,157,81,248],[151,125,90,36,193,0,44,225,158,98,233,151,159,242,80,159,25,180,127,88,151,222,122,218,200,27,178,80,200,161,229,75],[168,25,99,11,160,108,48,203,212,66,132,198,77,7,92,81,101,86,204,51,127,221,3,119,175,179,17,28,91,122,47,108],[246,162,253,195,109,228,140,35,110,188,9,174,88,117,104,175,122,111,24,187,64,183,159,54,249,155,79,245,30,237,64,88],[1,242,188,171,77,195,8,39,62,207,99,201,123,94,42,147,123,166,196,110,132,35,63,203,191,40,174,7,139,48,223,18],[224,180,101,75,231,121,234,114,211,242,223,144,145,211,62,201,147,6,101,130,158,187,210,203,255,93,145,84,157,5,37,30],[220,152,10,217,89,158,156,236,67,7,209,65,37,135,225,81,1,101,253,250,112,235,54,161,178,191,73,107,229,71,215,109],[224,106,246,124,198,209,255,83,45,9,39,128,246,73,162,151,18,63,26,188,54,184,20,16,15,141,37,73,55,138,130,71],[210,239,107,136,129,183,165,181,18,165,60,38,122,167,254,173,178,133,104,215,92,235,209,214,208,144,224,107,158,173,187,75],[247,50,134,33,156,10,80,101,110,118,95,207,155,146,90,102,128,240,8,237,200,121,45,113,235,30,141,178,49,119,243,139],[91,60,132,69,62,131,61,135,33,110,205,144,42,17,31,124,134,102,168,51,77,162,234,92,158,211,164,155,214,34,192,82],[206,8,64,9,182,154,201,27,37,130,35,143,221,186,26,156,31,132,235,81,13,83,144,81,131,189,98,153,186,242,174,2],[118,9,190,208,249,144,241,22,112,209,73,250,51,1,135,0,182,106,125,233,97,95,184,236,72,175,110,107,185,49,16,159],[73,125,161,136,129,6,148,23,252,187,85,194,215,74,44,211,118,9,98,43,34,98,91,102,69,11,194,146,104,35,43,233],[111,218,93,154,100,40,210,98,143,214,33,79,54,78,144,184,246,254,19,27,164,31,255,116,105,20,206,97,213,1,106,139],[98,228,3,199,208,63,165,129,253,145,213,22,166,255,111,190,57,121,110,32,244,243,230,88,6,148,59,169,247,40,35,176],[65,166,192,116,1,1,50,32,205,74,222,112,86,240,255,115,184,182,14,149,246,193,55,80,39,126,192,106,185,189,48,1],[114,60,215,90,108,253,25,88,98,128,51,67,31,144,109,136,93,52,220,13,73,191,219,158,193,115,171,81,78,16,63,219],[72,111,114,135,179,203,149,184,200,34,106,250,52,132,110,214,219,136,129,85,66,9,4,217,151,22,128,35,84,91,173,238],[7,45,58,52,140,17,117,148,67,173,236,225,129,169,31,161,139,50,41,151,235,143,22,32,219,90,236,114,41,248,151,229],[59,170,90,39,194,191,96,215,138,150,122,230,75,164,234,205,58,80,63,242,180,39,19,107,93,28,102,247,135,198,64,22],[39,163,210,67,15,22,47,95,234,93,77,180,165,223,188,149,224,204,184,65,250,129,230,244,126,25,30,91,114,58,126,244],[72,3,177,216,170,9,106,246,47,94,196,217,118,97,140,92,86,168,68,157,166,28,221,186,146,105,229,37,238,226,181,153],[225,61,9,35,84,55,39,76,54,49,187,46,19,27,176,68,25,15,31,43,45,39,53,138,230,218,70,155,189,179,5,80],[230,118,92,2,227,214,151,12,233,130,99,7,5,153,46,89,252,147,238,200,88,159,13,93,54,60,25,97,8,144,84,208],[3,153,73,108,180,114,3,2,161,156,23,162,25,2,74,137,162,105,175,109,202,46,248,5,236,131,230,140,93,77,237,108],[221,189,191,127,68,21,165,12,80,163,55,72,69,232,21,194,63,116,22,204,249,97,15,103,69,165,186,189,204,88,230,48],[248,190,184,188,65,55,211,68,60,97,78,67,21,227,175,188,79,100,236,41,11,24,177,51,101,75,250,178,57,171,53,249],[150,253,184,193,108,250,4,128,199,135,111,108,113,16,38,120,206,100,37,236,26,38,139,98,249,244,219,224,58,80,167,181],[100,155,109,194,228,149,180,98,81,190,1,234,133,5,71,185,94,131,80,119,236,133,5,146,208,104,21,150,146,80,226,250],[179,188,5,65,7,50,51,144,188,8,196,50,82,141,56,142,174,110,59,216,55,189,234,25,238,224,158,153,239,26,183,173],[62,23,104,171,120,120,79,137,59,201,125,242,18,78,155,169,245,148,23,115,251,96,119,95,1,168,104,219,28,12,92,200],[56,244,132,206,94,233,54,109,90,180,231,64,148,185,131,193,221,172,127,184,94,227,189,175,90,166,157,4,123,121,139,207],[243,200,151,182,173,127,137,235,96,233,182,98,175,216,37,94,119,42,178,196,73,146,115,218,82,211,132,56,162,166,224,12],[37,106,173,42,80,245,78,107,187,191,253,59,247,22,74,105,28,228,62,192,72,23,84,81,224,144,90,124,218,33,95,190],[147,80,39,36,11,219,182,220,69,46,66,64,254,13,239,110,5,183,140,56,146,221,127,207,94,144,31,190,45,158,18,195],[173,242,81,24,180,172,187,151,47,61,171,4,27,227,211,236,189,173,13,81,19,172,241,254,209,45,77,24,99,178,231,142],[173,126,159,57,62,88,52,112,133,212,175,177,148,145,193,108,169,204,233,74,39,21,124,168,88,122,138,199,240,17,132,217],[241,101,69,170,99,235,53,50,93,199,73,105,187,254,182,151,168,244,58,13,141,54,133,242,248,58,113,138,22,25,161,56],[4,96,17,79,249,216,230,23,70,226,234,20,65,22,210,24,179,142,246,102,117,189,204,131,185,75,186,16,134,190,100,156],[97,89,142,254,167,34,171,12,158,49,104,103,84,205,196,234,54,0,35,140,43,58,206,27,43,204,29,6,42,79,142,196],[7,57,175,45,119,2,121,2,92,149,87,147,12,176,214,202,102,224,30,229,29,191,193,55,44,27,104,42,42,164,218,53],[123,5,81,206,101,238,72,96,10,43,2,202,76,128,133,91,246,205,72,71,132,40,71,32,95,221,235,18,178,43,137,168],[60,8,85,223,162,226,43,225,205,156,151,89,68,60,203,23,136,192,22,152,146,165,6,64,190,73,178,190,206,104,78,200],[136,97,237,8,146,28,152,172,121,164,187,107,148,206,197,121,164,130,216,25,65,71,214,147,82,166,76,86,191,197,85,19],[236,11,229,14,212,192,201,37,224,224,73,177,90,89,213,82,83,3,70,64,146,189,118,162,141,53,112,25,18,213,242,1],[202,184,158,249,91,161,82,165,170,143,36,172,112,21,247,110,248,243,231,158,145,74,41,77,94,205,223,98,71,6,242,233],[32,84,208,148,41,184,44,132,243,75,57,19,55,9,144,114,156,183,237,232,20,50,72,145,76,111,49,31,72,85,91,107],[90,232,10,149,64,117,133,12,92,67,194,124,35,84,146,97,207,190,190,235,151,90,164,175,76,86,87,156,29,158,138,111],[226,211,101,209,141,44,180,94,192,160,151,134,146,26,39,139,91,167,123,50,195,169,113,96,53,52,4,89,199,173,175,159],[137,173,117,15,207,1,62,156,58,13,28,206,232,101,175,115,39,125,158,239,133,29,9,152,149,240,195,194,67,107,201,73],[98,179,81,215,202,177,92,164,211,195,187,178,73,160,174,46,42,53,110,43,224,109,66,187,154,228,117,37,11,60,159,27],[47,200,241,108,65,233,138,27,216,113,254,133,238,1,92,68,54,226,188,226,4,188,60,224,216,108,85,253,148,53,40,143]]",
                "sol": "[bytes32(stringToBytes32(\"252,245,238,187,232,150,113,67,94,106,0,247,80,67,247,117,242,41,95,55,141,231,207,164,19,65,166,233,76,83,140,82\")),bytes32(stringToBytes32(\"188,1,26,151,160,145,97,119,175,187,247,133,146,78,212,1,31,170,136,91,90,112,186,34,80,29,93,95,251,33,255,246\")),bytes32(stringToBytes32(\"37,179,27,246,241,98,188,246,182,157,163,73,54,5,255,83,165,43,222,103,27,222,135,181,208,25,23,3,148,203,218,71\")),bytes32(stringToBytes32(\"115,106,40,14,16,177,233,252,6,179,119,189,9,25,248,136,1,84,171,178,225,153,115,235,149,192,233,142,53,243,100,69\")),bytes32(stringToBytes32(\"122,97,136,238,222,188,125,65,69,85,211,34,101,165,29,40,189,115,222,31,243,13,102,244,242,30,3,12,162,30,175,113\")),bytes32(stringToBytes32(\"132,40,23,175,127,195,102,141,224,227,234,183,178,19,114,217,238,48,226,181,207,72,202,226,138,221,136,52,104,213,13,22\")),bytes32(stringToBytes32(\"186,44,186,112,223,85,100,72,84,175,12,95,183,183,71,32,236,123,158,128,241,44,137,139,44,222,10,195,55,23,235,123\")),bytes32(stringToBytes32(\"138,46,13,192,228,215,11,203,72,188,124,194,110,106,44,52,155,154,163,69,216,112,58,25,28,253,46,74,151,144,4,128\")),bytes32(stringToBytes32(\"12,231,79,114,32,147,171,47,134,52,195,234,239,32,224,99,195,1,253,54,237,206,105,117,211,150,7,144,88,53,38,86\")),bytes32(stringToBytes32(\"56,211,47,151,116,26,163,235,143,130,243,172,171,222,199,180,196,103,230,251,127,8,66,58,2,157,221,165,63,173,129,244\")),bytes32(stringToBytes32(\"182,8,100,196,155,132,176,181,155,133,51,38,192,221,163,218,207,15,230,159,171,145,255,203,156,147,21,155,146,51,49,178\")),bytes32(stringToBytes32(\"238,15,133,135,224,94,190,87,114,31,134,13,212,46,70,239,60,121,73,174,227,75,253,253,180,111,207,96,218,193,9,69\")),bytes32(stringToBytes32(\"218,21,74,116,145,14,235,81,141,209,163,140,21,84,238,10,193,37,8,148,161,34,181,18,62,236,203,56,211,66,161,88\")),bytes32(stringToBytes32(\"142,69,186,245,237,31,112,6,119,106,199,56,184,86,40,45,177,131,0,126,255,97,196,23,222,163,78,76,89,225,15,29\")),bytes32(stringToBytes32(\"99,59,59,227,86,79,248,247,200,196,76,87,116,101,221,26,203,21,253,139,65,115,92,123,72,146,7,100,30,83,115,236\")),bytes32(stringToBytes32(\"149,177,199,178,242,173,12,211,204,20,72,196,49,212,83,123,53,173,241,6,30,69,222,7,87,99,231,124,193,105,246,126\")),bytes32(stringToBytes32(\"197,64,71,172,175,207,142,32,179,127,217,203,48,13,62,114,188,130,122,138,156,11,187,138,142,21,103,199,11,179,82,65\")),bytes32(stringToBytes32(\"45,186,210,182,190,228,166,197,128,210,159,57,17,187,123,19,120,6,215,189,94,30,118,106,117,125,120,113,229,238,94,40\")),bytes32(stringToBytes32(\"212,1,250,239,209,237,58,120,69,187,94,97,193,52,27,240,183,24,15,228,54,80,157,39,131,157,197,175,189,233,63,168\")),bytes32(stringToBytes32(\"48,24,173,33,246,128,110,49,212,206,228,19,70,75,237,0,199,168,243,18,207,168,230,30,202,247,87,184,67,53,130,24\")),bytes32(stringToBytes32(\"82,197,57,108,48,93,66,93,11,167,87,132,183,187,16,108,56,247,231,71,34,41,43,174,153,120,64,198,38,45,220,55\")),bytes32(stringToBytes32(\"61,57,150,89,43,184,238,9,178,232,108,28,17,141,125,205,200,178,89,166,66,104,47,187,91,99,64,1,212,134,170,20\")),bytes32(stringToBytes32(\"252,136,34,240,155,62,45,63,3,233,49,237,69,40,116,62,187,57,231,71,205,111,212,19,217,55,103,184,134,157,196,193\")),bytes32(stringToBytes32(\"171,240,158,70,118,24,168,105,90,233,89,60,169,6,51,166,44,169,17,144,18,96,73,214,138,117,72,246,111,230,39,150\")),bytes32(stringToBytes32(\"134,248,166,166,184,186,14,125,5,214,22,182,2,206,4,78,201,71,109,61,113,16,156,130,224,100,25,78,149,150,55,137\")),bytes32(stringToBytes32(\"39,163,98,254,66,222,36,84,118,189,47,122,61,129,178,226,1,245,224,7,27,83,200,239,173,85,250,186,99,162,42,152\")),bytes32(stringToBytes32(\"160,68,117,65,175,56,50,53,224,86,59,196,185,158,106,173,4,174,65,64,32,45,229,114,109,115,104,112,122,80,13,37\")),bytes32(stringToBytes32(\"186,183,100,35,196,85,206,208,26,181,89,227,144,30,89,80,139,173,230,228,178,66,25,28,133,109,228,228,197,147,181,90\")),bytes32(stringToBytes32(\"81,217,161,106,201,167,77,203,221,91,157,32,58,156,163,187,104,157,159,129,91,168,250,151,243,231,202,78,219,7,161,242\")),bytes32(stringToBytes32(\"7,12,226,151,169,111,56,252,55,91,39,71,73,201,68,182,37,8,68,141,56,171,255,48,88,207,55,88,16,164,195,51\")),bytes32(stringToBytes32(\"4,116,227,167,113,57,237,4,157,181,5,126,64,193,135,244,110,94,190,245,56,239,143,28,155,117,115,237,178,5,102,204\")),bytes32(stringToBytes32(\"93,132,20,42,45,24,7,160,248,33,252,118,64,125,58,149,164,62,230,118,40,64,163,2,36,62,167,71,21,126,105,44\")),bytes32(stringToBytes32(\"40,101,117,108,124,7,38,48,48,231,118,138,34,2,81,88,114,155,157,59,66,210,40,170,161,149,185,39,36,125,246,142\")),bytes32(stringToBytes32(\"204,117,209,194,35,191,53,124,49,202,60,192,59,21,102,213,117,114,2,246,235,204,46,77,35,230,81,87,246,66,139,85\")),bytes32(stringToBytes32(\"33,106,52,88,41,8,132,82,192,93,104,228,250,84,161,71,152,231,193,32,142,35,93,4,0,132,160,170,100,244,181,145\")),bytes32(stringToBytes32(\"200,137,105,254,145,167,236,117,159,186,82,156,49,55,98,180,179,244,47,166,19,129,105,191,52,169,165,242,191,22,154,182\")),bytes32(stringToBytes32(\"99,170,87,132,204,237,108,57,87,135,69,11,39,38,64,168,250,248,192,210,189,0,129,173,190,212,61,7,212,134,132,144\")),bytes32(stringToBytes32(\"138,109,139,65,31,244,124,217,237,177,143,42,18,147,8,65,74,116,163,213,210,229,188,53,90,84,238,61,199,114,43,86\")),bytes32(stringToBytes32(\"151,30,216,121,21,49,152,155,143,89,25,251,90,72,39,229,248,175,90,1,226,199,5,202,245,168,141,224,192,15,2,148\")),bytes32(stringToBytes32(\"99,170,70,150,120,38,111,99,249,63,33,222,140,98,174,207,38,200,187,67,113,157,119,149,117,197,31,44,91,90,17,179\")),bytes32(stringToBytes32(\"254,140,125,73,105,28,245,139,192,103,49,228,169,194,248,80,187,209,46,173,147,151,34,18,89,96,249,162,19,56,247,233\")),bytes32(stringToBytes32(\"225,15,101,22,190,165,252,28,115,237,173,80,255,59,102,19,7,113,44,56,131,208,247,150,29,5,9,187,13,204,219,17\")),bytes32(stringToBytes32(\"135,139,255,96,180,30,39,126,162,26,60,235,194,73,48,7,64,67,30,192,137,141,119,86,113,130,165,163,85,157,81,248\")),bytes32(stringToBytes32(\"151,125,90,36,193,0,44,225,158,98,233,151,159,242,80,159,25,180,127,88,151,222,122,218,200,27,178,80,200,161,229,75\")),bytes32(stringToBytes32(\"168,25,99,11,160,108,48,203,212,66,132,198,77,7,92,81,101,86,204,51,127,221,3,119,175,179,17,28,91,122,47,108\")),bytes32(stringToBytes32(\"246,162,253,195,109,228,140,35,110,188,9,174,88,117,104,175,122,111,24,187,64,183,159,54,249,155,79,245,30,237,64,88\")),bytes32(stringToBytes32(\"1,242,188,171,77,195,8,39,62,207,99,201,123,94,42,147,123,166,196,110,132,35,63,203,191,40,174,7,139,48,223,18\")),bytes32(stringToBytes32(\"224,180,101,75,231,121,234,114,211,242,223,144,145,211,62,201,147,6,101,130,158,187,210,203,255,93,145,84,157,5,37,30\")),bytes32(stringToBytes32(\"220,152,10,217,89,158,156,236,67,7,209,65,37,135,225,81,1,101,253,250,112,235,54,161,178,191,73,107,229,71,215,109\")),bytes32(stringToBytes32(\"224,106,246,124,198,209,255,83,45,9,39,128,246,73,162,151,18,63,26,188,54,184,20,16,15,141,37,73,55,138,130,71\")),bytes32(stringToBytes32(\"210,239,107,136,129,183,165,181,18,165,60,38,122,167,254,173,178,133,104,215,92,235,209,214,208,144,224,107,158,173,187,75\")),bytes32(stringToBytes32(\"247,50,134,33,156,10,80,101,110,118,95,207,155,146,90,102,128,240,8,237,200,121,45,113,235,30,141,178,49,119,243,139\")),bytes32(stringToBytes32(\"91,60,132,69,62,131,61,135,33,110,205,144,42,17,31,124,134,102,168,51,77,162,234,92,158,211,164,155,214,34,192,82\")),bytes32(stringToBytes32(\"206,8,64,9,182,154,201,27,37,130,35,143,221,186,26,156,31,132,235,81,13,83,144,81,131,189,98,153,186,242,174,2\")),bytes32(stringToBytes32(\"118,9,190,208,249,144,241,22,112,209,73,250,51,1,135,0,182,106,125,233,97,95,184,236,72,175,110,107,185,49,16,159\")),bytes32(stringToBytes32(\"73,125,161,136,129,6,148,23,252,187,85,194,215,74,44,211,118,9,98,43,34,98,91,102,69,11,194,146,104,35,43,233\")),bytes32(stringToBytes32(\"111,218,93,154,100,40,210,98,143,214,33,79,54,78,144,184,246,254,19,27,164,31,255,116,105,20,206,97,213,1,106,139\")),bytes32(stringToBytes32(\"98,228,3,199,208,63,165,129,253,145,213,22,166,255,111,190,57,121,110,32,244,243,230,88,6,148,59,169,247,40,35,176\")),bytes32(stringToBytes32(\"65,166,192,116,1,1,50,32,205,74,222,112,86,240,255,115,184,182,14,149,246,193,55,80,39,126,192,106,185,189,48,1\")),bytes32(stringToBytes32(\"114,60,215,90,108,253,25,88,98,128,51,67,31,144,109,136,93,52,220,13,73,191,219,158,193,115,171,81,78,16,63,219\")),bytes32(stringToBytes32(\"72,111,114,135,179,203,149,184,200,34,106,250,52,132,110,214,219,136,129,85,66,9,4,217,151,22,128,35,84,91,173,238\")),bytes32(stringToBytes32(\"7,45,58,52,140,17,117,148,67,173,236,225,129,169,31,161,139,50,41,151,235,143,22,32,219,90,236,114,41,248,151,229\")),bytes32(stringToBytes32(\"59,170,90,39,194,191,96,215,138,150,122,230,75,164,234,205,58,80,63,242,180,39,19,107,93,28,102,247,135,198,64,22\")),bytes32(stringToBytes32(\"39,163,210,67,15,22,47,95,234,93,77,180,165,223,188,149,224,204,184,65,250,129,230,244,126,25,30,91,114,58,126,244\")),bytes32(stringToBytes32(\"72,3,177,216,170,9,106,246,47,94,196,217,118,97,140,92,86,168,68,157,166,28,221,186,146,105,229,37,238,226,181,153\")),bytes32(stringToBytes32(\"225,61,9,35,84,55,39,76,54,49,187,46,19,27,176,68,25,15,31,43,45,39,53,138,230,218,70,155,189,179,5,80\")),bytes32(stringToBytes32(\"230,118,92,2,227,214,151,12,233,130,99,7,5,153,46,89,252,147,238,200,88,159,13,93,54,60,25,97,8,144,84,208\")),bytes32(stringToBytes32(\"3,153,73,108,180,114,3,2,161,156,23,162,25,2,74,137,162,105,175,109,202,46,248,5,236,131,230,140,93,77,237,108\")),bytes32(stringToBytes32(\"221,189,191,127,68,21,165,12,80,163,55,72,69,232,21,194,63,116,22,204,249,97,15,103,69,165,186,189,204,88,230,48\")),bytes32(stringToBytes32(\"248,190,184,188,65,55,211,68,60,97,78,67,21,227,175,188,79,100,236,41,11,24,177,51,101,75,250,178,57,171,53,249\")),bytes32(stringToBytes32(\"150,253,184,193,108,250,4,128,199,135,111,108,113,16,38,120,206,100,37,236,26,38,139,98,249,244,219,224,58,80,167,181\")),bytes32(stringToBytes32(\"100,155,109,194,228,149,180,98,81,190,1,234,133,5,71,185,94,131,80,119,236,133,5,146,208,104,21,150,146,80,226,250\")),bytes32(stringToBytes32(\"179,188,5,65,7,50,51,144,188,8,196,50,82,141,56,142,174,110,59,216,55,189,234,25,238,224,158,153,239,26,183,173\")),bytes32(stringToBytes32(\"62,23,104,171,120,120,79,137,59,201,125,242,18,78,155,169,245,148,23,115,251,96,119,95,1,168,104,219,28,12,92,200\")),bytes32(stringToBytes32(\"56,244,132,206,94,233,54,109,90,180,231,64,148,185,131,193,221,172,127,184,94,227,189,175,90,166,157,4,123,121,139,207\")),bytes32(stringToBytes32(\"243,200,151,182,173,127,137,235,96,233,182,98,175,216,37,94,119,42,178,196,73,146,115,218,82,211,132,56,162,166,224,12\")),bytes32(stringToBytes32(\"37,106,173,42,80,245,78,107,187,191,253,59,247,22,74,105,28,228,62,192,72,23,84,81,224,144,90,124,218,33,95,190\")),bytes32(stringToBytes32(\"147,80,39,36,11,219,182,220,69,46,66,64,254,13,239,110,5,183,140,56,146,221,127,207,94,144,31,190,45,158,18,195\")),bytes32(stringToBytes32(\"173,242,81,24,180,172,187,151,47,61,171,4,27,227,211,236,189,173,13,81,19,172,241,254,209,45,77,24,99,178,231,142\")),bytes32(stringToBytes32(\"173,126,159,57,62,88,52,112,133,212,175,177,148,145,193,108,169,204,233,74,39,21,124,168,88,122,138,199,240,17,132,217\")),bytes32(stringToBytes32(\"241,101,69,170,99,235,53,50,93,199,73,105,187,254,182,151,168,244,58,13,141,54,133,242,248,58,113,138,22,25,161,56\")),bytes32(stringToBytes32(\"4,96,17,79,249,216,230,23,70,226,234,20,65,22,210,24,179,142,246,102,117,189,204,131,185,75,186,16,134,190,100,156\")),bytes32(stringToBytes32(\"97,89,142,254,167,34,171,12,158,49,104,103,84,205,196,234,54,0,35,140,43,58,206,27,43,204,29,6,42,79,142,196\")),bytes32(stringToBytes32(\"7,57,175,45,119,2,121,2,92,149,87,147,12,176,214,202,102,224,30,229,29,191,193,55,44,27,104,42,42,164,218,53\")),bytes32(stringToBytes32(\"123,5,81,206,101,238,72,96,10,43,2,202,76,128,133,91,246,205,72,71,132,40,71,32,95,221,235,18,178,43,137,168\")),bytes32(stringToBytes32(\"60,8,85,223,162,226,43,225,205,156,151,89,68,60,203,23,136,192,22,152,146,165,6,64,190,73,178,190,206,104,78,200\")),bytes32(stringToBytes32(\"136,97,237,8,146,28,152,172,121,164,187,107,148,206,197,121,164,130,216,25,65,71,214,147,82,166,76,86,191,197,85,19\")),bytes32(stringToBytes32(\"236,11,229,14,212,192,201,37,224,224,73,177,90,89,213,82,83,3,70,64,146,189,118,162,141,53,112,25,18,213,242,1\")),bytes32(stringToBytes32(\"202,184,158,249,91,161,82,165,170,143,36,172,112,21,247,110,248,243,231,158,145,74,41,77,94,205,223,98,71,6,242,233\")),bytes32(stringToBytes32(\"32,84,208,148,41,184,44,132,243,75,57,19,55,9,144,114,156,183,237,232,20,50,72,145,76,111,49,31,72,85,91,107\")),bytes32(stringToBytes32(\"90,232,10,149,64,117,133,12,92,67,194,124,35,84,146,97,207,190,190,235,151,90,164,175,76,86,87,156,29,158,138,111\")),bytes32(stringToBytes32(\"226,211,101,209,141,44,180,94,192,160,151,134,146,26,39,139,91,167,123,50,195,169,113,96,53,52,4,89,199,173,175,159\")),bytes32(stringToBytes32(\"137,173,117,15,207,1,62,156,58,13,28,206,232,101,175,115,39,125,158,239,133,29,9,152,149,240,195,194,67,107,201,73\")),bytes32(stringToBytes32(\"98,179,81,215,202,177,92,164,211,195,187,178,73,160,174,46,42,53,110,43,224,109,66,187,154,228,117,37,11,60,159,27\")),bytes32(stringToBytes32(\"47,200,241,108,65,233,138,27,216,113,254,133,238,1,92,68,54,226,188,226,4,188,60,224,216,108,85,253,148,53,40,143\"))]"
              },
              {
                "js": "[[162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35],[14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236],[187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132],[7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88],[60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112],[225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82],[37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47],[38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215],[7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59],[18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25],[96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242],[99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77],[40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114],[122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185],[97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150],[29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30],[87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23],[249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252],[200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181],[135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209],[195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207],[252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241],[178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213],[90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185],[245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229],[53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20],[226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25],[143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132],[140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106],[114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167],[185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253],[140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174],[77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206],[161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14],[241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81],[169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163],[252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8],[180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205],[138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251],[172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192],[222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36],[254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40],[18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65],[54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157],[169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24],[177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151],[207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193],[148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17],[53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154],[197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122],[66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116],[109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78],[43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85],[76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195],[156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163],[87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104],[61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17],[59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2],[194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63],[16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114],[255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71],[103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63],[245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38],[167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224],[99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43],[27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201],[182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11],[184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58],[104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143],[14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39],[46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84],[176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8],[20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187],[76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46],[55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66],[236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57],[137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16],[98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141],[1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196],[195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183],[174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40],[251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164],[113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154],[72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225],[227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245],[18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108],[187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134],[211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146],[205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94],[162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2],[206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250],[102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234],[237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147],[28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124],[72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216]]",
                "sol": "[bytes32(stringToBytes32(\"162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35\")),bytes32(stringToBytes32(\"14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236\")),bytes32(stringToBytes32(\"187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132\")),bytes32(stringToBytes32(\"7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88\")),bytes32(stringToBytes32(\"60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112\")),bytes32(stringToBytes32(\"225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82\")),bytes32(stringToBytes32(\"37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47\")),bytes32(stringToBytes32(\"38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215\")),bytes32(stringToBytes32(\"7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59\")),bytes32(stringToBytes32(\"18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25\")),bytes32(stringToBytes32(\"96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242\")),bytes32(stringToBytes32(\"99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77\")),bytes32(stringToBytes32(\"40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114\")),bytes32(stringToBytes32(\"122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185\")),bytes32(stringToBytes32(\"97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150\")),bytes32(stringToBytes32(\"29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30\")),bytes32(stringToBytes32(\"87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23\")),bytes32(stringToBytes32(\"249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252\")),bytes32(stringToBytes32(\"200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181\")),bytes32(stringToBytes32(\"135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209\")),bytes32(stringToBytes32(\"195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207\")),bytes32(stringToBytes32(\"252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241\")),bytes32(stringToBytes32(\"178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213\")),bytes32(stringToBytes32(\"90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185\")),bytes32(stringToBytes32(\"245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229\")),bytes32(stringToBytes32(\"53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20\")),bytes32(stringToBytes32(\"226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25\")),bytes32(stringToBytes32(\"143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132\")),bytes32(stringToBytes32(\"140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106\")),bytes32(stringToBytes32(\"114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167\")),bytes32(stringToBytes32(\"185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253\")),bytes32(stringToBytes32(\"140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174\")),bytes32(stringToBytes32(\"77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206\")),bytes32(stringToBytes32(\"161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14\")),bytes32(stringToBytes32(\"241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81\")),bytes32(stringToBytes32(\"169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163\")),bytes32(stringToBytes32(\"252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8\")),bytes32(stringToBytes32(\"180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205\")),bytes32(stringToBytes32(\"138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251\")),bytes32(stringToBytes32(\"172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192\")),bytes32(stringToBytes32(\"222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36\")),bytes32(stringToBytes32(\"254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40\")),bytes32(stringToBytes32(\"18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65\")),bytes32(stringToBytes32(\"54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157\")),bytes32(stringToBytes32(\"169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24\")),bytes32(stringToBytes32(\"177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151\")),bytes32(stringToBytes32(\"207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193\")),bytes32(stringToBytes32(\"148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17\")),bytes32(stringToBytes32(\"53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154\")),bytes32(stringToBytes32(\"197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122\")),bytes32(stringToBytes32(\"66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116\")),bytes32(stringToBytes32(\"109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78\")),bytes32(stringToBytes32(\"43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85\")),bytes32(stringToBytes32(\"76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195\")),bytes32(stringToBytes32(\"156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163\")),bytes32(stringToBytes32(\"87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104\")),bytes32(stringToBytes32(\"61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17\")),bytes32(stringToBytes32(\"59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2\")),bytes32(stringToBytes32(\"194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63\")),bytes32(stringToBytes32(\"16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114\")),bytes32(stringToBytes32(\"255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71\")),bytes32(stringToBytes32(\"103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63\")),bytes32(stringToBytes32(\"245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38\")),bytes32(stringToBytes32(\"167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224\")),bytes32(stringToBytes32(\"99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43\")),bytes32(stringToBytes32(\"27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201\")),bytes32(stringToBytes32(\"182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11\")),bytes32(stringToBytes32(\"184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58\")),bytes32(stringToBytes32(\"104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143\")),bytes32(stringToBytes32(\"14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39\")),bytes32(stringToBytes32(\"46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84\")),bytes32(stringToBytes32(\"176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8\")),bytes32(stringToBytes32(\"20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187\")),bytes32(stringToBytes32(\"76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46\")),bytes32(stringToBytes32(\"55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66\")),bytes32(stringToBytes32(\"236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57\")),bytes32(stringToBytes32(\"137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16\")),bytes32(stringToBytes32(\"98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141\")),bytes32(stringToBytes32(\"1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196\")),bytes32(stringToBytes32(\"195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183\")),bytes32(stringToBytes32(\"174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40\")),bytes32(stringToBytes32(\"251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164\")),bytes32(stringToBytes32(\"113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154\")),bytes32(stringToBytes32(\"72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225\")),bytes32(stringToBytes32(\"227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245\")),bytes32(stringToBytes32(\"18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108\")),bytes32(stringToBytes32(\"187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134\")),bytes32(stringToBytes32(\"211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146\")),bytes32(stringToBytes32(\"205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94\")),bytes32(stringToBytes32(\"162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2\")),bytes32(stringToBytes32(\"206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250\")),bytes32(stringToBytes32(\"102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234\")),bytes32(stringToBytes32(\"237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147\")),bytes32(stringToBytes32(\"28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124\")),bytes32(stringToBytes32(\"72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length == _usersVote.length",
            "parameters": [
              {
                "js": "[[165,75,251,227,252,134,166,42,220,237,210,185,52,212,83,202,59,208,1,98,105,23,210,81,218,72,66,60,159,231,143,190],[188,53,150,88,11,116,129,226,48,203,163,223,207,101,224,193,34,131,94,140,22,162,74,130,167,137,131,92,145,247,26,181],[77,142,146,95,133,60,183,24,11,30,177,78,229,31,190,87,172,223,94,96,196,36,110,226,113,85,37,180,28,150,180,6],[160,149,180,26,105,46,120,248,95,136,69,140,79,60,31,153,179,203,99,106,13,98,43,68,111,182,190,29,236,43,21,204],[86,130,1,43,209,166,235,179,142,36,4,231,194,199,84,132,135,57,65,186,49,169,35,3,249,88,199,160,220,172,149,109],[1,228,137,145,164,158,147,200,71,98,159,8,17,154,202,122,221,95,90,177,57,200,155,171,165,128,238,14,116,27,246,48],[210,182,141,227,20,40,56,15,171,10,174,55,195,9,127,242,225,53,127,14,226,146,205,87,127,232,74,124,37,0,18,219],[43,51,170,180,219,154,244,32,67,91,24,244,49,239,217,33,68,164,43,112,90,107,17,225,248,198,207,114,198,72,172,8],[66,161,10,125,233,149,116,47,138,119,59,48,60,148,154,232,5,155,39,196,42,100,105,155,185,8,158,164,245,189,129,184],[77,233,209,187,157,46,211,179,156,31,175,34,166,93,126,186,22,107,106,104,186,180,238,87,87,157,103,147,81,118,75,175],[253,120,86,95,0,156,215,5,163,81,70,213,113,19,142,223,194,23,113,16,207,240,244,192,222,210,214,244,200,211,248,210],[56,4,108,24,190,253,16,185,229,92,213,118,102,38,78,31,59,230,87,61,167,28,60,38,251,30,114,53,55,204,226,116],[116,115,117,63,188,133,106,73,163,246,222,247,201,221,54,15,83,204,191,44,150,121,104,37,128,63,60,197,27,231,17,61],[151,133,117,211,237,123,254,126,15,182,111,235,51,94,198,9,24,199,47,164,211,16,8,181,73,246,233,10,190,47,15,87],[242,73,87,53,121,170,46,16,197,100,32,57,168,214,77,180,116,57,94,86,184,165,213,101,181,2,155,222,236,144,237,161],[68,186,189,13,248,199,199,216,233,200,36,19,113,241,55,16,93,65,154,191,164,231,31,51,138,182,47,129,208,5,144,126],[208,14,179,213,40,95,81,10,93,213,44,8,99,244,161,231,226,166,204,99,51,16,232,237,207,12,7,101,237,188,108,221],[118,64,161,207,63,82,217,59,116,108,105,60,241,75,191,56,236,251,13,218,178,103,151,20,113,244,190,219,64,42,51,217],[52,103,235,107,80,176,235,49,187,21,126,55,39,184,114,150,116,0,222,13,43,151,40,73,238,36,131,72,67,113,101,38],[51,253,253,63,4,209,252,49,185,40,176,194,65,234,170,210,2,121,134,209,222,69,227,61,212,147,69,78,163,54,160,114],[98,195,145,118,216,49,246,28,31,239,7,49,96,188,180,224,53,121,196,39,161,154,65,227,194,139,215,72,13,233,52,104],[119,35,129,66,2,36,150,53,194,190,16,108,36,207,213,193,87,123,167,7,253,13,167,201,92,122,78,75,34,250,187,255],[166,184,77,71,181,159,91,96,147,110,189,6,225,85,227,254,71,48,235,249,9,253,67,136,24,169,215,110,169,48,120,84],[66,76,56,99,201,34,66,124,70,146,43,179,144,87,214,190,186,61,105,49,16,214,55,177,1,109,34,222,183,31,245,244],[82,238,67,236,169,188,108,39,102,213,214,1,131,99,225,45,64,99,129,35,143,65,143,230,192,55,235,99,86,155,217,42],[192,121,128,155,176,75,52,118,63,141,8,122,79,91,67,91,172,230,7,105,158,28,93,177,213,23,17,86,222,164,97,69],[22,218,31,27,241,24,47,92,88,254,175,83,166,157,250,252,57,43,156,29,59,137,68,34,92,168,170,221,88,144,225,198],[104,24,237,142,242,5,110,132,36,81,218,233,152,210,220,211,162,234,201,181,186,137,95,127,214,25,101,228,227,124,254,229],[89,78,92,73,120,160,49,25,149,247,111,68,67,109,52,179,185,99,206,57,57,102,15,187,253,204,145,36,248,198,21,201],[98,218,222,116,156,124,198,189,178,107,169,159,113,169,212,255,226,74,118,163,239,39,79,23,158,45,146,71,234,205,195,114],[195,125,24,82,80,226,66,244,140,64,145,125,120,89,159,171,215,198,30,9,213,136,79,23,168,253,137,102,172,160,40,129],[15,65,54,200,8,117,242,197,6,49,16,160,11,172,245,137,247,108,126,113,101,72,10,80,237,117,20,140,117,249,227,241],[145,115,221,88,126,226,19,218,219,50,219,69,56,247,184,228,163,74,82,217,165,174,199,111,128,175,42,247,239,231,88,41],[31,185,205,120,224,170,162,123,28,124,89,45,105,37,54,114,164,117,197,122,211,228,84,158,211,243,1,81,135,88,26,71],[90,231,227,160,217,29,208,158,213,2,252,92,157,202,78,131,226,215,24,36,0,205,80,98,215,127,88,252,212,10,245,212],[182,201,102,127,218,32,14,247,218,80,140,213,51,153,81,35,106,215,81,72,216,110,51,213,63,106,225,3,207,96,239,225],[52,70,176,148,89,234,114,25,129,20,183,243,143,75,241,207,53,141,227,120,127,217,63,171,37,59,104,183,223,163,155,106],[160,146,252,228,9,244,122,33,114,98,90,238,86,97,31,42,103,124,50,88,194,248,197,150,151,118,58,122,200,96,151,91],[244,240,103,70,183,255,196,160,96,46,142,40,197,186,207,42,131,118,46,144,243,11,51,22,236,188,253,187,30,101,123,17],[178,72,241,103,106,195,13,168,76,98,187,246,232,241,184,213,142,253,137,115,42,71,211,147,66,222,149,116,99,20,252,226],[65,219,245,82,174,148,21,8,224,219,65,95,150,37,112,219,31,127,142,244,237,59,254,208,182,161,73,246,7,243,118,14],[27,204,108,74,120,141,105,180,194,165,116,166,254,146,165,132,123,213,14,16,52,140,96,16,235,36,33,26,133,17,184,27],[230,18,208,14,82,107,80,37,42,135,96,203,1,96,180,188,207,27,157,38,20,2,205,133,88,99,104,146,145,3,218,52],[191,178,47,22,181,83,189,242,202,165,235,147,110,19,255,251,40,188,243,103,89,178,201,160,170,155,129,247,85,53,221,68],[169,239,125,142,197,173,185,99,38,212,89,230,162,65,238,252,153,178,72,87,58,42,62,90,200,213,81,61,24,181,229,164],[37,113,192,33,174,148,86,158,80,62,178,59,236,200,0,251,84,230,59,193,214,58,58,116,46,91,18,101,1,137,222,87],[21,97,192,117,112,29,94,21,103,73,93,209,208,176,147,33,182,158,60,65,67,88,129,117,197,32,169,22,126,184,249,6],[5,245,204,78,245,6,155,198,61,243,173,99,208,54,14,244,117,138,81,127,22,1,189,120,245,153,67,192,220,254,42,21],[44,255,228,18,72,206,30,210,197,174,11,5,78,105,147,105,26,247,117,208,113,40,196,105,218,66,206,163,208,68,251,141],[118,109,31,116,59,238,90,225,33,1,200,170,238,106,164,73,3,147,171,50,25,230,137,221,122,194,14,121,79,115,78,152],[212,39,169,35,154,90,221,149,118,18,227,213,89,172,160,233,185,69,187,22,239,201,255,72,130,75,205,48,234,178,67,49],[90,151,149,102,251,200,60,205,8,165,16,113,160,209,54,214,215,99,10,203,98,91,97,129,236,44,104,109,209,201,70,123],[6,186,103,84,248,94,171,115,57,26,209,63,173,135,81,188,205,140,98,142,36,187,56,33,168,71,229,159,245,23,132,103],[1,183,43,222,114,70,224,29,100,4,135,4,8,142,226,253,29,124,207,119,110,9,248,221,119,159,249,97,37,144,144,57],[231,188,89,103,21,129,110,215,63,81,45,219,119,88,167,149,137,148,198,34,4,188,117,105,140,172,192,170,35,193,49,28],[38,102,93,178,76,219,244,146,130,225,231,180,158,10,75,86,68,183,246,158,186,204,38,88,244,4,187,198,75,247,22,218],[146,82,245,184,104,22,145,15,150,61,194,7,209,227,199,207,91,177,179,48,252,175,253,71,239,192,119,35,192,233,254,86],[181,116,41,141,180,196,160,41,121,71,34,254,5,5,224,182,76,144,171,238,26,137,21,168,56,15,43,190,1,229,108,70],[134,246,41,55,40,16,167,64,106,7,1,196,15,219,202,43,226,200,113,38,101,169,147,21,1,101,15,85,187,47,162,92],[121,190,70,93,249,32,166,199,88,156,103,244,85,210,189,207,130,3,190,146,156,183,231,110,75,171,161,207,225,51,119,195],[220,236,227,95,74,20,92,33,83,76,241,228,207,138,143,2,41,166,193,81,58,3,31,146,253,200,74,127,115,2,90,234],[217,37,180,129,143,159,236,87,102,237,198,86,166,178,24,71,109,36,34,230,212,108,54,59,166,176,179,170,135,139,252,8],[19,22,200,97,223,197,246,234,252,192,189,186,193,73,229,186,196,207,112,119,238,227,77,145,2,217,35,247,224,125,233,82],[161,201,89,111,166,214,64,123,181,158,17,130,42,68,4,113,158,172,196,182,233,19,166,163,245,51,49,163,209,193,242,218],[52,214,168,216,85,127,252,249,100,116,249,123,47,164,196,247,27,36,232,93,136,125,165,229,37,255,209,172,70,164,189,31],[203,67,250,148,97,54,170,87,92,40,41,65,231,253,136,121,200,113,201,190,18,188,206,152,99,116,4,235,30,102,96,105],[107,140,231,9,122,67,139,55,40,55,156,13,154,7,148,64,125,244,237,230,181,150,110,208,197,240,243,49,37,44,236,178],[103,221,131,176,11,128,75,5,113,160,34,98,204,193,54,1,183,145,114,172,150,91,200,251,189,242,97,161,237,117,152,221],[114,161,7,164,11,155,31,236,112,238,194,44,245,20,138,215,251,2,76,13,83,27,67,181,61,64,20,27,2,58,248,144],[251,146,198,45,255,94,24,252,197,198,112,18,202,213,35,173,119,151,134,119,46,159,70,108,251,54,169,229,136,83,113,149],[245,72,2,18,77,65,180,128,5,211,67,80,57,70,4,171,235,78,42,20,201,17,247,30,172,253,206,167,33,108,174,153],[252,230,139,79,218,22,226,126,11,15,182,30,123,155,237,85,33,68,4,130,163,208,234,172,203,109,220,182,145,219,199,206],[136,224,217,222,57,26,39,90,20,150,127,6,225,243,151,164,246,224,166,106,152,111,144,61,14,237,39,58,161,33,67,47],[75,27,67,35,206,187,52,68,239,139,104,20,117,84,238,156,148,34,217,202,11,168,61,49,249,127,222,218,179,135,148,118],[60,43,95,115,95,149,44,251,252,153,159,67,185,234,177,144,225,53,52,188,253,239,24,58,207,179,247,188,120,33,76,71],[252,204,118,196,246,152,72,96,7,231,39,122,184,77,197,237,32,153,10,240,21,91,235,201,161,167,166,133,236,70,70,192],[118,252,57,114,109,40,213,212,148,95,229,221,9,64,154,21,37,255,42,225,53,251,233,53,253,21,182,14,162,195,171,71],[131,186,94,19,63,192,135,39,234,115,122,62,78,94,183,58,247,42,13,216,97,180,243,202,200,242,65,228,152,161,4,104],[64,231,91,19,248,251,84,24,220,18,29,48,176,116,234,10,56,252,166,43,12,124,151,139,109,54,157,123,229,25,177,153],[254,36,170,3,201,31,201,87,235,8,220,145,155,60,85,42,212,147,189,178,112,83,124,45,147,33,165,174,117,38,138,126],[95,55,45,32,56,206,48,126,83,117,10,245,22,243,148,210,200,127,181,56,47,203,252,91,251,178,38,235,147,167,138,223],[150,185,73,149,55,193,178,193,185,83,240,95,30,203,198,1,44,45,145,94,11,6,204,157,134,255,42,177,10,14,130,233],[136,5,78,131,157,79,204,87,30,5,2,97,103,178,53,35,16,171,143,130,185,253,74,121,163,201,41,69,19,199,137,255],[156,66,134,83,211,7,232,203,225,224,77,79,97,245,66,209,253,234,48,133,204,165,6,179,160,227,136,21,152,91,233,62],[9,239,216,254,143,216,164,59,31,37,57,98,150,2,215,80,190,96,217,50,137,90,8,222,146,123,244,253,13,142,127,148],[177,58,160,2,11,169,198,153,176,210,143,154,107,63,175,126,182,89,41,245,31,58,193,235,121,60,39,245,213,6,113,118],[150,97,180,112,216,102,59,251,19,214,167,191,18,166,11,184,204,94,206,149,42,60,253,193,154,178,229,143,172,43,23,155],[128,42,151,245,134,89,76,86,44,184,234,85,28,9,75,170,36,242,5,99,248,168,109,217,42,243,24,229,30,16,174,218],[123,9,177,154,54,173,18,134,6,185,237,121,238,166,60,4,80,180,244,56,154,38,127,151,6,136,19,97,146,16,247,184],[14,104,110,127,115,121,45,183,179,207,179,61,223,184,34,218,148,230,140,48,92,2,216,121,202,192,204,214,92,108,218,101],[1,137,114,213,126,225,60,215,11,183,233,79,156,77,19,242,26,174,62,220,43,173,2,231,14,104,181,1,123,8,171,178],[42,76,112,47,92,214,186,234,141,185,124,208,46,209,66,6,97,231,70,195,100,246,3,89,218,229,102,198,35,146,144,149],[146,120,199,79,187,8,5,192,0,29,50,191,91,86,152,15,100,14,115,97,207,251,229,13,129,78,198,174,116,231,91,112],[159,117,67,157,16,128,95,254,5,212,242,28,8,61,127,33,22,172,4,246,95,9,35,158,163,84,172,196,18,137,23,13],[158,96,218,61,120,79,131,124,40,0,231,130,202,52,169,95,217,118,135,132,177,244,145,19,175,200,138,12,146,30,51,54],[135,151,39,161,122,29,82,31,62,49,126,20,78,200,51,1,167,223,111,245,84,232,35,69,53,102,180,98,14,57,51,141]]",
                "sol": "[stringToBytes32(\"56,203,141,96,108,45,172,27,150,153,163,59,173,101,159,77,225,241,119,248,208,142,183,147,160,104,54,208,91,139,96,221\"),stringToBytes32(\"196,100,2,97,35,2,141,33,220,242,120,75,142,32,165,26,176,192,159,57,128,201,112,44,134,78,74,28,162,39,184,19\"),stringToBytes32(\"12,140,118,77,224,180,58,90,183,80,230,199,99,62,106,52,122,78,56,153,230,222,124,86,224,133,122,182,59,196,167,59\"),stringToBytes32(\"180,1,86,188,242,86,60,60,128,225,142,178,199,210,110,128,245,144,33,188,126,249,227,107,221,190,2,12,111,137,236,194\"),stringToBytes32(\"249,132,57,91,144,245,179,128,131,191,207,35,86,160,122,54,239,246,13,62,245,116,42,2,17,28,180,194,22,45,112,206\"),stringToBytes32(\"165,246,40,103,244,247,175,180,2,6,167,149,110,247,130,166,74,167,112,41,109,35,157,24,232,108,239,152,136,28,250,112\"),stringToBytes32(\"125,209,113,210,197,149,33,130,180,159,84,127,179,198,166,101,93,201,182,33,126,177,57,9,126,215,235,207,230,90,109,44\"),stringToBytes32(\"171,253,173,247,35,111,170,142,228,2,242,179,173,199,205,178,188,245,90,103,206,153,113,184,162,190,126,239,247,84,3,20\"),stringToBytes32(\"39,115,108,158,76,24,43,24,174,121,74,158,220,152,30,140,242,80,149,92,128,202,248,236,154,64,66,134,7,160,182,217\"),stringToBytes32(\"95,88,22,154,5,107,236,177,203,207,181,219,60,85,123,130,146,39,76,253,172,114,91,72,118,154,154,41,109,48,107,14\"),stringToBytes32(\"55,98,107,137,67,37,70,104,190,251,118,96,42,248,202,180,63,73,119,34,147,135,178,95,123,232,230,241,169,205,254,166\"),stringToBytes32(\"85,75,55,0,47,90,49,95,167,178,230,81,218,80,42,244,64,70,72,77,46,251,20,226,103,223,254,72,47,213,174,15\"),stringToBytes32(\"53,201,21,29,228,102,202,175,38,114,177,147,150,212,173,57,72,64,52,69,98,143,135,146,124,225,255,41,33,201,15,8\"),stringToBytes32(\"21,114,210,132,169,39,237,19,141,126,238,251,226,73,94,85,61,12,53,192,204,216,255,234,128,155,51,228,81,177,184,143\"),stringToBytes32(\"199,2,97,69,254,158,157,44,153,76,0,192,134,190,50,61,19,197,170,147,205,8,191,252,65,99,229,87,29,30,14,80\"),stringToBytes32(\"122,213,209,14,167,113,195,11,95,89,120,33,75,233,92,233,162,128,208,167,29,48,99,212,93,151,87,228,65,38,94,222\"),stringToBytes32(\"134,71,161,14,180,209,252,165,111,148,85,219,151,222,13,129,165,205,6,83,90,137,53,67,46,61,139,15,73,239,26,26\"),stringToBytes32(\"133,237,149,110,1,39,213,180,125,96,247,201,27,163,88,63,53,182,83,209,193,144,203,16,216,208,2,230,103,89,168,194\"),stringToBytes32(\"207,14,2,61,111,22,83,79,42,129,162,176,47,183,203,0,192,76,173,24,150,72,114,243,98,100,227,48,16,91,249,115\"),stringToBytes32(\"60,171,110,89,194,89,176,231,52,36,129,192,178,146,56,5,235,221,17,76,2,244,127,106,170,107,198,48,170,50,142,11\"),stringToBytes32(\"155,149,25,250,122,65,233,76,17,204,241,52,67,137,52,197,72,167,148,50,228,2,223,114,239,20,194,118,230,17,140,215\"),stringToBytes32(\"125,5,182,44,113,1,84,28,111,208,6,143,233,87,184,124,73,20,71,232,117,237,227,220,156,218,125,234,93,162,199,74\"),stringToBytes32(\"125,173,53,117,172,181,127,53,235,254,102,133,19,160,153,232,228,172,170,191,81,158,177,185,155,28,211,110,110,170,213,64\"),stringToBytes32(\"218,184,125,18,170,10,228,195,72,0,31,149,236,146,206,132,174,57,64,7,107,32,131,222,86,38,104,43,234,124,45,97\"),stringToBytes32(\"89,172,231,115,227,64,89,188,84,225,45,144,184,157,10,162,43,26,92,58,129,72,216,226,52,212,165,92,27,178,89,181\"),stringToBytes32(\"244,147,201,92,83,90,75,82,174,101,217,96,154,136,45,4,189,255,113,97,132,149,178,106,64,78,37,223,243,93,126,233\"),stringToBytes32(\"127,12,187,104,89,20,164,38,16,64,188,44,25,4,192,248,229,131,253,77,2,160,139,167,32,47,100,223,153,222,194,117\"),stringToBytes32(\"176,172,24,230,174,166,32,214,112,4,224,250,234,139,236,252,207,239,164,101,43,24,250,138,228,178,94,146,98,250,255,89\"),stringToBytes32(\"84,239,145,106,11,249,196,220,220,223,15,246,59,103,211,120,8,152,133,110,68,127,94,203,66,109,155,229,105,116,89,233\"),stringToBytes32(\"63,69,252,120,108,103,200,85,223,38,183,177,67,21,29,218,78,59,230,202,209,130,143,131,91,24,117,116,170,59,225,22\"),stringToBytes32(\"147,170,88,240,206,136,9,209,227,174,186,141,125,110,8,61,219,112,215,49,39,75,89,84,191,53,48,217,172,155,51,35\"),stringToBytes32(\"132,173,139,35,165,6,37,243,182,168,116,169,228,14,140,193,93,186,62,237,139,0,27,85,201,246,130,38,9,18,37,29\"),stringToBytes32(\"249,215,161,125,90,106,56,7,252,12,108,237,88,236,162,172,3,157,43,8,38,33,79,90,145,186,9,161,108,255,236,85\"),stringToBytes32(\"52,193,8,114,109,189,56,47,161,65,245,114,26,248,169,199,103,244,129,89,75,65,166,156,4,128,188,216,252,36,145,79\"),stringToBytes32(\"225,19,173,69,174,69,94,162,6,80,11,228,244,26,11,165,17,248,30,143,122,56,224,148,244,221,5,38,75,28,155,199\"),stringToBytes32(\"163,228,175,174,195,39,221,159,224,134,236,56,7,214,75,139,144,173,14,147,240,233,90,182,86,211,122,171,13,136,146,82\"),stringToBytes32(\"7,142,174,250,80,122,141,0,139,26,187,176,205,46,13,77,195,216,106,184,170,222,141,136,168,104,23,227,63,59,231,63\"),stringToBytes32(\"239,192,153,193,143,55,126,132,185,112,140,131,143,93,40,225,194,106,234,46,179,17,0,240,247,97,76,148,86,222,253,88\"),stringToBytes32(\"39,242,115,148,91,180,247,212,138,93,19,14,53,105,229,151,205,188,208,5,239,126,149,66,252,129,19,116,251,126,57,207\"),stringToBytes32(\"190,76,179,234,143,93,126,153,210,3,45,176,202,93,221,23,87,175,174,48,57,95,0,255,63,137,100,137,69,231,153,74\"),stringToBytes32(\"80,63,253,227,59,204,162,31,232,182,12,168,39,102,76,116,96,12,222,133,52,161,217,167,95,159,102,107,96,67,238,125\"),stringToBytes32(\"198,82,182,206,126,105,92,188,99,6,28,6,234,173,11,187,71,53,51,212,52,133,190,80,124,29,5,230,139,69,15,107\"),stringToBytes32(\"154,234,228,130,246,29,119,248,35,84,30,49,121,49,72,96,90,23,49,83,12,182,175,204,7,214,138,58,173,102,130,57\"),stringToBytes32(\"26,89,65,142,55,127,96,249,118,20,97,7,5,95,68,191,192,237,214,164,203,221,64,146,97,25,58,222,130,117,178,224\"),stringToBytes32(\"237,209,19,189,188,93,3,4,121,66,68,209,49,181,160,32,44,105,30,135,3,97,166,23,194,26,68,147,14,42,244,152\"),stringToBytes32(\"223,245,112,239,161,73,228,157,109,197,163,221,150,60,12,85,83,145,208,15,122,178,186,113,84,150,61,133,234,24,34,199\"),stringToBytes32(\"110,119,223,46,245,63,89,64,90,176,216,245,218,73,160,227,98,136,51,92,225,130,6,23,28,134,251,156,88,75,105,33\"),stringToBytes32(\"42,178,95,206,186,76,144,5,200,119,92,125,54,96,176,115,201,152,78,170,223,3,71,33,199,219,155,237,71,147,62,253\"),stringToBytes32(\"5,20,132,90,97,65,207,193,129,91,4,134,146,141,218,2,157,110,203,241,213,18,106,45,30,246,141,220,33,219,14,195\"),stringToBytes32(\"39,214,61,212,185,20,213,159,253,209,149,43,71,139,119,1,178,167,213,184,146,109,32,143,92,247,215,38,37,130,34,191\"),stringToBytes32(\"79,58,47,132,228,220,149,121,98,232,208,87,162,92,234,196,81,184,35,89,44,70,122,96,15,147,151,82,206,173,149,87\"),stringToBytes32(\"67,29,125,56,129,241,6,245,201,80,153,138,77,89,180,106,84,89,227,194,19,169,187,93,78,103,140,247,195,236,36,64\"),stringToBytes32(\"19,44,132,231,211,2,150,84,72,250,130,109,3,181,227,10,170,138,207,163,197,95,68,65,159,154,156,54,182,144,49,247\"),stringToBytes32(\"186,9,36,88,192,171,32,29,41,55,117,114,49,33,0,162,228,239,204,127,69,148,231,45,177,27,132,248,209,231,240,243\"),stringToBytes32(\"203,131,2,243,48,48,149,237,86,3,36,85,237,78,5,78,69,227,218,244,77,217,114,117,228,22,167,33,148,87,63,202\"),stringToBytes32(\"162,181,112,100,197,60,115,219,15,204,104,36,126,193,201,173,178,58,96,209,152,194,236,10,196,89,68,75,243,19,183,216\"),stringToBytes32(\"156,98,126,194,106,16,112,255,181,68,240,13,232,241,215,108,210,233,44,90,28,42,103,139,142,169,181,234,10,151,119,230\"),stringToBytes32(\"150,170,249,204,233,214,76,239,66,130,56,183,218,125,226,36,5,236,157,3,158,16,201,223,212,220,157,48,60,245,202,169\"),stringToBytes32(\"16,50,242,42,149,74,252,38,72,141,55,24,20,37,140,176,102,54,35,89,36,70,50,70,198,144,105,51,65,114,51,245\"),stringToBytes32(\"124,64,68,36,141,159,116,220,119,94,94,207,232,148,67,185,252,84,178,91,59,128,108,102,153,128,31,47,186,62,177,165\"),stringToBytes32(\"220,36,120,142,231,13,103,41,130,83,240,99,15,169,37,138,26,201,129,211,100,231,42,29,147,234,22,172,102,180,176,206\"),stringToBytes32(\"239,126,167,130,106,11,23,127,0,157,155,180,153,212,195,17,162,255,250,123,151,171,12,12,173,119,120,28,62,142,102,53\"),stringToBytes32(\"26,66,26,33,97,192,218,129,182,101,233,55,217,228,124,201,65,15,197,85,217,75,171,179,205,121,103,82,146,163,26,197\"),stringToBytes32(\"154,148,39,74,209,47,205,20,224,144,241,127,35,91,35,247,57,27,251,10,158,188,57,117,153,175,136,89,239,133,225,234\"),stringToBytes32(\"90,211,4,203,101,41,6,28,58,125,172,131,175,46,194,0,179,223,40,158,39,210,213,248,115,29,70,113,111,241,226,174\"),stringToBytes32(\"105,170,66,111,168,213,31,67,58,58,100,39,133,250,108,193,99,182,33,161,223,92,38,9,102,169,68,217,51,27,160,51\"),stringToBytes32(\"177,250,234,54,176,170,26,84,13,218,18,155,168,3,173,69,111,134,140,174,25,244,106,4,48,20,108,167,128,165,128,61\"),stringToBytes32(\"94,149,116,155,86,89,17,229,137,197,112,53,95,189,129,140,190,119,91,65,229,116,35,109,191,165,243,124,41,250,171,229\"),stringToBytes32(\"115,168,225,236,183,178,85,79,91,20,109,101,27,112,173,179,244,127,240,146,48,16,146,55,107,63,120,166,22,109,53,44\"),stringToBytes32(\"95,115,64,184,72,203,221,19,231,42,158,152,83,233,129,67,183,197,17,255,63,169,234,172,164,2,87,82,191,202,11,186\"),stringToBytes32(\"58,9,115,194,58,102,199,8,138,88,54,88,4,216,39,204,239,47,251,206,114,152,200,174,138,214,195,244,200,50,56,36\"),stringToBytes32(\"237,204,156,194,254,229,189,33,130,122,255,58,252,83,3,231,77,29,175,229,213,99,154,119,206,49,110,175,247,28,130,28\"),stringToBytes32(\"194,236,253,78,122,192,179,211,46,184,108,65,165,84,36,212,52,19,10,87,22,93,144,204,19,152,240,160,4,62,81,87\"),stringToBytes32(\"243,12,111,91,30,18,69,69,23,59,75,63,166,224,61,129,228,175,203,0,158,253,38,65,85,122,21,152,9,14,239,18\"),stringToBytes32(\"60,32,184,66,119,219,81,245,80,221,187,226,127,93,64,229,139,168,81,162,179,72,14,117,178,15,24,105,56,61,225,13\"),stringToBytes32(\"147,21,197,192,68,4,10,211,1,4,15,174,43,22,64,121,118,224,228,145,140,69,218,155,198,119,173,182,74,102,44,200\"),stringToBytes32(\"145,219,84,11,130,64,127,83,89,247,131,111,2,48,1,54,197,125,106,248,74,14,134,171,167,52,70,115,178,192,183,20\"),stringToBytes32(\"166,102,110,73,80,248,54,200,23,97,57,96,15,198,242,90,51,15,197,8,245,195,141,154,205,195,135,30,151,219,242,165\"),stringToBytes32(\"96,139,116,51,114,82,98,38,53,129,151,29,71,226,162,161,13,154,169,107,128,18,218,148,62,255,170,241,94,13,136,142\"),stringToBytes32(\"142,142,87,152,236,71,73,95,130,42,248,37,119,214,168,47,55,199,14,254,202,173,210,191,27,16,1,31,69,201,43,216\"),stringToBytes32(\"114,2,111,187,36,30,47,223,226,254,36,177,214,23,181,190,68,179,214,181,211,7,13,191,7,200,182,174,120,138,124,22\"),stringToBytes32(\"18,111,17,60,44,0,178,161,199,149,238,26,130,179,92,5,162,65,123,24,52,2,105,128,46,134,159,116,230,180,232,251\"),stringToBytes32(\"228,88,226,137,13,140,98,0,176,179,130,84,32,42,226,131,39,147,98,7,184,53,204,213,57,172,31,105,226,224,201,225\"),stringToBytes32(\"156,231,15,178,145,159,124,211,73,245,40,19,186,252,63,223,59,6,52,186,7,96,211,236,245,155,55,176,100,248,52,94\"),stringToBytes32(\"228,242,210,253,82,90,105,207,230,34,223,26,118,13,23,49,231,98,7,86,217,23,155,122,93,199,16,35,253,188,204,237\"),stringToBytes32(\"181,168,213,251,41,64,137,149,207,148,78,241,96,96,132,199,127,15,153,220,140,114,230,201,231,232,168,34,2,40,177,236\"),stringToBytes32(\"11,242,206,52,66,136,37,81,217,231,124,91,203,27,174,229,38,16,113,34,132,96,44,124,170,190,37,82,123,67,10,232\"),stringToBytes32(\"222,127,210,85,42,242,7,203,183,113,141,106,117,113,212,160,99,198,40,104,243,227,179,21,227,143,33,237,176,92,103,164\"),stringToBytes32(\"184,184,162,33,132,86,118,50,151,81,135,7,235,49,232,172,219,150,214,211,202,246,146,246,214,112,158,6,250,59,194,117\"),stringToBytes32(\"237,68,8,113,184,164,228,21,235,160,141,1,6,176,107,147,39,222,86,48,11,133,165,139,40,203,185,118,69,192,180,177\"),stringToBytes32(\"105,118,179,95,52,222,128,237,195,196,228,163,227,22,73,24,13,122,174,78,226,32,215,35,67,212,233,82,224,122,129,86\"),stringToBytes32(\"160,132,129,210,201,22,20,209,226,166,216,6,255,238,4,77,180,86,224,98,20,208,51,220,87,39,154,117,2,217,198,64\"),stringToBytes32(\"132,107,54,63,113,130,6,182,34,48,38,190,137,20,229,63,196,184,102,136,179,73,171,60,149,68,166,103,255,192,161,174\"),stringToBytes32(\"177,102,15,190,37,118,228,78,169,252,114,215,152,139,89,54,144,122,130,183,212,166,69,133,242,109,73,119,85,67,113,93\"),stringToBytes32(\"120,220,138,98,251,202,247,159,215,23,130,5,106,83,8,23,226,44,75,202,41,128,142,228,5,209,174,170,52,96,235,171\"),stringToBytes32(\"8,10,119,134,147,176,199,118,103,248,218,154,81,168,37,107,236,149,108,132,79,211,101,54,81,157,225,45,137,247,250,116\")]"
              },
              {
                "js": "[[162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35],[14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236],[187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132],[7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88],[60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112],[225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82],[37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47],[38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215],[7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59],[18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25],[96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242],[99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77],[40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114],[122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185],[97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150],[29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30],[87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23],[249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252],[200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181],[135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209],[195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207],[252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241],[178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213],[90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185],[245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229],[53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20],[226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25],[143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132],[140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106],[114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167],[185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253],[140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174],[77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206],[161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14],[241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81],[169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163],[252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8],[180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205],[138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251],[172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192],[222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36],[254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40],[18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65],[54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157],[169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24],[177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151],[207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193],[148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17],[53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154],[197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122],[66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116],[109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78],[43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85],[76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195],[156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163],[87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104],[61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17],[59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2],[194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63],[16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114],[255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71],[103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63],[245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38],[167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224],[99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43],[27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201],[182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11],[184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58],[104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143],[14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39],[46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84],[176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8],[20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187],[76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46],[55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66],[236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57],[137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16],[98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141],[1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196],[195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183],[174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40],[251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164],[113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154],[72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225],[227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245],[18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108],[187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134],[211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146],[205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94],[162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2],[206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250],[102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234],[237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147],[28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124],[72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216]]",
                "sol": "[bytes32(stringToBytes32(\"162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35\")),bytes32(stringToBytes32(\"14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236\")),bytes32(stringToBytes32(\"187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132\")),bytes32(stringToBytes32(\"7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88\")),bytes32(stringToBytes32(\"60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112\")),bytes32(stringToBytes32(\"225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82\")),bytes32(stringToBytes32(\"37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47\")),bytes32(stringToBytes32(\"38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215\")),bytes32(stringToBytes32(\"7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59\")),bytes32(stringToBytes32(\"18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25\")),bytes32(stringToBytes32(\"96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242\")),bytes32(stringToBytes32(\"99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77\")),bytes32(stringToBytes32(\"40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114\")),bytes32(stringToBytes32(\"122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185\")),bytes32(stringToBytes32(\"97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150\")),bytes32(stringToBytes32(\"29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30\")),bytes32(stringToBytes32(\"87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23\")),bytes32(stringToBytes32(\"249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252\")),bytes32(stringToBytes32(\"200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181\")),bytes32(stringToBytes32(\"135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209\")),bytes32(stringToBytes32(\"195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207\")),bytes32(stringToBytes32(\"252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241\")),bytes32(stringToBytes32(\"178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213\")),bytes32(stringToBytes32(\"90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185\")),bytes32(stringToBytes32(\"245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229\")),bytes32(stringToBytes32(\"53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20\")),bytes32(stringToBytes32(\"226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25\")),bytes32(stringToBytes32(\"143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132\")),bytes32(stringToBytes32(\"140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106\")),bytes32(stringToBytes32(\"114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167\")),bytes32(stringToBytes32(\"185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253\")),bytes32(stringToBytes32(\"140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174\")),bytes32(stringToBytes32(\"77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206\")),bytes32(stringToBytes32(\"161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14\")),bytes32(stringToBytes32(\"241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81\")),bytes32(stringToBytes32(\"169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163\")),bytes32(stringToBytes32(\"252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8\")),bytes32(stringToBytes32(\"180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205\")),bytes32(stringToBytes32(\"138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251\")),bytes32(stringToBytes32(\"172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192\")),bytes32(stringToBytes32(\"222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36\")),bytes32(stringToBytes32(\"254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40\")),bytes32(stringToBytes32(\"18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65\")),bytes32(stringToBytes32(\"54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157\")),bytes32(stringToBytes32(\"169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24\")),bytes32(stringToBytes32(\"177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151\")),bytes32(stringToBytes32(\"207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193\")),bytes32(stringToBytes32(\"148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17\")),bytes32(stringToBytes32(\"53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154\")),bytes32(stringToBytes32(\"197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122\")),bytes32(stringToBytes32(\"66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116\")),bytes32(stringToBytes32(\"109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78\")),bytes32(stringToBytes32(\"43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85\")),bytes32(stringToBytes32(\"76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195\")),bytes32(stringToBytes32(\"156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163\")),bytes32(stringToBytes32(\"87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104\")),bytes32(stringToBytes32(\"61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17\")),bytes32(stringToBytes32(\"59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2\")),bytes32(stringToBytes32(\"194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63\")),bytes32(stringToBytes32(\"16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114\")),bytes32(stringToBytes32(\"255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71\")),bytes32(stringToBytes32(\"103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63\")),bytes32(stringToBytes32(\"245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38\")),bytes32(stringToBytes32(\"167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224\")),bytes32(stringToBytes32(\"99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43\")),bytes32(stringToBytes32(\"27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201\")),bytes32(stringToBytes32(\"182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11\")),bytes32(stringToBytes32(\"184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58\")),bytes32(stringToBytes32(\"104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143\")),bytes32(stringToBytes32(\"14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39\")),bytes32(stringToBytes32(\"46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84\")),bytes32(stringToBytes32(\"176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8\")),bytes32(stringToBytes32(\"20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187\")),bytes32(stringToBytes32(\"76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46\")),bytes32(stringToBytes32(\"55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66\")),bytes32(stringToBytes32(\"236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57\")),bytes32(stringToBytes32(\"137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16\")),bytes32(stringToBytes32(\"98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141\")),bytes32(stringToBytes32(\"1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196\")),bytes32(stringToBytes32(\"195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183\")),bytes32(stringToBytes32(\"174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40\")),bytes32(stringToBytes32(\"251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164\")),bytes32(stringToBytes32(\"113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154\")),bytes32(stringToBytes32(\"72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225\")),bytes32(stringToBytes32(\"227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245\")),bytes32(stringToBytes32(\"18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108\")),bytes32(stringToBytes32(\"187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134\")),bytes32(stringToBytes32(\"211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146\")),bytes32(stringToBytes32(\"205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94\")),bytes32(stringToBytes32(\"162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2\")),bytes32(stringToBytes32(\"206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250\")),bytes32(stringToBytes32(\"102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234\")),bytes32(stringToBytes32(\"237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147\")),bytes32(stringToBytes32(\"28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124\")),bytes32(stringToBytes32(\"72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length != 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[[162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35],[14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236],[187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132],[7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88],[60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112],[225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82],[37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47],[38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215],[7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59],[18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25],[96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242],[99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77],[40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114],[122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185],[97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150],[29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30],[87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23],[249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252],[200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181],[135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209],[195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207],[252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241],[178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213],[90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185],[245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229],[53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20],[226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25],[143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132],[140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106],[114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167],[185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253],[140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174],[77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206],[161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14],[241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81],[169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163],[252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8],[180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205],[138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251],[172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192],[222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36],[254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40],[18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65],[54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157],[169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24],[177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151],[207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193],[148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17],[53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154],[197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122],[66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116],[109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78],[43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85],[76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195],[156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163],[87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104],[61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17],[59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2],[194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63],[16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114],[255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71],[103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63],[245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38],[167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224],[99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43],[27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201],[182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11],[184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58],[104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143],[14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39],[46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84],[176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8],[20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187],[76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46],[55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66],[236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57],[137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16],[98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141],[1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196],[195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183],[174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40],[251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164],[113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154],[72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225],[227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245],[18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108],[187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134],[211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146],[205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94],[162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2],[206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250],[102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234],[237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147],[28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124],[72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216]]",
                "sol": "[bytes32(stringToBytes32(\"162,139,29,213,165,246,87,208,235,117,149,186,230,34,75,139,198,249,165,1,147,247,30,49,78,211,40,194,29,126,28,35\")),bytes32(stringToBytes32(\"14,39,155,231,29,158,35,26,95,121,183,103,8,68,29,120,31,168,75,211,189,24,48,255,155,253,63,127,198,238,182,236\")),bytes32(stringToBytes32(\"187,58,13,52,77,4,19,137,68,33,220,68,170,153,141,142,250,232,212,98,181,8,80,188,3,113,139,205,136,246,51,132\")),bytes32(stringToBytes32(\"7,12,102,64,103,79,209,40,7,42,41,91,86,112,104,150,87,89,75,222,107,142,81,54,96,80,80,220,35,115,112,88\")),bytes32(stringToBytes32(\"60,217,44,253,197,213,47,14,128,206,75,236,42,233,86,219,32,107,181,119,143,89,153,252,163,69,48,39,176,183,113,112\")),bytes32(stringToBytes32(\"225,218,47,71,160,187,212,134,0,134,247,1,87,193,246,40,72,103,11,36,130,115,173,156,86,2,227,210,26,108,1,82\")),bytes32(stringToBytes32(\"37,225,145,149,126,78,22,163,37,182,155,3,41,4,255,204,26,173,69,40,240,248,6,113,10,76,84,250,114,126,121,47\")),bytes32(stringToBytes32(\"38,146,172,69,186,103,249,8,89,140,187,166,130,251,121,174,71,166,18,241,153,27,166,81,244,197,32,126,118,172,203,215\")),bytes32(stringToBytes32(\"7,49,247,135,90,246,19,24,153,73,21,189,242,232,177,204,252,183,16,127,150,2,10,38,246,115,147,110,165,249,95,59\")),bytes32(stringToBytes32(\"18,58,196,131,252,101,232,34,47,103,195,241,135,84,14,66,5,204,158,239,244,35,51,77,137,68,90,104,160,164,166,25\")),bytes32(stringToBytes32(\"96,241,212,91,94,71,15,203,92,153,5,225,107,70,144,15,38,14,193,112,232,25,94,139,14,225,22,116,52,2,130,242\")),bytes32(stringToBytes32(\"99,219,15,106,91,249,88,252,195,63,251,76,131,36,166,92,144,31,146,169,238,2,62,70,185,247,93,211,55,27,115,77\")),bytes32(stringToBytes32(\"40,59,134,111,25,151,192,117,33,185,120,163,139,12,150,219,101,1,240,81,29,14,101,76,158,61,16,188,177,109,184,114\")),bytes32(stringToBytes32(\"122,150,225,159,67,48,166,5,142,98,173,66,16,81,93,125,205,164,152,72,72,167,179,49,218,66,80,133,80,16,34,185\")),bytes32(stringToBytes32(\"97,185,61,155,18,226,115,201,181,84,81,162,207,161,186,181,63,187,168,169,97,20,64,2,205,175,140,237,101,163,18,150\")),bytes32(stringToBytes32(\"29,96,64,105,145,95,147,150,11,198,41,128,241,241,96,186,69,94,68,252,142,154,55,25,9,239,133,9,230,173,69,30\")),bytes32(stringToBytes32(\"87,88,66,247,147,107,29,58,175,61,253,175,21,34,204,231,136,13,101,102,173,235,176,148,50,52,252,141,58,125,162,23\")),bytes32(stringToBytes32(\"249,33,111,121,125,200,196,90,246,180,238,174,211,7,107,181,93,117,51,237,57,193,200,249,13,81,237,154,59,173,224,252\")),bytes32(stringToBytes32(\"200,99,178,184,208,88,29,22,21,143,91,239,39,50,242,196,31,184,250,45,183,220,186,64,210,233,102,124,195,243,188,181\")),bytes32(stringToBytes32(\"135,183,255,2,233,169,186,125,155,189,161,249,97,251,197,45,93,31,142,191,68,78,210,1,211,68,195,73,7,111,63,209\")),bytes32(stringToBytes32(\"195,140,181,248,62,50,54,48,48,158,158,252,31,143,149,131,102,144,58,138,240,109,230,188,255,126,74,126,65,119,227,207\")),bytes32(stringToBytes32(\"252,54,199,167,181,41,130,228,141,164,209,47,136,216,144,33,89,69,164,186,197,29,4,3,150,96,127,138,245,179,131,241\")),bytes32(stringToBytes32(\"178,12,210,174,95,160,37,99,174,187,40,168,252,47,110,98,233,4,92,133,160,6,219,239,86,72,143,66,94,89,98,213\")),bytes32(stringToBytes32(\"90,202,3,177,49,178,75,38,18,48,126,152,169,95,60,237,93,255,180,231,209,33,9,100,75,145,4,86,98,139,36,185\")),bytes32(stringToBytes32(\"245,51,196,138,153,230,159,190,15,209,189,204,230,178,183,225,41,156,193,189,43,222,52,154,199,92,14,171,154,161,7,229\")),bytes32(stringToBytes32(\"53,109,199,44,10,205,177,44,20,35,66,194,246,16,252,118,125,102,236,38,178,67,5,133,174,155,163,129,46,104,102,20\")),bytes32(stringToBytes32(\"226,94,96,10,47,63,19,18,86,70,176,15,132,231,34,99,30,39,22,94,85,2,189,13,65,78,152,203,147,245,207,25\")),bytes32(stringToBytes32(\"143,101,163,183,166,211,246,98,230,70,222,83,43,196,219,230,226,28,44,178,154,1,210,23,99,40,131,83,205,152,125,132\")),bytes32(stringToBytes32(\"140,46,146,136,162,214,188,67,255,207,212,229,55,57,11,124,119,45,205,143,102,13,148,89,173,194,231,150,50,122,216,106\")),bytes32(stringToBytes32(\"114,202,149,110,24,230,213,170,90,157,238,190,90,187,28,105,176,205,165,144,157,227,119,154,141,114,216,185,249,87,39,167\")),bytes32(stringToBytes32(\"185,81,53,52,36,167,126,79,103,122,33,168,62,247,115,211,154,1,136,5,50,219,108,227,241,7,25,67,147,111,181,253\")),bytes32(stringToBytes32(\"140,5,21,46,80,242,207,172,243,46,139,218,50,36,43,19,246,197,88,129,137,82,204,178,218,250,72,130,180,75,139,174\")),bytes32(stringToBytes32(\"77,58,128,175,137,6,119,183,123,16,138,124,183,147,189,127,82,245,9,173,161,49,136,222,19,214,119,171,132,27,238,206\")),bytes32(stringToBytes32(\"161,162,143,132,49,8,229,174,84,228,207,92,166,247,132,170,111,224,34,116,81,153,26,218,242,121,214,165,241,235,65,14\")),bytes32(stringToBytes32(\"241,250,32,193,12,170,61,222,230,11,95,125,198,130,189,228,106,2,15,211,251,154,180,164,105,191,39,53,145,66,35,81\")),bytes32(stringToBytes32(\"169,37,169,6,84,165,224,54,191,96,134,211,130,102,207,246,163,235,122,44,119,172,41,151,101,254,68,230,63,34,95,163\")),bytes32(stringToBytes32(\"252,224,54,247,39,252,179,137,223,48,147,214,240,117,68,137,57,227,197,83,219,134,51,47,177,126,226,102,34,141,186,8\")),bytes32(stringToBytes32(\"180,14,70,50,106,192,76,118,177,209,108,126,144,219,153,212,126,177,122,21,196,240,140,90,13,185,17,24,115,33,144,205\")),bytes32(stringToBytes32(\"138,57,241,209,85,215,36,29,38,56,175,102,186,96,189,61,143,160,32,92,232,50,99,195,58,28,163,69,71,58,21,251\")),bytes32(stringToBytes32(\"172,180,153,92,117,40,4,204,219,255,215,67,164,23,125,244,93,198,123,206,123,56,226,230,90,70,80,122,214,116,241,192\")),bytes32(stringToBytes32(\"222,135,88,195,90,242,81,209,199,55,199,83,115,101,65,200,132,84,152,88,244,72,209,147,178,184,71,41,186,43,224,36\")),bytes32(stringToBytes32(\"254,248,148,116,77,99,138,200,173,223,226,182,146,250,84,199,180,180,173,168,247,122,185,158,223,202,41,136,207,226,199,40\")),bytes32(stringToBytes32(\"18,127,18,216,214,173,68,132,11,225,115,146,201,189,183,253,78,244,56,155,220,1,173,124,68,249,202,160,110,113,108,65\")),bytes32(stringToBytes32(\"54,179,202,137,123,189,29,226,80,212,175,5,127,147,169,138,203,210,155,31,28,211,33,171,49,65,51,9,148,81,113,157\")),bytes32(stringToBytes32(\"169,208,60,186,221,55,218,9,14,0,241,58,101,100,94,228,208,25,121,129,245,174,177,182,98,23,0,77,164,74,118,24\")),bytes32(stringToBytes32(\"177,113,152,184,252,111,74,213,175,13,80,190,203,3,89,27,173,216,125,77,221,147,202,202,158,23,19,181,55,81,147,151\")),bytes32(stringToBytes32(\"207,246,215,71,90,184,17,196,152,62,146,44,61,9,182,199,76,27,21,100,201,149,105,164,127,195,1,29,18,55,104,193\")),bytes32(stringToBytes32(\"148,104,172,125,49,62,234,191,12,81,195,32,120,197,84,77,131,49,135,17,162,152,94,161,78,165,236,39,95,104,61,17\")),bytes32(stringToBytes32(\"53,18,192,149,181,193,18,108,212,232,27,92,23,26,229,100,9,31,186,69,102,134,82,30,243,140,30,121,228,151,21,154\")),bytes32(stringToBytes32(\"197,56,143,7,98,221,217,143,239,192,176,145,222,86,14,210,50,113,193,255,18,37,48,247,171,128,33,171,52,59,36,122\")),bytes32(stringToBytes32(\"66,57,22,152,118,93,197,11,180,43,31,83,194,23,23,104,231,194,194,91,99,212,251,151,50,175,163,37,14,197,101,116\")),bytes32(stringToBytes32(\"109,239,222,93,221,153,19,53,175,174,190,180,222,149,132,66,45,90,184,60,171,250,57,65,92,144,9,168,198,239,237,78\")),bytes32(stringToBytes32(\"43,133,156,90,82,129,217,199,194,176,136,161,154,194,58,189,77,94,191,210,183,242,98,206,46,160,156,231,253,251,238,85\")),bytes32(stringToBytes32(\"76,39,206,186,232,165,250,240,133,220,120,136,89,0,1,20,30,5,10,212,176,38,171,29,171,42,53,230,149,178,247,195\")),bytes32(stringToBytes32(\"156,22,84,227,107,112,146,2,84,138,106,162,177,154,176,236,22,209,0,29,232,144,66,187,122,206,201,210,62,208,56,163\")),bytes32(stringToBytes32(\"87,236,24,121,166,193,114,90,146,75,38,229,213,191,37,55,131,210,139,229,207,12,40,200,247,118,48,205,203,177,47,104\")),bytes32(stringToBytes32(\"61,228,93,34,72,169,6,16,252,54,225,92,16,189,70,208,2,212,132,51,197,110,128,194,165,100,215,255,30,253,166,17\")),bytes32(stringToBytes32(\"59,206,101,78,78,40,250,44,79,191,99,135,50,86,230,53,111,134,27,22,219,25,233,150,181,133,74,186,109,158,196,2\")),bytes32(stringToBytes32(\"194,127,184,1,225,18,185,22,238,58,5,138,132,184,172,161,118,21,60,168,207,118,79,221,202,17,139,55,19,180,171,63\")),bytes32(stringToBytes32(\"16,231,196,173,68,167,51,187,194,72,36,254,241,173,77,13,231,151,30,155,198,44,227,230,72,243,27,6,146,249,122,114\")),bytes32(stringToBytes32(\"255,41,181,203,174,247,4,29,4,22,199,3,238,211,52,81,50,52,96,95,153,229,63,197,141,171,89,51,35,157,126,71\")),bytes32(stringToBytes32(\"103,56,16,226,172,31,215,218,130,178,147,140,135,74,95,164,190,231,131,2,18,151,97,234,168,156,87,4,98,174,65,63\")),bytes32(stringToBytes32(\"245,124,215,24,96,2,157,180,13,191,251,251,228,108,163,86,208,204,87,7,44,26,204,84,98,68,210,16,160,191,113,38\")),bytes32(stringToBytes32(\"167,126,163,191,109,230,188,30,57,208,94,221,159,58,12,111,149,63,124,11,234,78,129,119,117,144,163,230,241,148,167,224\")),bytes32(stringToBytes32(\"99,188,199,92,237,176,28,228,122,222,183,172,95,92,104,229,62,185,181,132,239,215,209,165,214,176,114,14,199,59,183,43\")),bytes32(stringToBytes32(\"27,248,186,58,66,103,26,145,9,123,19,163,188,19,200,108,160,90,68,211,238,14,44,173,38,233,31,185,88,98,145,201\")),bytes32(stringToBytes32(\"182,102,64,147,173,212,222,114,163,220,255,0,188,0,19,44,106,227,8,105,113,217,255,181,9,177,234,134,151,165,117,11\")),bytes32(stringToBytes32(\"184,157,149,172,255,28,186,164,105,5,98,112,38,155,183,43,203,202,132,143,94,165,2,200,52,173,20,189,218,26,218,58\")),bytes32(stringToBytes32(\"104,59,254,33,123,216,130,30,143,172,5,120,94,70,222,188,15,162,235,224,113,101,152,130,194,83,209,125,175,250,126,143\")),bytes32(stringToBytes32(\"14,171,219,215,197,188,94,232,187,213,219,151,99,11,179,98,11,0,59,11,105,203,1,60,213,79,161,184,18,16,101,39\")),bytes32(stringToBytes32(\"46,137,35,13,85,68,33,33,86,249,232,141,62,115,169,107,117,130,59,74,13,4,10,166,5,215,147,57,83,37,23,84\")),bytes32(stringToBytes32(\"176,44,99,8,246,94,39,249,19,22,212,49,221,137,3,13,48,154,110,211,3,173,107,218,24,27,165,19,43,163,106,8\")),bytes32(stringToBytes32(\"20,45,251,89,101,0,151,247,93,75,41,237,141,25,28,83,136,224,101,71,51,235,43,140,228,119,159,9,19,221,116,187\")),bytes32(stringToBytes32(\"76,167,231,214,9,231,86,179,142,234,199,35,153,16,159,215,35,79,87,12,26,45,94,149,35,206,10,60,172,11,57,46\")),bytes32(stringToBytes32(\"55,54,168,216,0,1,188,70,198,78,235,172,121,133,23,169,7,112,14,123,164,59,67,164,216,183,58,201,242,230,65,66\")),bytes32(stringToBytes32(\"236,237,140,40,191,12,12,230,219,102,157,129,174,84,18,174,210,246,39,72,68,37,110,139,247,215,57,53,171,203,173,57\")),bytes32(stringToBytes32(\"137,184,244,87,11,129,157,88,242,229,1,41,119,91,123,169,96,87,131,3,80,100,191,163,202,169,1,131,240,222,197,16\")),bytes32(stringToBytes32(\"98,145,130,169,146,229,85,47,123,19,181,62,174,7,209,29,39,37,70,106,158,202,19,76,157,144,65,253,250,248,213,141\")),bytes32(stringToBytes32(\"1,34,175,237,220,237,31,184,181,81,70,66,16,43,40,134,62,172,21,74,10,88,54,169,45,165,239,221,165,165,48,196\")),bytes32(stringToBytes32(\"195,25,169,57,64,249,71,174,76,197,19,128,127,57,250,3,19,162,47,25,86,9,157,209,53,198,84,133,124,240,150,183\")),bytes32(stringToBytes32(\"174,77,155,238,240,222,195,207,116,177,31,78,179,181,240,4,110,136,55,115,215,173,219,83,63,224,107,64,53,227,51,40\")),bytes32(stringToBytes32(\"251,98,30,184,44,82,206,103,9,190,88,21,53,159,61,4,254,99,82,204,112,94,178,111,210,157,210,46,143,243,86,164\")),bytes32(stringToBytes32(\"113,106,200,135,248,10,99,243,42,156,72,250,250,185,253,100,209,15,184,166,20,133,180,141,100,242,149,65,52,97,244,154\")),bytes32(stringToBytes32(\"72,162,6,248,96,183,3,23,53,137,163,163,151,130,43,214,124,102,29,1,62,116,61,48,104,21,193,192,2,127,21,225\")),bytes32(stringToBytes32(\"227,220,117,126,100,25,223,243,207,122,30,169,176,40,89,91,231,18,211,153,74,134,152,79,193,95,146,142,245,35,50,245\")),bytes32(stringToBytes32(\"18,104,191,25,66,78,217,135,154,31,47,224,34,207,63,76,18,14,41,63,162,34,2,62,178,200,172,62,32,89,217,108\")),bytes32(stringToBytes32(\"187,244,1,10,112,134,86,142,45,210,113,229,54,106,75,16,124,240,39,165,172,229,68,126,165,18,64,104,93,198,69,134\")),bytes32(stringToBytes32(\"211,204,181,153,227,221,10,95,228,114,183,213,45,229,76,106,138,36,134,51,145,136,118,62,156,152,31,163,43,150,225,146\")),bytes32(stringToBytes32(\"205,99,3,186,72,5,50,202,143,16,146,245,20,30,138,24,129,232,109,84,117,61,184,230,250,104,16,78,158,50,60,94\")),bytes32(stringToBytes32(\"162,21,24,25,8,174,69,26,243,64,21,117,213,14,153,232,193,246,91,187,1,5,152,71,125,203,225,250,61,21,129,2\")),bytes32(stringToBytes32(\"206,214,8,123,29,30,218,90,246,73,142,158,208,192,159,245,60,200,79,0,126,85,4,7,242,239,2,181,133,103,173,250\")),bytes32(stringToBytes32(\"102,235,132,64,39,96,78,11,55,77,106,203,243,140,159,20,39,103,88,39,77,72,116,53,102,200,194,164,194,175,108,234\")),bytes32(stringToBytes32(\"237,62,253,128,253,51,171,175,146,10,112,97,66,227,176,131,7,54,138,105,167,150,228,14,181,152,99,70,39,178,126,147\")),bytes32(stringToBytes32(\"28,152,186,254,120,54,126,160,130,188,137,216,104,169,188,188,201,45,61,145,66,160,5,29,35,121,243,155,57,90,126,124\")),bytes32(stringToBytes32(\"72,230,34,117,53,149,215,0,207,81,55,232,10,155,151,28,247,37,3,20,127,211,191,33,5,0,10,202,241,89,111,216\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.239ZOnChainVoting.finalizeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finalizeVote(string) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,submissionsCount==votesCount",
          "parameters": [
            {
              "js": "\"PayableExample\"",
              "sol": "\"PayableExample\""
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finalizeVote(string) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "\"PayableExample\"",
                "sol": "\"PayableExample\""
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.243ZPartialRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[],uint256[]) WHEN msg.sender==_owner,_holders.length==_numberOfTokens.length,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[7],accounts[7],accounts[9],accounts[1],accounts[4],accounts[0],accounts[3],accounts[4],accounts[8],accounts[1],accounts[6],accounts[5],accounts[2],accounts[8],accounts[9],accounts[8],accounts[4],accounts[1],accounts[5],accounts[2],accounts[8],accounts[2],accounts[4],accounts[4],accounts[3],accounts[4],accounts[3],accounts[5],accounts[0],accounts[6],accounts[6],accounts[2],accounts[3],accounts[8],accounts[2],accounts[3],accounts[0],accounts[5],accounts[2],accounts[8],accounts[7],accounts[0],accounts[4],accounts[6],accounts[5],accounts[3],accounts[0],accounts[2],accounts[2],accounts[6],accounts[1],accounts[2],accounts[1],accounts[2],accounts[5],accounts[0],accounts[2],accounts[3],accounts[1],accounts[4],accounts[7],accounts[5],accounts[5],accounts[7],accounts[2],accounts[2],accounts[6],accounts[6],accounts[2],accounts[5],accounts[3],accounts[6],accounts[4],accounts[2],accounts[5],accounts[3],accounts[3],accounts[0],accounts[5],accounts[0],accounts[9],accounts[6],accounts[9],accounts[9],accounts[3],accounts[0],accounts[5],accounts[1],accounts[6],accounts[7],accounts[9],accounts[9],accounts[4],accounts[6],accounts[1],accounts[2],accounts[3]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[27,10000,2,2,29,29,254,2014223715,9999,66,64,9999,2,3,10000,5,27,27,2014223714,257,26,65,10001,254,28,5,65,5,10000,255,1532892062,2014223715,28,3,1336,29,6,1532892063,1532892063,0,1336,66,3,65,66,257,4,1336,254,96,27,26,2014223715,66,2014223716,1337,257,254,1337,64,26,28,5,28,65,29,1338,5,5,1337,2014223714,1337,28,1532892063,257,2014223715,29,255,5,2014223715,2014223714,29,1532892063,10001,9999,29,3,2,29,4,97,256,65,1532892062,3,96,2]",
              "sol": "[uint256(27),uint256(10000),uint256(2),uint256(2),uint256(29),uint256(29),uint256(254),uint256(2014223715),uint256(9999),uint256(66),uint256(64),uint256(9999),uint256(2),uint256(3),uint256(10000),uint256(5),uint256(27),uint256(27),uint256(2014223714),uint256(257),uint256(26),uint256(65),uint256(10001),uint256(254),uint256(28),uint256(5),uint256(65),uint256(5),uint256(10000),uint256(255),uint256(1532892062),uint256(2014223715),uint256(28),uint256(3),uint256(1336),uint256(29),uint256(6),uint256(1532892063),uint256(1532892063),uint256(0),uint256(1336),uint256(66),uint256(3),uint256(65),uint256(66),uint256(257),uint256(4),uint256(1336),uint256(254),uint256(96),uint256(27),uint256(26),uint256(2014223715),uint256(66),uint256(2014223716),uint256(1337),uint256(257),uint256(254),uint256(1337),uint256(64),uint256(26),uint256(28),uint256(5),uint256(28),uint256(65),uint256(29),uint256(1338),uint256(5),uint256(5),uint256(1337),uint256(2014223714),uint256(1337),uint256(28),uint256(1532892063),uint256(257),uint256(2014223715),uint256(29),uint256(255),uint256(5),uint256(2014223715),uint256(2014223714),uint256(29),uint256(1532892063),uint256(10001),uint256(9999),uint256(29),uint256(3),uint256(2),uint256(29),uint256(4),uint256(97),uint256(256),uint256(65),uint256(1532892062),uint256(3),uint256(96),uint256(2)]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[7],accounts[7],accounts[9],accounts[1],accounts[4],accounts[0],accounts[3],accounts[4],accounts[8],accounts[1],accounts[6],accounts[5],accounts[2],accounts[8],accounts[9],accounts[8],accounts[4],accounts[1],accounts[5],accounts[2],accounts[8],accounts[2],accounts[4],accounts[4],accounts[3],accounts[4],accounts[3],accounts[5],accounts[0],accounts[6],accounts[6],accounts[2],accounts[3],accounts[8],accounts[2],accounts[3],accounts[0],accounts[5],accounts[2],accounts[8],accounts[7],accounts[0],accounts[4],accounts[6],accounts[5],accounts[3],accounts[0],accounts[2],accounts[2],accounts[6],accounts[1],accounts[2],accounts[1],accounts[2],accounts[5],accounts[0],accounts[2],accounts[3],accounts[1],accounts[4],accounts[7],accounts[5],accounts[5],accounts[7],accounts[2],accounts[2],accounts[6],accounts[6],accounts[2],accounts[5],accounts[3],accounts[6],accounts[4],accounts[2],accounts[5],accounts[3],accounts[3],accounts[0],accounts[5],accounts[0],accounts[9],accounts[6],accounts[9],accounts[9],accounts[3],accounts[0],accounts[5],accounts[1],accounts[6],accounts[7],accounts[9],accounts[9],accounts[4],accounts[6],accounts[1],accounts[2],accounts[3]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[27,10000,2,2,29,29,254,2014223715,9999,66,64,9999,2,3,10000,5,27,27,2014223714,257,26,65,10001,254,28,5,65,5,10000,255,1532892062,2014223715,28,3,1336,29,6,1532892063,1532892063,0,1336,66,3,65,66,257,4,1336,254,96,27,26,2014223715,66,2014223716,1337,257,254,1337,64,26,28,5,28,65,29,1338,5,5,1337,2014223714,1337,28,1532892063,257,2014223715,29,255,5,2014223715,2014223714,29,1532892063,10001,9999,29,3,2,29,4,97,256,65,1532892062,3,96,2]",
                "sol": "[uint256(27),uint256(10000),uint256(2),uint256(2),uint256(29),uint256(29),uint256(254),uint256(2014223715),uint256(9999),uint256(66),uint256(64),uint256(9999),uint256(2),uint256(3),uint256(10000),uint256(5),uint256(27),uint256(27),uint256(2014223714),uint256(257),uint256(26),uint256(65),uint256(10001),uint256(254),uint256(28),uint256(5),uint256(65),uint256(5),uint256(10000),uint256(255),uint256(1532892062),uint256(2014223715),uint256(28),uint256(3),uint256(1336),uint256(29),uint256(6),uint256(1532892063),uint256(1532892063),uint256(0),uint256(1336),uint256(66),uint256(3),uint256(65),uint256(66),uint256(257),uint256(4),uint256(1336),uint256(254),uint256(96),uint256(27),uint256(26),uint256(2014223715),uint256(66),uint256(2014223716),uint256(1337),uint256(257),uint256(254),uint256(1337),uint256(64),uint256(26),uint256(28),uint256(5),uint256(28),uint256(65),uint256(29),uint256(1338),uint256(5),uint256(5),uint256(1337),uint256(2014223714),uint256(1337),uint256(28),uint256(1532892063),uint256(257),uint256(2014223715),uint256(29),uint256(255),uint256(5),uint256(2014223715),uint256(2014223714),uint256(29),uint256(1532892063),uint256(10001),uint256(9999),uint256(29),uint256(3),uint256(2),uint256(29),uint256(4),uint256(97),uint256(256),uint256(65),uint256(1532892062),uint256(3),uint256(96),uint256(2)]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length == _numberOfTokens.length",
            "parameters": [
              {
                "js": "[accounts[9],accounts[9],accounts[7],accounts[6],accounts[0],accounts[9],accounts[0],accounts[3],accounts[9],accounts[6],accounts[0],accounts[8],accounts[6],accounts[9],accounts[7],accounts[4],accounts[0],accounts[1],accounts[8],accounts[8],accounts[0],accounts[2],accounts[9],accounts[8],accounts[2],accounts[1],accounts[1],accounts[7],accounts[9],accounts[8],accounts[5],accounts[2],accounts[0],accounts[7],accounts[1],accounts[0],accounts[2],accounts[2],accounts[0],accounts[2],accounts[2],accounts[2],accounts[5],accounts[3],accounts[6],accounts[8],accounts[2],accounts[1],accounts[0],accounts[1],accounts[9],accounts[7],accounts[2],accounts[8],accounts[8],accounts[7],accounts[6],accounts[9],accounts[8],accounts[5],accounts[2],accounts[4],accounts[5],accounts[5],accounts[4],accounts[6],accounts[6],accounts[3],accounts[2],accounts[1],accounts[2],accounts[5],accounts[7],accounts[7],accounts[0],accounts[3],accounts[3],accounts[5],accounts[0],accounts[4],accounts[1],accounts[2],accounts[7],accounts[2],accounts[8],accounts[5],accounts[2],accounts[4],accounts[2],accounts[5],accounts[5],accounts[6],accounts[4],accounts[6],accounts[4],accounts[8],accounts[4],accounts[0]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[27,10000,2,2,29,29,254,2014223715,9999,66,64,9999,2,3,10000,5,27,27,2014223714,257,26,65,10001,254,28,5,65,5,10000,255,1532892062,2014223715,28,3,1336,29,6,1532892063,1532892063,0,1336,66,3,65,66,257,4,1336,254,96,27,26,2014223715,66,2014223716,1337,257,254,1337,64,26,28,5,28,65,29,1338,5,5,1337,2014223714,1337,28,1532892063,257,2014223715,29,255,5,2014223715,2014223714,29,1532892063,10001,9999,29,3,2,29,4,97,256,65,1532892062,3,96,2]",
                "sol": "[uint256(27),uint256(10000),uint256(2),uint256(2),uint256(29),uint256(29),uint256(254),uint256(2014223715),uint256(9999),uint256(66),uint256(64),uint256(9999),uint256(2),uint256(3),uint256(10000),uint256(5),uint256(27),uint256(27),uint256(2014223714),uint256(257),uint256(26),uint256(65),uint256(10001),uint256(254),uint256(28),uint256(5),uint256(65),uint256(5),uint256(10000),uint256(255),uint256(1532892062),uint256(2014223715),uint256(28),uint256(3),uint256(1336),uint256(29),uint256(6),uint256(1532892063),uint256(1532892063),uint256(0),uint256(1336),uint256(66),uint256(3),uint256(65),uint256(66),uint256(257),uint256(4),uint256(1336),uint256(254),uint256(96),uint256(27),uint256(26),uint256(2014223715),uint256(66),uint256(2014223716),uint256(1337),uint256(257),uint256(254),uint256(1337),uint256(64),uint256(26),uint256(28),uint256(5),uint256(28),uint256(65),uint256(29),uint256(1338),uint256(5),uint256(5),uint256(1337),uint256(2014223714),uint256(1337),uint256(28),uint256(1532892063),uint256(257),uint256(2014223715),uint256(29),uint256(255),uint256(5),uint256(2014223715),uint256(2014223714),uint256(29),uint256(1532892063),uint256(10001),uint256(9999),uint256(29),uint256(3),uint256(2),uint256(29),uint256(4),uint256(97),uint256(256),uint256(65),uint256(1532892062),uint256(3),uint256(96),uint256(2)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[27,10000,2,2,29,29,254,2014223715,9999,66,64,9999,2,3,10000,5,27,27,2014223714,257,26,65,10001,254,28,5,65,5,10000,255,1532892062,2014223715,28,3,1336,29,6,1532892063,1532892063,0,1336,66,3,65,66,257,4,1336,254,96,27,26,2014223715,66,2014223716,1337,257,254,1337,64,26,28,5,28,65,29,1338,5,5,1337,2014223714,1337,28,1532892063,257,2014223715,29,255,5,2014223715,2014223714,29,1532892063,10001,9999,29,3,2,29,4,97,256,65,1532892062,3,96,2]",
                "sol": "[uint256(27),uint256(10000),uint256(2),uint256(2),uint256(29),uint256(29),uint256(254),uint256(2014223715),uint256(9999),uint256(66),uint256(64),uint256(9999),uint256(2),uint256(3),uint256(10000),uint256(5),uint256(27),uint256(27),uint256(2014223714),uint256(257),uint256(26),uint256(65),uint256(10001),uint256(254),uint256(28),uint256(5),uint256(65),uint256(5),uint256(10000),uint256(255),uint256(1532892062),uint256(2014223715),uint256(28),uint256(3),uint256(1336),uint256(29),uint256(6),uint256(1532892063),uint256(1532892063),uint256(0),uint256(1336),uint256(66),uint256(3),uint256(65),uint256(66),uint256(257),uint256(4),uint256(1336),uint256(254),uint256(96),uint256(27),uint256(26),uint256(2014223715),uint256(66),uint256(2014223716),uint256(1337),uint256(257),uint256(254),uint256(1337),uint256(64),uint256(26),uint256(28),uint256(5),uint256(28),uint256(65),uint256(29),uint256(1338),uint256(5),uint256(5),uint256(1337),uint256(2014223714),uint256(1337),uint256(28),uint256(1532892063),uint256(257),uint256(2014223715),uint256(29),uint256(255),uint256(5),uint256(2014223715),uint256(2014223714),uint256(29),uint256(1532892063),uint256(10001),uint256(9999),uint256(29),uint256(3),uint256(2),uint256(29),uint256(4),uint256(97),uint256(256),uint256(65),uint256(1532892062),uint256(3),uint256(96),uint256(2)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.249ZFullRedemption.setup": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setup() WHEN isSetUp!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.251ZFullRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[]) WHEN msg.sender==_owner,isSetUp==true,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[0],accounts[9],accounts[9],accounts[8],accounts[8],accounts[9],accounts[3],accounts[7],accounts[9],accounts[3],accounts[7],accounts[0],accounts[0],accounts[7],accounts[4],accounts[8],accounts[7],accounts[6],accounts[1],accounts[9],accounts[1],accounts[0],accounts[5],accounts[8],accounts[1],accounts[4],accounts[1],accounts[4],accounts[9]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[0],accounts[9],accounts[9],accounts[8],accounts[8],accounts[9],accounts[3],accounts[7],accounts[9],accounts[3],accounts[7],accounts[0],accounts[0],accounts[7],accounts[4],accounts[8],accounts[7],accounts[6],accounts[1],accounts[9],accounts[1],accounts[0],accounts[5],accounts[8],accounts[1],accounts[4],accounts[1],accounts[4],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: isSetUp == true",
            "parameters": [
              {
                "js": "[accounts[0],accounts[9],accounts[9],accounts[8],accounts[8],accounts[9],accounts[3],accounts[7],accounts[9],accounts[3],accounts[7],accounts[0],accounts[0],accounts[7],accounts[4],accounts[8],accounts[7],accounts[6],accounts[1],accounts[9],accounts[1],accounts[0],accounts[5],accounts[8],accounts[1],accounts[4],accounts[1],accounts[4],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.253ZFixedPriceTender.paymentTokensReady": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute paymentTokensReady() WHEN paymentReady!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.254ZFixedPriceTender.updateOfferEndTime": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateOfferEndTime(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newOfferEnd>=block.timestamp",
          "parameters": [
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+354",
              "sol": "block.timestamp+354"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+354",
                "sol": "block.timestamp+354"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: _newOfferEnd >= (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1",
                "sol": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.259ZFixedPriceTender.updatePaymentPerSecurity": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updatePaymentPerSecurity(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newPaymentPerSecurity>0",
          "parameters": [
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: _newPaymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.264ZFixedPriceTender.updateTotalToRepurchase": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateTotalToRepurchase(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newTotalToRepurchase>=0",
          "parameters": [
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "257",
                "sol": "257"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: _newTotalToRepurchase >= 0",
            "parameters": [
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.267ZFixedPriceTender.optInToTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optInToTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,paymentReady==true,_numberToTender>0",
          "parameters": [
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: paymentReady == true",
            "parameters": [
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: _numberToTender > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.274ZFixedPriceTender.optOutOfTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optOutOfTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_numberToRemove>0",
          "parameters": [
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optOutOfTender(uint256) when NOT comply with: _numberToRemove > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.277ZFixedPriceTender.finaliseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finaliseTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=offerEndTime,nextTenderToAssess<orderedHolders.length,_batchSize>0",
          "parameters": [
            {
              "js": "257",
              "sol": "257"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finaliseTender(uint256) when NOT comply with: _batchSize > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.279ZProxyFixedPriceTender.testrepurchaseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrepurchaseTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.280ZProxyFixedPriceTender.testreturnTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testreturnTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.281ZOnChainPayments.makePayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute makePayments(address[],uint256) WHEN msg.sender==_owner,_securityHolders.length>0,_paymentPerSecurity>0",
          "parameters": [
            {
              "js": "[accounts[1]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[1]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "[accounts[1]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.282ZOnChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,uint256,uint256) WHEN _timestamp!=0,_securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _timestamp != 0",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "0",
                "sol": "0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "5",
                "sol": "5"
              },
              {
                "js": "0",
                "sol": "0"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T19:13:36.283ZOnChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T19:13:36.283ZOnChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "171-187",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "1337",
              "sol": "1337"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "66",
                "sol": "66"
              },
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "174-187",
          "restrictions": [
            "_newValue > currentValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue>currentValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "10000",
              "sol": "10000"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "2": {
        "branch": {
          "loc": "182-187",
          "restrictions": [
            "_newValue <= currentValue",
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue<=currentValue,currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "256",
              "sol": "256"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
}