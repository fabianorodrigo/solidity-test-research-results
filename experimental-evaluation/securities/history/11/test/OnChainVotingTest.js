const truffleAssert = require('truffle-assertions');
const PaymentTokenMock = artifacts.require("PaymentTokenMock");
const RedeemableTokenMock = artifacts.require("RedeemableTokenMock");
const OffChainPayments = artifacts.require("OffChainPayments");
const OnChainPayments = artifacts.require("OnChainPayments");
const FixedPriceTender = artifacts.require("FixedPriceTender");
const FullRedemption = artifacts.require("FullRedemption");
const PartialRedemption = artifacts.require("PartialRedemption");
const RedeemableToken = artifacts.require("RedeemableToken");
const OnChainVoting = artifacts.require("OnChainVoting");
const ECDSA = artifacts.require("openzeppelin-solidity/contracts/cryptography/ECDSA.sol");
const Math = artifacts.require("openzeppelin-solidity/contracts/math/Math.sol");
const SafeMath = artifacts.require("openzeppelin-solidity/contracts/math/SafeMath.sol");
const ERC20 = artifacts.require("openzeppelin-solidity/contracts/token/ERC20/ERC20.sol");

contract("OnChainVoting",(accounts)=>{
  let trace = false;
  let contractSafeMath = null;
  let contractMath = null;
  let contractECDSA = null;
  let contractERC20 = null;
  let contractRedeemableToken = null;
  let contractPaymentTokenMock = null;
  let contractRedeemableTokenMock = null;
  let contractOffChainPayments = null;
  let contractPartialRedemption = null;
  let contractOnChainPayments = null;
  let contractFixedPriceTender = null;
  let contractFullRedemption = null;
  let contractOnChainVoting = null;
  beforeEach(async () => {
    contractSafeMath = await SafeMath.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: SafeMath.new({from: accounts[0]}');
    contractMath = await Math.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: Math.new({from: accounts[0]}');
    contractECDSA = await ECDSA.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: ECDSA.new({from: accounts[0]}');
    ERC20.link("SafeMath",contractSafeMath.address);
    contractERC20 = await ERC20.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: ERC20.new({from: accounts[0]}');
    RedeemableToken.link("SafeMath",contractSafeMath.address);
    contractRedeemableToken = await RedeemableToken.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: RedeemableToken.new({from: accounts[0]}');
    contractPaymentTokenMock = await PaymentTokenMock.new(accounts[6],10001,{from:accounts[0]});
    if(trace) console.log('SUCESSO: PaymentTokenMock.new(accounts[6],10001,{from:accounts[0]}');
    contractRedeemableTokenMock = await RedeemableTokenMock.new(accounts[5],29,{from:accounts[0]});
    if(trace) console.log('SUCESSO: RedeemableTokenMock.new(accounts[5],29,{from:accounts[0]}');
    OffChainPayments.link("SafeMath",contractSafeMath.address);
     OffChainPayments.link("ECDSA",contractECDSA.address);
    contractOffChainPayments = await OffChainPayments.new(accounts[4],{from:accounts[9]});
    if(trace) console.log('SUCESSO: OffChainPayments.new(accounts[4],{from:accounts[9]}');
    PartialRedemption.link("SafeMath",contractSafeMath.address);
    contractPartialRedemption = await PartialRedemption.new(contractPaymentTokenMock.address,contractRedeemableTokenMock.address,accounts[3],2014223716,{from:accounts[0]});
    if(trace) console.log('SUCESSO: PartialRedemption.new(contractPaymentTokenMock.address,contractRedeemableTokenMock.address,accounts[3],2014223716,{from:accounts[0]}');
    OnChainPayments.link("SafeMath",contractSafeMath.address);
     OnChainPayments.link("ECDSA",contractECDSA.address);
    contractOnChainPayments = await OnChainPayments.new(contractRedeemableToken.address,contractRedeemableToken.address,accounts[8],{from:accounts[4]});
    if(trace) console.log('SUCESSO: OnChainPayments.new(contractRedeemableToken.address,contractRedeemableToken.address,accounts[8],{from:accounts[4]}');
    FixedPriceTender.link("Math",contractMath.address);
     FixedPriceTender.link("SafeMath",contractSafeMath.address);
    contractFixedPriceTender = await FixedPriceTender.new(2014223715,contractPaymentTokenMock.address,contractPaymentTokenMock.address,accounts[9],256,1336,{from:accounts[7]});
    if(trace) console.log('SUCESSO: FixedPriceTender.new(2014223715,contractPaymentTokenMock.address,contractPaymentTokenMock.address,accounts[9],256,1336,{from:accounts[7]}');
    FullRedemption.link("SafeMath",contractSafeMath.address);
    contractFullRedemption = await FullRedemption.new(contractPaymentTokenMock.address,contractRedeemableToken.address,accounts[4],1532892064,{from:accounts[0]});
    if(trace) console.log('SUCESSO: FullRedemption.new(contractPaymentTokenMock.address,contractRedeemableToken.address,accounts[4],1532892064,{from:accounts[0]}');
    OnChainVoting.link("SafeMath",contractSafeMath.address);
    contractOnChainVoting = await OnChainVoting.new(contractRedeemableTokenMock.address,accounts[9],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+690,{from:accounts[1]});
    if(trace) console.log('SUCESSO: OnChainVoting.new(contractRedeemableTokenMock.address,accounts[9],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+690,{from:accounts[1]}');
  });
  
  it('Should execute placeVote(string) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<endTime', async () => {
    let result = await contractOnChainVoting.placeVote("Example",{from: accounts[0]});
  });
  it('Should execute submitUserVotes(bytes32[],bytes32[]) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,_usersSaltHash.length==_usersVote.length,_usersSaltHash.length!=0', async () => {
    let localOnChainVoting = await OnChainVoting.new(contractRedeemableToken.address,accounts[8],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+379,{from:accounts[1]});
    let result = await localOnChainVoting.submitUserVotes([[190,93,186,156,42,81,120,81,122,18,223,138,185,105,141,28,176,239,68,44,208,240,89,124,142,136,13,14,159,125,81,45],[129,105,184,9,93,116,114,124,211,238,96,238,10,119,199,34,64,194,19,41,110,210,210,183,83,48,114,124,248,64,240,184],[41,47,25,102,160,11,6,70,214,54,26,142,192,123,228,163,9,118,240,226,225,64,255,217,50,210,80,111,195,225,253,11],[5,217,23,42,216,251,142,63,186,37,25,126,13,80,9,49,66,122,107,63,64,49,168,115,245,49,215,9,11,108,13,41],[13,0,38,92,245,33,68,38,178,206,150,62,92,135,126,199,177,208,124,129,207,216,155,209,29,136,85,197,68,135,238,169],[168,154,143,174,46,73,213,242,128,44,146,117,44,80,161,152,170,225,125,27,71,205,214,15,186,3,17,76,6,106,104,23],[201,14,38,76,182,93,217,225,67,45,69,119,70,213,183,20,13,160,155,184,248,44,112,131,211,97,11,78,134,52,90,170],[243,125,180,205,82,165,9,86,144,210,241,168,89,174,87,201,64,215,168,249,109,196,48,100,80,237,91,177,103,35,4,216],[6,215,99,14,108,148,249,253,113,133,237,143,90,73,70,165,11,34,34,159,16,217,149,249,68,23,68,242,29,233,136,59],[248,106,1,234,188,130,169,246,152,115,127,38,99,85,44,37,217,86,141,52,221,42,206,255,132,183,180,89,0,76,96,112],[97,106,170,119,221,203,152,191,69,71,189,66,195,58,50,20,250,112,246,1,170,41,76,227,190,15,236,230,16,9,245,236],[168,61,70,203,39,136,37,81,62,129,200,141,124,19,251,18,235,59,35,36,127,164,145,20,6,123,95,255,193,137,139,231],[52,143,142,62,144,250,229,253,227,32,234,175,55,2,66,201,228,238,63,209,14,208,39,158,191,181,37,240,184,29,230,132],[174,208,21,143,213,189,65,212,164,118,152,246,204,249,76,51,159,143,61,111,171,211,11,163,118,0,149,246,7,80,168,246],[94,251,109,217,172,142,131,188,151,144,19,128,55,160,101,218,227,213,248,74,221,84,49,128,174,248,100,139,36,82,246,135],[27,102,207,179,216,179,22,73,71,215,128,93,209,231,118,251,14,6,4,69,38,214,172,82,21,46,210,0,151,169,103,63],[49,161,113,136,54,42,31,224,10,27,63,213,125,52,48,2,197,24,220,209,128,20,76,118,129,254,244,236,9,124,159,129],[206,56,37,102,207,9,76,30,17,243,19,92,174,126,18,62,255,104,91,218,151,138,117,122,95,210,234,67,146,56,177,47],[195,184,179,83,122,128,248,70,181,120,50,70,168,16,221,19,56,4,123,181,107,61,169,113,50,72,141,217,24,182,62,31],[171,178,99,134,142,118,101,0,63,50,95,39,82,90,67,218,163,174,167,170,39,206,2,39,100,218,46,56,28,235,4,97],[250,61,245,58,76,79,84,176,94,215,179,249,241,236,98,39,210,233,102,129,198,80,200,10,112,169,179,15,136,100,207,56],[181,118,34,249,174,142,212,253,219,98,237,118,183,237,64,244,72,203,50,30,165,57,227,118,122,181,24,43,204,178,44,239],[105,219,175,168,216,223,116,211,174,199,10,233,131,31,172,202,68,200,44,32,210,96,54,55,252,92,37,37,185,36,30,141],[47,112,83,43,233,163,83,217,168,104,201,162,24,230,167,243,26,25,196,99,208,4,200,93,207,179,98,247,125,204,133,27],[244,159,177,78,12,211,181,13,21,158,120,86,88,131,134,236,30,154,3,84,157,182,25,153,42,162,23,138,8,245,247,90],[219,185,229,145,202,39,232,226,88,203,61,52,242,114,159,136,174,117,160,33,215,230,42,225,157,127,143,1,58,109,213,181]], [[59,144,167,216,78,103,69,173,27,44,163,204,96,226,69,127,238,157,242,172,132,236,135,114,12,74,49,142,130,69,229,211],[34,63,104,247,118,253,18,114,56,119,81,110,27,159,114,214,116,247,226,16,127,119,15,118,92,126,153,191,157,108,238,97],[40,86,128,108,199,206,88,46,148,120,116,111,244,254,72,220,75,221,23,39,252,8,180,168,30,29,181,232,32,115,90,138],[178,3,53,18,46,112,222,23,99,42,112,245,251,242,97,228,53,65,79,65,188,201,200,123,237,247,69,169,69,130,145,86],[145,49,125,32,61,138,28,160,18,80,12,30,101,237,57,25,229,220,221,59,160,73,78,20,92,251,51,234,76,113,46,1],[183,46,248,81,40,245,170,36,129,46,36,144,168,145,159,2,11,158,194,39,54,157,4,50,173,196,103,94,41,151,236,190],[240,215,200,103,171,194,63,121,33,196,6,19,41,25,119,210,70,172,134,81,104,99,20,39,0,246,12,195,115,93,181,16],[63,102,50,70,205,11,198,253,193,161,180,251,68,22,237,148,85,136,70,35,217,121,164,163,222,52,62,179,20,144,138,60],[169,83,139,94,11,10,29,20,69,3,103,7,174,156,110,238,180,176,253,22,82,218,117,147,44,86,116,50,172,250,240,167],[221,15,198,241,168,219,53,196,92,255,175,144,189,102,208,139,190,35,220,228,162,82,173,236,107,47,71,119,165,130,56,196],[175,232,164,94,159,57,131,96,24,7,83,228,24,15,172,65,8,204,234,83,83,124,244,199,195,235,233,231,217,66,232,230],[174,232,62,116,161,71,183,40,163,253,98,103,128,100,39,77,107,156,253,161,214,101,131,95,166,142,54,78,46,210,70,5],[126,131,16,91,209,67,198,219,210,138,170,163,23,193,125,184,39,22,111,214,1,198,106,94,255,43,132,12,155,8,98,90],[198,213,225,6,175,233,253,246,183,82,51,22,149,80,243,125,114,153,51,170,55,33,119,235,175,209,169,108,34,249,198,114],[141,18,44,40,54,124,12,53,96,67,19,1,88,58,130,11,1,222,14,252,120,24,161,172,80,182,142,195,26,7,34,228],[198,146,249,135,194,156,233,192,210,134,15,104,19,98,35,186,192,209,182,178,9,115,3,183,42,65,209,16,17,17,85,102],[56,53,47,163,203,39,205,242,142,214,207,44,116,148,97,142,105,134,68,47,10,165,132,129,105,12,226,28,200,17,183,22],[221,56,178,82,23,49,4,129,40,121,89,249,197,94,35,234,211,48,72,43,66,31,170,173,233,241,14,229,223,137,108,204],[221,147,174,62,153,181,110,91,183,89,147,149,236,60,193,238,221,54,99,224,229,126,225,130,120,220,223,73,36,72,246,238],[214,190,228,82,200,58,174,151,133,129,70,17,164,44,173,51,25,70,132,90,105,33,199,44,142,51,235,170,37,241,220,58],[132,132,3,160,145,102,230,188,138,110,194,43,84,202,225,223,160,12,199,157,185,33,162,95,45,172,74,255,9,221,117,3],[204,164,35,117,36,195,127,84,254,235,123,82,11,141,101,236,251,107,136,83,196,89,206,22,86,213,222,242,103,78,10,244],[62,73,176,39,135,180,63,157,3,134,212,50,148,193,218,147,29,46,167,33,54,242,182,8,70,255,102,41,30,121,87,179],[194,155,59,229,226,33,205,9,13,144,194,46,208,84,236,250,34,124,229,213,27,152,136,91,194,77,36,17,233,222,84,15],[204,172,176,175,112,115,225,128,155,237,249,206,67,2,100,138,231,84,107,252,196,231,70,77,24,34,241,142,212,123,31,12],[189,66,221,201,154,104,225,118,23,30,195,149,94,145,198,255,18,200,24,233,17,170,137,238,148,21,210,39,144,19,171,148]],{from: accounts[1]});
  });
  it('Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: msg.sender == _owner', async () => {
    let localOnChainVoting = await OnChainVoting.new(contractRedeemableToken.address,accounts[8],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+379,{from:accounts[1]});
    let result = await truffleAssert.fails(localOnChainVoting.submitUserVotes([[190,93,186,156,42,81,120,81,122,18,223,138,185,105,141,28,176,239,68,44,208,240,89,124,142,136,13,14,159,125,81,45],[129,105,184,9,93,116,114,124,211,238,96,238,10,119,199,34,64,194,19,41,110,210,210,183,83,48,114,124,248,64,240,184],[41,47,25,102,160,11,6,70,214,54,26,142,192,123,228,163,9,118,240,226,225,64,255,217,50,210,80,111,195,225,253,11],[5,217,23,42,216,251,142,63,186,37,25,126,13,80,9,49,66,122,107,63,64,49,168,115,245,49,215,9,11,108,13,41],[13,0,38,92,245,33,68,38,178,206,150,62,92,135,126,199,177,208,124,129,207,216,155,209,29,136,85,197,68,135,238,169],[168,154,143,174,46,73,213,242,128,44,146,117,44,80,161,152,170,225,125,27,71,205,214,15,186,3,17,76,6,106,104,23],[201,14,38,76,182,93,217,225,67,45,69,119,70,213,183,20,13,160,155,184,248,44,112,131,211,97,11,78,134,52,90,170],[243,125,180,205,82,165,9,86,144,210,241,168,89,174,87,201,64,215,168,249,109,196,48,100,80,237,91,177,103,35,4,216],[6,215,99,14,108,148,249,253,113,133,237,143,90,73,70,165,11,34,34,159,16,217,149,249,68,23,68,242,29,233,136,59],[248,106,1,234,188,130,169,246,152,115,127,38,99,85,44,37,217,86,141,52,221,42,206,255,132,183,180,89,0,76,96,112],[97,106,170,119,221,203,152,191,69,71,189,66,195,58,50,20,250,112,246,1,170,41,76,227,190,15,236,230,16,9,245,236],[168,61,70,203,39,136,37,81,62,129,200,141,124,19,251,18,235,59,35,36,127,164,145,20,6,123,95,255,193,137,139,231],[52,143,142,62,144,250,229,253,227,32,234,175,55,2,66,201,228,238,63,209,14,208,39,158,191,181,37,240,184,29,230,132],[174,208,21,143,213,189,65,212,164,118,152,246,204,249,76,51,159,143,61,111,171,211,11,163,118,0,149,246,7,80,168,246],[94,251,109,217,172,142,131,188,151,144,19,128,55,160,101,218,227,213,248,74,221,84,49,128,174,248,100,139,36,82,246,135],[27,102,207,179,216,179,22,73,71,215,128,93,209,231,118,251,14,6,4,69,38,214,172,82,21,46,210,0,151,169,103,63],[49,161,113,136,54,42,31,224,10,27,63,213,125,52,48,2,197,24,220,209,128,20,76,118,129,254,244,236,9,124,159,129],[206,56,37,102,207,9,76,30,17,243,19,92,174,126,18,62,255,104,91,218,151,138,117,122,95,210,234,67,146,56,177,47],[195,184,179,83,122,128,248,70,181,120,50,70,168,16,221,19,56,4,123,181,107,61,169,113,50,72,141,217,24,182,62,31],[171,178,99,134,142,118,101,0,63,50,95,39,82,90,67,218,163,174,167,170,39,206,2,39,100,218,46,56,28,235,4,97],[250,61,245,58,76,79,84,176,94,215,179,249,241,236,98,39,210,233,102,129,198,80,200,10,112,169,179,15,136,100,207,56],[181,118,34,249,174,142,212,253,219,98,237,118,183,237,64,244,72,203,50,30,165,57,227,118,122,181,24,43,204,178,44,239],[105,219,175,168,216,223,116,211,174,199,10,233,131,31,172,202,68,200,44,32,210,96,54,55,252,92,37,37,185,36,30,141],[47,112,83,43,233,163,83,217,168,104,201,162,24,230,167,243,26,25,196,99,208,4,200,93,207,179,98,247,125,204,133,27],[244,159,177,78,12,211,181,13,21,158,120,86,88,131,134,236,30,154,3,84,157,182,25,153,42,162,23,138,8,245,247,90],[219,185,229,145,202,39,232,226,88,203,61,52,242,114,159,136,174,117,160,33,215,230,42,225,157,127,143,1,58,109,213,181]], [[59,144,167,216,78,103,69,173,27,44,163,204,96,226,69,127,238,157,242,172,132,236,135,114,12,74,49,142,130,69,229,211],[34,63,104,247,118,253,18,114,56,119,81,110,27,159,114,214,116,247,226,16,127,119,15,118,92,126,153,191,157,108,238,97],[40,86,128,108,199,206,88,46,148,120,116,111,244,254,72,220,75,221,23,39,252,8,180,168,30,29,181,232,32,115,90,138],[178,3,53,18,46,112,222,23,99,42,112,245,251,242,97,228,53,65,79,65,188,201,200,123,237,247,69,169,69,130,145,86],[145,49,125,32,61,138,28,160,18,80,12,30,101,237,57,25,229,220,221,59,160,73,78,20,92,251,51,234,76,113,46,1],[183,46,248,81,40,245,170,36,129,46,36,144,168,145,159,2,11,158,194,39,54,157,4,50,173,196,103,94,41,151,236,190],[240,215,200,103,171,194,63,121,33,196,6,19,41,25,119,210,70,172,134,81,104,99,20,39,0,246,12,195,115,93,181,16],[63,102,50,70,205,11,198,253,193,161,180,251,68,22,237,148,85,136,70,35,217,121,164,163,222,52,62,179,20,144,138,60],[169,83,139,94,11,10,29,20,69,3,103,7,174,156,110,238,180,176,253,22,82,218,117,147,44,86,116,50,172,250,240,167],[221,15,198,241,168,219,53,196,92,255,175,144,189,102,208,139,190,35,220,228,162,82,173,236,107,47,71,119,165,130,56,196],[175,232,164,94,159,57,131,96,24,7,83,228,24,15,172,65,8,204,234,83,83,124,244,199,195,235,233,231,217,66,232,230],[174,232,62,116,161,71,183,40,163,253,98,103,128,100,39,77,107,156,253,161,214,101,131,95,166,142,54,78,46,210,70,5],[126,131,16,91,209,67,198,219,210,138,170,163,23,193,125,184,39,22,111,214,1,198,106,94,255,43,132,12,155,8,98,90],[198,213,225,6,175,233,253,246,183,82,51,22,149,80,243,125,114,153,51,170,55,33,119,235,175,209,169,108,34,249,198,114],[141,18,44,40,54,124,12,53,96,67,19,1,88,58,130,11,1,222,14,252,120,24,161,172,80,182,142,195,26,7,34,228],[198,146,249,135,194,156,233,192,210,134,15,104,19,98,35,186,192,209,182,178,9,115,3,183,42,65,209,16,17,17,85,102],[56,53,47,163,203,39,205,242,142,214,207,44,116,148,97,142,105,134,68,47,10,165,132,129,105,12,226,28,200,17,183,22],[221,56,178,82,23,49,4,129,40,121,89,249,197,94,35,234,211,48,72,43,66,31,170,173,233,241,14,229,223,137,108,204],[221,147,174,62,153,181,110,91,183,89,147,149,236,60,193,238,221,54,99,224,229,126,225,130,120,220,223,73,36,72,246,238],[214,190,228,82,200,58,174,151,133,129,70,17,164,44,173,51,25,70,132,90,105,33,199,44,142,51,235,170,37,241,220,58],[132,132,3,160,145,102,230,188,138,110,194,43,84,202,225,223,160,12,199,157,185,33,162,95,45,172,74,255,9,221,117,3],[204,164,35,117,36,195,127,84,254,235,123,82,11,141,101,236,251,107,136,83,196,89,206,22,86,213,222,242,103,78,10,244],[62,73,176,39,135,180,63,157,3,134,212,50,148,193,218,147,29,46,167,33,54,242,182,8,70,255,102,41,30,121,87,179],[194,155,59,229,226,33,205,9,13,144,194,46,208,84,236,250,34,124,229,213,27,152,136,91,194,77,36,17,233,222,84,15],[204,172,176,175,112,115,225,128,155,237,249,206,67,2,100,138,231,84,107,252,196,231,70,77,24,34,241,142,212,123,31,12],[189,66,221,201,154,104,225,118,23,30,195,149,94,145,198,255,18,200,24,233,17,170,137,238,148,21,210,39,144,19,171,148]],{from: accounts[9]}),'revert');
  });
  it('Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length == _usersVote.length', async () => {
    let localOnChainVoting = await OnChainVoting.new(contractRedeemableToken.address,accounts[8],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+379,{from:accounts[1]});
    let result = await truffleAssert.fails(localOnChainVoting.submitUserVotes([[156,217,165,109,44,82,78,92,91,252,214,121,11,20,221,136,227,212,141,190,173,189,126,175,20,17,111,140,0,102,114,206],[13,246,44,222,222,235,97,200,82,99,180,91,177,124,122,204,11,159,222,90,151,5,111,24,150,31,72,7,201,188,79,122],[96,158,203,182,195,112,6,246,50,153,219,214,125,249,31,49,133,95,16,73,93,145,226,202,155,55,182,143,255,25,18,26],[250,191,223,24,22,149,225,12,8,128,45,27,132,139,210,175,135,122,144,145,112,141,72,130,157,29,207,35,178,93,64,114],[25,244,50,192,248,152,175,107,159,117,236,165,13,169,70,101,172,0,47,52,78,7,238,219,80,116,96,75,68,94,41,228],[242,51,136,131,196,202,101,39,116,196,100,63,242,13,120,194,101,224,112,201,25,126,52,56,56,190,45,219,211,215,166,161],[148,58,227,222,47,245,43,192,0,67,86,222,52,132,23,238,109,211,17,106,255,192,8,125,126,82,244,6,133,197,86,18],[72,148,159,88,81,224,82,8,88,252,110,62,131,184,1,168,0,248,39,21,18,208,15,20,162,187,45,32,89,22,93,141],[147,118,163,111,125,35,33,99,143,89,2,96,212,46,28,183,113,251,50,80,107,43,195,63,56,217,134,136,71,99,19,139],[132,48,140,185,212,32,103,0,19,68,26,17,125,48,176,107,73,103,196,237,8,224,212,212,224,1,96,97,125,27,230,246],[145,121,67,231,227,170,111,134,235,9,7,68,145,73,122,121,238,186,24,121,43,113,115,229,62,1,105,209,203,114,142,181],[225,179,115,102,127,30,92,137,146,158,234,91,222,242,199,165,37,67,126,238,18,127,65,106,8,240,21,64,51,120,44,98],[134,198,72,76,44,108,250,155,106,207,188,38,182,71,159,123,133,207,71,127,121,195,227,230,209,249,248,137,192,4,29,132],[91,165,242,153,9,91,166,253,249,28,221,252,204,14,116,48,90,159,26,122,93,20,115,115,175,30,36,148,246,210,238,253],[31,40,244,208,184,149,216,235,132,21,78,75,235,5,186,86,236,113,96,160,211,85,44,155,216,1,166,211,3,24,167,82],[247,22,141,143,69,66,213,182,214,246,27,151,90,82,50,44,241,124,166,153,224,67,253,56,79,229,9,238,76,17,26,52],[205,171,239,173,173,88,68,206,152,169,226,109,185,236,163,209,128,150,48,192,119,62,255,124,66,138,96,143,199,2,213,2],[67,255,127,166,4,236,193,157,142,241,18,34,127,125,155,220,240,3,179,93,214,239,123,240,166,243,105,139,52,234,188,61],[61,223,243,144,231,231,250,227,203,1,154,204,176,160,74,106,179,179,114,200,205,243,75,49,37,214,34,144,7,140,221,241],[80,222,211,145,142,149,153,214,187,9,96,199,192,176,133,1,21,89,232,135,121,178,58,66,26,228,178,137,191,12,200,160],[25,26,170,224,44,117,205,169,54,14,4,185,134,96,142,73,16,102,171,167,151,140,242,46,9,209,21,32,236,107,40,102],[182,48,50,219,60,8,108,149,68,110,42,173,143,38,3,164,155,118,199,123,174,185,59,247,142,170,173,135,143,209,38,19],[181,18,29,229,177,176,145,166,124,160,30,196,28,68,25,69,248,163,100,120,254,206,154,18,59,207,227,28,72,5,184,60],[66,219,3,5,200,255,167,160,30,253,45,160,160,175,111,4,192,16,31,124,177,191,102,108,112,35,75,247,75,104,130,174],[129,0,232,145,131,212,45,245,247,77,37,38,216,173,75,151,158,21,208,195,82,24,161,41,23,242,93,119,251,100,49,16],[136,112,103,130,225,199,21,238,88,65,109,237,187,92,206,67,74,221,19,140,140,150,187,226,95,246,161,251,217,229,24,2],[120,13,91,120,177,103,84,127,168,51,146,57,85,180,56,192,104,245,122,50,251,236,224,225,73,225,87,193,78,217,212,86]], [[59,144,167,216,78,103,69,173,27,44,163,204,96,226,69,127,238,157,242,172,132,236,135,114,12,74,49,142,130,69,229,211],[34,63,104,247,118,253,18,114,56,119,81,110,27,159,114,214,116,247,226,16,127,119,15,118,92,126,153,191,157,108,238,97],[40,86,128,108,199,206,88,46,148,120,116,111,244,254,72,220,75,221,23,39,252,8,180,168,30,29,181,232,32,115,90,138],[178,3,53,18,46,112,222,23,99,42,112,245,251,242,97,228,53,65,79,65,188,201,200,123,237,247,69,169,69,130,145,86],[145,49,125,32,61,138,28,160,18,80,12,30,101,237,57,25,229,220,221,59,160,73,78,20,92,251,51,234,76,113,46,1],[183,46,248,81,40,245,170,36,129,46,36,144,168,145,159,2,11,158,194,39,54,157,4,50,173,196,103,94,41,151,236,190],[240,215,200,103,171,194,63,121,33,196,6,19,41,25,119,210,70,172,134,81,104,99,20,39,0,246,12,195,115,93,181,16],[63,102,50,70,205,11,198,253,193,161,180,251,68,22,237,148,85,136,70,35,217,121,164,163,222,52,62,179,20,144,138,60],[169,83,139,94,11,10,29,20,69,3,103,7,174,156,110,238,180,176,253,22,82,218,117,147,44,86,116,50,172,250,240,167],[221,15,198,241,168,219,53,196,92,255,175,144,189,102,208,139,190,35,220,228,162,82,173,236,107,47,71,119,165,130,56,196],[175,232,164,94,159,57,131,96,24,7,83,228,24,15,172,65,8,204,234,83,83,124,244,199,195,235,233,231,217,66,232,230],[174,232,62,116,161,71,183,40,163,253,98,103,128,100,39,77,107,156,253,161,214,101,131,95,166,142,54,78,46,210,70,5],[126,131,16,91,209,67,198,219,210,138,170,163,23,193,125,184,39,22,111,214,1,198,106,94,255,43,132,12,155,8,98,90],[198,213,225,6,175,233,253,246,183,82,51,22,149,80,243,125,114,153,51,170,55,33,119,235,175,209,169,108,34,249,198,114],[141,18,44,40,54,124,12,53,96,67,19,1,88,58,130,11,1,222,14,252,120,24,161,172,80,182,142,195,26,7,34,228],[198,146,249,135,194,156,233,192,210,134,15,104,19,98,35,186,192,209,182,178,9,115,3,183,42,65,209,16,17,17,85,102],[56,53,47,163,203,39,205,242,142,214,207,44,116,148,97,142,105,134,68,47,10,165,132,129,105,12,226,28,200,17,183,22],[221,56,178,82,23,49,4,129,40,121,89,249,197,94,35,234,211,48,72,43,66,31,170,173,233,241,14,229,223,137,108,204],[221,147,174,62,153,181,110,91,183,89,147,149,236,60,193,238,221,54,99,224,229,126,225,130,120,220,223,73,36,72,246,238],[214,190,228,82,200,58,174,151,133,129,70,17,164,44,173,51,25,70,132,90,105,33,199,44,142,51,235,170,37,241,220,58],[132,132,3,160,145,102,230,188,138,110,194,43,84,202,225,223,160,12,199,157,185,33,162,95,45,172,74,255,9,221,117,3],[204,164,35,117,36,195,127,84,254,235,123,82,11,141,101,236,251,107,136,83,196,89,206,22,86,213,222,242,103,78,10,244],[62,73,176,39,135,180,63,157,3,134,212,50,148,193,218,147,29,46,167,33,54,242,182,8,70,255,102,41,30,121,87,179],[194,155,59,229,226,33,205,9,13,144,194,46,208,84,236,250,34,124,229,213,27,152,136,91,194,77,36,17,233,222,84,15],[204,172,176,175,112,115,225,128,155,237,249,206,67,2,100,138,231,84,107,252,196,231,70,77,24,34,241,142,212,123,31,12],[189,66,221,201,154,104,225,118,23,30,195,149,94,145,198,255,18,200,24,233,17,170,137,238,148,21,210,39,144,19,171,148]],{from: accounts[1]}),'revert');
  });
  it('Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length != 0', async () => {
    let localOnChainVoting = await OnChainVoting.new(contractRedeemableToken.address,accounts[8],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+379,{from:accounts[1]});
    let result = await truffleAssert.fails(localOnChainVoting.submitUserVotes([], [[59,144,167,216,78,103,69,173,27,44,163,204,96,226,69,127,238,157,242,172,132,236,135,114,12,74,49,142,130,69,229,211],[34,63,104,247,118,253,18,114,56,119,81,110,27,159,114,214,116,247,226,16,127,119,15,118,92,126,153,191,157,108,238,97],[40,86,128,108,199,206,88,46,148,120,116,111,244,254,72,220,75,221,23,39,252,8,180,168,30,29,181,232,32,115,90,138],[178,3,53,18,46,112,222,23,99,42,112,245,251,242,97,228,53,65,79,65,188,201,200,123,237,247,69,169,69,130,145,86],[145,49,125,32,61,138,28,160,18,80,12,30,101,237,57,25,229,220,221,59,160,73,78,20,92,251,51,234,76,113,46,1],[183,46,248,81,40,245,170,36,129,46,36,144,168,145,159,2,11,158,194,39,54,157,4,50,173,196,103,94,41,151,236,190],[240,215,200,103,171,194,63,121,33,196,6,19,41,25,119,210,70,172,134,81,104,99,20,39,0,246,12,195,115,93,181,16],[63,102,50,70,205,11,198,253,193,161,180,251,68,22,237,148,85,136,70,35,217,121,164,163,222,52,62,179,20,144,138,60],[169,83,139,94,11,10,29,20,69,3,103,7,174,156,110,238,180,176,253,22,82,218,117,147,44,86,116,50,172,250,240,167],[221,15,198,241,168,219,53,196,92,255,175,144,189,102,208,139,190,35,220,228,162,82,173,236,107,47,71,119,165,130,56,196],[175,232,164,94,159,57,131,96,24,7,83,228,24,15,172,65,8,204,234,83,83,124,244,199,195,235,233,231,217,66,232,230],[174,232,62,116,161,71,183,40,163,253,98,103,128,100,39,77,107,156,253,161,214,101,131,95,166,142,54,78,46,210,70,5],[126,131,16,91,209,67,198,219,210,138,170,163,23,193,125,184,39,22,111,214,1,198,106,94,255,43,132,12,155,8,98,90],[198,213,225,6,175,233,253,246,183,82,51,22,149,80,243,125,114,153,51,170,55,33,119,235,175,209,169,108,34,249,198,114],[141,18,44,40,54,124,12,53,96,67,19,1,88,58,130,11,1,222,14,252,120,24,161,172,80,182,142,195,26,7,34,228],[198,146,249,135,194,156,233,192,210,134,15,104,19,98,35,186,192,209,182,178,9,115,3,183,42,65,209,16,17,17,85,102],[56,53,47,163,203,39,205,242,142,214,207,44,116,148,97,142,105,134,68,47,10,165,132,129,105,12,226,28,200,17,183,22],[221,56,178,82,23,49,4,129,40,121,89,249,197,94,35,234,211,48,72,43,66,31,170,173,233,241,14,229,223,137,108,204],[221,147,174,62,153,181,110,91,183,89,147,149,236,60,193,238,221,54,99,224,229,126,225,130,120,220,223,73,36,72,246,238],[214,190,228,82,200,58,174,151,133,129,70,17,164,44,173,51,25,70,132,90,105,33,199,44,142,51,235,170,37,241,220,58],[132,132,3,160,145,102,230,188,138,110,194,43,84,202,225,223,160,12,199,157,185,33,162,95,45,172,74,255,9,221,117,3],[204,164,35,117,36,195,127,84,254,235,123,82,11,141,101,236,251,107,136,83,196,89,206,22,86,213,222,242,103,78,10,244],[62,73,176,39,135,180,63,157,3,134,212,50,148,193,218,147,29,46,167,33,54,242,182,8,70,255,102,41,30,121,87,179],[194,155,59,229,226,33,205,9,13,144,194,46,208,84,236,250,34,124,229,213,27,152,136,91,194,77,36,17,233,222,84,15],[204,172,176,175,112,115,225,128,155,237,249,206,67,2,100,138,231,84,107,252,196,231,70,77,24,34,241,142,212,123,31,12],[189,66,221,201,154,104,225,118,23,30,195,149,94,145,198,255,18,200,24,233,17,170,137,238,148,21,210,39,144,19,171,148]],{from: accounts[1]}),'revert');
  });
  it('Should execute finalizeVote(string) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,submissionsCount==votesCount', async () => {
    let localOnChainVoting = await OnChainVoting.new(contractRedeemableToken.address,accounts[2],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+260,{from:accounts[1]});
    let result = await localOnChainVoting.finalizeVote("Example",{from: accounts[1]});
  });
  it('Should fail finalizeVote(string) when NOT comply with: msg.sender == _owner', async () => {
    let localOnChainVoting = await OnChainVoting.new(contractRedeemableToken.address,accounts[2],(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+260,{from:accounts[1]});
    let result = await truffleAssert.fails(localOnChainVoting.finalizeVote("Example",{from: accounts[9]}),'revert');
  });
});
