,{
  "2020-11-10T12:47:52.479ZPaymentTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:47:58.784ZRedeemableTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:05.026ZOffChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:11.579ZPartialRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:18.148ZOnChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,IERC20,address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:24.662ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "6",
              "sol": "6"
            },
            {
              "js": "256",
              "sol": "256"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "6",
                "sol": "6"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "3",
                "sol": "3"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "6",
                "sol": "6"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "3",
                "sol": "3"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "6",
                "sol": "6"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:31.253ZFullRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892064",
              "sol": "1532892064"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:38.071ZOnChainVoting.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,address,uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<_endTime,_issuer!=0x0000000000000000000000000000000000000000,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+677",
              "sol": "block.timestamp+677"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp < _endTime",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
                "sol": "block.timestamp"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+677",
                "sol": "block.timestamp+677"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+677",
                "sol": "block.timestamp+677"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+677",
                "sol": "block.timestamp+677"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.811ZRedeemableToken.setRedemption": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setRedemption(address) WHEN msg.sender==_owner,_redemption!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: _redemption != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.812ZRedeemableToken.redeemAllTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemAllTokens(address) WHEN msg.sender==redemption,msg.sender==_owner,balance>0",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.815ZRedeemableToken.redeemPartialTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemPartialTokens(address,uint256) WHEN msg.sender==redemption,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.818ZOffChainPayments.recordPayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute recordPayments(address[],uint256[],uint256[],bytes32[]) WHEN msg.sender==_owner,_securityHolders.length>0,_securityHolders.length==_offchainPaymentHashes.length,_securityHolders.length==_paymentTimestamps.length,_securityHolders.length==_paymentValues.length",
          "parameters": [
            {
              "js": "[accounts[7],accounts[5],accounts[7],accounts[8],accounts[9],accounts[1],accounts[0],accounts[2],accounts[6],accounts[6],accounts[0],accounts[0],accounts[7],accounts[2],accounts[0],accounts[4],accounts[4],accounts[8],accounts[4],accounts[4],accounts[8],accounts[8],accounts[2],accounts[1],accounts[1],accounts[1],accounts[2],accounts[6],accounts[3],accounts[5],accounts[5],accounts[8],accounts[2],accounts[5],accounts[8],accounts[8],accounts[7],accounts[6],accounts[9],accounts[3],accounts[7],accounts[8],accounts[6],accounts[1],accounts[8],accounts[5],accounts[5],accounts[6],accounts[7],accounts[3],accounts[2],accounts[1],accounts[0],accounts[5],accounts[1],accounts[2],accounts[8],accounts[9],accounts[6],accounts[7],accounts[2],accounts[7],accounts[5],accounts[0],accounts[6],accounts[3],accounts[9],accounts[5],accounts[5],accounts[9],accounts[8],accounts[2],accounts[7],accounts[6],accounts[2],accounts[9],accounts[0],accounts[6],accounts[1],accounts[8],accounts[5],accounts[3],accounts[4],accounts[2],accounts[2],accounts[7],accounts[8],accounts[0],accounts[5],accounts[6],accounts[0],accounts[8],accounts[5],accounts[8],accounts[3]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[3,256,1532892064,256,27,6,64,96,96,1338,2014223714,254,28,2014223714,1338,257,1532892062,29,29,1338,26,5,2014223715,28,64,27,1337,256,2014223716,29,256,96,255,27,27,1338,4,28,2,2,2014223715,3,1338,27,0,1338,0,2,257,28,10001,0,3,2014223714,1532892063,1337,3,95,1337,2014223716,2014223716,5,2,1,95,2014223714,10000,10000,1532892064,1,254,9999,64,1,10001,28,95,1338,1338,0,1,97,1338,64,2014223714,29,96,1336,28,1532892064,1532892064,3,28,257,1337]",
              "sol": "[uint256(3),uint256(256),uint256(1532892064),uint256(256),uint256(27),uint256(6),uint256(64),uint256(96),uint256(96),uint256(1338),uint256(2014223714),uint256(254),uint256(28),uint256(2014223714),uint256(1338),uint256(257),uint256(1532892062),uint256(29),uint256(29),uint256(1338),uint256(26),uint256(5),uint256(2014223715),uint256(28),uint256(64),uint256(27),uint256(1337),uint256(256),uint256(2014223716),uint256(29),uint256(256),uint256(96),uint256(255),uint256(27),uint256(27),uint256(1338),uint256(4),uint256(28),uint256(2),uint256(2),uint256(2014223715),uint256(3),uint256(1338),uint256(27),uint256(0),uint256(1338),uint256(0),uint256(2),uint256(257),uint256(28),uint256(10001),uint256(0),uint256(3),uint256(2014223714),uint256(1532892063),uint256(1337),uint256(3),uint256(95),uint256(1337),uint256(2014223716),uint256(2014223716),uint256(5),uint256(2),uint256(1),uint256(95),uint256(2014223714),uint256(10000),uint256(10000),uint256(1532892064),uint256(1),uint256(254),uint256(9999),uint256(64),uint256(1),uint256(10001),uint256(28),uint256(95),uint256(1338),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(1338),uint256(64),uint256(2014223714),uint256(29),uint256(96),uint256(1336),uint256(28),uint256(1532892064),uint256(1532892064),uint256(3),uint256(28),uint256(257),uint256(1337)]"
            },
            {
              "js": "[3,65,1338,26,28,2014223715,2,29,1338,5,2014223715,2014223715,1532892064,27,26,6,6,28,6,1337,10000,28,1532892063,28,4,257,64,257,2014223715,65,1,1338,2,3,1,27,29,1338,3,9999,97,95,0,3,1338,255,1337,2,1532892062,1336,1337,27,96,10001,2,28,97,1,96,0,2014223715,29,5,64,29,1,3,2014223714,0,26,5,1338,3,1532892064,64,3,3,5,27,2014223715,0,64,2,26,65,3,9999,3,96,9999,2,27,2014223716,29,2014223716]",
              "sol": "[uint256(3),uint256(65),uint256(1338),uint256(26),uint256(28),uint256(2014223715),uint256(2),uint256(29),uint256(1338),uint256(5),uint256(2014223715),uint256(2014223715),uint256(1532892064),uint256(27),uint256(26),uint256(6),uint256(6),uint256(28),uint256(6),uint256(1337),uint256(10000),uint256(28),uint256(1532892063),uint256(28),uint256(4),uint256(257),uint256(64),uint256(257),uint256(2014223715),uint256(65),uint256(1),uint256(1338),uint256(2),uint256(3),uint256(1),uint256(27),uint256(29),uint256(1338),uint256(3),uint256(9999),uint256(97),uint256(95),uint256(0),uint256(3),uint256(1338),uint256(255),uint256(1337),uint256(2),uint256(1532892062),uint256(1336),uint256(1337),uint256(27),uint256(96),uint256(10001),uint256(2),uint256(28),uint256(97),uint256(1),uint256(96),uint256(0),uint256(2014223715),uint256(29),uint256(5),uint256(64),uint256(29),uint256(1),uint256(3),uint256(2014223714),uint256(0),uint256(26),uint256(5),uint256(1338),uint256(3),uint256(1532892064),uint256(64),uint256(3),uint256(3),uint256(5),uint256(27),uint256(2014223715),uint256(0),uint256(64),uint256(2),uint256(26),uint256(65),uint256(3),uint256(9999),uint256(3),uint256(96),uint256(9999),uint256(2),uint256(27),uint256(2014223716),uint256(29),uint256(2014223716)]"
            },
            {
              "js": "[[224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170],[4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108],[90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28],[254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244],[67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230],[225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61],[55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37],[94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232],[90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79],[70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146],[6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56],[175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236],[38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45],[113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61],[117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58],[120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219],[190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213],[124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209],[46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228],[138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217],[82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74],[116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237],[198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139],[222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153],[18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149],[96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21],[64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221],[15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54],[66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250],[81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143],[46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161],[4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19],[102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115],[237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117],[8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112],[173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196],[160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95],[204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81],[213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106],[47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185],[89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72],[188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1],[246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100],[19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171],[218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146],[34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132],[202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82],[113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254],[176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248],[55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237],[134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162],[34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143],[143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132],[12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182],[106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36],[185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114],[102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26],[152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14],[62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160],[73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75],[204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100],[4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157],[130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109],[148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149],[68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44],[152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52],[51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46],[51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84],[237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195],[27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166],[138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33],[238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66],[238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157],[48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26],[168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23],[35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215],[59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176],[180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4],[52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147],[17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154],[91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51],[195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205],[84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126],[141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24],[104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20],[142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129],[106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147],[77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56],[112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30],[91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24],[90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234],[255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247],[160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180],[221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11],[223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158]]",
              "sol": "[bytes32(stringToBytes32(\"224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170\")),bytes32(stringToBytes32(\"4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108\")),bytes32(stringToBytes32(\"90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28\")),bytes32(stringToBytes32(\"254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244\")),bytes32(stringToBytes32(\"67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230\")),bytes32(stringToBytes32(\"225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61\")),bytes32(stringToBytes32(\"55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37\")),bytes32(stringToBytes32(\"94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232\")),bytes32(stringToBytes32(\"90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79\")),bytes32(stringToBytes32(\"70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146\")),bytes32(stringToBytes32(\"6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56\")),bytes32(stringToBytes32(\"175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236\")),bytes32(stringToBytes32(\"38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45\")),bytes32(stringToBytes32(\"113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61\")),bytes32(stringToBytes32(\"117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58\")),bytes32(stringToBytes32(\"120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219\")),bytes32(stringToBytes32(\"190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213\")),bytes32(stringToBytes32(\"124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209\")),bytes32(stringToBytes32(\"46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228\")),bytes32(stringToBytes32(\"138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217\")),bytes32(stringToBytes32(\"82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74\")),bytes32(stringToBytes32(\"116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237\")),bytes32(stringToBytes32(\"198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139\")),bytes32(stringToBytes32(\"222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153\")),bytes32(stringToBytes32(\"18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149\")),bytes32(stringToBytes32(\"96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21\")),bytes32(stringToBytes32(\"64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221\")),bytes32(stringToBytes32(\"15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54\")),bytes32(stringToBytes32(\"66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250\")),bytes32(stringToBytes32(\"81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143\")),bytes32(stringToBytes32(\"46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161\")),bytes32(stringToBytes32(\"4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19\")),bytes32(stringToBytes32(\"102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115\")),bytes32(stringToBytes32(\"237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117\")),bytes32(stringToBytes32(\"8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112\")),bytes32(stringToBytes32(\"173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196\")),bytes32(stringToBytes32(\"160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95\")),bytes32(stringToBytes32(\"204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81\")),bytes32(stringToBytes32(\"213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106\")),bytes32(stringToBytes32(\"47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185\")),bytes32(stringToBytes32(\"89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72\")),bytes32(stringToBytes32(\"188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1\")),bytes32(stringToBytes32(\"246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100\")),bytes32(stringToBytes32(\"19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171\")),bytes32(stringToBytes32(\"218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146\")),bytes32(stringToBytes32(\"34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132\")),bytes32(stringToBytes32(\"202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82\")),bytes32(stringToBytes32(\"113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254\")),bytes32(stringToBytes32(\"176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248\")),bytes32(stringToBytes32(\"55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237\")),bytes32(stringToBytes32(\"134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162\")),bytes32(stringToBytes32(\"34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143\")),bytes32(stringToBytes32(\"143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132\")),bytes32(stringToBytes32(\"12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182\")),bytes32(stringToBytes32(\"106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36\")),bytes32(stringToBytes32(\"185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114\")),bytes32(stringToBytes32(\"102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26\")),bytes32(stringToBytes32(\"152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14\")),bytes32(stringToBytes32(\"62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160\")),bytes32(stringToBytes32(\"73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75\")),bytes32(stringToBytes32(\"204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100\")),bytes32(stringToBytes32(\"4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157\")),bytes32(stringToBytes32(\"130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109\")),bytes32(stringToBytes32(\"148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149\")),bytes32(stringToBytes32(\"68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44\")),bytes32(stringToBytes32(\"152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52\")),bytes32(stringToBytes32(\"51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46\")),bytes32(stringToBytes32(\"51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84\")),bytes32(stringToBytes32(\"237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195\")),bytes32(stringToBytes32(\"27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166\")),bytes32(stringToBytes32(\"138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33\")),bytes32(stringToBytes32(\"238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66\")),bytes32(stringToBytes32(\"238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157\")),bytes32(stringToBytes32(\"48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26\")),bytes32(stringToBytes32(\"168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23\")),bytes32(stringToBytes32(\"35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215\")),bytes32(stringToBytes32(\"59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176\")),bytes32(stringToBytes32(\"180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4\")),bytes32(stringToBytes32(\"52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147\")),bytes32(stringToBytes32(\"17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154\")),bytes32(stringToBytes32(\"91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51\")),bytes32(stringToBytes32(\"195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205\")),bytes32(stringToBytes32(\"84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126\")),bytes32(stringToBytes32(\"141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24\")),bytes32(stringToBytes32(\"104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20\")),bytes32(stringToBytes32(\"142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129\")),bytes32(stringToBytes32(\"106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147\")),bytes32(stringToBytes32(\"77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56\")),bytes32(stringToBytes32(\"112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30\")),bytes32(stringToBytes32(\"91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24\")),bytes32(stringToBytes32(\"90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234\")),bytes32(stringToBytes32(\"255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247\")),bytes32(stringToBytes32(\"160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180\")),bytes32(stringToBytes32(\"221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11\")),bytes32(stringToBytes32(\"223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158\"))]"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[7],accounts[5],accounts[7],accounts[8],accounts[9],accounts[1],accounts[0],accounts[2],accounts[6],accounts[6],accounts[0],accounts[0],accounts[7],accounts[2],accounts[0],accounts[4],accounts[4],accounts[8],accounts[4],accounts[4],accounts[8],accounts[8],accounts[2],accounts[1],accounts[1],accounts[1],accounts[2],accounts[6],accounts[3],accounts[5],accounts[5],accounts[8],accounts[2],accounts[5],accounts[8],accounts[8],accounts[7],accounts[6],accounts[9],accounts[3],accounts[7],accounts[8],accounts[6],accounts[1],accounts[8],accounts[5],accounts[5],accounts[6],accounts[7],accounts[3],accounts[2],accounts[1],accounts[0],accounts[5],accounts[1],accounts[2],accounts[8],accounts[9],accounts[6],accounts[7],accounts[2],accounts[7],accounts[5],accounts[0],accounts[6],accounts[3],accounts[9],accounts[5],accounts[5],accounts[9],accounts[8],accounts[2],accounts[7],accounts[6],accounts[2],accounts[9],accounts[0],accounts[6],accounts[1],accounts[8],accounts[5],accounts[3],accounts[4],accounts[2],accounts[2],accounts[7],accounts[8],accounts[0],accounts[5],accounts[6],accounts[0],accounts[8],accounts[5],accounts[8],accounts[3]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[3,256,1532892064,256,27,6,64,96,96,1338,2014223714,254,28,2014223714,1338,257,1532892062,29,29,1338,26,5,2014223715,28,64,27,1337,256,2014223716,29,256,96,255,27,27,1338,4,28,2,2,2014223715,3,1338,27,0,1338,0,2,257,28,10001,0,3,2014223714,1532892063,1337,3,95,1337,2014223716,2014223716,5,2,1,95,2014223714,10000,10000,1532892064,1,254,9999,64,1,10001,28,95,1338,1338,0,1,97,1338,64,2014223714,29,96,1336,28,1532892064,1532892064,3,28,257,1337]",
                "sol": "[uint256(3),uint256(256),uint256(1532892064),uint256(256),uint256(27),uint256(6),uint256(64),uint256(96),uint256(96),uint256(1338),uint256(2014223714),uint256(254),uint256(28),uint256(2014223714),uint256(1338),uint256(257),uint256(1532892062),uint256(29),uint256(29),uint256(1338),uint256(26),uint256(5),uint256(2014223715),uint256(28),uint256(64),uint256(27),uint256(1337),uint256(256),uint256(2014223716),uint256(29),uint256(256),uint256(96),uint256(255),uint256(27),uint256(27),uint256(1338),uint256(4),uint256(28),uint256(2),uint256(2),uint256(2014223715),uint256(3),uint256(1338),uint256(27),uint256(0),uint256(1338),uint256(0),uint256(2),uint256(257),uint256(28),uint256(10001),uint256(0),uint256(3),uint256(2014223714),uint256(1532892063),uint256(1337),uint256(3),uint256(95),uint256(1337),uint256(2014223716),uint256(2014223716),uint256(5),uint256(2),uint256(1),uint256(95),uint256(2014223714),uint256(10000),uint256(10000),uint256(1532892064),uint256(1),uint256(254),uint256(9999),uint256(64),uint256(1),uint256(10001),uint256(28),uint256(95),uint256(1338),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(1338),uint256(64),uint256(2014223714),uint256(29),uint256(96),uint256(1336),uint256(28),uint256(1532892064),uint256(1532892064),uint256(3),uint256(28),uint256(257),uint256(1337)]"
              },
              {
                "js": "[3,65,1338,26,28,2014223715,2,29,1338,5,2014223715,2014223715,1532892064,27,26,6,6,28,6,1337,10000,28,1532892063,28,4,257,64,257,2014223715,65,1,1338,2,3,1,27,29,1338,3,9999,97,95,0,3,1338,255,1337,2,1532892062,1336,1337,27,96,10001,2,28,97,1,96,0,2014223715,29,5,64,29,1,3,2014223714,0,26,5,1338,3,1532892064,64,3,3,5,27,2014223715,0,64,2,26,65,3,9999,3,96,9999,2,27,2014223716,29,2014223716]",
                "sol": "[uint256(3),uint256(65),uint256(1338),uint256(26),uint256(28),uint256(2014223715),uint256(2),uint256(29),uint256(1338),uint256(5),uint256(2014223715),uint256(2014223715),uint256(1532892064),uint256(27),uint256(26),uint256(6),uint256(6),uint256(28),uint256(6),uint256(1337),uint256(10000),uint256(28),uint256(1532892063),uint256(28),uint256(4),uint256(257),uint256(64),uint256(257),uint256(2014223715),uint256(65),uint256(1),uint256(1338),uint256(2),uint256(3),uint256(1),uint256(27),uint256(29),uint256(1338),uint256(3),uint256(9999),uint256(97),uint256(95),uint256(0),uint256(3),uint256(1338),uint256(255),uint256(1337),uint256(2),uint256(1532892062),uint256(1336),uint256(1337),uint256(27),uint256(96),uint256(10001),uint256(2),uint256(28),uint256(97),uint256(1),uint256(96),uint256(0),uint256(2014223715),uint256(29),uint256(5),uint256(64),uint256(29),uint256(1),uint256(3),uint256(2014223714),uint256(0),uint256(26),uint256(5),uint256(1338),uint256(3),uint256(1532892064),uint256(64),uint256(3),uint256(3),uint256(5),uint256(27),uint256(2014223715),uint256(0),uint256(64),uint256(2),uint256(26),uint256(65),uint256(3),uint256(9999),uint256(3),uint256(96),uint256(9999),uint256(2),uint256(27),uint256(2014223716),uint256(29),uint256(2014223716)]"
              },
              {
                "js": "[[224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170],[4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108],[90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28],[254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244],[67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230],[225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61],[55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37],[94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232],[90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79],[70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146],[6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56],[175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236],[38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45],[113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61],[117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58],[120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219],[190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213],[124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209],[46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228],[138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217],[82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74],[116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237],[198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139],[222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153],[18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149],[96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21],[64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221],[15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54],[66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250],[81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143],[46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161],[4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19],[102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115],[237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117],[8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112],[173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196],[160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95],[204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81],[213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106],[47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185],[89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72],[188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1],[246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100],[19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171],[218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146],[34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132],[202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82],[113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254],[176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248],[55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237],[134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162],[34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143],[143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132],[12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182],[106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36],[185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114],[102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26],[152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14],[62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160],[73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75],[204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100],[4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157],[130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109],[148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149],[68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44],[152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52],[51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46],[51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84],[237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195],[27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166],[138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33],[238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66],[238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157],[48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26],[168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23],[35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215],[59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176],[180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4],[52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147],[17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154],[91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51],[195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205],[84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126],[141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24],[104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20],[142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129],[106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147],[77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56],[112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30],[91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24],[90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234],[255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247],[160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180],[221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11],[223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158]]",
                "sol": "[bytes32(stringToBytes32(\"224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170\")),bytes32(stringToBytes32(\"4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108\")),bytes32(stringToBytes32(\"90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28\")),bytes32(stringToBytes32(\"254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244\")),bytes32(stringToBytes32(\"67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230\")),bytes32(stringToBytes32(\"225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61\")),bytes32(stringToBytes32(\"55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37\")),bytes32(stringToBytes32(\"94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232\")),bytes32(stringToBytes32(\"90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79\")),bytes32(stringToBytes32(\"70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146\")),bytes32(stringToBytes32(\"6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56\")),bytes32(stringToBytes32(\"175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236\")),bytes32(stringToBytes32(\"38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45\")),bytes32(stringToBytes32(\"113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61\")),bytes32(stringToBytes32(\"117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58\")),bytes32(stringToBytes32(\"120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219\")),bytes32(stringToBytes32(\"190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213\")),bytes32(stringToBytes32(\"124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209\")),bytes32(stringToBytes32(\"46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228\")),bytes32(stringToBytes32(\"138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217\")),bytes32(stringToBytes32(\"82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74\")),bytes32(stringToBytes32(\"116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237\")),bytes32(stringToBytes32(\"198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139\")),bytes32(stringToBytes32(\"222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153\")),bytes32(stringToBytes32(\"18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149\")),bytes32(stringToBytes32(\"96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21\")),bytes32(stringToBytes32(\"64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221\")),bytes32(stringToBytes32(\"15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54\")),bytes32(stringToBytes32(\"66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250\")),bytes32(stringToBytes32(\"81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143\")),bytes32(stringToBytes32(\"46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161\")),bytes32(stringToBytes32(\"4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19\")),bytes32(stringToBytes32(\"102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115\")),bytes32(stringToBytes32(\"237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117\")),bytes32(stringToBytes32(\"8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112\")),bytes32(stringToBytes32(\"173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196\")),bytes32(stringToBytes32(\"160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95\")),bytes32(stringToBytes32(\"204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81\")),bytes32(stringToBytes32(\"213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106\")),bytes32(stringToBytes32(\"47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185\")),bytes32(stringToBytes32(\"89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72\")),bytes32(stringToBytes32(\"188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1\")),bytes32(stringToBytes32(\"246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100\")),bytes32(stringToBytes32(\"19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171\")),bytes32(stringToBytes32(\"218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146\")),bytes32(stringToBytes32(\"34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132\")),bytes32(stringToBytes32(\"202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82\")),bytes32(stringToBytes32(\"113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254\")),bytes32(stringToBytes32(\"176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248\")),bytes32(stringToBytes32(\"55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237\")),bytes32(stringToBytes32(\"134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162\")),bytes32(stringToBytes32(\"34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143\")),bytes32(stringToBytes32(\"143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132\")),bytes32(stringToBytes32(\"12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182\")),bytes32(stringToBytes32(\"106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36\")),bytes32(stringToBytes32(\"185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114\")),bytes32(stringToBytes32(\"102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26\")),bytes32(stringToBytes32(\"152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14\")),bytes32(stringToBytes32(\"62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160\")),bytes32(stringToBytes32(\"73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75\")),bytes32(stringToBytes32(\"204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100\")),bytes32(stringToBytes32(\"4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157\")),bytes32(stringToBytes32(\"130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109\")),bytes32(stringToBytes32(\"148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149\")),bytes32(stringToBytes32(\"68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44\")),bytes32(stringToBytes32(\"152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52\")),bytes32(stringToBytes32(\"51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46\")),bytes32(stringToBytes32(\"51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84\")),bytes32(stringToBytes32(\"237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195\")),bytes32(stringToBytes32(\"27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166\")),bytes32(stringToBytes32(\"138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33\")),bytes32(stringToBytes32(\"238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66\")),bytes32(stringToBytes32(\"238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157\")),bytes32(stringToBytes32(\"48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26\")),bytes32(stringToBytes32(\"168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23\")),bytes32(stringToBytes32(\"35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215\")),bytes32(stringToBytes32(\"59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176\")),bytes32(stringToBytes32(\"180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4\")),bytes32(stringToBytes32(\"52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147\")),bytes32(stringToBytes32(\"17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154\")),bytes32(stringToBytes32(\"91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51\")),bytes32(stringToBytes32(\"195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205\")),bytes32(stringToBytes32(\"84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126\")),bytes32(stringToBytes32(\"141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24\")),bytes32(stringToBytes32(\"104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20\")),bytes32(stringToBytes32(\"142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129\")),bytes32(stringToBytes32(\"106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147\")),bytes32(stringToBytes32(\"77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56\")),bytes32(stringToBytes32(\"112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30\")),bytes32(stringToBytes32(\"91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24\")),bytes32(stringToBytes32(\"90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234\")),bytes32(stringToBytes32(\"255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247\")),bytes32(stringToBytes32(\"160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180\")),bytes32(stringToBytes32(\"221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11\")),bytes32(stringToBytes32(\"223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[3,256,1532892064,256,27,6,64,96,96,1338,2014223714,254,28,2014223714,1338,257,1532892062,29,29,1338,26,5,2014223715,28,64,27,1337,256,2014223716,29,256,96,255,27,27,1338,4,28,2,2,2014223715,3,1338,27,0,1338,0,2,257,28,10001,0,3,2014223714,1532892063,1337,3,95,1337,2014223716,2014223716,5,2,1,95,2014223714,10000,10000,1532892064,1,254,9999,64,1,10001,28,95,1338,1338,0,1,97,1338,64,2014223714,29,96,1336,28,1532892064,1532892064,3,28,257,1337]",
                "sol": "[uint256(3),uint256(256),uint256(1532892064),uint256(256),uint256(27),uint256(6),uint256(64),uint256(96),uint256(96),uint256(1338),uint256(2014223714),uint256(254),uint256(28),uint256(2014223714),uint256(1338),uint256(257),uint256(1532892062),uint256(29),uint256(29),uint256(1338),uint256(26),uint256(5),uint256(2014223715),uint256(28),uint256(64),uint256(27),uint256(1337),uint256(256),uint256(2014223716),uint256(29),uint256(256),uint256(96),uint256(255),uint256(27),uint256(27),uint256(1338),uint256(4),uint256(28),uint256(2),uint256(2),uint256(2014223715),uint256(3),uint256(1338),uint256(27),uint256(0),uint256(1338),uint256(0),uint256(2),uint256(257),uint256(28),uint256(10001),uint256(0),uint256(3),uint256(2014223714),uint256(1532892063),uint256(1337),uint256(3),uint256(95),uint256(1337),uint256(2014223716),uint256(2014223716),uint256(5),uint256(2),uint256(1),uint256(95),uint256(2014223714),uint256(10000),uint256(10000),uint256(1532892064),uint256(1),uint256(254),uint256(9999),uint256(64),uint256(1),uint256(10001),uint256(28),uint256(95),uint256(1338),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(1338),uint256(64),uint256(2014223714),uint256(29),uint256(96),uint256(1336),uint256(28),uint256(1532892064),uint256(1532892064),uint256(3),uint256(28),uint256(257),uint256(1337)]"
              },
              {
                "js": "[3,65,1338,26,28,2014223715,2,29,1338,5,2014223715,2014223715,1532892064,27,26,6,6,28,6,1337,10000,28,1532892063,28,4,257,64,257,2014223715,65,1,1338,2,3,1,27,29,1338,3,9999,97,95,0,3,1338,255,1337,2,1532892062,1336,1337,27,96,10001,2,28,97,1,96,0,2014223715,29,5,64,29,1,3,2014223714,0,26,5,1338,3,1532892064,64,3,3,5,27,2014223715,0,64,2,26,65,3,9999,3,96,9999,2,27,2014223716,29,2014223716]",
                "sol": "[uint256(3),uint256(65),uint256(1338),uint256(26),uint256(28),uint256(2014223715),uint256(2),uint256(29),uint256(1338),uint256(5),uint256(2014223715),uint256(2014223715),uint256(1532892064),uint256(27),uint256(26),uint256(6),uint256(6),uint256(28),uint256(6),uint256(1337),uint256(10000),uint256(28),uint256(1532892063),uint256(28),uint256(4),uint256(257),uint256(64),uint256(257),uint256(2014223715),uint256(65),uint256(1),uint256(1338),uint256(2),uint256(3),uint256(1),uint256(27),uint256(29),uint256(1338),uint256(3),uint256(9999),uint256(97),uint256(95),uint256(0),uint256(3),uint256(1338),uint256(255),uint256(1337),uint256(2),uint256(1532892062),uint256(1336),uint256(1337),uint256(27),uint256(96),uint256(10001),uint256(2),uint256(28),uint256(97),uint256(1),uint256(96),uint256(0),uint256(2014223715),uint256(29),uint256(5),uint256(64),uint256(29),uint256(1),uint256(3),uint256(2014223714),uint256(0),uint256(26),uint256(5),uint256(1338),uint256(3),uint256(1532892064),uint256(64),uint256(3),uint256(3),uint256(5),uint256(27),uint256(2014223715),uint256(0),uint256(64),uint256(2),uint256(26),uint256(65),uint256(3),uint256(9999),uint256(3),uint256(96),uint256(9999),uint256(2),uint256(27),uint256(2014223716),uint256(29),uint256(2014223716)]"
              },
              {
                "js": "[[224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170],[4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108],[90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28],[254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244],[67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230],[225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61],[55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37],[94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232],[90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79],[70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146],[6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56],[175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236],[38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45],[113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61],[117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58],[120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219],[190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213],[124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209],[46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228],[138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217],[82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74],[116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237],[198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139],[222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153],[18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149],[96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21],[64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221],[15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54],[66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250],[81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143],[46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161],[4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19],[102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115],[237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117],[8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112],[173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196],[160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95],[204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81],[213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106],[47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185],[89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72],[188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1],[246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100],[19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171],[218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146],[34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132],[202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82],[113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254],[176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248],[55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237],[134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162],[34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143],[143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132],[12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182],[106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36],[185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114],[102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26],[152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14],[62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160],[73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75],[204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100],[4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157],[130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109],[148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149],[68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44],[152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52],[51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46],[51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84],[237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195],[27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166],[138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33],[238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66],[238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157],[48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26],[168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23],[35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215],[59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176],[180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4],[52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147],[17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154],[91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51],[195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205],[84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126],[141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24],[104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20],[142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129],[106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147],[77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56],[112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30],[91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24],[90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234],[255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247],[160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180],[221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11],[223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158]]",
                "sol": "[bytes32(stringToBytes32(\"224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170\")),bytes32(stringToBytes32(\"4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108\")),bytes32(stringToBytes32(\"90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28\")),bytes32(stringToBytes32(\"254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244\")),bytes32(stringToBytes32(\"67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230\")),bytes32(stringToBytes32(\"225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61\")),bytes32(stringToBytes32(\"55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37\")),bytes32(stringToBytes32(\"94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232\")),bytes32(stringToBytes32(\"90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79\")),bytes32(stringToBytes32(\"70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146\")),bytes32(stringToBytes32(\"6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56\")),bytes32(stringToBytes32(\"175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236\")),bytes32(stringToBytes32(\"38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45\")),bytes32(stringToBytes32(\"113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61\")),bytes32(stringToBytes32(\"117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58\")),bytes32(stringToBytes32(\"120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219\")),bytes32(stringToBytes32(\"190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213\")),bytes32(stringToBytes32(\"124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209\")),bytes32(stringToBytes32(\"46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228\")),bytes32(stringToBytes32(\"138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217\")),bytes32(stringToBytes32(\"82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74\")),bytes32(stringToBytes32(\"116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237\")),bytes32(stringToBytes32(\"198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139\")),bytes32(stringToBytes32(\"222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153\")),bytes32(stringToBytes32(\"18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149\")),bytes32(stringToBytes32(\"96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21\")),bytes32(stringToBytes32(\"64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221\")),bytes32(stringToBytes32(\"15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54\")),bytes32(stringToBytes32(\"66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250\")),bytes32(stringToBytes32(\"81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143\")),bytes32(stringToBytes32(\"46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161\")),bytes32(stringToBytes32(\"4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19\")),bytes32(stringToBytes32(\"102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115\")),bytes32(stringToBytes32(\"237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117\")),bytes32(stringToBytes32(\"8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112\")),bytes32(stringToBytes32(\"173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196\")),bytes32(stringToBytes32(\"160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95\")),bytes32(stringToBytes32(\"204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81\")),bytes32(stringToBytes32(\"213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106\")),bytes32(stringToBytes32(\"47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185\")),bytes32(stringToBytes32(\"89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72\")),bytes32(stringToBytes32(\"188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1\")),bytes32(stringToBytes32(\"246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100\")),bytes32(stringToBytes32(\"19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171\")),bytes32(stringToBytes32(\"218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146\")),bytes32(stringToBytes32(\"34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132\")),bytes32(stringToBytes32(\"202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82\")),bytes32(stringToBytes32(\"113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254\")),bytes32(stringToBytes32(\"176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248\")),bytes32(stringToBytes32(\"55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237\")),bytes32(stringToBytes32(\"134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162\")),bytes32(stringToBytes32(\"34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143\")),bytes32(stringToBytes32(\"143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132\")),bytes32(stringToBytes32(\"12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182\")),bytes32(stringToBytes32(\"106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36\")),bytes32(stringToBytes32(\"185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114\")),bytes32(stringToBytes32(\"102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26\")),bytes32(stringToBytes32(\"152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14\")),bytes32(stringToBytes32(\"62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160\")),bytes32(stringToBytes32(\"73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75\")),bytes32(stringToBytes32(\"204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100\")),bytes32(stringToBytes32(\"4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157\")),bytes32(stringToBytes32(\"130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109\")),bytes32(stringToBytes32(\"148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149\")),bytes32(stringToBytes32(\"68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44\")),bytes32(stringToBytes32(\"152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52\")),bytes32(stringToBytes32(\"51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46\")),bytes32(stringToBytes32(\"51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84\")),bytes32(stringToBytes32(\"237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195\")),bytes32(stringToBytes32(\"27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166\")),bytes32(stringToBytes32(\"138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33\")),bytes32(stringToBytes32(\"238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66\")),bytes32(stringToBytes32(\"238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157\")),bytes32(stringToBytes32(\"48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26\")),bytes32(stringToBytes32(\"168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23\")),bytes32(stringToBytes32(\"35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215\")),bytes32(stringToBytes32(\"59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176\")),bytes32(stringToBytes32(\"180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4\")),bytes32(stringToBytes32(\"52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147\")),bytes32(stringToBytes32(\"17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154\")),bytes32(stringToBytes32(\"91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51\")),bytes32(stringToBytes32(\"195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205\")),bytes32(stringToBytes32(\"84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126\")),bytes32(stringToBytes32(\"141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24\")),bytes32(stringToBytes32(\"104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20\")),bytes32(stringToBytes32(\"142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129\")),bytes32(stringToBytes32(\"106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147\")),bytes32(stringToBytes32(\"77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56\")),bytes32(stringToBytes32(\"112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30\")),bytes32(stringToBytes32(\"91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24\")),bytes32(stringToBytes32(\"90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234\")),bytes32(stringToBytes32(\"255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247\")),bytes32(stringToBytes32(\"160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180\")),bytes32(stringToBytes32(\"221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11\")),bytes32(stringToBytes32(\"223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158\"))]"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _offchainPaymentHashes.length",
            "parameters": [
              {
                "js": "[accounts[2],accounts[7],accounts[1],accounts[9],accounts[5],accounts[9],accounts[9],accounts[4],accounts[9],accounts[7],accounts[4],accounts[2],accounts[1],accounts[5],accounts[6],accounts[7],accounts[1],accounts[2],accounts[6],accounts[4],accounts[6],accounts[7],accounts[8],accounts[3],accounts[9],accounts[5],accounts[4],accounts[1],accounts[8],accounts[4],accounts[2],accounts[3],accounts[6],accounts[3],accounts[4],accounts[9],accounts[4],accounts[5],accounts[3],accounts[2],accounts[6],accounts[2],accounts[3],accounts[0],accounts[2],accounts[5],accounts[9],accounts[1],accounts[8],accounts[0],accounts[3],accounts[0],accounts[9],accounts[4],accounts[7],accounts[0],accounts[4],accounts[5],accounts[3],accounts[7],accounts[1],accounts[4],accounts[2],accounts[8],accounts[7],accounts[6],accounts[2],accounts[0],accounts[7],accounts[0],accounts[9],accounts[8],accounts[7],accounts[3],accounts[4],accounts[4],accounts[5],accounts[8],accounts[4],accounts[6],accounts[9],accounts[7],accounts[8],accounts[1],accounts[7],accounts[0],accounts[5],accounts[2],accounts[6],accounts[3],accounts[6],accounts[2],accounts[0],accounts[2],accounts[2],accounts[8]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[3,256,1532892064,256,27,6,64,96,96,1338,2014223714,254,28,2014223714,1338,257,1532892062,29,29,1338,26,5,2014223715,28,64,27,1337,256,2014223716,29,256,96,255,27,27,1338,4,28,2,2,2014223715,3,1338,27,0,1338,0,2,257,28,10001,0,3,2014223714,1532892063,1337,3,95,1337,2014223716,2014223716,5,2,1,95,2014223714,10000,10000,1532892064,1,254,9999,64,1,10001,28,95,1338,1338,0,1,97,1338,64,2014223714,29,96,1336,28,1532892064,1532892064,3,28,257,1337]",
                "sol": "[uint256(3),uint256(256),uint256(1532892064),uint256(256),uint256(27),uint256(6),uint256(64),uint256(96),uint256(96),uint256(1338),uint256(2014223714),uint256(254),uint256(28),uint256(2014223714),uint256(1338),uint256(257),uint256(1532892062),uint256(29),uint256(29),uint256(1338),uint256(26),uint256(5),uint256(2014223715),uint256(28),uint256(64),uint256(27),uint256(1337),uint256(256),uint256(2014223716),uint256(29),uint256(256),uint256(96),uint256(255),uint256(27),uint256(27),uint256(1338),uint256(4),uint256(28),uint256(2),uint256(2),uint256(2014223715),uint256(3),uint256(1338),uint256(27),uint256(0),uint256(1338),uint256(0),uint256(2),uint256(257),uint256(28),uint256(10001),uint256(0),uint256(3),uint256(2014223714),uint256(1532892063),uint256(1337),uint256(3),uint256(95),uint256(1337),uint256(2014223716),uint256(2014223716),uint256(5),uint256(2),uint256(1),uint256(95),uint256(2014223714),uint256(10000),uint256(10000),uint256(1532892064),uint256(1),uint256(254),uint256(9999),uint256(64),uint256(1),uint256(10001),uint256(28),uint256(95),uint256(1338),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(1338),uint256(64),uint256(2014223714),uint256(29),uint256(96),uint256(1336),uint256(28),uint256(1532892064),uint256(1532892064),uint256(3),uint256(28),uint256(257),uint256(1337)]"
              },
              {
                "js": "[3,65,1338,26,28,2014223715,2,29,1338,5,2014223715,2014223715,1532892064,27,26,6,6,28,6,1337,10000,28,1532892063,28,4,257,64,257,2014223715,65,1,1338,2,3,1,27,29,1338,3,9999,97,95,0,3,1338,255,1337,2,1532892062,1336,1337,27,96,10001,2,28,97,1,96,0,2014223715,29,5,64,29,1,3,2014223714,0,26,5,1338,3,1532892064,64,3,3,5,27,2014223715,0,64,2,26,65,3,9999,3,96,9999,2,27,2014223716,29,2014223716]",
                "sol": "[uint256(3),uint256(65),uint256(1338),uint256(26),uint256(28),uint256(2014223715),uint256(2),uint256(29),uint256(1338),uint256(5),uint256(2014223715),uint256(2014223715),uint256(1532892064),uint256(27),uint256(26),uint256(6),uint256(6),uint256(28),uint256(6),uint256(1337),uint256(10000),uint256(28),uint256(1532892063),uint256(28),uint256(4),uint256(257),uint256(64),uint256(257),uint256(2014223715),uint256(65),uint256(1),uint256(1338),uint256(2),uint256(3),uint256(1),uint256(27),uint256(29),uint256(1338),uint256(3),uint256(9999),uint256(97),uint256(95),uint256(0),uint256(3),uint256(1338),uint256(255),uint256(1337),uint256(2),uint256(1532892062),uint256(1336),uint256(1337),uint256(27),uint256(96),uint256(10001),uint256(2),uint256(28),uint256(97),uint256(1),uint256(96),uint256(0),uint256(2014223715),uint256(29),uint256(5),uint256(64),uint256(29),uint256(1),uint256(3),uint256(2014223714),uint256(0),uint256(26),uint256(5),uint256(1338),uint256(3),uint256(1532892064),uint256(64),uint256(3),uint256(3),uint256(5),uint256(27),uint256(2014223715),uint256(0),uint256(64),uint256(2),uint256(26),uint256(65),uint256(3),uint256(9999),uint256(3),uint256(96),uint256(9999),uint256(2),uint256(27),uint256(2014223716),uint256(29),uint256(2014223716)]"
              },
              {
                "js": "[[224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170],[4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108],[90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28],[254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244],[67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230],[225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61],[55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37],[94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232],[90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79],[70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146],[6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56],[175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236],[38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45],[113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61],[117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58],[120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219],[190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213],[124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209],[46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228],[138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217],[82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74],[116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237],[198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139],[222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153],[18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149],[96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21],[64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221],[15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54],[66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250],[81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143],[46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161],[4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19],[102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115],[237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117],[8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112],[173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196],[160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95],[204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81],[213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106],[47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185],[89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72],[188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1],[246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100],[19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171],[218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146],[34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132],[202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82],[113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254],[176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248],[55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237],[134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162],[34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143],[143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132],[12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182],[106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36],[185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114],[102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26],[152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14],[62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160],[73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75],[204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100],[4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157],[130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109],[148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149],[68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44],[152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52],[51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46],[51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84],[237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195],[27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166],[138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33],[238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66],[238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157],[48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26],[168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23],[35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215],[59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176],[180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4],[52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147],[17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154],[91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51],[195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205],[84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126],[141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24],[104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20],[142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129],[106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147],[77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56],[112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30],[91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24],[90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234],[255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247],[160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180],[221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11],[223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158]]",
                "sol": "[bytes32(stringToBytes32(\"224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170\")),bytes32(stringToBytes32(\"4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108\")),bytes32(stringToBytes32(\"90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28\")),bytes32(stringToBytes32(\"254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244\")),bytes32(stringToBytes32(\"67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230\")),bytes32(stringToBytes32(\"225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61\")),bytes32(stringToBytes32(\"55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37\")),bytes32(stringToBytes32(\"94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232\")),bytes32(stringToBytes32(\"90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79\")),bytes32(stringToBytes32(\"70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146\")),bytes32(stringToBytes32(\"6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56\")),bytes32(stringToBytes32(\"175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236\")),bytes32(stringToBytes32(\"38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45\")),bytes32(stringToBytes32(\"113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61\")),bytes32(stringToBytes32(\"117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58\")),bytes32(stringToBytes32(\"120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219\")),bytes32(stringToBytes32(\"190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213\")),bytes32(stringToBytes32(\"124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209\")),bytes32(stringToBytes32(\"46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228\")),bytes32(stringToBytes32(\"138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217\")),bytes32(stringToBytes32(\"82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74\")),bytes32(stringToBytes32(\"116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237\")),bytes32(stringToBytes32(\"198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139\")),bytes32(stringToBytes32(\"222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153\")),bytes32(stringToBytes32(\"18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149\")),bytes32(stringToBytes32(\"96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21\")),bytes32(stringToBytes32(\"64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221\")),bytes32(stringToBytes32(\"15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54\")),bytes32(stringToBytes32(\"66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250\")),bytes32(stringToBytes32(\"81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143\")),bytes32(stringToBytes32(\"46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161\")),bytes32(stringToBytes32(\"4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19\")),bytes32(stringToBytes32(\"102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115\")),bytes32(stringToBytes32(\"237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117\")),bytes32(stringToBytes32(\"8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112\")),bytes32(stringToBytes32(\"173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196\")),bytes32(stringToBytes32(\"160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95\")),bytes32(stringToBytes32(\"204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81\")),bytes32(stringToBytes32(\"213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106\")),bytes32(stringToBytes32(\"47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185\")),bytes32(stringToBytes32(\"89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72\")),bytes32(stringToBytes32(\"188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1\")),bytes32(stringToBytes32(\"246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100\")),bytes32(stringToBytes32(\"19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171\")),bytes32(stringToBytes32(\"218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146\")),bytes32(stringToBytes32(\"34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132\")),bytes32(stringToBytes32(\"202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82\")),bytes32(stringToBytes32(\"113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254\")),bytes32(stringToBytes32(\"176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248\")),bytes32(stringToBytes32(\"55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237\")),bytes32(stringToBytes32(\"134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162\")),bytes32(stringToBytes32(\"34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143\")),bytes32(stringToBytes32(\"143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132\")),bytes32(stringToBytes32(\"12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182\")),bytes32(stringToBytes32(\"106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36\")),bytes32(stringToBytes32(\"185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114\")),bytes32(stringToBytes32(\"102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26\")),bytes32(stringToBytes32(\"152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14\")),bytes32(stringToBytes32(\"62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160\")),bytes32(stringToBytes32(\"73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75\")),bytes32(stringToBytes32(\"204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100\")),bytes32(stringToBytes32(\"4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157\")),bytes32(stringToBytes32(\"130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109\")),bytes32(stringToBytes32(\"148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149\")),bytes32(stringToBytes32(\"68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44\")),bytes32(stringToBytes32(\"152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52\")),bytes32(stringToBytes32(\"51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46\")),bytes32(stringToBytes32(\"51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84\")),bytes32(stringToBytes32(\"237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195\")),bytes32(stringToBytes32(\"27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166\")),bytes32(stringToBytes32(\"138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33\")),bytes32(stringToBytes32(\"238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66\")),bytes32(stringToBytes32(\"238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157\")),bytes32(stringToBytes32(\"48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26\")),bytes32(stringToBytes32(\"168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23\")),bytes32(stringToBytes32(\"35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215\")),bytes32(stringToBytes32(\"59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176\")),bytes32(stringToBytes32(\"180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4\")),bytes32(stringToBytes32(\"52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147\")),bytes32(stringToBytes32(\"17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154\")),bytes32(stringToBytes32(\"91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51\")),bytes32(stringToBytes32(\"195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205\")),bytes32(stringToBytes32(\"84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126\")),bytes32(stringToBytes32(\"141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24\")),bytes32(stringToBytes32(\"104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20\")),bytes32(stringToBytes32(\"142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129\")),bytes32(stringToBytes32(\"106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147\")),bytes32(stringToBytes32(\"77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56\")),bytes32(stringToBytes32(\"112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30\")),bytes32(stringToBytes32(\"91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24\")),bytes32(stringToBytes32(\"90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234\")),bytes32(stringToBytes32(\"255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247\")),bytes32(stringToBytes32(\"160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180\")),bytes32(stringToBytes32(\"221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11\")),bytes32(stringToBytes32(\"223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158\"))]"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentTimestamps.length",
            "parameters": [
              {
                "js": "[accounts[6],accounts[7],accounts[5],accounts[9],accounts[2],accounts[8],accounts[5],accounts[6],accounts[9],accounts[6],accounts[5],accounts[1],accounts[3],accounts[4],accounts[4],accounts[6],accounts[0],accounts[1],accounts[0],accounts[4],accounts[9],accounts[3],accounts[8],accounts[5],accounts[5],accounts[0],accounts[9],accounts[3],accounts[8],accounts[1],accounts[3],accounts[2],accounts[8],accounts[5],accounts[7],accounts[6],accounts[2],accounts[2],accounts[7],accounts[7],accounts[3],accounts[5],accounts[1],accounts[8],accounts[2],accounts[8],accounts[7],accounts[1],accounts[7],accounts[6],accounts[8],accounts[7],accounts[0],accounts[9],accounts[0],accounts[7],accounts[1],accounts[3],accounts[3],accounts[8],accounts[6],accounts[3],accounts[4],accounts[7],accounts[6],accounts[6],accounts[8],accounts[7],accounts[2],accounts[0],accounts[1],accounts[6],accounts[7],accounts[5],accounts[5],accounts[9],accounts[0],accounts[6],accounts[6],accounts[5],accounts[9],accounts[8],accounts[3],accounts[8],accounts[7],accounts[5],accounts[9],accounts[3],accounts[8],accounts[5],accounts[4],accounts[3],accounts[3],accounts[1],accounts[1],accounts[3]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[3,256,1532892064,256,27,6,64,96,96,1338,2014223714,254,28,2014223714,1338,257,1532892062,29,29,1338,26,5,2014223715,28,64,27,1337,256,2014223716,29,256,96,255,27,27,1338,4,28,2,2,2014223715,3,1338,27,0,1338,0,2,257,28,10001,0,3,2014223714,1532892063,1337,3,95,1337,2014223716,2014223716,5,2,1,95,2014223714,10000,10000,1532892064,1,254,9999,64,1,10001,28,95,1338,1338,0,1,97,1338,64,2014223714,29,96,1336,28,1532892064,1532892064,3,28,257,1337]",
                "sol": "[uint256(3),uint256(256),uint256(1532892064),uint256(256),uint256(27),uint256(6),uint256(64),uint256(96),uint256(96),uint256(1338),uint256(2014223714),uint256(254),uint256(28),uint256(2014223714),uint256(1338),uint256(257),uint256(1532892062),uint256(29),uint256(29),uint256(1338),uint256(26),uint256(5),uint256(2014223715),uint256(28),uint256(64),uint256(27),uint256(1337),uint256(256),uint256(2014223716),uint256(29),uint256(256),uint256(96),uint256(255),uint256(27),uint256(27),uint256(1338),uint256(4),uint256(28),uint256(2),uint256(2),uint256(2014223715),uint256(3),uint256(1338),uint256(27),uint256(0),uint256(1338),uint256(0),uint256(2),uint256(257),uint256(28),uint256(10001),uint256(0),uint256(3),uint256(2014223714),uint256(1532892063),uint256(1337),uint256(3),uint256(95),uint256(1337),uint256(2014223716),uint256(2014223716),uint256(5),uint256(2),uint256(1),uint256(95),uint256(2014223714),uint256(10000),uint256(10000),uint256(1532892064),uint256(1),uint256(254),uint256(9999),uint256(64),uint256(1),uint256(10001),uint256(28),uint256(95),uint256(1338),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(1338),uint256(64),uint256(2014223714),uint256(29),uint256(96),uint256(1336),uint256(28),uint256(1532892064),uint256(1532892064),uint256(3),uint256(28),uint256(257),uint256(1337)]"
              },
              {
                "js": "[3,65,1338,26,28,2014223715,2,29,1338,5,2014223715,2014223715,1532892064,27,26,6,6,28,6,1337,10000,28,1532892063,28,4,257,64,257,2014223715,65,1,1338,2,3,1,27,29,1338,3,9999,97,95,0,3,1338,255,1337,2,1532892062,1336,1337,27,96,10001,2,28,97,1,96,0,2014223715,29,5,64,29,1,3,2014223714,0,26,5,1338,3,1532892064,64,3,3,5,27,2014223715,0,64,2,26,65,3,9999,3,96,9999,2,27,2014223716,29,2014223716]",
                "sol": "[uint256(3),uint256(65),uint256(1338),uint256(26),uint256(28),uint256(2014223715),uint256(2),uint256(29),uint256(1338),uint256(5),uint256(2014223715),uint256(2014223715),uint256(1532892064),uint256(27),uint256(26),uint256(6),uint256(6),uint256(28),uint256(6),uint256(1337),uint256(10000),uint256(28),uint256(1532892063),uint256(28),uint256(4),uint256(257),uint256(64),uint256(257),uint256(2014223715),uint256(65),uint256(1),uint256(1338),uint256(2),uint256(3),uint256(1),uint256(27),uint256(29),uint256(1338),uint256(3),uint256(9999),uint256(97),uint256(95),uint256(0),uint256(3),uint256(1338),uint256(255),uint256(1337),uint256(2),uint256(1532892062),uint256(1336),uint256(1337),uint256(27),uint256(96),uint256(10001),uint256(2),uint256(28),uint256(97),uint256(1),uint256(96),uint256(0),uint256(2014223715),uint256(29),uint256(5),uint256(64),uint256(29),uint256(1),uint256(3),uint256(2014223714),uint256(0),uint256(26),uint256(5),uint256(1338),uint256(3),uint256(1532892064),uint256(64),uint256(3),uint256(3),uint256(5),uint256(27),uint256(2014223715),uint256(0),uint256(64),uint256(2),uint256(26),uint256(65),uint256(3),uint256(9999),uint256(3),uint256(96),uint256(9999),uint256(2),uint256(27),uint256(2014223716),uint256(29),uint256(2014223716)]"
              },
              {
                "js": "[[224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170],[4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108],[90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28],[254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244],[67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230],[225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61],[55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37],[94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232],[90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79],[70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146],[6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56],[175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236],[38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45],[113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61],[117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58],[120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219],[190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213],[124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209],[46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228],[138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217],[82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74],[116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237],[198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139],[222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153],[18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149],[96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21],[64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221],[15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54],[66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250],[81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143],[46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161],[4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19],[102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115],[237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117],[8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112],[173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196],[160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95],[204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81],[213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106],[47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185],[89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72],[188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1],[246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100],[19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171],[218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146],[34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132],[202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82],[113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254],[176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248],[55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237],[134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162],[34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143],[143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132],[12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182],[106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36],[185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114],[102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26],[152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14],[62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160],[73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75],[204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100],[4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157],[130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109],[148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149],[68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44],[152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52],[51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46],[51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84],[237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195],[27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166],[138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33],[238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66],[238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157],[48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26],[168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23],[35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215],[59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176],[180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4],[52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147],[17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154],[91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51],[195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205],[84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126],[141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24],[104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20],[142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129],[106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147],[77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56],[112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30],[91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24],[90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234],[255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247],[160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180],[221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11],[223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158]]",
                "sol": "[bytes32(stringToBytes32(\"224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170\")),bytes32(stringToBytes32(\"4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108\")),bytes32(stringToBytes32(\"90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28\")),bytes32(stringToBytes32(\"254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244\")),bytes32(stringToBytes32(\"67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230\")),bytes32(stringToBytes32(\"225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61\")),bytes32(stringToBytes32(\"55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37\")),bytes32(stringToBytes32(\"94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232\")),bytes32(stringToBytes32(\"90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79\")),bytes32(stringToBytes32(\"70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146\")),bytes32(stringToBytes32(\"6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56\")),bytes32(stringToBytes32(\"175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236\")),bytes32(stringToBytes32(\"38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45\")),bytes32(stringToBytes32(\"113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61\")),bytes32(stringToBytes32(\"117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58\")),bytes32(stringToBytes32(\"120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219\")),bytes32(stringToBytes32(\"190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213\")),bytes32(stringToBytes32(\"124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209\")),bytes32(stringToBytes32(\"46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228\")),bytes32(stringToBytes32(\"138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217\")),bytes32(stringToBytes32(\"82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74\")),bytes32(stringToBytes32(\"116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237\")),bytes32(stringToBytes32(\"198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139\")),bytes32(stringToBytes32(\"222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153\")),bytes32(stringToBytes32(\"18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149\")),bytes32(stringToBytes32(\"96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21\")),bytes32(stringToBytes32(\"64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221\")),bytes32(stringToBytes32(\"15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54\")),bytes32(stringToBytes32(\"66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250\")),bytes32(stringToBytes32(\"81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143\")),bytes32(stringToBytes32(\"46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161\")),bytes32(stringToBytes32(\"4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19\")),bytes32(stringToBytes32(\"102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115\")),bytes32(stringToBytes32(\"237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117\")),bytes32(stringToBytes32(\"8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112\")),bytes32(stringToBytes32(\"173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196\")),bytes32(stringToBytes32(\"160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95\")),bytes32(stringToBytes32(\"204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81\")),bytes32(stringToBytes32(\"213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106\")),bytes32(stringToBytes32(\"47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185\")),bytes32(stringToBytes32(\"89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72\")),bytes32(stringToBytes32(\"188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1\")),bytes32(stringToBytes32(\"246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100\")),bytes32(stringToBytes32(\"19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171\")),bytes32(stringToBytes32(\"218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146\")),bytes32(stringToBytes32(\"34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132\")),bytes32(stringToBytes32(\"202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82\")),bytes32(stringToBytes32(\"113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254\")),bytes32(stringToBytes32(\"176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248\")),bytes32(stringToBytes32(\"55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237\")),bytes32(stringToBytes32(\"134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162\")),bytes32(stringToBytes32(\"34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143\")),bytes32(stringToBytes32(\"143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132\")),bytes32(stringToBytes32(\"12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182\")),bytes32(stringToBytes32(\"106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36\")),bytes32(stringToBytes32(\"185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114\")),bytes32(stringToBytes32(\"102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26\")),bytes32(stringToBytes32(\"152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14\")),bytes32(stringToBytes32(\"62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160\")),bytes32(stringToBytes32(\"73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75\")),bytes32(stringToBytes32(\"204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100\")),bytes32(stringToBytes32(\"4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157\")),bytes32(stringToBytes32(\"130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109\")),bytes32(stringToBytes32(\"148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149\")),bytes32(stringToBytes32(\"68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44\")),bytes32(stringToBytes32(\"152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52\")),bytes32(stringToBytes32(\"51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46\")),bytes32(stringToBytes32(\"51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84\")),bytes32(stringToBytes32(\"237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195\")),bytes32(stringToBytes32(\"27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166\")),bytes32(stringToBytes32(\"138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33\")),bytes32(stringToBytes32(\"238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66\")),bytes32(stringToBytes32(\"238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157\")),bytes32(stringToBytes32(\"48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26\")),bytes32(stringToBytes32(\"168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23\")),bytes32(stringToBytes32(\"35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215\")),bytes32(stringToBytes32(\"59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176\")),bytes32(stringToBytes32(\"180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4\")),bytes32(stringToBytes32(\"52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147\")),bytes32(stringToBytes32(\"17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154\")),bytes32(stringToBytes32(\"91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51\")),bytes32(stringToBytes32(\"195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205\")),bytes32(stringToBytes32(\"84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126\")),bytes32(stringToBytes32(\"141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24\")),bytes32(stringToBytes32(\"104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20\")),bytes32(stringToBytes32(\"142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129\")),bytes32(stringToBytes32(\"106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147\")),bytes32(stringToBytes32(\"77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56\")),bytes32(stringToBytes32(\"112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30\")),bytes32(stringToBytes32(\"91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24\")),bytes32(stringToBytes32(\"90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234\")),bytes32(stringToBytes32(\"255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247\")),bytes32(stringToBytes32(\"160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180\")),bytes32(stringToBytes32(\"221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11\")),bytes32(stringToBytes32(\"223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158\"))]"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentValues.length",
            "parameters": [
              {
                "js": "[accounts[5],accounts[9],accounts[2],accounts[0],accounts[3],accounts[6],accounts[3],accounts[7],accounts[1],accounts[6],accounts[2],accounts[1],accounts[5],accounts[5],accounts[7],accounts[2],accounts[0],accounts[8],accounts[8],accounts[6],accounts[4],accounts[6],accounts[3],accounts[2],accounts[3],accounts[8],accounts[8],accounts[3],accounts[0],accounts[7],accounts[8],accounts[3],accounts[3],accounts[8],accounts[9],accounts[0],accounts[9],accounts[4],accounts[2],accounts[2],accounts[2],accounts[3],accounts[7],accounts[8],accounts[4],accounts[8],accounts[0],accounts[7],accounts[5],accounts[2],accounts[0],accounts[2],accounts[7],accounts[9],accounts[8],accounts[2],accounts[1],accounts[3],accounts[5],accounts[9],accounts[1],accounts[0],accounts[8],accounts[9],accounts[9],accounts[2],accounts[8],accounts[7],accounts[6],accounts[6],accounts[4],accounts[8],accounts[4],accounts[2],accounts[8],accounts[5],accounts[5],accounts[6],accounts[6],accounts[9],accounts[1],accounts[2],accounts[1],accounts[0],accounts[2],accounts[8],accounts[5],accounts[9],accounts[2],accounts[2],accounts[6],accounts[1],accounts[6],accounts[4],accounts[9],accounts[5]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[3,256,1532892064,256,27,6,64,96,96,1338,2014223714,254,28,2014223714,1338,257,1532892062,29,29,1338,26,5,2014223715,28,64,27,1337,256,2014223716,29,256,96,255,27,27,1338,4,28,2,2,2014223715,3,1338,27,0,1338,0,2,257,28,10001,0,3,2014223714,1532892063,1337,3,95,1337,2014223716,2014223716,5,2,1,95,2014223714,10000,10000,1532892064,1,254,9999,64,1,10001,28,95,1338,1338,0,1,97,1338,64,2014223714,29,96,1336,28,1532892064,1532892064,3,28,257,1337]",
                "sol": "[uint256(3),uint256(256),uint256(1532892064),uint256(256),uint256(27),uint256(6),uint256(64),uint256(96),uint256(96),uint256(1338),uint256(2014223714),uint256(254),uint256(28),uint256(2014223714),uint256(1338),uint256(257),uint256(1532892062),uint256(29),uint256(29),uint256(1338),uint256(26),uint256(5),uint256(2014223715),uint256(28),uint256(64),uint256(27),uint256(1337),uint256(256),uint256(2014223716),uint256(29),uint256(256),uint256(96),uint256(255),uint256(27),uint256(27),uint256(1338),uint256(4),uint256(28),uint256(2),uint256(2),uint256(2014223715),uint256(3),uint256(1338),uint256(27),uint256(0),uint256(1338),uint256(0),uint256(2),uint256(257),uint256(28),uint256(10001),uint256(0),uint256(3),uint256(2014223714),uint256(1532892063),uint256(1337),uint256(3),uint256(95),uint256(1337),uint256(2014223716),uint256(2014223716),uint256(5),uint256(2),uint256(1),uint256(95),uint256(2014223714),uint256(10000),uint256(10000),uint256(1532892064),uint256(1),uint256(254),uint256(9999),uint256(64),uint256(1),uint256(10001),uint256(28),uint256(95),uint256(1338),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(1338),uint256(64),uint256(2014223714),uint256(29),uint256(96),uint256(1336),uint256(28),uint256(1532892064),uint256(1532892064),uint256(3),uint256(28),uint256(257),uint256(1337)]"
              },
              {
                "js": "[3,65,1338,26,28,2014223715,2,29,1338,5,2014223715,2014223715,1532892064,27,26,6,6,28,6,1337,10000,28,1532892063,28,4,257,64,257,2014223715,65,1,1338,2,3,1,27,29,1338,3,9999,97,95,0,3,1338,255,1337,2,1532892062,1336,1337,27,96,10001,2,28,97,1,96,0,2014223715,29,5,64,29,1,3,2014223714,0,26,5,1338,3,1532892064,64,3,3,5,27,2014223715,0,64,2,26,65,3,9999,3,96,9999,2,27,2014223716,29,2014223716]",
                "sol": "[uint256(3),uint256(65),uint256(1338),uint256(26),uint256(28),uint256(2014223715),uint256(2),uint256(29),uint256(1338),uint256(5),uint256(2014223715),uint256(2014223715),uint256(1532892064),uint256(27),uint256(26),uint256(6),uint256(6),uint256(28),uint256(6),uint256(1337),uint256(10000),uint256(28),uint256(1532892063),uint256(28),uint256(4),uint256(257),uint256(64),uint256(257),uint256(2014223715),uint256(65),uint256(1),uint256(1338),uint256(2),uint256(3),uint256(1),uint256(27),uint256(29),uint256(1338),uint256(3),uint256(9999),uint256(97),uint256(95),uint256(0),uint256(3),uint256(1338),uint256(255),uint256(1337),uint256(2),uint256(1532892062),uint256(1336),uint256(1337),uint256(27),uint256(96),uint256(10001),uint256(2),uint256(28),uint256(97),uint256(1),uint256(96),uint256(0),uint256(2014223715),uint256(29),uint256(5),uint256(64),uint256(29),uint256(1),uint256(3),uint256(2014223714),uint256(0),uint256(26),uint256(5),uint256(1338),uint256(3),uint256(1532892064),uint256(64),uint256(3),uint256(3),uint256(5),uint256(27),uint256(2014223715),uint256(0),uint256(64),uint256(2),uint256(26),uint256(65),uint256(3),uint256(9999),uint256(3),uint256(96),uint256(9999),uint256(2),uint256(27),uint256(2014223716),uint256(29),uint256(2014223716)]"
              },
              {
                "js": "[[224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170],[4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108],[90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28],[254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244],[67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230],[225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61],[55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37],[94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232],[90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79],[70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146],[6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56],[175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236],[38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45],[113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61],[117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58],[120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219],[190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213],[124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209],[46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228],[138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217],[82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74],[116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237],[198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139],[222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153],[18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149],[96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21],[64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221],[15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54],[66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250],[81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143],[46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161],[4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19],[102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115],[237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117],[8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112],[173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196],[160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95],[204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81],[213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106],[47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185],[89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72],[188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1],[246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100],[19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171],[218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146],[34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132],[202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82],[113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254],[176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248],[55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237],[134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162],[34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143],[143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132],[12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182],[106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36],[185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114],[102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26],[152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14],[62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160],[73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75],[204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100],[4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157],[130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109],[148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149],[68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44],[152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52],[51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46],[51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84],[237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195],[27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166],[138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33],[238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66],[238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157],[48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26],[168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23],[35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215],[59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176],[180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4],[52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147],[17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154],[91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51],[195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205],[84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126],[141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24],[104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20],[142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129],[106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147],[77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56],[112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30],[91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24],[90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234],[255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247],[160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180],[221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11],[223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158]]",
                "sol": "[bytes32(stringToBytes32(\"224,49,112,56,242,168,194,194,153,184,208,136,3,96,253,60,77,13,120,157,172,127,185,125,218,152,253,134,200,120,207,170\")),bytes32(stringToBytes32(\"4,63,63,221,231,192,199,215,238,204,70,221,156,246,136,195,28,56,248,95,159,205,140,45,201,154,200,151,5,116,42,108\")),bytes32(stringToBytes32(\"90,43,86,244,182,25,76,151,170,9,207,224,172,204,253,81,195,136,55,212,233,185,216,102,85,242,73,126,67,131,246,28\")),bytes32(stringToBytes32(\"254,203,67,36,201,167,61,42,62,6,15,46,178,187,204,146,76,29,37,174,50,207,89,109,26,148,206,200,64,64,237,244\")),bytes32(stringToBytes32(\"67,81,137,150,123,184,140,131,22,191,112,43,11,136,223,33,137,45,242,102,210,16,144,196,127,204,31,118,220,148,103,230\")),bytes32(stringToBytes32(\"225,153,214,239,252,88,242,97,217,152,110,60,15,204,162,121,128,142,13,76,12,90,242,189,183,181,76,63,133,94,30,61\")),bytes32(stringToBytes32(\"55,36,19,138,27,29,37,57,82,201,212,187,129,76,224,199,120,51,104,201,136,17,196,78,245,64,23,53,109,68,86,37\")),bytes32(stringToBytes32(\"94,86,169,203,16,37,121,156,97,195,128,177,130,208,217,209,120,77,27,77,186,136,100,114,191,32,232,202,102,231,111,232\")),bytes32(stringToBytes32(\"90,188,176,10,202,18,8,112,14,22,23,98,171,28,71,177,86,231,165,11,213,179,126,145,236,78,102,39,51,79,255,79\")),bytes32(stringToBytes32(\"70,229,215,71,124,178,238,221,211,202,129,165,210,130,162,29,44,214,73,169,231,54,93,200,71,22,29,49,54,190,231,146\")),bytes32(stringToBytes32(\"6,50,122,92,141,64,137,190,21,106,129,93,29,90,88,81,82,30,178,79,22,150,144,122,24,17,156,239,186,100,195,56\")),bytes32(stringToBytes32(\"175,130,74,49,119,171,162,116,106,210,25,58,3,50,109,210,2,237,153,21,236,103,12,29,67,242,239,143,212,62,15,236\")),bytes32(stringToBytes32(\"38,95,233,42,49,132,35,134,254,56,26,123,18,75,191,223,192,209,124,191,209,114,207,252,156,0,190,73,169,68,27,45\")),bytes32(stringToBytes32(\"113,6,189,138,60,218,30,65,138,191,216,136,71,14,20,219,155,28,109,136,136,194,176,243,1,255,156,7,9,154,230,61\")),bytes32(stringToBytes32(\"117,173,71,97,42,4,170,152,137,179,190,8,36,67,222,111,187,139,193,24,5,73,226,186,158,197,105,218,155,13,148,58\")),bytes32(stringToBytes32(\"120,166,102,51,88,4,76,164,251,52,100,119,177,253,222,84,236,18,68,69,206,166,141,212,100,158,209,176,206,198,76,219\")),bytes32(stringToBytes32(\"190,59,125,150,48,204,61,11,185,225,219,16,72,235,103,112,229,180,9,12,134,20,149,35,170,151,170,82,18,147,66,213\")),bytes32(stringToBytes32(\"124,57,9,99,211,69,79,14,62,255,212,84,43,14,192,198,157,219,156,160,111,43,199,157,120,123,166,131,194,157,51,209\")),bytes32(stringToBytes32(\"46,34,254,47,4,12,27,55,253,90,255,125,208,179,106,160,238,104,19,31,218,161,125,37,133,145,149,43,178,74,242,228\")),bytes32(stringToBytes32(\"138,195,106,133,185,178,111,44,180,124,195,105,79,120,74,117,4,41,181,232,229,3,239,28,104,142,253,89,153,253,137,217\")),bytes32(stringToBytes32(\"82,98,47,67,218,106,215,189,72,89,51,75,171,69,245,17,31,30,16,87,202,50,192,251,214,7,26,230,223,87,222,74\")),bytes32(stringToBytes32(\"116,16,205,168,128,65,244,3,109,123,244,166,64,249,192,110,238,242,195,85,216,144,81,94,144,126,148,59,158,54,22,237\")),bytes32(stringToBytes32(\"198,149,137,154,46,224,183,100,247,145,39,42,142,176,163,177,22,111,41,68,117,204,128,48,228,1,97,103,3,108,215,139\")),bytes32(stringToBytes32(\"222,253,119,32,66,59,9,227,87,116,242,229,69,153,163,239,118,80,55,5,173,187,110,235,32,74,182,106,106,175,53,153\")),bytes32(stringToBytes32(\"18,101,185,119,34,1,22,135,53,238,129,94,94,111,40,241,47,32,249,62,125,146,43,48,110,156,209,35,115,140,212,149\")),bytes32(stringToBytes32(\"96,158,169,185,199,231,104,93,98,164,12,254,252,105,77,112,132,91,156,172,8,19,178,0,28,103,141,161,246,226,137,21\")),bytes32(stringToBytes32(\"64,221,217,187,237,73,236,205,48,123,131,123,219,14,43,81,12,230,221,225,255,8,210,14,253,143,10,128,36,100,78,221\")),bytes32(stringToBytes32(\"15,205,222,145,145,55,41,216,71,165,136,227,93,135,43,206,230,165,72,197,117,1,24,81,108,208,99,61,6,220,207,54\")),bytes32(stringToBytes32(\"66,229,244,81,80,110,43,216,179,149,1,189,193,41,112,132,158,188,102,129,204,116,30,105,38,164,182,102,157,199,134,250\")),bytes32(stringToBytes32(\"81,120,159,35,144,255,198,17,22,5,207,192,252,97,49,100,23,28,98,211,140,235,230,203,155,165,133,109,76,220,29,143\")),bytes32(stringToBytes32(\"46,252,145,139,31,43,211,40,43,97,240,2,165,17,97,61,113,167,63,182,98,189,212,28,2,126,33,210,80,78,149,161\")),bytes32(stringToBytes32(\"4,35,171,22,68,184,179,181,151,45,23,207,118,17,15,216,154,250,70,214,67,225,89,195,172,187,203,135,153,159,181,19\")),bytes32(stringToBytes32(\"102,231,49,1,70,232,50,8,84,78,46,203,166,168,194,125,204,95,49,84,108,115,39,24,198,241,6,115,31,100,106,115\")),bytes32(stringToBytes32(\"237,40,137,186,92,58,229,226,17,69,147,185,201,42,50,208,132,227,182,228,159,251,38,52,129,115,139,162,56,67,170,117\")),bytes32(stringToBytes32(\"8,25,33,175,110,203,161,86,20,174,189,126,10,199,26,73,249,132,61,57,13,85,104,105,73,248,107,217,229,26,78,112\")),bytes32(stringToBytes32(\"173,151,18,200,68,173,202,103,123,91,18,70,30,43,180,29,241,67,215,187,119,30,73,148,158,54,90,17,52,181,168,196\")),bytes32(stringToBytes32(\"160,39,220,159,140,76,112,153,9,251,174,33,192,39,147,207,159,96,20,219,79,168,219,25,41,46,175,15,232,74,48,95\")),bytes32(stringToBytes32(\"204,141,24,96,213,114,115,131,219,83,157,43,249,100,125,147,238,64,207,49,49,158,133,52,237,67,248,49,223,64,157,81\")),bytes32(stringToBytes32(\"213,76,95,219,249,156,132,224,118,142,193,199,85,27,248,68,206,234,27,43,117,89,174,16,132,180,48,62,139,24,115,106\")),bytes32(stringToBytes32(\"47,248,11,19,143,204,161,175,58,189,152,202,245,185,237,204,26,202,158,147,163,225,121,77,53,253,199,207,207,124,144,185\")),bytes32(stringToBytes32(\"89,8,219,78,29,132,76,196,97,195,221,2,78,125,101,97,110,106,116,66,37,107,122,158,101,159,7,201,184,49,154,72\")),bytes32(stringToBytes32(\"188,178,56,168,189,173,148,121,128,135,231,104,234,246,54,139,215,32,34,2,235,6,139,237,64,152,6,22,215,26,15,1\")),bytes32(stringToBytes32(\"246,248,150,64,206,3,179,148,42,188,100,228,202,116,181,75,78,249,161,15,233,147,188,184,97,63,189,102,23,133,200,100\")),bytes32(stringToBytes32(\"19,2,2,45,205,28,59,119,123,225,144,123,206,24,22,193,243,41,51,29,147,181,129,28,76,68,233,78,28,185,149,171\")),bytes32(stringToBytes32(\"218,142,26,153,221,142,209,210,230,57,139,213,14,164,231,110,113,247,10,166,157,132,157,79,76,240,252,139,106,25,18,146\")),bytes32(stringToBytes32(\"34,41,222,26,47,62,213,89,226,18,219,42,214,109,226,72,158,135,144,232,134,245,93,229,81,52,23,136,220,187,250,132\")),bytes32(stringToBytes32(\"202,36,185,180,189,61,178,254,228,249,138,66,197,27,27,248,251,160,92,39,200,28,166,91,123,202,72,223,159,33,201,82\")),bytes32(stringToBytes32(\"113,44,199,206,153,113,196,30,139,251,189,209,86,253,190,247,209,5,49,160,251,72,5,102,164,17,107,40,77,104,148,254\")),bytes32(stringToBytes32(\"176,163,163,191,239,182,24,118,182,18,21,15,171,161,81,187,192,84,85,163,151,12,112,225,255,143,207,11,26,106,176,248\")),bytes32(stringToBytes32(\"55,226,155,161,202,60,244,234,28,137,191,225,183,96,88,197,174,210,9,191,181,49,226,39,46,66,233,145,39,183,101,237\")),bytes32(stringToBytes32(\"134,35,117,150,54,113,245,124,5,19,182,236,108,233,130,143,133,84,21,61,128,86,18,248,151,172,248,148,198,101,99,162\")),bytes32(stringToBytes32(\"34,150,72,251,11,163,44,206,24,253,121,203,62,49,144,224,190,171,65,211,104,117,182,105,110,233,94,160,157,199,140,143\")),bytes32(stringToBytes32(\"143,161,220,155,57,20,26,158,95,160,199,59,92,188,6,78,249,128,139,153,73,232,47,149,191,237,127,224,101,125,176,132\")),bytes32(stringToBytes32(\"12,89,46,166,143,215,186,210,58,120,249,29,174,23,6,112,124,175,248,69,25,134,206,12,181,105,173,131,176,1,213,182\")),bytes32(stringToBytes32(\"106,163,150,167,191,187,122,175,206,207,202,4,20,106,92,224,128,199,17,85,24,92,54,19,236,113,221,137,38,119,133,36\")),bytes32(stringToBytes32(\"185,71,34,104,17,169,48,176,139,15,32,74,111,133,117,23,246,41,220,231,106,192,86,215,144,187,165,107,97,192,198,114\")),bytes32(stringToBytes32(\"102,141,80,19,82,128,115,55,214,0,61,195,0,143,168,162,65,5,246,66,81,55,250,247,59,81,220,140,134,84,58,26\")),bytes32(stringToBytes32(\"152,5,107,230,243,31,81,24,214,167,133,89,106,198,7,74,165,4,20,10,254,208,252,3,237,194,176,224,204,73,131,14\")),bytes32(stringToBytes32(\"62,162,233,153,130,222,187,107,232,249,10,9,213,99,42,240,93,90,0,126,30,77,34,217,210,219,93,122,111,48,78,160\")),bytes32(stringToBytes32(\"73,120,149,91,198,77,25,95,162,151,249,212,229,168,78,157,62,188,170,55,210,41,18,197,104,45,31,196,117,138,53,75\")),bytes32(stringToBytes32(\"204,43,254,76,236,125,196,16,99,198,8,46,153,30,60,93,208,58,195,175,212,0,173,151,73,45,210,84,209,35,246,100\")),bytes32(stringToBytes32(\"4,247,61,143,167,80,37,183,109,89,186,148,221,31,14,12,67,90,159,85,57,59,101,59,147,49,185,109,79,202,74,157\")),bytes32(stringToBytes32(\"130,40,148,39,167,243,19,158,136,13,133,1,163,93,155,95,15,125,72,141,244,5,209,6,57,161,103,251,81,122,193,109\")),bytes32(stringToBytes32(\"148,204,158,182,191,176,218,15,220,135,237,183,226,20,247,193,5,132,167,86,4,28,33,160,242,144,143,0,227,150,87,149\")),bytes32(stringToBytes32(\"68,162,42,226,41,180,183,87,193,100,201,125,62,169,13,1,158,156,85,232,255,233,51,248,103,98,191,244,245,16,150,44\")),bytes32(stringToBytes32(\"152,112,73,139,50,190,100,99,107,142,129,98,149,148,98,37,4,160,246,203,202,0,236,185,216,3,141,49,178,43,139,52\")),bytes32(stringToBytes32(\"51,83,169,124,216,158,252,119,232,139,62,87,54,117,197,102,87,2,55,194,200,170,157,167,210,193,59,32,158,175,8,46\")),bytes32(stringToBytes32(\"51,174,212,104,4,77,18,214,243,98,66,36,110,26,237,117,170,96,35,60,121,34,225,1,97,34,143,136,241,77,50,84\")),bytes32(stringToBytes32(\"237,186,182,80,16,58,166,254,188,49,193,105,12,242,214,252,138,78,194,169,36,128,255,245,171,143,162,127,151,45,47,195\")),bytes32(stringToBytes32(\"27,30,164,98,218,105,30,90,87,39,160,6,55,106,54,249,70,96,125,36,215,132,252,173,214,150,22,158,18,200,28,166\")),bytes32(stringToBytes32(\"138,116,239,221,68,142,164,68,127,167,95,252,101,216,229,44,81,82,10,44,191,129,10,191,206,205,172,133,254,164,19,33\")),bytes32(stringToBytes32(\"238,198,135,68,174,238,11,100,96,215,95,180,15,103,161,119,220,56,171,156,131,197,80,117,74,99,75,232,139,222,144,66\")),bytes32(stringToBytes32(\"238,69,215,147,168,169,227,115,122,126,204,38,188,136,51,92,207,7,133,7,195,109,133,75,194,114,55,122,97,149,179,157\")),bytes32(stringToBytes32(\"48,72,170,41,28,119,0,208,66,216,232,185,85,45,158,49,0,150,3,190,226,201,141,21,246,201,58,7,211,216,220,26\")),bytes32(stringToBytes32(\"168,153,137,2,236,236,226,169,60,45,255,222,167,233,120,161,140,211,145,98,255,142,214,131,106,16,43,43,226,228,161,23\")),bytes32(stringToBytes32(\"35,9,67,17,81,100,22,234,155,25,54,129,61,236,226,186,114,21,189,114,45,121,15,52,213,138,115,245,192,65,120,215\")),bytes32(stringToBytes32(\"59,113,91,80,1,238,48,95,5,83,228,103,155,88,251,88,57,33,52,5,211,211,108,4,126,251,167,23,18,185,77,176\")),bytes32(stringToBytes32(\"180,9,38,238,118,105,106,243,35,233,109,167,208,71,171,122,246,149,114,46,192,242,146,44,162,98,202,240,145,54,242,4\")),bytes32(stringToBytes32(\"52,207,96,111,1,164,126,181,33,140,58,149,153,183,166,142,193,0,192,103,64,223,91,98,209,213,57,148,33,82,214,147\")),bytes32(stringToBytes32(\"17,11,133,17,185,113,97,9,23,215,140,160,39,179,100,7,21,232,244,3,99,58,25,244,194,239,156,224,124,35,58,154\")),bytes32(stringToBytes32(\"91,22,161,75,55,37,125,41,90,70,254,101,48,249,181,151,240,251,70,184,238,157,6,45,15,195,78,230,100,7,144,51\")),bytes32(stringToBytes32(\"195,164,132,201,224,253,107,56,17,128,184,136,10,149,132,148,62,46,191,146,28,223,237,131,138,250,16,50,130,67,58,205\")),bytes32(stringToBytes32(\"84,227,12,76,126,19,12,176,50,146,140,73,49,13,108,184,194,29,5,177,66,138,91,174,163,51,220,156,105,175,105,126\")),bytes32(stringToBytes32(\"141,69,216,226,208,109,11,196,135,235,28,5,41,67,144,46,138,46,185,171,6,236,66,63,124,142,197,33,23,22,71,24\")),bytes32(stringToBytes32(\"104,71,236,210,231,151,99,209,75,27,136,205,183,84,220,236,154,209,47,185,60,242,190,229,152,223,77,114,201,22,2,20\")),bytes32(stringToBytes32(\"142,38,71,41,237,142,153,71,13,167,128,45,51,131,133,83,218,88,194,209,42,20,129,93,28,81,169,238,142,216,171,129\")),bytes32(stringToBytes32(\"106,98,225,10,178,225,153,211,25,18,40,170,249,126,103,19,92,134,21,184,161,153,35,177,147,250,10,127,58,91,88,147\")),bytes32(stringToBytes32(\"77,10,173,74,161,134,166,197,161,101,170,63,23,44,76,244,211,64,229,164,92,76,160,66,105,171,196,32,143,221,248,56\")),bytes32(stringToBytes32(\"112,5,152,232,239,174,216,237,13,9,160,106,176,8,244,85,167,238,147,112,3,249,7,114,156,180,133,103,100,73,105,30\")),bytes32(stringToBytes32(\"91,82,133,194,251,145,159,89,229,181,64,129,122,92,95,27,202,159,83,26,59,82,33,117,83,18,191,34,65,196,221,24\")),bytes32(stringToBytes32(\"90,155,94,191,174,95,90,229,184,137,137,76,196,200,207,30,2,45,236,248,105,22,11,63,100,13,195,37,138,0,133,234\")),bytes32(stringToBytes32(\"255,125,127,113,147,130,61,146,242,155,228,120,8,250,1,70,27,54,163,87,0,163,191,101,210,188,26,223,65,182,251,247\")),bytes32(stringToBytes32(\"160,123,168,110,81,57,105,22,248,20,233,77,17,229,0,168,42,239,203,176,240,63,167,24,237,24,115,121,114,235,241,180\")),bytes32(stringToBytes32(\"221,57,114,212,124,124,66,35,20,233,12,43,245,251,78,123,115,195,152,76,95,1,133,18,24,135,191,181,234,139,22,11\")),bytes32(stringToBytes32(\"223,138,213,32,121,82,4,20,138,79,107,215,250,121,252,219,215,220,15,189,116,150,84,162,183,193,0,231,189,105,102,158\"))]"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.844ZOffChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,bytes32) WHEN _securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "[13,46,24,119,74,8,110,110,78,129,198,120,141,245,129,184,103,212,118,158,195,7,16,67,239,120,168,225,15,32,170,39]",
              "sol": "stringToBytes32(\"13,46,24,119,74,8,110,110,78,129,198,120,141,245,129,184,103,212,118,158,195,7,16,67,239,120,168,225,15,32,170,39\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,bytes32) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "[13,46,24,119,74,8,110,110,78,129,198,120,141,245,129,184,103,212,118,158,195,7,16,67,239,120,168,225,15,32,170,39]",
                "sol": "stringToBytes32(\"13,46,24,119,74,8,110,110,78,129,198,120,141,245,129,184,103,212,118,158,195,7,16,67,239,120,168,225,15,32,170,39\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.845ZOffChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "26",
              "sol": "26"
            },
            {
              "js": "1532892064",
              "sol": "1532892064"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.846ZOffChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "169-192",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "10001",
              "sol": "10001"
            },
            {
              "js": "[76,50,91,10,97,210,32,224,127,198,11,191,169,161,146,152,167,164,186,171,52,19,148,50,106,233,158,53,142,41,85,24]",
              "sol": "stringToBytes32(\"76,50,91,10,97,210,32,224,127,198,11,191,169,161,146,152,167,164,186,171,52,19,148,50,106,233,158,53,142,41,85,24\")"
            },
            {
              "js": "1337",
              "sol": "1337"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "[76,50,91,10,97,210,32,224,127,198,11,191,169,161,146,152,167,164,186,171,52,19,148,50,106,233,158,53,142,41,85,24]",
                "sol": "stringToBytes32(\"76,50,91,10,97,210,32,224,127,198,11,191,169,161,146,152,167,164,186,171,52,19,148,50,106,233,158,53,142,41,85,24\")"
              },
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[76,50,91,10,97,210,32,224,127,198,11,191,169,161,146,152,167,164,186,171,52,19,148,50,106,233,158,53,142,41,85,24]",
                "sol": "stringToBytes32(\"76,50,91,10,97,210,32,224,127,198,11,191,169,161,146,152,167,164,186,171,52,19,148,50,106,233,158,53,142,41,85,24\")"
              },
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "177-192",
          "restrictions": [
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "[25,190,242,225,161,172,203,49,155,150,64,242,101,15,100,21,33,65,199,226,187,192,139,109,65,88,118,91,73,36,77,242]",
              "sol": "stringToBytes32(\"25,190,242,225,161,172,203,49,155,150,64,242,101,15,100,21,33,65,199,226,187,192,139,109,65,88,118,91,73,36,77,242\")"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "[25,190,242,225,161,172,203,49,155,150,64,242,101,15,100,21,33,65,199,226,187,192,139,109,65,88,118,91,73,36,77,242]",
                "sol": "stringToBytes32(\"25,190,242,225,161,172,203,49,155,150,64,242,101,15,100,21,33,65,199,226,187,192,139,109,65,88,118,91,73,36,77,242\")"
              },
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[25,190,242,225,161,172,203,49,155,150,64,242,101,15,100,21,33,65,199,226,187,192,139,109,65,88,118,91,73,36,77,242]",
                "sol": "stringToBytes32(\"25,190,242,225,161,172,203,49,155,150,64,242,101,15,100,21,33,65,199,226,187,192,139,109,65,88,118,91,73,36,77,242\")"
              },
              {
                "js": "2014223716",
                "sol": "2014223716"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.849ZOnChainVoting.placeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute placeVote(string) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<endTime",
          "parameters": [
            {
              "js": "\"IsLibrary\"",
              "sol": "\"IsLibrary\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.850ZOnChainVoting.submitUserVotes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute submitUserVotes(bytes32[],bytes32[]) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,_usersSaltHash.length==_usersVote.length,_usersSaltHash.length!=0",
          "parameters": [
            {
              "js": "[[173,151,213,150,36,173,93,212,153,229,84,75,206,87,123,63,106,128,223,95,39,233,199,75,253,94,46,42,61,117,198,13],[83,48,132,57,52,174,20,150,13,211,88,162,239,77,243,36,61,217,194,184,24,74,25,166,185,134,151,157,74,188,199,15],[113,91,204,175,193,3,244,181,168,11,113,115,230,115,242,64,84,254,233,84,77,93,1,213,181,55,225,161,138,121,180,196],[170,164,47,210,120,209,124,17,12,101,113,58,91,75,183,160,76,132,48,16,206,5,62,107,165,47,104,1,222,114,190,128],[23,116,50,20,28,134,252,78,145,131,37,142,254,97,150,186,238,6,114,31,240,126,122,89,114,9,171,198,137,77,205,39],[211,87,155,200,203,155,187,233,19,180,117,61,109,161,126,29,48,243,201,196,28,189,255,63,211,228,161,252,228,230,255,194],[210,167,11,106,119,101,119,150,14,147,86,196,92,50,250,55,195,20,113,26,54,13,185,81,177,80,89,126,246,77,80,129],[100,4,99,68,28,136,104,139,131,51,32,143,90,197,14,178,48,122,172,190,124,27,89,147,211,70,176,135,117,146,97,211],[70,110,200,4,97,5,19,139,65,250,194,152,225,34,185,17,104,163,230,124,66,193,79,158,48,42,183,37,57,186,150,161],[19,2,93,221,159,246,166,53,153,48,171,167,180,105,127,131,130,165,121,133,246,26,96,253,199,238,201,71,60,193,255,180],[17,180,200,185,103,40,222,152,183,66,104,205,30,61,75,187,101,144,245,62,155,227,199,85,244,55,169,197,242,124,106,7],[222,130,102,229,252,118,118,223,116,145,229,94,182,131,191,194,66,247,32,135,133,237,104,171,63,58,89,20,224,12,94,72],[207,30,174,251,70,123,69,177,164,84,223,49,197,64,182,137,194,161,81,210,201,109,211,203,220,116,113,15,122,1,242,217],[168,207,65,234,177,242,121,244,231,148,70,166,192,233,173,26,44,87,215,246,155,23,7,0,94,178,104,223,95,158,154,20],[220,78,164,51,177,234,76,93,125,240,211,74,169,77,237,245,167,88,92,101,218,138,107,61,249,8,148,163,212,152,61,31],[61,214,153,175,0,225,197,18,126,29,84,41,15,147,104,68,205,187,1,40,18,183,196,47,146,103,12,74,250,93,178,136],[127,18,91,58,156,246,22,177,236,108,51,162,195,117,65,108,18,85,69,144,247,78,106,4,9,86,115,149,180,99,152,101],[166,21,105,125,84,169,142,79,152,139,74,250,49,243,15,166,26,57,66,244,32,171,61,66,66,220,68,150,179,82,169,174],[167,110,133,40,156,44,248,235,3,117,139,76,20,107,208,7,70,213,154,26,165,213,50,15,49,223,38,155,2,241,218,63],[15,66,137,221,223,48,249,201,123,234,96,125,26,13,204,252,13,50,192,166,21,206,15,207,120,189,232,77,115,114,221,16],[32,44,127,213,117,215,3,12,233,4,66,156,12,85,148,132,8,99,199,249,197,252,42,197,136,134,22,30,91,66,101,165],[72,32,177,146,40,51,197,195,185,244,201,223,43,101,182,172,44,136,213,41,127,15,124,61,158,190,101,131,206,213,249,253],[130,179,218,30,254,119,253,14,146,70,81,102,26,248,14,5,28,139,90,243,64,74,183,226,8,155,48,143,152,72,80,19],[163,248,113,163,176,199,35,72,77,18,29,106,65,108,49,233,58,116,223,214,226,139,150,201,175,25,205,72,214,19,21,23],[193,217,202,17,142,158,186,248,250,195,19,240,99,219,55,36,60,11,184,214,151,68,61,227,18,79,50,130,42,24,252,96],[123,154,117,6,178,133,7,199,121,58,253,122,235,164,43,77,202,29,128,117,128,46,155,127,48,35,3,152,170,247,200,74],[147,170,200,214,180,218,134,127,114,255,53,12,0,221,115,184,198,243,82,49,201,221,141,164,70,250,159,221,170,173,195,203],[197,81,53,241,201,201,118,169,65,200,36,147,252,33,109,193,121,184,198,124,251,253,80,151,93,48,72,220,1,182,9,228],[86,126,142,5,170,64,222,6,144,252,129,127,25,87,88,199,242,92,35,225,147,82,133,64,26,131,201,190,166,192,32,163],[255,236,116,251,224,109,121,253,57,40,14,114,112,214,163,2,48,87,161,26,46,133,246,117,32,56,224,211,193,79,199,114],[86,171,90,47,196,239,222,33,215,146,16,212,87,146,73,193,5,6,181,110,230,172,201,208,117,28,46,211,218,110,102,252],[141,61,75,27,149,80,224,97,4,108,123,253,147,235,15,177,190,19,48,245,60,179,121,31,246,27,128,206,136,116,154,111],[59,95,187,132,124,147,21,35,75,8,158,108,254,37,61,188,59,142,13,86,3,80,234,190,93,48,198,81,42,243,220,50],[235,140,6,0,104,148,240,76,208,21,23,66,27,9,89,243,120,54,48,9,208,178,111,93,91,167,48,138,84,29,161,231],[190,19,115,165,134,114,163,77,16,75,65,146,197,10,133,108,209,153,156,212,113,4,89,85,245,165,151,226,210,163,149,129],[152,122,163,153,81,72,246,203,220,74,73,149,156,131,241,4,3,88,6,218,40,98,97,117,152,221,219,17,88,235,128,66],[70,67,129,75,159,249,39,226,5,85,14,224,238,240,118,161,106,192,61,240,18,105,197,162,95,176,223,0,145,92,208,131],[204,221,63,148,113,152,215,123,40,147,51,86,220,96,81,196,31,61,109,26,31,141,92,233,95,199,192,234,84,233,28,69],[203,15,190,47,112,252,23,176,68,248,54,172,128,217,171,244,162,21,50,92,135,6,109,203,101,20,7,244,208,61,17,168],[170,193,194,54,78,50,241,61,162,45,17,46,248,38,4,170,137,72,211,230,79,246,21,242,227,145,110,185,191,58,205,151],[153,42,20,114,198,119,223,166,226,47,106,30,166,24,32,113,73,88,214,201,40,80,111,7,136,78,226,87,158,86,196,102],[67,172,108,238,98,239,133,181,167,83,30,200,239,12,50,151,133,116,50,220,183,74,115,228,240,110,248,172,201,223,174,47],[58,162,117,55,159,2,241,110,148,67,64,0,50,92,111,171,230,61,201,65,4,14,76,54,235,181,157,96,79,71,151,121],[239,183,25,224,142,41,31,146,112,125,77,249,53,113,0,200,135,156,176,122,242,46,199,205,165,197,183,82,52,202,69,17],[79,134,179,66,75,183,116,76,165,56,39,207,196,241,217,167,2,58,103,33,171,235,15,225,229,161,180,89,247,62,246,245],[170,28,54,165,47,211,131,245,20,84,67,9,76,96,122,235,80,88,47,236,101,68,165,202,27,6,13,111,115,129,229,199],[151,29,5,201,197,57,134,228,61,152,181,211,95,80,52,115,220,60,116,157,147,223,205,160,240,82,18,73,133,48,190,250],[226,66,180,252,213,221,89,222,173,6,216,199,203,88,136,203,213,216,243,220,57,150,103,219,106,191,251,68,173,95,93,209],[42,211,103,146,14,37,70,24,115,28,45,46,191,83,136,19,136,166,238,79,27,7,4,92,44,175,197,241,214,0,50,129],[14,213,99,160,1,28,117,114,73,83,40,96,106,44,100,88,150,148,136,110,144,122,142,38,180,24,141,172,191,116,194,67],[211,23,55,173,100,28,96,238,187,130,202,81,76,16,168,21,89,78,93,168,79,133,194,224,26,52,112,11,34,148,87,170],[238,237,227,48,210,248,3,101,202,182,169,216,107,172,219,5,226,241,246,174,201,46,116,133,186,147,250,89,39,127,138,169],[103,196,7,196,195,146,101,189,109,100,106,254,116,74,203,231,163,54,141,187,188,155,87,253,44,215,164,127,171,215,152,135],[14,147,52,199,221,161,118,52,79,75,40,120,168,33,59,89,18,114,124,84,229,120,140,59,142,81,184,87,57,35,7,119],[134,153,154,148,203,93,151,141,14,105,43,11,242,91,204,124,156,36,143,138,227,23,196,90,71,160,37,84,230,117,40,186],[40,176,180,190,137,242,112,166,184,93,222,124,182,47,183,191,205,92,216,232,233,48,196,131,8,129,34,227,161,25,145,214],[203,75,244,110,117,199,174,241,1,74,214,157,248,161,43,63,252,206,236,197,24,42,74,119,219,12,240,49,234,230,111,61],[42,147,156,6,153,148,13,95,35,202,213,124,233,248,125,125,31,222,66,155,151,237,58,90,110,81,36,238,136,0,226,223],[34,130,168,192,133,223,144,212,173,245,116,158,133,220,109,242,79,132,125,170,18,146,199,130,66,33,164,101,239,24,247,243],[68,73,99,128,54,8,26,171,18,13,111,173,232,237,243,182,128,244,29,135,236,15,174,122,55,114,244,25,94,43,116,142],[120,18,221,50,135,143,30,244,77,64,115,4,100,12,114,209,239,67,195,44,131,119,78,90,162,206,146,31,76,80,69,215],[159,104,144,200,188,100,191,121,103,192,224,14,46,66,171,42,59,36,88,245,55,147,171,243,100,42,187,8,148,162,208,244],[49,210,208,235,212,83,134,37,253,60,32,245,13,79,192,220,92,179,170,88,177,47,128,159,137,204,40,132,81,115,30,200],[205,71,245,21,13,13,201,102,224,48,52,235,235,133,194,93,101,162,123,249,19,61,115,73,110,249,245,71,126,156,61,231],[122,231,89,131,241,38,191,216,216,20,103,36,239,63,40,67,79,135,77,139,29,125,82,13,15,142,158,165,254,55,194,120],[70,181,23,87,157,32,199,164,103,246,239,31,255,52,111,130,90,93,225,193,107,166,237,251,46,250,190,38,82,32,89,119]]",
              "sol": "[bytes32(stringToBytes32(\"173,151,213,150,36,173,93,212,153,229,84,75,206,87,123,63,106,128,223,95,39,233,199,75,253,94,46,42,61,117,198,13\")),bytes32(stringToBytes32(\"83,48,132,57,52,174,20,150,13,211,88,162,239,77,243,36,61,217,194,184,24,74,25,166,185,134,151,157,74,188,199,15\")),bytes32(stringToBytes32(\"113,91,204,175,193,3,244,181,168,11,113,115,230,115,242,64,84,254,233,84,77,93,1,213,181,55,225,161,138,121,180,196\")),bytes32(stringToBytes32(\"170,164,47,210,120,209,124,17,12,101,113,58,91,75,183,160,76,132,48,16,206,5,62,107,165,47,104,1,222,114,190,128\")),bytes32(stringToBytes32(\"23,116,50,20,28,134,252,78,145,131,37,142,254,97,150,186,238,6,114,31,240,126,122,89,114,9,171,198,137,77,205,39\")),bytes32(stringToBytes32(\"211,87,155,200,203,155,187,233,19,180,117,61,109,161,126,29,48,243,201,196,28,189,255,63,211,228,161,252,228,230,255,194\")),bytes32(stringToBytes32(\"210,167,11,106,119,101,119,150,14,147,86,196,92,50,250,55,195,20,113,26,54,13,185,81,177,80,89,126,246,77,80,129\")),bytes32(stringToBytes32(\"100,4,99,68,28,136,104,139,131,51,32,143,90,197,14,178,48,122,172,190,124,27,89,147,211,70,176,135,117,146,97,211\")),bytes32(stringToBytes32(\"70,110,200,4,97,5,19,139,65,250,194,152,225,34,185,17,104,163,230,124,66,193,79,158,48,42,183,37,57,186,150,161\")),bytes32(stringToBytes32(\"19,2,93,221,159,246,166,53,153,48,171,167,180,105,127,131,130,165,121,133,246,26,96,253,199,238,201,71,60,193,255,180\")),bytes32(stringToBytes32(\"17,180,200,185,103,40,222,152,183,66,104,205,30,61,75,187,101,144,245,62,155,227,199,85,244,55,169,197,242,124,106,7\")),bytes32(stringToBytes32(\"222,130,102,229,252,118,118,223,116,145,229,94,182,131,191,194,66,247,32,135,133,237,104,171,63,58,89,20,224,12,94,72\")),bytes32(stringToBytes32(\"207,30,174,251,70,123,69,177,164,84,223,49,197,64,182,137,194,161,81,210,201,109,211,203,220,116,113,15,122,1,242,217\")),bytes32(stringToBytes32(\"168,207,65,234,177,242,121,244,231,148,70,166,192,233,173,26,44,87,215,246,155,23,7,0,94,178,104,223,95,158,154,20\")),bytes32(stringToBytes32(\"220,78,164,51,177,234,76,93,125,240,211,74,169,77,237,245,167,88,92,101,218,138,107,61,249,8,148,163,212,152,61,31\")),bytes32(stringToBytes32(\"61,214,153,175,0,225,197,18,126,29,84,41,15,147,104,68,205,187,1,40,18,183,196,47,146,103,12,74,250,93,178,136\")),bytes32(stringToBytes32(\"127,18,91,58,156,246,22,177,236,108,51,162,195,117,65,108,18,85,69,144,247,78,106,4,9,86,115,149,180,99,152,101\")),bytes32(stringToBytes32(\"166,21,105,125,84,169,142,79,152,139,74,250,49,243,15,166,26,57,66,244,32,171,61,66,66,220,68,150,179,82,169,174\")),bytes32(stringToBytes32(\"167,110,133,40,156,44,248,235,3,117,139,76,20,107,208,7,70,213,154,26,165,213,50,15,49,223,38,155,2,241,218,63\")),bytes32(stringToBytes32(\"15,66,137,221,223,48,249,201,123,234,96,125,26,13,204,252,13,50,192,166,21,206,15,207,120,189,232,77,115,114,221,16\")),bytes32(stringToBytes32(\"32,44,127,213,117,215,3,12,233,4,66,156,12,85,148,132,8,99,199,249,197,252,42,197,136,134,22,30,91,66,101,165\")),bytes32(stringToBytes32(\"72,32,177,146,40,51,197,195,185,244,201,223,43,101,182,172,44,136,213,41,127,15,124,61,158,190,101,131,206,213,249,253\")),bytes32(stringToBytes32(\"130,179,218,30,254,119,253,14,146,70,81,102,26,248,14,5,28,139,90,243,64,74,183,226,8,155,48,143,152,72,80,19\")),bytes32(stringToBytes32(\"163,248,113,163,176,199,35,72,77,18,29,106,65,108,49,233,58,116,223,214,226,139,150,201,175,25,205,72,214,19,21,23\")),bytes32(stringToBytes32(\"193,217,202,17,142,158,186,248,250,195,19,240,99,219,55,36,60,11,184,214,151,68,61,227,18,79,50,130,42,24,252,96\")),bytes32(stringToBytes32(\"123,154,117,6,178,133,7,199,121,58,253,122,235,164,43,77,202,29,128,117,128,46,155,127,48,35,3,152,170,247,200,74\")),bytes32(stringToBytes32(\"147,170,200,214,180,218,134,127,114,255,53,12,0,221,115,184,198,243,82,49,201,221,141,164,70,250,159,221,170,173,195,203\")),bytes32(stringToBytes32(\"197,81,53,241,201,201,118,169,65,200,36,147,252,33,109,193,121,184,198,124,251,253,80,151,93,48,72,220,1,182,9,228\")),bytes32(stringToBytes32(\"86,126,142,5,170,64,222,6,144,252,129,127,25,87,88,199,242,92,35,225,147,82,133,64,26,131,201,190,166,192,32,163\")),bytes32(stringToBytes32(\"255,236,116,251,224,109,121,253,57,40,14,114,112,214,163,2,48,87,161,26,46,133,246,117,32,56,224,211,193,79,199,114\")),bytes32(stringToBytes32(\"86,171,90,47,196,239,222,33,215,146,16,212,87,146,73,193,5,6,181,110,230,172,201,208,117,28,46,211,218,110,102,252\")),bytes32(stringToBytes32(\"141,61,75,27,149,80,224,97,4,108,123,253,147,235,15,177,190,19,48,245,60,179,121,31,246,27,128,206,136,116,154,111\")),bytes32(stringToBytes32(\"59,95,187,132,124,147,21,35,75,8,158,108,254,37,61,188,59,142,13,86,3,80,234,190,93,48,198,81,42,243,220,50\")),bytes32(stringToBytes32(\"235,140,6,0,104,148,240,76,208,21,23,66,27,9,89,243,120,54,48,9,208,178,111,93,91,167,48,138,84,29,161,231\")),bytes32(stringToBytes32(\"190,19,115,165,134,114,163,77,16,75,65,146,197,10,133,108,209,153,156,212,113,4,89,85,245,165,151,226,210,163,149,129\")),bytes32(stringToBytes32(\"152,122,163,153,81,72,246,203,220,74,73,149,156,131,241,4,3,88,6,218,40,98,97,117,152,221,219,17,88,235,128,66\")),bytes32(stringToBytes32(\"70,67,129,75,159,249,39,226,5,85,14,224,238,240,118,161,106,192,61,240,18,105,197,162,95,176,223,0,145,92,208,131\")),bytes32(stringToBytes32(\"204,221,63,148,113,152,215,123,40,147,51,86,220,96,81,196,31,61,109,26,31,141,92,233,95,199,192,234,84,233,28,69\")),bytes32(stringToBytes32(\"203,15,190,47,112,252,23,176,68,248,54,172,128,217,171,244,162,21,50,92,135,6,109,203,101,20,7,244,208,61,17,168\")),bytes32(stringToBytes32(\"170,193,194,54,78,50,241,61,162,45,17,46,248,38,4,170,137,72,211,230,79,246,21,242,227,145,110,185,191,58,205,151\")),bytes32(stringToBytes32(\"153,42,20,114,198,119,223,166,226,47,106,30,166,24,32,113,73,88,214,201,40,80,111,7,136,78,226,87,158,86,196,102\")),bytes32(stringToBytes32(\"67,172,108,238,98,239,133,181,167,83,30,200,239,12,50,151,133,116,50,220,183,74,115,228,240,110,248,172,201,223,174,47\")),bytes32(stringToBytes32(\"58,162,117,55,159,2,241,110,148,67,64,0,50,92,111,171,230,61,201,65,4,14,76,54,235,181,157,96,79,71,151,121\")),bytes32(stringToBytes32(\"239,183,25,224,142,41,31,146,112,125,77,249,53,113,0,200,135,156,176,122,242,46,199,205,165,197,183,82,52,202,69,17\")),bytes32(stringToBytes32(\"79,134,179,66,75,183,116,76,165,56,39,207,196,241,217,167,2,58,103,33,171,235,15,225,229,161,180,89,247,62,246,245\")),bytes32(stringToBytes32(\"170,28,54,165,47,211,131,245,20,84,67,9,76,96,122,235,80,88,47,236,101,68,165,202,27,6,13,111,115,129,229,199\")),bytes32(stringToBytes32(\"151,29,5,201,197,57,134,228,61,152,181,211,95,80,52,115,220,60,116,157,147,223,205,160,240,82,18,73,133,48,190,250\")),bytes32(stringToBytes32(\"226,66,180,252,213,221,89,222,173,6,216,199,203,88,136,203,213,216,243,220,57,150,103,219,106,191,251,68,173,95,93,209\")),bytes32(stringToBytes32(\"42,211,103,146,14,37,70,24,115,28,45,46,191,83,136,19,136,166,238,79,27,7,4,92,44,175,197,241,214,0,50,129\")),bytes32(stringToBytes32(\"14,213,99,160,1,28,117,114,73,83,40,96,106,44,100,88,150,148,136,110,144,122,142,38,180,24,141,172,191,116,194,67\")),bytes32(stringToBytes32(\"211,23,55,173,100,28,96,238,187,130,202,81,76,16,168,21,89,78,93,168,79,133,194,224,26,52,112,11,34,148,87,170\")),bytes32(stringToBytes32(\"238,237,227,48,210,248,3,101,202,182,169,216,107,172,219,5,226,241,246,174,201,46,116,133,186,147,250,89,39,127,138,169\")),bytes32(stringToBytes32(\"103,196,7,196,195,146,101,189,109,100,106,254,116,74,203,231,163,54,141,187,188,155,87,253,44,215,164,127,171,215,152,135\")),bytes32(stringToBytes32(\"14,147,52,199,221,161,118,52,79,75,40,120,168,33,59,89,18,114,124,84,229,120,140,59,142,81,184,87,57,35,7,119\")),bytes32(stringToBytes32(\"134,153,154,148,203,93,151,141,14,105,43,11,242,91,204,124,156,36,143,138,227,23,196,90,71,160,37,84,230,117,40,186\")),bytes32(stringToBytes32(\"40,176,180,190,137,242,112,166,184,93,222,124,182,47,183,191,205,92,216,232,233,48,196,131,8,129,34,227,161,25,145,214\")),bytes32(stringToBytes32(\"203,75,244,110,117,199,174,241,1,74,214,157,248,161,43,63,252,206,236,197,24,42,74,119,219,12,240,49,234,230,111,61\")),bytes32(stringToBytes32(\"42,147,156,6,153,148,13,95,35,202,213,124,233,248,125,125,31,222,66,155,151,237,58,90,110,81,36,238,136,0,226,223\")),bytes32(stringToBytes32(\"34,130,168,192,133,223,144,212,173,245,116,158,133,220,109,242,79,132,125,170,18,146,199,130,66,33,164,101,239,24,247,243\")),bytes32(stringToBytes32(\"68,73,99,128,54,8,26,171,18,13,111,173,232,237,243,182,128,244,29,135,236,15,174,122,55,114,244,25,94,43,116,142\")),bytes32(stringToBytes32(\"120,18,221,50,135,143,30,244,77,64,115,4,100,12,114,209,239,67,195,44,131,119,78,90,162,206,146,31,76,80,69,215\")),bytes32(stringToBytes32(\"159,104,144,200,188,100,191,121,103,192,224,14,46,66,171,42,59,36,88,245,55,147,171,243,100,42,187,8,148,162,208,244\")),bytes32(stringToBytes32(\"49,210,208,235,212,83,134,37,253,60,32,245,13,79,192,220,92,179,170,88,177,47,128,159,137,204,40,132,81,115,30,200\")),bytes32(stringToBytes32(\"205,71,245,21,13,13,201,102,224,48,52,235,235,133,194,93,101,162,123,249,19,61,115,73,110,249,245,71,126,156,61,231\")),bytes32(stringToBytes32(\"122,231,89,131,241,38,191,216,216,20,103,36,239,63,40,67,79,135,77,139,29,125,82,13,15,142,158,165,254,55,194,120\")),bytes32(stringToBytes32(\"70,181,23,87,157,32,199,164,103,246,239,31,255,52,111,130,90,93,225,193,107,166,237,251,46,250,190,38,82,32,89,119\"))]"
            },
            {
              "js": "[[71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48],[1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7],[215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88],[77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24],[222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137],[177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221],[227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136],[253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152],[181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117],[246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186],[149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65],[80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239],[135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155],[245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7],[79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182],[2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219],[220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227],[79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191],[255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167],[235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238],[50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201],[234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217],[211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98],[190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33],[60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56],[43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195],[27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225],[96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168],[159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218],[251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90],[99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197],[157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23],[182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13],[14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38],[255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168],[15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174],[179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43],[12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51],[219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2],[101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166],[246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32],[66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195],[157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102],[47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14],[230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71],[22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116],[146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64],[195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5],[122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34],[28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17],[105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169],[72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153],[252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223],[31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108],[26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135],[233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196],[123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57],[13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154],[171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69],[172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194],[151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17],[204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196],[54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186],[69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8],[221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41],[197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152]]",
              "sol": "[bytes32(stringToBytes32(\"71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48\")),bytes32(stringToBytes32(\"1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7\")),bytes32(stringToBytes32(\"215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88\")),bytes32(stringToBytes32(\"77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24\")),bytes32(stringToBytes32(\"222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137\")),bytes32(stringToBytes32(\"177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221\")),bytes32(stringToBytes32(\"227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136\")),bytes32(stringToBytes32(\"253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152\")),bytes32(stringToBytes32(\"181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117\")),bytes32(stringToBytes32(\"246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186\")),bytes32(stringToBytes32(\"149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65\")),bytes32(stringToBytes32(\"80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239\")),bytes32(stringToBytes32(\"135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155\")),bytes32(stringToBytes32(\"245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7\")),bytes32(stringToBytes32(\"79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182\")),bytes32(stringToBytes32(\"2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219\")),bytes32(stringToBytes32(\"220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227\")),bytes32(stringToBytes32(\"79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191\")),bytes32(stringToBytes32(\"255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167\")),bytes32(stringToBytes32(\"235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238\")),bytes32(stringToBytes32(\"50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201\")),bytes32(stringToBytes32(\"234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217\")),bytes32(stringToBytes32(\"211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98\")),bytes32(stringToBytes32(\"190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33\")),bytes32(stringToBytes32(\"60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56\")),bytes32(stringToBytes32(\"43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195\")),bytes32(stringToBytes32(\"27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225\")),bytes32(stringToBytes32(\"96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168\")),bytes32(stringToBytes32(\"159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218\")),bytes32(stringToBytes32(\"251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90\")),bytes32(stringToBytes32(\"99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197\")),bytes32(stringToBytes32(\"157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23\")),bytes32(stringToBytes32(\"182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13\")),bytes32(stringToBytes32(\"14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38\")),bytes32(stringToBytes32(\"255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168\")),bytes32(stringToBytes32(\"15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174\")),bytes32(stringToBytes32(\"179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43\")),bytes32(stringToBytes32(\"12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51\")),bytes32(stringToBytes32(\"219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2\")),bytes32(stringToBytes32(\"101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166\")),bytes32(stringToBytes32(\"246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32\")),bytes32(stringToBytes32(\"66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195\")),bytes32(stringToBytes32(\"157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102\")),bytes32(stringToBytes32(\"47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14\")),bytes32(stringToBytes32(\"230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71\")),bytes32(stringToBytes32(\"22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116\")),bytes32(stringToBytes32(\"146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64\")),bytes32(stringToBytes32(\"195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5\")),bytes32(stringToBytes32(\"122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34\")),bytes32(stringToBytes32(\"28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17\")),bytes32(stringToBytes32(\"105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169\")),bytes32(stringToBytes32(\"72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153\")),bytes32(stringToBytes32(\"252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223\")),bytes32(stringToBytes32(\"31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108\")),bytes32(stringToBytes32(\"26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135\")),bytes32(stringToBytes32(\"233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196\")),bytes32(stringToBytes32(\"123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57\")),bytes32(stringToBytes32(\"13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154\")),bytes32(stringToBytes32(\"171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69\")),bytes32(stringToBytes32(\"172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194\")),bytes32(stringToBytes32(\"151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17\")),bytes32(stringToBytes32(\"204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196\")),bytes32(stringToBytes32(\"54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186\")),bytes32(stringToBytes32(\"69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8\")),bytes32(stringToBytes32(\"221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41\")),bytes32(stringToBytes32(\"197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152\"))]"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[[173,151,213,150,36,173,93,212,153,229,84,75,206,87,123,63,106,128,223,95,39,233,199,75,253,94,46,42,61,117,198,13],[83,48,132,57,52,174,20,150,13,211,88,162,239,77,243,36,61,217,194,184,24,74,25,166,185,134,151,157,74,188,199,15],[113,91,204,175,193,3,244,181,168,11,113,115,230,115,242,64,84,254,233,84,77,93,1,213,181,55,225,161,138,121,180,196],[170,164,47,210,120,209,124,17,12,101,113,58,91,75,183,160,76,132,48,16,206,5,62,107,165,47,104,1,222,114,190,128],[23,116,50,20,28,134,252,78,145,131,37,142,254,97,150,186,238,6,114,31,240,126,122,89,114,9,171,198,137,77,205,39],[211,87,155,200,203,155,187,233,19,180,117,61,109,161,126,29,48,243,201,196,28,189,255,63,211,228,161,252,228,230,255,194],[210,167,11,106,119,101,119,150,14,147,86,196,92,50,250,55,195,20,113,26,54,13,185,81,177,80,89,126,246,77,80,129],[100,4,99,68,28,136,104,139,131,51,32,143,90,197,14,178,48,122,172,190,124,27,89,147,211,70,176,135,117,146,97,211],[70,110,200,4,97,5,19,139,65,250,194,152,225,34,185,17,104,163,230,124,66,193,79,158,48,42,183,37,57,186,150,161],[19,2,93,221,159,246,166,53,153,48,171,167,180,105,127,131,130,165,121,133,246,26,96,253,199,238,201,71,60,193,255,180],[17,180,200,185,103,40,222,152,183,66,104,205,30,61,75,187,101,144,245,62,155,227,199,85,244,55,169,197,242,124,106,7],[222,130,102,229,252,118,118,223,116,145,229,94,182,131,191,194,66,247,32,135,133,237,104,171,63,58,89,20,224,12,94,72],[207,30,174,251,70,123,69,177,164,84,223,49,197,64,182,137,194,161,81,210,201,109,211,203,220,116,113,15,122,1,242,217],[168,207,65,234,177,242,121,244,231,148,70,166,192,233,173,26,44,87,215,246,155,23,7,0,94,178,104,223,95,158,154,20],[220,78,164,51,177,234,76,93,125,240,211,74,169,77,237,245,167,88,92,101,218,138,107,61,249,8,148,163,212,152,61,31],[61,214,153,175,0,225,197,18,126,29,84,41,15,147,104,68,205,187,1,40,18,183,196,47,146,103,12,74,250,93,178,136],[127,18,91,58,156,246,22,177,236,108,51,162,195,117,65,108,18,85,69,144,247,78,106,4,9,86,115,149,180,99,152,101],[166,21,105,125,84,169,142,79,152,139,74,250,49,243,15,166,26,57,66,244,32,171,61,66,66,220,68,150,179,82,169,174],[167,110,133,40,156,44,248,235,3,117,139,76,20,107,208,7,70,213,154,26,165,213,50,15,49,223,38,155,2,241,218,63],[15,66,137,221,223,48,249,201,123,234,96,125,26,13,204,252,13,50,192,166,21,206,15,207,120,189,232,77,115,114,221,16],[32,44,127,213,117,215,3,12,233,4,66,156,12,85,148,132,8,99,199,249,197,252,42,197,136,134,22,30,91,66,101,165],[72,32,177,146,40,51,197,195,185,244,201,223,43,101,182,172,44,136,213,41,127,15,124,61,158,190,101,131,206,213,249,253],[130,179,218,30,254,119,253,14,146,70,81,102,26,248,14,5,28,139,90,243,64,74,183,226,8,155,48,143,152,72,80,19],[163,248,113,163,176,199,35,72,77,18,29,106,65,108,49,233,58,116,223,214,226,139,150,201,175,25,205,72,214,19,21,23],[193,217,202,17,142,158,186,248,250,195,19,240,99,219,55,36,60,11,184,214,151,68,61,227,18,79,50,130,42,24,252,96],[123,154,117,6,178,133,7,199,121,58,253,122,235,164,43,77,202,29,128,117,128,46,155,127,48,35,3,152,170,247,200,74],[147,170,200,214,180,218,134,127,114,255,53,12,0,221,115,184,198,243,82,49,201,221,141,164,70,250,159,221,170,173,195,203],[197,81,53,241,201,201,118,169,65,200,36,147,252,33,109,193,121,184,198,124,251,253,80,151,93,48,72,220,1,182,9,228],[86,126,142,5,170,64,222,6,144,252,129,127,25,87,88,199,242,92,35,225,147,82,133,64,26,131,201,190,166,192,32,163],[255,236,116,251,224,109,121,253,57,40,14,114,112,214,163,2,48,87,161,26,46,133,246,117,32,56,224,211,193,79,199,114],[86,171,90,47,196,239,222,33,215,146,16,212,87,146,73,193,5,6,181,110,230,172,201,208,117,28,46,211,218,110,102,252],[141,61,75,27,149,80,224,97,4,108,123,253,147,235,15,177,190,19,48,245,60,179,121,31,246,27,128,206,136,116,154,111],[59,95,187,132,124,147,21,35,75,8,158,108,254,37,61,188,59,142,13,86,3,80,234,190,93,48,198,81,42,243,220,50],[235,140,6,0,104,148,240,76,208,21,23,66,27,9,89,243,120,54,48,9,208,178,111,93,91,167,48,138,84,29,161,231],[190,19,115,165,134,114,163,77,16,75,65,146,197,10,133,108,209,153,156,212,113,4,89,85,245,165,151,226,210,163,149,129],[152,122,163,153,81,72,246,203,220,74,73,149,156,131,241,4,3,88,6,218,40,98,97,117,152,221,219,17,88,235,128,66],[70,67,129,75,159,249,39,226,5,85,14,224,238,240,118,161,106,192,61,240,18,105,197,162,95,176,223,0,145,92,208,131],[204,221,63,148,113,152,215,123,40,147,51,86,220,96,81,196,31,61,109,26,31,141,92,233,95,199,192,234,84,233,28,69],[203,15,190,47,112,252,23,176,68,248,54,172,128,217,171,244,162,21,50,92,135,6,109,203,101,20,7,244,208,61,17,168],[170,193,194,54,78,50,241,61,162,45,17,46,248,38,4,170,137,72,211,230,79,246,21,242,227,145,110,185,191,58,205,151],[153,42,20,114,198,119,223,166,226,47,106,30,166,24,32,113,73,88,214,201,40,80,111,7,136,78,226,87,158,86,196,102],[67,172,108,238,98,239,133,181,167,83,30,200,239,12,50,151,133,116,50,220,183,74,115,228,240,110,248,172,201,223,174,47],[58,162,117,55,159,2,241,110,148,67,64,0,50,92,111,171,230,61,201,65,4,14,76,54,235,181,157,96,79,71,151,121],[239,183,25,224,142,41,31,146,112,125,77,249,53,113,0,200,135,156,176,122,242,46,199,205,165,197,183,82,52,202,69,17],[79,134,179,66,75,183,116,76,165,56,39,207,196,241,217,167,2,58,103,33,171,235,15,225,229,161,180,89,247,62,246,245],[170,28,54,165,47,211,131,245,20,84,67,9,76,96,122,235,80,88,47,236,101,68,165,202,27,6,13,111,115,129,229,199],[151,29,5,201,197,57,134,228,61,152,181,211,95,80,52,115,220,60,116,157,147,223,205,160,240,82,18,73,133,48,190,250],[226,66,180,252,213,221,89,222,173,6,216,199,203,88,136,203,213,216,243,220,57,150,103,219,106,191,251,68,173,95,93,209],[42,211,103,146,14,37,70,24,115,28,45,46,191,83,136,19,136,166,238,79,27,7,4,92,44,175,197,241,214,0,50,129],[14,213,99,160,1,28,117,114,73,83,40,96,106,44,100,88,150,148,136,110,144,122,142,38,180,24,141,172,191,116,194,67],[211,23,55,173,100,28,96,238,187,130,202,81,76,16,168,21,89,78,93,168,79,133,194,224,26,52,112,11,34,148,87,170],[238,237,227,48,210,248,3,101,202,182,169,216,107,172,219,5,226,241,246,174,201,46,116,133,186,147,250,89,39,127,138,169],[103,196,7,196,195,146,101,189,109,100,106,254,116,74,203,231,163,54,141,187,188,155,87,253,44,215,164,127,171,215,152,135],[14,147,52,199,221,161,118,52,79,75,40,120,168,33,59,89,18,114,124,84,229,120,140,59,142,81,184,87,57,35,7,119],[134,153,154,148,203,93,151,141,14,105,43,11,242,91,204,124,156,36,143,138,227,23,196,90,71,160,37,84,230,117,40,186],[40,176,180,190,137,242,112,166,184,93,222,124,182,47,183,191,205,92,216,232,233,48,196,131,8,129,34,227,161,25,145,214],[203,75,244,110,117,199,174,241,1,74,214,157,248,161,43,63,252,206,236,197,24,42,74,119,219,12,240,49,234,230,111,61],[42,147,156,6,153,148,13,95,35,202,213,124,233,248,125,125,31,222,66,155,151,237,58,90,110,81,36,238,136,0,226,223],[34,130,168,192,133,223,144,212,173,245,116,158,133,220,109,242,79,132,125,170,18,146,199,130,66,33,164,101,239,24,247,243],[68,73,99,128,54,8,26,171,18,13,111,173,232,237,243,182,128,244,29,135,236,15,174,122,55,114,244,25,94,43,116,142],[120,18,221,50,135,143,30,244,77,64,115,4,100,12,114,209,239,67,195,44,131,119,78,90,162,206,146,31,76,80,69,215],[159,104,144,200,188,100,191,121,103,192,224,14,46,66,171,42,59,36,88,245,55,147,171,243,100,42,187,8,148,162,208,244],[49,210,208,235,212,83,134,37,253,60,32,245,13,79,192,220,92,179,170,88,177,47,128,159,137,204,40,132,81,115,30,200],[205,71,245,21,13,13,201,102,224,48,52,235,235,133,194,93,101,162,123,249,19,61,115,73,110,249,245,71,126,156,61,231],[122,231,89,131,241,38,191,216,216,20,103,36,239,63,40,67,79,135,77,139,29,125,82,13,15,142,158,165,254,55,194,120],[70,181,23,87,157,32,199,164,103,246,239,31,255,52,111,130,90,93,225,193,107,166,237,251,46,250,190,38,82,32,89,119]]",
                "sol": "[bytes32(stringToBytes32(\"173,151,213,150,36,173,93,212,153,229,84,75,206,87,123,63,106,128,223,95,39,233,199,75,253,94,46,42,61,117,198,13\")),bytes32(stringToBytes32(\"83,48,132,57,52,174,20,150,13,211,88,162,239,77,243,36,61,217,194,184,24,74,25,166,185,134,151,157,74,188,199,15\")),bytes32(stringToBytes32(\"113,91,204,175,193,3,244,181,168,11,113,115,230,115,242,64,84,254,233,84,77,93,1,213,181,55,225,161,138,121,180,196\")),bytes32(stringToBytes32(\"170,164,47,210,120,209,124,17,12,101,113,58,91,75,183,160,76,132,48,16,206,5,62,107,165,47,104,1,222,114,190,128\")),bytes32(stringToBytes32(\"23,116,50,20,28,134,252,78,145,131,37,142,254,97,150,186,238,6,114,31,240,126,122,89,114,9,171,198,137,77,205,39\")),bytes32(stringToBytes32(\"211,87,155,200,203,155,187,233,19,180,117,61,109,161,126,29,48,243,201,196,28,189,255,63,211,228,161,252,228,230,255,194\")),bytes32(stringToBytes32(\"210,167,11,106,119,101,119,150,14,147,86,196,92,50,250,55,195,20,113,26,54,13,185,81,177,80,89,126,246,77,80,129\")),bytes32(stringToBytes32(\"100,4,99,68,28,136,104,139,131,51,32,143,90,197,14,178,48,122,172,190,124,27,89,147,211,70,176,135,117,146,97,211\")),bytes32(stringToBytes32(\"70,110,200,4,97,5,19,139,65,250,194,152,225,34,185,17,104,163,230,124,66,193,79,158,48,42,183,37,57,186,150,161\")),bytes32(stringToBytes32(\"19,2,93,221,159,246,166,53,153,48,171,167,180,105,127,131,130,165,121,133,246,26,96,253,199,238,201,71,60,193,255,180\")),bytes32(stringToBytes32(\"17,180,200,185,103,40,222,152,183,66,104,205,30,61,75,187,101,144,245,62,155,227,199,85,244,55,169,197,242,124,106,7\")),bytes32(stringToBytes32(\"222,130,102,229,252,118,118,223,116,145,229,94,182,131,191,194,66,247,32,135,133,237,104,171,63,58,89,20,224,12,94,72\")),bytes32(stringToBytes32(\"207,30,174,251,70,123,69,177,164,84,223,49,197,64,182,137,194,161,81,210,201,109,211,203,220,116,113,15,122,1,242,217\")),bytes32(stringToBytes32(\"168,207,65,234,177,242,121,244,231,148,70,166,192,233,173,26,44,87,215,246,155,23,7,0,94,178,104,223,95,158,154,20\")),bytes32(stringToBytes32(\"220,78,164,51,177,234,76,93,125,240,211,74,169,77,237,245,167,88,92,101,218,138,107,61,249,8,148,163,212,152,61,31\")),bytes32(stringToBytes32(\"61,214,153,175,0,225,197,18,126,29,84,41,15,147,104,68,205,187,1,40,18,183,196,47,146,103,12,74,250,93,178,136\")),bytes32(stringToBytes32(\"127,18,91,58,156,246,22,177,236,108,51,162,195,117,65,108,18,85,69,144,247,78,106,4,9,86,115,149,180,99,152,101\")),bytes32(stringToBytes32(\"166,21,105,125,84,169,142,79,152,139,74,250,49,243,15,166,26,57,66,244,32,171,61,66,66,220,68,150,179,82,169,174\")),bytes32(stringToBytes32(\"167,110,133,40,156,44,248,235,3,117,139,76,20,107,208,7,70,213,154,26,165,213,50,15,49,223,38,155,2,241,218,63\")),bytes32(stringToBytes32(\"15,66,137,221,223,48,249,201,123,234,96,125,26,13,204,252,13,50,192,166,21,206,15,207,120,189,232,77,115,114,221,16\")),bytes32(stringToBytes32(\"32,44,127,213,117,215,3,12,233,4,66,156,12,85,148,132,8,99,199,249,197,252,42,197,136,134,22,30,91,66,101,165\")),bytes32(stringToBytes32(\"72,32,177,146,40,51,197,195,185,244,201,223,43,101,182,172,44,136,213,41,127,15,124,61,158,190,101,131,206,213,249,253\")),bytes32(stringToBytes32(\"130,179,218,30,254,119,253,14,146,70,81,102,26,248,14,5,28,139,90,243,64,74,183,226,8,155,48,143,152,72,80,19\")),bytes32(stringToBytes32(\"163,248,113,163,176,199,35,72,77,18,29,106,65,108,49,233,58,116,223,214,226,139,150,201,175,25,205,72,214,19,21,23\")),bytes32(stringToBytes32(\"193,217,202,17,142,158,186,248,250,195,19,240,99,219,55,36,60,11,184,214,151,68,61,227,18,79,50,130,42,24,252,96\")),bytes32(stringToBytes32(\"123,154,117,6,178,133,7,199,121,58,253,122,235,164,43,77,202,29,128,117,128,46,155,127,48,35,3,152,170,247,200,74\")),bytes32(stringToBytes32(\"147,170,200,214,180,218,134,127,114,255,53,12,0,221,115,184,198,243,82,49,201,221,141,164,70,250,159,221,170,173,195,203\")),bytes32(stringToBytes32(\"197,81,53,241,201,201,118,169,65,200,36,147,252,33,109,193,121,184,198,124,251,253,80,151,93,48,72,220,1,182,9,228\")),bytes32(stringToBytes32(\"86,126,142,5,170,64,222,6,144,252,129,127,25,87,88,199,242,92,35,225,147,82,133,64,26,131,201,190,166,192,32,163\")),bytes32(stringToBytes32(\"255,236,116,251,224,109,121,253,57,40,14,114,112,214,163,2,48,87,161,26,46,133,246,117,32,56,224,211,193,79,199,114\")),bytes32(stringToBytes32(\"86,171,90,47,196,239,222,33,215,146,16,212,87,146,73,193,5,6,181,110,230,172,201,208,117,28,46,211,218,110,102,252\")),bytes32(stringToBytes32(\"141,61,75,27,149,80,224,97,4,108,123,253,147,235,15,177,190,19,48,245,60,179,121,31,246,27,128,206,136,116,154,111\")),bytes32(stringToBytes32(\"59,95,187,132,124,147,21,35,75,8,158,108,254,37,61,188,59,142,13,86,3,80,234,190,93,48,198,81,42,243,220,50\")),bytes32(stringToBytes32(\"235,140,6,0,104,148,240,76,208,21,23,66,27,9,89,243,120,54,48,9,208,178,111,93,91,167,48,138,84,29,161,231\")),bytes32(stringToBytes32(\"190,19,115,165,134,114,163,77,16,75,65,146,197,10,133,108,209,153,156,212,113,4,89,85,245,165,151,226,210,163,149,129\")),bytes32(stringToBytes32(\"152,122,163,153,81,72,246,203,220,74,73,149,156,131,241,4,3,88,6,218,40,98,97,117,152,221,219,17,88,235,128,66\")),bytes32(stringToBytes32(\"70,67,129,75,159,249,39,226,5,85,14,224,238,240,118,161,106,192,61,240,18,105,197,162,95,176,223,0,145,92,208,131\")),bytes32(stringToBytes32(\"204,221,63,148,113,152,215,123,40,147,51,86,220,96,81,196,31,61,109,26,31,141,92,233,95,199,192,234,84,233,28,69\")),bytes32(stringToBytes32(\"203,15,190,47,112,252,23,176,68,248,54,172,128,217,171,244,162,21,50,92,135,6,109,203,101,20,7,244,208,61,17,168\")),bytes32(stringToBytes32(\"170,193,194,54,78,50,241,61,162,45,17,46,248,38,4,170,137,72,211,230,79,246,21,242,227,145,110,185,191,58,205,151\")),bytes32(stringToBytes32(\"153,42,20,114,198,119,223,166,226,47,106,30,166,24,32,113,73,88,214,201,40,80,111,7,136,78,226,87,158,86,196,102\")),bytes32(stringToBytes32(\"67,172,108,238,98,239,133,181,167,83,30,200,239,12,50,151,133,116,50,220,183,74,115,228,240,110,248,172,201,223,174,47\")),bytes32(stringToBytes32(\"58,162,117,55,159,2,241,110,148,67,64,0,50,92,111,171,230,61,201,65,4,14,76,54,235,181,157,96,79,71,151,121\")),bytes32(stringToBytes32(\"239,183,25,224,142,41,31,146,112,125,77,249,53,113,0,200,135,156,176,122,242,46,199,205,165,197,183,82,52,202,69,17\")),bytes32(stringToBytes32(\"79,134,179,66,75,183,116,76,165,56,39,207,196,241,217,167,2,58,103,33,171,235,15,225,229,161,180,89,247,62,246,245\")),bytes32(stringToBytes32(\"170,28,54,165,47,211,131,245,20,84,67,9,76,96,122,235,80,88,47,236,101,68,165,202,27,6,13,111,115,129,229,199\")),bytes32(stringToBytes32(\"151,29,5,201,197,57,134,228,61,152,181,211,95,80,52,115,220,60,116,157,147,223,205,160,240,82,18,73,133,48,190,250\")),bytes32(stringToBytes32(\"226,66,180,252,213,221,89,222,173,6,216,199,203,88,136,203,213,216,243,220,57,150,103,219,106,191,251,68,173,95,93,209\")),bytes32(stringToBytes32(\"42,211,103,146,14,37,70,24,115,28,45,46,191,83,136,19,136,166,238,79,27,7,4,92,44,175,197,241,214,0,50,129\")),bytes32(stringToBytes32(\"14,213,99,160,1,28,117,114,73,83,40,96,106,44,100,88,150,148,136,110,144,122,142,38,180,24,141,172,191,116,194,67\")),bytes32(stringToBytes32(\"211,23,55,173,100,28,96,238,187,130,202,81,76,16,168,21,89,78,93,168,79,133,194,224,26,52,112,11,34,148,87,170\")),bytes32(stringToBytes32(\"238,237,227,48,210,248,3,101,202,182,169,216,107,172,219,5,226,241,246,174,201,46,116,133,186,147,250,89,39,127,138,169\")),bytes32(stringToBytes32(\"103,196,7,196,195,146,101,189,109,100,106,254,116,74,203,231,163,54,141,187,188,155,87,253,44,215,164,127,171,215,152,135\")),bytes32(stringToBytes32(\"14,147,52,199,221,161,118,52,79,75,40,120,168,33,59,89,18,114,124,84,229,120,140,59,142,81,184,87,57,35,7,119\")),bytes32(stringToBytes32(\"134,153,154,148,203,93,151,141,14,105,43,11,242,91,204,124,156,36,143,138,227,23,196,90,71,160,37,84,230,117,40,186\")),bytes32(stringToBytes32(\"40,176,180,190,137,242,112,166,184,93,222,124,182,47,183,191,205,92,216,232,233,48,196,131,8,129,34,227,161,25,145,214\")),bytes32(stringToBytes32(\"203,75,244,110,117,199,174,241,1,74,214,157,248,161,43,63,252,206,236,197,24,42,74,119,219,12,240,49,234,230,111,61\")),bytes32(stringToBytes32(\"42,147,156,6,153,148,13,95,35,202,213,124,233,248,125,125,31,222,66,155,151,237,58,90,110,81,36,238,136,0,226,223\")),bytes32(stringToBytes32(\"34,130,168,192,133,223,144,212,173,245,116,158,133,220,109,242,79,132,125,170,18,146,199,130,66,33,164,101,239,24,247,243\")),bytes32(stringToBytes32(\"68,73,99,128,54,8,26,171,18,13,111,173,232,237,243,182,128,244,29,135,236,15,174,122,55,114,244,25,94,43,116,142\")),bytes32(stringToBytes32(\"120,18,221,50,135,143,30,244,77,64,115,4,100,12,114,209,239,67,195,44,131,119,78,90,162,206,146,31,76,80,69,215\")),bytes32(stringToBytes32(\"159,104,144,200,188,100,191,121,103,192,224,14,46,66,171,42,59,36,88,245,55,147,171,243,100,42,187,8,148,162,208,244\")),bytes32(stringToBytes32(\"49,210,208,235,212,83,134,37,253,60,32,245,13,79,192,220,92,179,170,88,177,47,128,159,137,204,40,132,81,115,30,200\")),bytes32(stringToBytes32(\"205,71,245,21,13,13,201,102,224,48,52,235,235,133,194,93,101,162,123,249,19,61,115,73,110,249,245,71,126,156,61,231\")),bytes32(stringToBytes32(\"122,231,89,131,241,38,191,216,216,20,103,36,239,63,40,67,79,135,77,139,29,125,82,13,15,142,158,165,254,55,194,120\")),bytes32(stringToBytes32(\"70,181,23,87,157,32,199,164,103,246,239,31,255,52,111,130,90,93,225,193,107,166,237,251,46,250,190,38,82,32,89,119\"))]"
              },
              {
                "js": "[[71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48],[1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7],[215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88],[77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24],[222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137],[177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221],[227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136],[253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152],[181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117],[246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186],[149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65],[80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239],[135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155],[245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7],[79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182],[2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219],[220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227],[79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191],[255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167],[235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238],[50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201],[234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217],[211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98],[190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33],[60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56],[43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195],[27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225],[96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168],[159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218],[251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90],[99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197],[157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23],[182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13],[14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38],[255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168],[15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174],[179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43],[12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51],[219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2],[101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166],[246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32],[66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195],[157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102],[47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14],[230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71],[22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116],[146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64],[195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5],[122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34],[28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17],[105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169],[72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153],[252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223],[31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108],[26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135],[233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196],[123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57],[13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154],[171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69],[172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194],[151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17],[204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196],[54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186],[69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8],[221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41],[197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152]]",
                "sol": "[bytes32(stringToBytes32(\"71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48\")),bytes32(stringToBytes32(\"1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7\")),bytes32(stringToBytes32(\"215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88\")),bytes32(stringToBytes32(\"77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24\")),bytes32(stringToBytes32(\"222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137\")),bytes32(stringToBytes32(\"177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221\")),bytes32(stringToBytes32(\"227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136\")),bytes32(stringToBytes32(\"253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152\")),bytes32(stringToBytes32(\"181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117\")),bytes32(stringToBytes32(\"246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186\")),bytes32(stringToBytes32(\"149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65\")),bytes32(stringToBytes32(\"80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239\")),bytes32(stringToBytes32(\"135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155\")),bytes32(stringToBytes32(\"245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7\")),bytes32(stringToBytes32(\"79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182\")),bytes32(stringToBytes32(\"2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219\")),bytes32(stringToBytes32(\"220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227\")),bytes32(stringToBytes32(\"79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191\")),bytes32(stringToBytes32(\"255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167\")),bytes32(stringToBytes32(\"235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238\")),bytes32(stringToBytes32(\"50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201\")),bytes32(stringToBytes32(\"234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217\")),bytes32(stringToBytes32(\"211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98\")),bytes32(stringToBytes32(\"190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33\")),bytes32(stringToBytes32(\"60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56\")),bytes32(stringToBytes32(\"43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195\")),bytes32(stringToBytes32(\"27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225\")),bytes32(stringToBytes32(\"96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168\")),bytes32(stringToBytes32(\"159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218\")),bytes32(stringToBytes32(\"251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90\")),bytes32(stringToBytes32(\"99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197\")),bytes32(stringToBytes32(\"157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23\")),bytes32(stringToBytes32(\"182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13\")),bytes32(stringToBytes32(\"14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38\")),bytes32(stringToBytes32(\"255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168\")),bytes32(stringToBytes32(\"15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174\")),bytes32(stringToBytes32(\"179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43\")),bytes32(stringToBytes32(\"12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51\")),bytes32(stringToBytes32(\"219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2\")),bytes32(stringToBytes32(\"101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166\")),bytes32(stringToBytes32(\"246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32\")),bytes32(stringToBytes32(\"66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195\")),bytes32(stringToBytes32(\"157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102\")),bytes32(stringToBytes32(\"47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14\")),bytes32(stringToBytes32(\"230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71\")),bytes32(stringToBytes32(\"22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116\")),bytes32(stringToBytes32(\"146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64\")),bytes32(stringToBytes32(\"195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5\")),bytes32(stringToBytes32(\"122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34\")),bytes32(stringToBytes32(\"28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17\")),bytes32(stringToBytes32(\"105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169\")),bytes32(stringToBytes32(\"72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153\")),bytes32(stringToBytes32(\"252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223\")),bytes32(stringToBytes32(\"31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108\")),bytes32(stringToBytes32(\"26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135\")),bytes32(stringToBytes32(\"233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196\")),bytes32(stringToBytes32(\"123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57\")),bytes32(stringToBytes32(\"13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154\")),bytes32(stringToBytes32(\"171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69\")),bytes32(stringToBytes32(\"172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194\")),bytes32(stringToBytes32(\"151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17\")),bytes32(stringToBytes32(\"204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196\")),bytes32(stringToBytes32(\"54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186\")),bytes32(stringToBytes32(\"69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8\")),bytes32(stringToBytes32(\"221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41\")),bytes32(stringToBytes32(\"197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length == _usersVote.length",
            "parameters": [
              {
                "js": "[[196,222,240,103,240,196,47,74,169,79,109,157,227,177,170,238,121,155,202,49,83,34,8,235,115,230,102,125,221,29,140,241],[112,88,72,14,71,188,60,197,254,226,246,115,17,12,253,139,51,86,189,73,170,235,51,8,13,34,134,31,222,23,217,215],[245,118,27,32,211,165,151,142,17,27,201,245,202,25,115,149,206,185,87,237,44,181,201,253,190,186,70,147,33,226,76,171],[220,218,58,177,59,213,114,238,108,203,116,103,74,127,234,117,181,65,219,145,236,31,59,98,41,193,134,151,116,184,222,23],[234,224,7,19,208,81,86,239,13,118,82,205,36,188,4,113,6,183,241,227,183,191,218,238,191,67,91,43,31,220,215,238],[224,66,34,197,85,235,131,172,94,125,54,235,109,91,73,109,27,106,119,156,191,168,171,227,209,236,65,69,75,186,247,124],[44,195,134,43,79,227,184,44,13,146,20,127,76,169,245,137,49,84,156,219,186,4,180,151,98,79,193,123,26,154,243,162],[115,161,246,117,101,240,160,200,106,46,69,152,16,194,66,153,60,78,3,113,29,193,115,18,143,33,186,143,57,253,163,54],[167,245,208,121,124,76,242,154,18,152,205,229,133,213,19,56,43,79,33,21,68,156,135,221,148,73,135,87,232,246,146,229],[237,208,53,78,94,142,219,69,46,38,60,75,246,16,141,198,183,74,193,77,158,137,217,235,216,168,229,203,210,19,10,173],[178,201,241,216,130,99,19,128,90,177,130,40,118,229,141,204,52,44,168,214,89,89,202,101,222,204,187,164,118,18,85,215],[194,242,9,210,105,174,243,109,64,64,132,193,190,118,152,6,63,174,8,214,123,46,37,42,188,240,100,254,122,94,128,180],[124,75,230,168,24,239,91,234,0,57,224,30,136,37,86,53,74,126,172,208,112,181,234,71,28,213,0,176,214,39,223,191],[222,237,89,43,203,253,23,11,104,35,143,140,81,121,11,148,158,200,216,88,158,200,123,88,156,254,19,146,96,210,187,184],[133,16,120,106,224,64,179,231,176,12,94,207,204,66,168,22,34,185,68,207,152,149,15,106,246,105,146,101,252,5,67,152],[138,105,243,105,253,19,63,233,30,226,50,87,1,2,98,153,29,101,11,16,47,206,124,131,95,173,30,151,33,16,81,89],[218,254,16,190,49,81,54,114,23,1,241,93,118,232,149,115,146,144,195,64,2,107,192,223,91,214,124,130,250,161,115,124],[93,91,107,8,176,138,253,106,101,103,223,48,169,230,181,249,65,195,8,184,196,23,41,70,98,241,237,221,50,160,177,151],[238,122,104,3,38,25,202,166,214,219,202,87,142,125,253,70,1,220,18,224,175,235,164,187,96,150,44,204,99,254,119,4],[222,10,49,124,72,162,3,245,21,73,107,118,76,249,32,217,142,71,174,234,252,78,196,151,140,197,234,136,186,6,9,31],[210,246,131,105,132,220,186,86,127,117,88,83,173,70,19,148,12,145,119,96,18,10,60,91,103,47,121,100,202,6,9,174],[208,92,62,224,147,113,124,122,101,90,177,217,108,145,199,147,40,55,178,22,62,134,164,148,20,252,157,60,41,102,95,39],[42,146,141,184,94,61,160,31,195,176,220,97,184,187,190,29,126,155,16,186,209,175,14,11,170,20,7,159,137,238,215,68],[126,103,189,202,250,190,26,149,108,64,252,124,217,13,26,199,187,199,191,153,38,232,240,237,89,10,74,155,145,102,169,127],[253,185,15,44,115,234,161,104,32,24,114,238,116,194,66,119,190,247,135,3,208,127,25,100,95,79,46,84,56,30,97,201],[178,172,212,157,136,25,36,28,199,154,38,86,150,150,248,2,136,13,123,183,172,50,134,146,239,104,206,98,111,90,32,241],[124,43,49,37,104,7,54,33,209,244,111,85,150,11,86,56,103,69,159,195,240,214,234,0,242,245,204,23,3,193,124,61],[138,248,158,70,245,203,212,161,44,23,143,155,182,81,102,200,25,6,214,223,225,28,178,112,244,224,113,182,131,18,154,21],[107,64,26,24,58,189,102,190,220,135,59,211,11,158,31,116,252,62,216,56,128,203,210,148,177,109,89,40,142,206,239,121],[216,137,150,128,105,196,77,148,110,140,211,109,231,14,25,83,28,168,190,120,17,71,16,179,0,42,245,88,19,189,65,240],[163,236,40,56,187,190,200,177,113,81,120,199,42,169,80,129,171,58,231,222,238,24,112,23,187,46,55,8,58,140,190,159],[241,202,130,90,197,21,199,194,61,156,139,199,116,74,194,100,60,250,116,29,234,247,192,161,30,133,38,72,202,144,65,69],[106,246,46,29,100,1,26,193,75,105,176,230,74,11,193,92,223,167,102,50,81,37,183,159,85,90,77,90,191,200,150,126],[181,215,65,3,154,171,173,71,171,1,190,120,208,68,217,209,86,112,150,227,224,233,26,245,27,127,208,179,13,31,114,112],[1,71,193,66,57,193,100,222,35,176,111,188,148,145,36,10,181,127,212,248,224,5,130,113,95,100,151,126,84,236,10,97],[140,187,84,24,239,93,107,62,2,19,188,113,199,199,70,196,20,68,43,15,244,119,22,88,180,93,208,61,48,100,18,49],[236,225,167,228,70,242,224,239,72,215,163,196,213,131,185,223,31,235,182,165,101,220,10,158,110,210,229,11,15,165,33,1],[112,164,59,229,36,129,180,95,249,144,90,27,149,216,28,33,100,44,196,248,120,52,26,243,108,189,74,67,61,91,217,6],[83,223,76,48,154,241,111,35,44,6,105,213,35,183,123,58,187,27,109,104,14,76,80,236,47,119,139,191,175,2,204,163],[164,14,119,73,110,218,215,3,96,0,27,250,88,100,125,178,121,234,106,222,17,66,206,242,205,143,237,128,95,252,37,68],[71,81,69,127,15,154,215,37,205,235,173,63,129,80,188,139,228,236,49,96,54,164,183,12,226,9,111,255,86,99,101,83],[180,124,67,50,66,31,125,73,140,54,252,180,202,169,11,82,44,64,153,126,19,107,156,126,199,52,201,119,210,85,80,22],[73,83,143,90,203,205,0,153,3,162,234,226,24,46,249,219,239,19,137,18,48,134,28,242,60,72,84,149,153,129,213,40],[103,212,29,123,120,70,152,255,60,72,15,66,113,138,177,191,99,211,213,175,177,77,157,59,13,216,16,124,67,113,243,187],[167,255,76,16,4,234,148,177,80,110,215,131,4,215,233,64,107,132,100,93,193,191,72,185,37,110,138,202,103,84,29,67],[89,82,252,118,143,129,229,38,96,197,159,95,46,63,226,193,63,246,155,125,118,12,202,141,1,220,219,179,136,79,10,86],[189,134,138,217,24,226,241,220,177,157,78,210,254,70,217,98,160,69,36,13,102,241,180,72,137,102,74,29,70,168,0,228],[121,239,244,60,190,8,154,167,232,78,235,233,234,184,108,151,13,221,227,73,32,96,63,192,246,66,15,222,179,182,202,14],[119,190,195,184,245,53,222,242,254,175,13,66,136,244,138,36,196,151,42,143,221,4,34,74,168,119,51,1,137,181,61,69],[94,32,244,211,37,222,64,241,220,178,141,77,71,137,151,26,100,104,129,187,134,247,26,175,13,225,165,105,127,210,135,172],[178,205,87,8,210,93,32,57,252,202,101,185,186,217,187,247,179,207,195,102,144,45,4,136,20,78,152,191,236,159,10,43],[60,243,128,253,67,108,45,197,24,169,17,6,190,66,138,253,199,205,250,82,0,230,51,241,113,26,130,3,185,56,198,119],[222,249,35,177,165,172,138,186,103,11,208,184,122,9,5,3,199,191,19,96,49,135,189,159,194,254,139,112,209,252,178,23],[127,183,228,201,156,3,109,90,132,111,70,170,39,83,46,248,237,198,228,113,231,236,222,95,35,134,48,147,53,50,94,171],[185,100,48,147,253,205,45,153,252,64,81,110,224,37,25,114,71,217,252,185,185,75,252,26,179,111,225,7,155,131,248,68],[93,233,198,113,210,193,73,6,149,124,13,116,12,93,147,217,209,93,127,135,81,141,102,208,73,218,171,216,244,178,82,235],[177,68,83,169,132,221,101,136,227,89,78,135,83,56,145,126,39,210,100,181,221,38,142,11,212,167,127,34,135,232,119,97],[203,122,54,210,18,244,237,130,86,76,74,198,160,53,67,124,126,227,237,105,42,9,55,25,201,135,207,74,156,154,138,156],[216,98,8,130,92,103,150,65,220,182,174,164,239,192,242,105,144,54,175,244,198,8,212,88,80,187,175,16,132,10,31,192],[146,36,202,171,110,193,1,35,35,184,143,160,78,16,16,166,101,90,12,83,9,107,145,213,9,111,212,2,41,62,27,220],[102,254,243,84,178,192,106,156,222,181,238,186,225,19,30,123,253,141,131,120,88,79,50,140,144,137,145,77,119,70,31,140],[231,43,250,146,77,47,222,127,17,182,232,34,218,230,4,244,149,245,86,33,127,3,155,95,216,10,231,73,66,85,221,187],[121,99,133,99,193,95,45,202,133,171,222,134,135,195,217,51,252,212,25,155,78,151,108,157,103,74,23,176,8,5,142,73],[114,37,198,83,81,116,17,177,214,231,190,69,247,239,10,15,1,151,62,213,10,245,165,91,52,56,19,133,193,196,254,145],[222,225,34,141,162,240,60,215,96,52,197,19,40,196,10,87,69,117,148,18,191,66,126,119,11,150,201,91,33,14,118,129],[182,250,54,224,6,85,167,55,199,159,86,16,97,31,244,98,255,18,8,144,18,158,162,51,239,68,18,50,53,194,78,2],[118,155,143,192,246,8,54,231,251,107,148,107,32,130,69,77,86,190,203,204,173,247,34,134,154,236,83,106,187,200,143,107]]",
                "sol": "[stringToBytes32(\"145,193,195,97,5,24,109,125,139,132,149,252,151,193,207,29,133,208,119,201,172,240,209,152,44,179,43,105,32,66,84,44\"),stringToBytes32(\"103,25,74,177,93,186,174,122,175,84,51,168,125,24,28,169,107,117,87,106,99,100,80,174,48,78,239,129,79,3,173,151\"),stringToBytes32(\"229,132,106,159,56,169,207,98,223,127,54,126,192,200,188,114,93,252,73,3,174,7,171,64,82,137,130,2,243,196,162,105\"),stringToBytes32(\"162,183,15,24,10,104,65,148,50,49,150,39,210,54,49,22,198,250,85,90,77,93,72,239,232,205,105,115,111,114,242,59\"),stringToBytes32(\"203,6,204,196,21,19,240,132,192,15,41,39,10,188,139,155,10,53,129,238,71,161,165,133,205,112,134,1,86,23,44,142\"),stringToBytes32(\"206,245,196,203,227,181,18,131,131,207,40,52,199,78,1,106,82,3,33,107,124,202,142,16,54,24,229,67,65,229,225,164\"),stringToBytes32(\"254,187,190,236,235,152,99,124,108,249,245,97,215,29,162,201,104,57,151,30,72,97,167,212,26,52,131,222,25,214,174,87\"),stringToBytes32(\"199,74,212,2,118,140,195,201,72,151,208,83,16,124,225,113,123,38,140,124,111,70,233,251,70,62,227,244,190,231,101,242\"),stringToBytes32(\"91,200,14,181,229,235,34,0,70,248,8,13,173,104,30,202,45,199,106,11,207,143,207,18,72,127,40,141,133,190,127,255\"),stringToBytes32(\"219,227,205,67,80,180,154,133,191,222,193,215,175,148,134,118,80,41,86,9,168,83,123,228,53,245,93,132,159,46,162,96\"),stringToBytes32(\"198,176,20,128,128,96,108,39,27,36,141,239,178,202,37,165,16,169,136,215,17,0,54,149,150,61,29,7,98,125,193,136\"),stringToBytes32(\"221,25,145,174,31,65,235,62,190,119,8,22,247,221,194,180,251,176,87,106,200,47,25,201,131,158,50,20,207,229,230,4\"),stringToBytes32(\"22,226,161,141,64,56,35,91,42,207,19,220,98,239,177,246,95,228,11,253,188,247,156,95,245,77,75,171,124,182,204,206\"),stringToBytes32(\"11,17,212,22,65,171,166,108,230,181,166,94,154,110,212,195,97,136,121,211,225,197,108,239,25,53,232,168,101,139,37,20\"),stringToBytes32(\"9,4,204,23,123,141,79,35,87,124,118,48,108,65,21,137,132,172,123,47,127,70,200,195,29,249,89,208,64,80,88,103\"),stringToBytes32(\"54,237,200,57,22,32,246,79,99,203,162,152,82,132,252,248,214,194,137,78,72,198,107,28,13,68,103,120,129,96,192,90\"),stringToBytes32(\"157,201,211,22,207,192,194,220,36,102,103,181,10,62,141,163,57,111,167,142,10,126,142,37,246,85,102,221,166,188,255,209\"),stringToBytes32(\"184,54,137,94,17,162,7,58,132,45,98,252,248,122,98,17,167,137,12,122,215,72,168,61,129,243,21,217,227,61,209,118\"),stringToBytes32(\"12,71,177,50,36,196,216,170,223,107,45,68,164,174,39,69,194,112,79,209,130,208,102,240,100,241,72,144,153,133,140,128\"),stringToBytes32(\"16,127,131,200,149,143,61,128,138,224,239,73,33,221,213,242,89,210,70,123,214,239,123,233,253,1,44,152,92,246,10,199\"),stringToBytes32(\"96,169,142,218,47,219,37,225,10,119,129,78,131,59,78,195,150,5,163,236,156,198,204,130,88,94,152,224,67,136,173,136\"),stringToBytes32(\"124,35,5,217,193,231,230,248,15,214,88,77,152,6,140,219,151,227,178,204,156,114,102,14,235,125,37,141,138,50,123,30\"),stringToBytes32(\"237,18,196,136,199,59,203,109,49,160,208,205,179,190,242,217,177,223,74,122,55,252,228,60,224,122,73,125,125,2,96,75\"),stringToBytes32(\"213,230,30,213,136,234,140,30,68,49,255,240,39,230,35,156,73,67,191,176,19,245,72,203,72,243,168,89,116,244,46,212\"),stringToBytes32(\"146,128,239,141,126,108,219,233,37,107,146,144,210,120,29,141,191,164,23,98,95,167,185,254,24,186,101,228,255,25,109,229\"),stringToBytes32(\"181,16,6,200,224,107,38,204,103,238,159,177,40,153,10,71,250,221,116,145,33,45,172,180,10,80,130,59,129,242,46,81\"),stringToBytes32(\"59,175,223,240,160,212,32,52,96,100,12,87,72,30,169,35,115,195,24,74,120,235,1,92,199,0,137,65,146,56,49,3\"),stringToBytes32(\"170,211,180,44,100,211,253,58,206,76,11,29,74,145,75,215,233,134,167,192,107,182,197,228,48,18,164,195,204,163,36,5\"),stringToBytes32(\"183,13,153,126,212,61,113,117,249,158,252,200,199,149,127,9,44,211,106,217,9,123,236,0,208,217,78,47,9,26,104,35\"),stringToBytes32(\"111,11,41,77,102,199,48,40,80,242,3,102,230,17,25,96,22,142,187,114,230,252,97,137,71,203,222,87,36,162,67,88\"),stringToBytes32(\"3,233,215,199,72,57,145,127,143,159,254,156,232,184,197,105,174,144,44,175,6,215,227,237,19,173,48,160,40,36,217,17\"),stringToBytes32(\"174,96,96,91,133,1,176,133,118,220,211,3,58,197,20,249,67,138,134,39,59,34,177,20,122,13,252,94,121,38,81,228\"),stringToBytes32(\"114,145,244,6,202,117,36,27,33,248,54,220,139,21,238,244,158,84,59,175,158,105,106,110,88,222,83,142,59,206,101,136\"),stringToBytes32(\"112,69,182,19,203,187,68,87,24,172,29,253,189,79,76,204,39,135,248,86,229,219,16,109,101,160,245,113,145,62,79,82\"),stringToBytes32(\"163,91,151,89,144,20,105,190,187,247,95,197,103,225,230,41,11,177,184,23,115,250,97,187,95,85,116,106,203,215,61,98\"),stringToBytes32(\"32,110,104,253,45,122,35,254,240,141,58,15,37,245,165,88,24,95,240,68,196,192,95,115,160,150,36,84,199,91,206,35\"),stringToBytes32(\"70,210,26,149,62,94,209,109,92,139,13,195,112,24,160,73,140,89,102,240,232,122,58,43,43,20,219,111,205,64,71,35\"),stringToBytes32(\"149,79,57,190,48,205,135,59,115,237,75,176,109,158,135,148,18,54,2,56,91,253,120,106,242,43,187,50,204,52,111,99\"),stringToBytes32(\"250,16,238,39,247,162,225,31,234,123,230,43,74,91,193,200,28,98,151,233,209,161,246,252,51,68,93,203,10,166,242,175\"),stringToBytes32(\"154,75,95,56,30,216,131,177,135,179,171,44,28,232,25,238,38,222,228,112,150,60,15,158,19,167,132,88,237,213,201,21\"),stringToBytes32(\"72,236,137,142,131,58,255,172,224,199,19,159,199,235,163,124,41,70,22,252,74,255,156,223,228,78,211,81,44,224,44,217\"),stringToBytes32(\"242,225,51,186,146,121,120,102,44,212,217,148,143,203,19,105,67,93,60,197,56,129,117,126,94,33,52,202,194,11,255,52\"),stringToBytes32(\"145,193,101,238,121,144,55,221,249,34,23,159,115,1,115,248,88,212,106,109,248,208,218,206,156,118,108,126,180,150,3,88\"),stringToBytes32(\"50,15,237,4,221,243,54,88,82,175,244,237,192,251,251,22,141,57,145,77,179,147,212,131,189,111,186,82,142,154,37,203\"),stringToBytes32(\"36,28,161,174,101,104,222,212,22,201,17,155,233,82,54,57,106,206,161,183,200,23,251,133,215,208,219,34,81,112,119,130\"),stringToBytes32(\"116,88,142,225,65,89,202,235,132,120,107,89,203,225,150,201,8,107,102,151,221,30,96,212,37,86,198,160,154,133,46,205\"),stringToBytes32(\"90,59,110,228,114,47,231,43,110,27,89,113,220,197,113,241,202,163,38,245,126,163,172,217,113,146,123,195,122,37,134,241\"),stringToBytes32(\"220,105,139,45,159,24,128,25,147,113,76,58,213,84,193,65,69,189,0,63,49,245,62,21,192,20,54,106,70,164,76,186\"),stringToBytes32(\"146,69,11,60,126,189,160,217,175,182,237,153,33,128,114,122,240,188,187,180,178,183,55,75,114,2,170,100,103,164,188,103\"),stringToBytes32(\"60,182,108,57,255,163,235,86,17,35,143,143,24,105,97,2,216,62,186,161,66,98,42,112,195,113,252,102,24,199,154,64\"),stringToBytes32(\"54,175,28,31,154,157,246,150,69,120,181,254,49,184,230,28,157,91,158,48,192,100,250,206,230,124,39,255,184,195,96,220\"),stringToBytes32(\"32,156,53,184,53,25,199,82,140,243,96,154,183,40,233,55,240,180,220,40,198,96,214,110,212,148,123,39,137,123,124,121\"),stringToBytes32(\"32,109,129,179,182,25,112,62,118,244,200,18,127,71,125,234,74,190,207,86,83,105,240,56,251,176,36,228,207,38,193,155\"),stringToBytes32(\"203,126,138,41,183,153,88,137,81,158,9,53,140,164,180,189,157,171,222,69,222,88,188,94,152,57,85,25,226,95,229,217\"),stringToBytes32(\"5,205,50,23,46,146,220,189,231,12,237,53,201,231,72,65,160,174,185,30,167,99,19,6,192,212,110,197,229,96,38,93\"),stringToBytes32(\"155,120,207,10,197,83,162,103,58,82,7,36,246,175,55,210,146,66,86,37,123,41,64,163,3,67,243,76,144,77,217,226\"),stringToBytes32(\"94,219,252,159,239,254,230,34,133,11,49,18,71,170,197,190,5,26,120,195,2,95,249,190,249,38,251,244,11,27,58,2\"),stringToBytes32(\"144,140,37,165,230,108,231,168,15,171,235,25,92,80,45,79,207,187,96,42,2,41,209,136,244,232,214,194,33,140,230,173\"),stringToBytes32(\"36,184,46,247,58,208,206,244,185,9,125,155,126,82,68,138,183,81,182,84,236,252,168,80,196,91,136,99,97,232,92,238\"),stringToBytes32(\"78,236,185,171,204,170,158,105,11,177,69,93,245,95,139,121,73,94,154,78,113,132,108,157,157,113,16,17,136,61,61,193\"),stringToBytes32(\"61,152,36,49,135,203,248,152,96,201,247,158,96,118,209,192,172,110,83,255,154,186,9,79,188,126,230,112,176,240,229,104\"),stringToBytes32(\"56,186,44,95,181,98,241,97,23,47,24,174,61,122,196,219,16,79,214,161,159,193,194,58,10,218,237,229,156,34,124,93\"),stringToBytes32(\"201,190,99,186,86,77,34,230,15,125,87,209,223,180,11,103,222,141,113,176,178,207,28,249,217,200,50,129,100,37,204,61\"),stringToBytes32(\"234,126,190,93,234,163,67,115,62,241,217,58,139,180,29,129,42,89,152,26,15,128,232,236,44,238,152,105,133,88,152,87\"),stringToBytes32(\"112,43,232,58,100,107,109,100,75,38,82,124,223,226,203,146,115,97,63,242,151,170,36,84,84,13,255,237,232,223,5,109\"),stringToBytes32(\"100,159,59,73,185,112,125,137,23,107,226,44,50,150,74,27,141,36,205,16,125,216,24,196,167,149,170,65,109,62,93,9\"),stringToBytes32(\"62,6,91,48,138,152,45,102,198,103,213,119,208,32,13,200,72,98,51,4,209,124,225,193,61,20,1,168,119,210,205,239\")]"
              },
              {
                "js": "[[71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48],[1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7],[215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88],[77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24],[222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137],[177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221],[227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136],[253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152],[181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117],[246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186],[149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65],[80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239],[135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155],[245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7],[79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182],[2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219],[220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227],[79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191],[255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167],[235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238],[50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201],[234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217],[211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98],[190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33],[60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56],[43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195],[27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225],[96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168],[159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218],[251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90],[99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197],[157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23],[182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13],[14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38],[255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168],[15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174],[179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43],[12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51],[219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2],[101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166],[246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32],[66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195],[157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102],[47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14],[230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71],[22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116],[146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64],[195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5],[122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34],[28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17],[105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169],[72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153],[252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223],[31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108],[26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135],[233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196],[123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57],[13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154],[171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69],[172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194],[151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17],[204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196],[54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186],[69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8],[221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41],[197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152]]",
                "sol": "[bytes32(stringToBytes32(\"71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48\")),bytes32(stringToBytes32(\"1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7\")),bytes32(stringToBytes32(\"215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88\")),bytes32(stringToBytes32(\"77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24\")),bytes32(stringToBytes32(\"222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137\")),bytes32(stringToBytes32(\"177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221\")),bytes32(stringToBytes32(\"227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136\")),bytes32(stringToBytes32(\"253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152\")),bytes32(stringToBytes32(\"181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117\")),bytes32(stringToBytes32(\"246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186\")),bytes32(stringToBytes32(\"149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65\")),bytes32(stringToBytes32(\"80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239\")),bytes32(stringToBytes32(\"135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155\")),bytes32(stringToBytes32(\"245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7\")),bytes32(stringToBytes32(\"79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182\")),bytes32(stringToBytes32(\"2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219\")),bytes32(stringToBytes32(\"220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227\")),bytes32(stringToBytes32(\"79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191\")),bytes32(stringToBytes32(\"255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167\")),bytes32(stringToBytes32(\"235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238\")),bytes32(stringToBytes32(\"50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201\")),bytes32(stringToBytes32(\"234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217\")),bytes32(stringToBytes32(\"211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98\")),bytes32(stringToBytes32(\"190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33\")),bytes32(stringToBytes32(\"60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56\")),bytes32(stringToBytes32(\"43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195\")),bytes32(stringToBytes32(\"27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225\")),bytes32(stringToBytes32(\"96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168\")),bytes32(stringToBytes32(\"159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218\")),bytes32(stringToBytes32(\"251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90\")),bytes32(stringToBytes32(\"99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197\")),bytes32(stringToBytes32(\"157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23\")),bytes32(stringToBytes32(\"182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13\")),bytes32(stringToBytes32(\"14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38\")),bytes32(stringToBytes32(\"255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168\")),bytes32(stringToBytes32(\"15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174\")),bytes32(stringToBytes32(\"179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43\")),bytes32(stringToBytes32(\"12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51\")),bytes32(stringToBytes32(\"219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2\")),bytes32(stringToBytes32(\"101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166\")),bytes32(stringToBytes32(\"246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32\")),bytes32(stringToBytes32(\"66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195\")),bytes32(stringToBytes32(\"157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102\")),bytes32(stringToBytes32(\"47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14\")),bytes32(stringToBytes32(\"230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71\")),bytes32(stringToBytes32(\"22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116\")),bytes32(stringToBytes32(\"146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64\")),bytes32(stringToBytes32(\"195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5\")),bytes32(stringToBytes32(\"122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34\")),bytes32(stringToBytes32(\"28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17\")),bytes32(stringToBytes32(\"105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169\")),bytes32(stringToBytes32(\"72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153\")),bytes32(stringToBytes32(\"252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223\")),bytes32(stringToBytes32(\"31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108\")),bytes32(stringToBytes32(\"26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135\")),bytes32(stringToBytes32(\"233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196\")),bytes32(stringToBytes32(\"123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57\")),bytes32(stringToBytes32(\"13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154\")),bytes32(stringToBytes32(\"171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69\")),bytes32(stringToBytes32(\"172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194\")),bytes32(stringToBytes32(\"151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17\")),bytes32(stringToBytes32(\"204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196\")),bytes32(stringToBytes32(\"54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186\")),bytes32(stringToBytes32(\"69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8\")),bytes32(stringToBytes32(\"221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41\")),bytes32(stringToBytes32(\"197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length != 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[[71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48],[1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7],[215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88],[77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24],[222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137],[177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221],[227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136],[253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152],[181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117],[246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186],[149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65],[80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239],[135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155],[245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7],[79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182],[2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219],[220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227],[79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191],[255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167],[235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238],[50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201],[234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217],[211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98],[190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33],[60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56],[43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195],[27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225],[96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168],[159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218],[251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90],[99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197],[157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23],[182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13],[14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38],[255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168],[15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174],[179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43],[12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51],[219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2],[101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166],[246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32],[66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195],[157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102],[47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14],[230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71],[22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116],[146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64],[195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5],[122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34],[28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17],[105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169],[72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153],[252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223],[31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108],[26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135],[233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196],[123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57],[13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154],[171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69],[172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194],[151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17],[204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196],[54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186],[69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8],[221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41],[197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152]]",
                "sol": "[bytes32(stringToBytes32(\"71,79,55,201,28,214,1,45,100,111,191,18,178,229,218,141,99,184,92,19,9,203,158,141,69,46,74,12,117,178,35,48\")),bytes32(stringToBytes32(\"1,106,174,148,31,186,106,214,134,56,96,98,140,228,187,44,24,171,99,181,208,126,104,221,228,183,201,154,238,11,214,7\")),bytes32(stringToBytes32(\"215,164,115,46,227,140,33,102,108,93,210,206,89,206,97,151,65,106,102,128,244,207,246,177,37,97,111,6,151,238,162,88\")),bytes32(stringToBytes32(\"77,4,155,162,6,237,20,138,225,31,232,153,98,29,47,51,213,229,201,141,169,156,138,49,164,101,132,25,206,106,156,24\")),bytes32(stringToBytes32(\"222,220,22,168,10,15,209,250,140,240,247,28,157,75,171,206,11,223,83,55,93,92,9,249,203,63,27,239,59,220,136,137\")),bytes32(stringToBytes32(\"177,104,244,38,68,152,129,129,211,82,159,132,146,251,201,160,114,174,182,202,33,11,152,110,222,147,53,142,82,164,147,221\")),bytes32(stringToBytes32(\"227,195,85,100,143,14,249,196,100,203,47,80,163,36,85,231,196,81,103,118,30,93,66,222,238,33,183,157,221,37,68,136\")),bytes32(stringToBytes32(\"253,193,173,204,94,40,227,184,168,187,203,253,82,4,191,218,174,94,240,182,76,47,227,53,94,187,117,170,29,29,31,152\")),bytes32(stringToBytes32(\"181,139,110,48,250,197,230,51,145,4,231,88,46,142,19,216,117,138,75,19,251,23,229,48,108,136,166,197,226,238,227,117\")),bytes32(stringToBytes32(\"246,141,137,245,137,148,139,69,216,17,43,217,54,64,165,174,51,137,48,4,38,14,29,64,73,5,147,136,58,224,206,186\")),bytes32(stringToBytes32(\"149,62,244,88,145,101,237,9,175,178,230,183,1,251,74,5,109,33,47,35,121,110,56,230,210,154,208,230,101,105,147,65\")),bytes32(stringToBytes32(\"80,117,112,201,64,94,47,56,117,33,7,91,119,213,74,96,167,37,207,153,25,248,29,198,98,166,56,117,20,14,130,239\")),bytes32(stringToBytes32(\"135,69,117,65,220,139,208,248,21,120,180,52,24,220,216,39,231,190,98,189,5,151,237,112,99,106,123,10,181,19,196,155\")),bytes32(stringToBytes32(\"245,217,61,162,174,147,217,28,207,77,219,232,236,217,175,226,205,64,59,236,4,23,53,91,189,112,205,56,196,255,48,7\")),bytes32(stringToBytes32(\"79,236,177,107,109,208,246,98,136,245,237,18,193,83,47,244,173,252,77,167,217,170,41,207,68,59,73,230,157,199,225,182\")),bytes32(stringToBytes32(\"2,153,122,192,202,253,153,46,107,39,187,41,251,3,222,8,79,12,212,180,10,133,133,107,1,154,74,186,18,163,55,219\")),bytes32(stringToBytes32(\"220,83,255,191,40,188,23,184,146,132,26,98,47,243,212,192,87,133,234,53,173,96,90,251,251,32,210,36,84,41,46,227\")),bytes32(stringToBytes32(\"79,146,18,145,205,244,173,213,141,243,31,73,214,192,16,9,60,229,99,110,46,162,45,173,53,110,93,87,74,28,11,191\")),bytes32(stringToBytes32(\"255,187,209,184,155,37,165,217,44,103,126,196,58,2,207,55,168,219,71,135,26,120,166,232,226,154,242,52,37,153,52,167\")),bytes32(stringToBytes32(\"235,54,67,8,176,77,174,39,90,216,130,40,181,44,131,75,90,130,128,48,96,62,226,150,108,163,153,205,168,250,196,238\")),bytes32(stringToBytes32(\"50,64,98,27,17,245,96,199,106,217,87,114,145,94,90,42,161,247,49,252,179,111,2,33,32,90,180,192,44,13,155,201\")),bytes32(stringToBytes32(\"234,133,188,63,136,169,50,29,193,237,58,169,106,38,193,115,157,240,142,38,184,77,44,243,235,164,214,103,76,82,225,217\")),bytes32(stringToBytes32(\"211,253,248,72,200,56,90,162,139,123,73,62,34,64,140,69,11,157,225,51,20,5,185,3,180,103,133,8,98,150,135,98\")),bytes32(stringToBytes32(\"190,95,201,31,156,30,182,200,123,231,16,214,146,122,184,96,137,131,19,133,168,231,125,83,247,249,42,100,17,46,123,33\")),bytes32(stringToBytes32(\"60,195,202,130,146,76,215,232,11,120,254,27,35,15,163,173,158,200,254,21,195,29,163,34,49,161,10,200,96,104,167,56\")),bytes32(stringToBytes32(\"43,7,175,12,9,233,33,194,130,221,238,105,28,22,222,178,47,29,238,93,138,173,21,217,73,226,174,86,31,214,212,195\")),bytes32(stringToBytes32(\"27,98,6,111,84,165,159,124,221,186,39,249,6,54,37,86,249,101,69,91,105,134,246,70,91,218,98,252,18,119,158,225\")),bytes32(stringToBytes32(\"96,61,156,19,20,251,129,235,147,141,88,128,72,228,180,93,30,219,31,16,104,139,178,41,5,66,179,244,14,136,223,168\")),bytes32(stringToBytes32(\"159,92,157,116,67,123,100,147,52,135,251,207,26,108,92,232,87,18,71,239,195,141,205,11,208,93,85,229,75,53,238,218\")),bytes32(stringToBytes32(\"251,69,182,255,199,112,29,215,43,185,99,137,196,196,154,121,234,169,122,171,8,78,181,122,190,218,1,100,46,195,161,90\")),bytes32(stringToBytes32(\"99,220,58,185,24,18,149,234,99,236,59,231,147,14,141,65,125,255,235,254,214,1,211,215,191,150,217,244,188,186,104,197\")),bytes32(stringToBytes32(\"157,131,149,116,42,210,120,176,155,59,125,221,183,1,13,18,39,230,57,141,125,211,86,253,214,127,186,125,196,139,246,23\")),bytes32(stringToBytes32(\"182,43,220,132,144,86,208,234,204,152,52,16,204,48,225,0,69,60,223,126,142,25,74,50,254,49,102,151,75,166,61,13\")),bytes32(stringToBytes32(\"14,10,184,216,145,235,30,188,62,117,228,183,183,57,16,213,191,188,134,175,169,164,17,104,248,216,185,5,41,149,56,38\")),bytes32(stringToBytes32(\"255,92,77,5,71,253,34,228,77,169,228,64,117,15,239,20,177,83,114,24,111,39,159,19,161,89,110,56,183,137,94,168\")),bytes32(stringToBytes32(\"15,123,128,130,148,138,9,210,33,114,192,132,193,248,119,212,214,249,82,98,53,175,41,60,50,157,173,127,104,205,88,174\")),bytes32(stringToBytes32(\"179,27,93,189,57,154,116,17,230,151,87,69,226,248,144,247,175,228,172,155,106,94,153,137,2,205,212,229,128,246,152,43\")),bytes32(stringToBytes32(\"12,204,117,20,197,88,154,7,20,145,8,77,113,211,108,219,17,199,19,151,227,152,114,206,26,180,117,163,124,155,171,51\")),bytes32(stringToBytes32(\"219,14,236,180,14,161,79,122,175,234,45,186,16,219,230,128,19,9,217,80,128,24,139,17,75,244,39,238,82,207,159,2\")),bytes32(stringToBytes32(\"101,52,91,40,134,71,23,70,152,25,212,7,249,132,83,206,180,247,146,229,154,171,85,37,25,68,207,131,14,245,166,166\")),bytes32(stringToBytes32(\"246,223,110,108,214,85,181,101,240,143,232,132,28,224,175,97,80,225,208,112,56,178,37,171,113,167,195,204,43,63,2,32\")),bytes32(stringToBytes32(\"66,111,85,224,56,122,196,175,196,236,161,222,204,159,57,130,76,59,62,130,185,109,59,104,205,70,166,206,55,81,95,195\")),bytes32(stringToBytes32(\"157,31,18,212,10,112,174,15,65,109,160,82,75,27,103,167,204,44,103,107,179,250,103,32,148,113,245,160,255,160,208,102\")),bytes32(stringToBytes32(\"47,122,71,205,140,209,185,154,239,17,31,194,55,159,127,162,123,178,237,216,147,163,189,162,142,140,218,40,129,204,159,14\")),bytes32(stringToBytes32(\"230,83,154,117,21,82,95,75,215,245,158,250,95,139,31,23,192,54,16,167,21,235,138,22,91,241,142,140,94,187,147,71\")),bytes32(stringToBytes32(\"22,33,238,68,31,153,75,68,65,229,183,30,37,18,106,56,159,72,80,126,242,232,246,82,246,100,2,164,134,165,164,116\")),bytes32(stringToBytes32(\"146,103,166,224,198,151,134,70,57,242,181,234,171,92,56,56,129,249,225,244,210,217,131,229,141,255,221,103,114,164,18,64\")),bytes32(stringToBytes32(\"195,166,172,67,213,84,9,51,228,244,131,21,41,181,170,57,160,156,79,20,128,220,103,241,116,208,162,133,88,19,137,5\")),bytes32(stringToBytes32(\"122,245,62,159,38,125,196,26,208,131,196,54,107,19,89,170,203,154,177,13,219,177,191,143,211,130,104,36,174,206,190,34\")),bytes32(stringToBytes32(\"28,238,223,83,73,83,149,29,141,253,23,130,191,157,11,226,128,226,127,76,41,112,134,99,86,197,154,119,124,85,200,17\")),bytes32(stringToBytes32(\"105,152,104,2,204,250,117,78,183,2,174,200,94,230,49,163,244,217,98,119,136,161,234,241,147,230,90,153,116,17,109,169\")),bytes32(stringToBytes32(\"72,248,188,109,196,222,44,243,63,239,9,216,59,248,243,11,212,93,9,150,12,143,54,72,121,126,63,184,126,125,133,153\")),bytes32(stringToBytes32(\"252,108,54,109,29,129,203,84,144,160,26,62,206,42,119,52,70,214,240,19,232,158,208,31,215,87,47,117,94,253,230,223\")),bytes32(stringToBytes32(\"31,253,17,71,155,138,64,164,16,1,82,28,147,117,226,26,20,153,195,222,157,162,129,21,85,17,33,13,120,48,59,108\")),bytes32(stringToBytes32(\"26,154,93,217,251,219,19,6,129,66,169,213,153,181,119,34,8,82,217,21,215,230,29,137,255,49,210,176,152,35,179,135\")),bytes32(stringToBytes32(\"233,125,41,114,15,5,90,35,92,247,118,29,243,93,211,1,207,131,113,227,189,17,17,197,50,244,72,156,249,145,129,196\")),bytes32(stringToBytes32(\"123,45,179,27,232,129,45,43,226,194,245,90,103,63,16,48,132,71,218,198,240,66,178,113,245,163,130,26,99,88,164,57\")),bytes32(stringToBytes32(\"13,176,100,52,124,199,92,205,205,64,205,206,234,192,223,212,52,62,4,125,66,180,95,186,186,45,221,234,93,137,184,154\")),bytes32(stringToBytes32(\"171,143,39,115,213,51,49,210,35,24,166,252,109,137,53,172,116,79,86,119,114,189,180,17,4,242,30,215,121,132,211,69\")),bytes32(stringToBytes32(\"172,3,32,212,180,160,241,92,232,159,233,60,49,12,121,120,78,225,126,36,53,237,173,20,239,194,100,155,86,25,143,194\")),bytes32(stringToBytes32(\"151,21,152,79,177,241,248,42,203,198,91,160,115,21,197,53,38,253,227,131,174,9,182,174,47,25,187,226,48,64,96,17\")),bytes32(stringToBytes32(\"204,238,60,55,177,191,253,82,192,99,96,229,221,141,26,39,100,247,8,105,18,140,139,88,146,16,66,203,96,247,237,196\")),bytes32(stringToBytes32(\"54,163,11,70,216,207,202,129,168,162,131,150,101,155,98,233,115,166,129,162,16,182,168,244,22,140,252,151,53,5,153,186\")),bytes32(stringToBytes32(\"69,119,208,31,68,113,86,5,36,211,33,169,189,220,182,233,167,160,30,10,226,104,4,110,231,218,193,141,152,117,181,8\")),bytes32(stringToBytes32(\"221,134,221,7,34,183,101,239,113,43,42,21,217,158,163,248,96,135,143,113,122,181,155,26,218,28,183,247,33,41,34,41\")),bytes32(stringToBytes32(\"197,191,154,81,180,162,25,212,10,220,10,142,174,209,46,150,150,112,115,104,121,245,174,199,159,101,9,1,31,93,18,152\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.868ZOnChainVoting.finalizeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finalizeVote(string) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,submissionsCount==votesCount",
          "parameters": [
            {
              "js": "\"\\x19Ethereum Signed Message:\\n32\"",
              "sol": "\"\\x19Ethereum Signed Message:\\n32\""
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finalizeVote(string) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "\"\\x19Ethereum Signed Message:\\n32\"",
                "sol": "\"\\x19Ethereum Signed Message:\\n32\""
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.872ZPartialRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[],uint256[]) WHEN msg.sender==_owner,_holders.length==_numberOfTokens.length,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[5],accounts[4]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[257,2014223716]",
              "sol": "[uint256(257),uint256(2014223716)]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[5],accounts[4]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[257,2014223716]",
                "sol": "[uint256(257),uint256(2014223716)]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length == _numberOfTokens.length",
            "parameters": [
              {
                "js": "[accounts[4],accounts[1],accounts[5]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[257,2014223716]",
                "sol": "[uint256(257),uint256(2014223716)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[257,2014223716]",
                "sol": "[uint256(257),uint256(2014223716)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.874ZFullRedemption.setup": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setup() WHEN isSetUp!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.875ZFullRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[]) WHEN msg.sender==_owner,isSetUp==true,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[5],accounts[4]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[5],accounts[4]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: isSetUp == true",
            "parameters": [
              {
                "js": "[accounts[5],accounts[4]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.878ZFixedPriceTender.paymentTokensReady": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute paymentTokensReady() WHEN paymentReady!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.879ZFixedPriceTender.updateOfferEndTime": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateOfferEndTime(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newOfferEnd>=block.timestamp",
          "parameters": [
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+273",
              "sol": "block.timestamp+273"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+273",
                "sol": "block.timestamp+273"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: _newOfferEnd >= (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1",
                "sol": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.883ZFixedPriceTender.updatePaymentPerSecurity": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updatePaymentPerSecurity(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newPaymentPerSecurity>0",
          "parameters": [
            {
              "js": "28",
              "sol": "28"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "28",
                "sol": "28"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: _newPaymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.887ZFixedPriceTender.updateTotalToRepurchase": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateTotalToRepurchase(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newTotalToRepurchase>=0",
          "parameters": [
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: _newTotalToRepurchase >= 0",
            "parameters": [
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.891ZFixedPriceTender.optInToTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optInToTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,paymentReady==true,_numberToTender>0",
          "parameters": [
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: paymentReady == true",
            "parameters": [
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: _numberToTender > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.897ZFixedPriceTender.optOutOfTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optOutOfTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_numberToRemove>0",
          "parameters": [
            {
              "js": "2014223714",
              "sol": "2014223714"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optOutOfTender(uint256) when NOT comply with: _numberToRemove > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[5]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.900ZFixedPriceTender.finaliseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finaliseTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=offerEndTime,nextTenderToAssess<orderedHolders.length,_batchSize>0",
          "parameters": [
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finaliseTender(uint256) when NOT comply with: _batchSize > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.903ZProxyFixedPriceTender.testrepurchaseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrepurchaseTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.903ZProxyFixedPriceTender.testreturnTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testreturnTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.904ZOnChainPayments.makePayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute makePayments(address[],uint256) WHEN msg.sender==_owner,_securityHolders.length>0,_paymentPerSecurity>0",
          "parameters": [
            {
              "js": "[accounts[0],accounts[9],accounts[7],accounts[0],accounts[6],accounts[8],accounts[3],accounts[8],accounts[1],accounts[9],accounts[5],accounts[8],accounts[6],accounts[4],accounts[5],accounts[0],accounts[8],accounts[7],accounts[6],accounts[0],accounts[2],accounts[8],accounts[6],accounts[7],accounts[1],accounts[1],accounts[5],accounts[0],accounts[8],accounts[6],accounts[6],accounts[2],accounts[6],accounts[4],accounts[2],accounts[1],accounts[2],accounts[8],accounts[9],accounts[0],accounts[7],accounts[1],accounts[6],accounts[5],accounts[0],accounts[1],accounts[5],accounts[3],accounts[7],accounts[4],accounts[2],accounts[9],accounts[2],accounts[3],accounts[6],accounts[6],accounts[2],accounts[7],accounts[0],accounts[2],accounts[5],accounts[1],accounts[3],accounts[1],accounts[6],accounts[9],accounts[9],accounts[5],accounts[5],accounts[9],accounts[0],accounts[4],accounts[7],accounts[6],accounts[0],accounts[5],accounts[4],accounts[0],accounts[6],accounts[8],accounts[6],accounts[4],accounts[1],accounts[4],accounts[7],accounts[4],accounts[1],accounts[8],accounts[4],accounts[6],accounts[9],accounts[9],accounts[4],accounts[1],accounts[0],accounts[9]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "256",
              "sol": "256"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[0],accounts[9],accounts[7],accounts[0],accounts[6],accounts[8],accounts[3],accounts[8],accounts[1],accounts[9],accounts[5],accounts[8],accounts[6],accounts[4],accounts[5],accounts[0],accounts[8],accounts[7],accounts[6],accounts[0],accounts[2],accounts[8],accounts[6],accounts[7],accounts[1],accounts[1],accounts[5],accounts[0],accounts[8],accounts[6],accounts[6],accounts[2],accounts[6],accounts[4],accounts[2],accounts[1],accounts[2],accounts[8],accounts[9],accounts[0],accounts[7],accounts[1],accounts[6],accounts[5],accounts[0],accounts[1],accounts[5],accounts[3],accounts[7],accounts[4],accounts[2],accounts[9],accounts[2],accounts[3],accounts[6],accounts[6],accounts[2],accounts[7],accounts[0],accounts[2],accounts[5],accounts[1],accounts[3],accounts[1],accounts[6],accounts[9],accounts[9],accounts[5],accounts[5],accounts[9],accounts[0],accounts[4],accounts[7],accounts[6],accounts[0],accounts[5],accounts[4],accounts[0],accounts[6],accounts[8],accounts[6],accounts[4],accounts[1],accounts[4],accounts[7],accounts[4],accounts[1],accounts[8],accounts[4],accounts[6],accounts[9],accounts[9],accounts[4],accounts[1],accounts[0],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "[accounts[0],accounts[9],accounts[7],accounts[0],accounts[6],accounts[8],accounts[3],accounts[8],accounts[1],accounts[9],accounts[5],accounts[8],accounts[6],accounts[4],accounts[5],accounts[0],accounts[8],accounts[7],accounts[6],accounts[0],accounts[2],accounts[8],accounts[6],accounts[7],accounts[1],accounts[1],accounts[5],accounts[0],accounts[8],accounts[6],accounts[6],accounts[2],accounts[6],accounts[4],accounts[2],accounts[1],accounts[2],accounts[8],accounts[9],accounts[0],accounts[7],accounts[1],accounts[6],accounts[5],accounts[0],accounts[1],accounts[5],accounts[3],accounts[7],accounts[4],accounts[2],accounts[9],accounts[2],accounts[3],accounts[6],accounts[6],accounts[2],accounts[7],accounts[0],accounts[2],accounts[5],accounts[1],accounts[3],accounts[1],accounts[6],accounts[9],accounts[9],accounts[5],accounts[5],accounts[9],accounts[0],accounts[4],accounts[7],accounts[6],accounts[0],accounts[5],accounts[4],accounts[0],accounts[6],accounts[8],accounts[6],accounts[4],accounts[1],accounts[4],accounts[7],accounts[4],accounts[1],accounts[8],accounts[4],accounts[6],accounts[9],accounts[9],accounts[4],accounts[1],accounts[0],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.907ZOnChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,uint256,uint256) WHEN _timestamp!=0,_securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1338",
              "sol": "1338"
            },
            {
              "js": "26",
              "sol": "26"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _timestamp != 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "26",
                "sol": "26"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "26",
                "sol": "26"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-10T12:48:44.907ZOnChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "1532892064",
              "sol": "1532892064"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:48:44.908ZOnChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "171-187",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "10001",
              "sol": "10001"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "10001",
                "sol": "10001"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "174-187",
          "restrictions": [
            "_newValue > currentValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue>currentValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "10000",
              "sol": "10000"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2",
                "sol": "2"
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "2": {
        "branch": {
          "loc": "182-187",
          "restrictions": [
            "_newValue <= currentValue",
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue<=currentValue,currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892063",
              "sol": "1532892063"
            },
            {
              "js": "10000",
              "sol": "10000"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1532892063",
                "sol": "1532892063"
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
}