,{
  "2020-11-12T18:12:22.550ZPaymentTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:12:28.987ZRedeemableTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:12:35.344ZOffChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[9]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"accounts[8]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:12:41.662ZPartialRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "254",
              "sol": "254"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:12:48.191ZOnChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,IERC20,address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[3]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[3]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:12:54.634ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "96",
                "sol": "96"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:02.787ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223714",
              "sol": "2014223714"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223714",
                "sol": "2014223714"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223714",
                "sol": "2014223714"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "2014223714",
                "sol": "2014223714"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:11.007ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "1338",
              "sol": "1338"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "255",
              "sol": "255"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:17.635ZFullRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "10001",
              "sol": "10001"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:24.430ZOnChainVoting.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,address,uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<_endTime,_issuer!=0x0000000000000000000000000000000000000000,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+904",
              "sol": "block.timestamp+904"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp < _endTime",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
                "sol": "block.timestamp"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+904",
                "sol": "block.timestamp+904"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+904",
                "sol": "block.timestamp+904"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+904",
                "sol": "block.timestamp+904"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.102ZRedeemableToken.setRedemption": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setRedemption(address) WHEN msg.sender==_owner,_redemption!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: _redemption != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.108ZRedeemableToken.redeemAllTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemAllTokens(address) WHEN msg.sender==redemption,msg.sender==_owner,balance>0",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[5]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.110ZRedeemableToken.redeemPartialTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemPartialTokens(address,uint256) WHEN msg.sender==redemption,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "4",
                "sol": "4"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[8]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "4",
                "sol": "4"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.113ZOffChainPayments.recordPayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute recordPayments(address[],uint256[],uint256[],bytes32[]) WHEN msg.sender==_owner,_securityHolders.length>0,_securityHolders.length==_offchainPaymentHashes.length,_securityHolders.length==_paymentTimestamps.length,_securityHolders.length==_paymentValues.length",
          "parameters": [
            {
              "js": "[accounts[1],accounts[1],accounts[0],accounts[1],accounts[3],accounts[4],accounts[9],accounts[7],accounts[2],accounts[8],accounts[9],accounts[4],accounts[2],accounts[6],accounts[7],accounts[6],accounts[6],accounts[4],accounts[8],accounts[0],accounts[0],accounts[2],accounts[0],accounts[9],accounts[6],accounts[3],accounts[1],accounts[3],accounts[1],accounts[3],accounts[6],accounts[7],accounts[0],accounts[6],accounts[2],accounts[2],accounts[7],accounts[2],accounts[3],accounts[7],accounts[5],accounts[3],accounts[1],accounts[7],accounts[4],accounts[7],accounts[1],accounts[3],accounts[9],accounts[5],accounts[2],accounts[5],accounts[6],accounts[0],accounts[8],accounts[0],accounts[5],accounts[4],accounts[4],accounts[9],accounts[9],accounts[8],accounts[9],accounts[2],accounts[9],accounts[5]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[254,2014223716,254,2014223716,29,255,97,1532892064,2014223716,4,95,2,10000,2014223715,0,0,6,257,29,3,1532892063,2014223714,3,28,2014223715,9999,257,1532892062,1337,2014223716,26,5,1,3,65,2,10000,254,65,1532892064,1532892062,28,10001,254,1338,10000,1532892063,29,256,1338,27,254,1338,9999,2,9999,1337,2014223715,1337,2,2014223716,1532892064,3,10001,1336,1338]",
              "sol": "[uint256(254),uint256(2014223716),uint256(254),uint256(2014223716),uint256(29),uint256(255),uint256(97),uint256(1532892064),uint256(2014223716),uint256(4),uint256(95),uint256(2),uint256(10000),uint256(2014223715),uint256(0),uint256(0),uint256(6),uint256(257),uint256(29),uint256(3),uint256(1532892063),uint256(2014223714),uint256(3),uint256(28),uint256(2014223715),uint256(9999),uint256(257),uint256(1532892062),uint256(1337),uint256(2014223716),uint256(26),uint256(5),uint256(1),uint256(3),uint256(65),uint256(2),uint256(10000),uint256(254),uint256(65),uint256(1532892064),uint256(1532892062),uint256(28),uint256(10001),uint256(254),uint256(1338),uint256(10000),uint256(1532892063),uint256(29),uint256(256),uint256(1338),uint256(27),uint256(254),uint256(1338),uint256(9999),uint256(2),uint256(9999),uint256(1337),uint256(2014223715),uint256(1337),uint256(2),uint256(2014223716),uint256(1532892064),uint256(3),uint256(10001),uint256(1336),uint256(1338)]"
            },
            {
              "js": "[96,1338,254,256,5,255,1338,6,95,65,27,10000,1,254,29,254,29,4,254,26,255,1336,6,27,1,2014223714,2014223714,66,97,26,64,26,3,257,95,9999,254,27,97,5,1532892062,64,28,64,96,2,1337,65,5,5,10001,26,66,257,97,1338,97,9999,1337,254,1338,97,97,1,95,1532892063]",
              "sol": "[uint256(96),uint256(1338),uint256(254),uint256(256),uint256(5),uint256(255),uint256(1338),uint256(6),uint256(95),uint256(65),uint256(27),uint256(10000),uint256(1),uint256(254),uint256(29),uint256(254),uint256(29),uint256(4),uint256(254),uint256(26),uint256(255),uint256(1336),uint256(6),uint256(27),uint256(1),uint256(2014223714),uint256(2014223714),uint256(66),uint256(97),uint256(26),uint256(64),uint256(26),uint256(3),uint256(257),uint256(95),uint256(9999),uint256(254),uint256(27),uint256(97),uint256(5),uint256(1532892062),uint256(64),uint256(28),uint256(64),uint256(96),uint256(2),uint256(1337),uint256(65),uint256(5),uint256(5),uint256(10001),uint256(26),uint256(66),uint256(257),uint256(97),uint256(1338),uint256(97),uint256(9999),uint256(1337),uint256(254),uint256(1338),uint256(97),uint256(97),uint256(1),uint256(95),uint256(1532892063)]"
            },
            {
              "js": "[[245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205],[58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180],[232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117],[122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81],[46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231],[79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178],[128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246],[112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39],[17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244],[27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118],[77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225],[77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118],[212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209],[107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231],[13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176],[249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128],[174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17],[53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182],[174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239],[208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167],[190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177],[97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3],[97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242],[247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147],[211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73],[189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140],[95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153],[202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197],[184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185],[117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206],[213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162],[141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170],[69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22],[110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92],[160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112],[52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236],[57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45],[69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230],[93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110],[88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58],[247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14],[20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219],[51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124],[212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220],[13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208],[109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232],[198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116],[217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193],[78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49],[136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156],[130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37],[245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243],[86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183],[239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250],[253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11],[112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215],[199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51],[148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74],[251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205],[232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177],[44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205],[111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165],[147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116],[49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123],[15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197],[5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141]]",
              "sol": "[bytes32(stringToBytes32(\"245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205\")),bytes32(stringToBytes32(\"58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180\")),bytes32(stringToBytes32(\"232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117\")),bytes32(stringToBytes32(\"122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81\")),bytes32(stringToBytes32(\"46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231\")),bytes32(stringToBytes32(\"79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178\")),bytes32(stringToBytes32(\"128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246\")),bytes32(stringToBytes32(\"112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39\")),bytes32(stringToBytes32(\"17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244\")),bytes32(stringToBytes32(\"27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118\")),bytes32(stringToBytes32(\"77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225\")),bytes32(stringToBytes32(\"77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118\")),bytes32(stringToBytes32(\"212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209\")),bytes32(stringToBytes32(\"107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231\")),bytes32(stringToBytes32(\"13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176\")),bytes32(stringToBytes32(\"249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128\")),bytes32(stringToBytes32(\"174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17\")),bytes32(stringToBytes32(\"53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182\")),bytes32(stringToBytes32(\"174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239\")),bytes32(stringToBytes32(\"208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167\")),bytes32(stringToBytes32(\"190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177\")),bytes32(stringToBytes32(\"97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3\")),bytes32(stringToBytes32(\"97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242\")),bytes32(stringToBytes32(\"247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147\")),bytes32(stringToBytes32(\"211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73\")),bytes32(stringToBytes32(\"189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140\")),bytes32(stringToBytes32(\"95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153\")),bytes32(stringToBytes32(\"202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197\")),bytes32(stringToBytes32(\"184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185\")),bytes32(stringToBytes32(\"117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206\")),bytes32(stringToBytes32(\"213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162\")),bytes32(stringToBytes32(\"141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170\")),bytes32(stringToBytes32(\"69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22\")),bytes32(stringToBytes32(\"110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92\")),bytes32(stringToBytes32(\"160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112\")),bytes32(stringToBytes32(\"52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236\")),bytes32(stringToBytes32(\"57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45\")),bytes32(stringToBytes32(\"69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230\")),bytes32(stringToBytes32(\"93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110\")),bytes32(stringToBytes32(\"88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58\")),bytes32(stringToBytes32(\"247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14\")),bytes32(stringToBytes32(\"20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219\")),bytes32(stringToBytes32(\"51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124\")),bytes32(stringToBytes32(\"212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220\")),bytes32(stringToBytes32(\"13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208\")),bytes32(stringToBytes32(\"109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232\")),bytes32(stringToBytes32(\"198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116\")),bytes32(stringToBytes32(\"217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193\")),bytes32(stringToBytes32(\"78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49\")),bytes32(stringToBytes32(\"136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156\")),bytes32(stringToBytes32(\"130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37\")),bytes32(stringToBytes32(\"245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243\")),bytes32(stringToBytes32(\"86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183\")),bytes32(stringToBytes32(\"239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250\")),bytes32(stringToBytes32(\"253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11\")),bytes32(stringToBytes32(\"112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215\")),bytes32(stringToBytes32(\"199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51\")),bytes32(stringToBytes32(\"148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74\")),bytes32(stringToBytes32(\"251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205\")),bytes32(stringToBytes32(\"232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177\")),bytes32(stringToBytes32(\"44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205\")),bytes32(stringToBytes32(\"111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165\")),bytes32(stringToBytes32(\"147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116\")),bytes32(stringToBytes32(\"49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123\")),bytes32(stringToBytes32(\"15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197\")),bytes32(stringToBytes32(\"5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141\"))]"
            },
            {
              "js": "{from:accounts[9]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[1],accounts[1],accounts[0],accounts[1],accounts[3],accounts[4],accounts[9],accounts[7],accounts[2],accounts[8],accounts[9],accounts[4],accounts[2],accounts[6],accounts[7],accounts[6],accounts[6],accounts[4],accounts[8],accounts[0],accounts[0],accounts[2],accounts[0],accounts[9],accounts[6],accounts[3],accounts[1],accounts[3],accounts[1],accounts[3],accounts[6],accounts[7],accounts[0],accounts[6],accounts[2],accounts[2],accounts[7],accounts[2],accounts[3],accounts[7],accounts[5],accounts[3],accounts[1],accounts[7],accounts[4],accounts[7],accounts[1],accounts[3],accounts[9],accounts[5],accounts[2],accounts[5],accounts[6],accounts[0],accounts[8],accounts[0],accounts[5],accounts[4],accounts[4],accounts[9],accounts[9],accounts[8],accounts[9],accounts[2],accounts[9],accounts[5]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[254,2014223716,254,2014223716,29,255,97,1532892064,2014223716,4,95,2,10000,2014223715,0,0,6,257,29,3,1532892063,2014223714,3,28,2014223715,9999,257,1532892062,1337,2014223716,26,5,1,3,65,2,10000,254,65,1532892064,1532892062,28,10001,254,1338,10000,1532892063,29,256,1338,27,254,1338,9999,2,9999,1337,2014223715,1337,2,2014223716,1532892064,3,10001,1336,1338]",
                "sol": "[uint256(254),uint256(2014223716),uint256(254),uint256(2014223716),uint256(29),uint256(255),uint256(97),uint256(1532892064),uint256(2014223716),uint256(4),uint256(95),uint256(2),uint256(10000),uint256(2014223715),uint256(0),uint256(0),uint256(6),uint256(257),uint256(29),uint256(3),uint256(1532892063),uint256(2014223714),uint256(3),uint256(28),uint256(2014223715),uint256(9999),uint256(257),uint256(1532892062),uint256(1337),uint256(2014223716),uint256(26),uint256(5),uint256(1),uint256(3),uint256(65),uint256(2),uint256(10000),uint256(254),uint256(65),uint256(1532892064),uint256(1532892062),uint256(28),uint256(10001),uint256(254),uint256(1338),uint256(10000),uint256(1532892063),uint256(29),uint256(256),uint256(1338),uint256(27),uint256(254),uint256(1338),uint256(9999),uint256(2),uint256(9999),uint256(1337),uint256(2014223715),uint256(1337),uint256(2),uint256(2014223716),uint256(1532892064),uint256(3),uint256(10001),uint256(1336),uint256(1338)]"
              },
              {
                "js": "[96,1338,254,256,5,255,1338,6,95,65,27,10000,1,254,29,254,29,4,254,26,255,1336,6,27,1,2014223714,2014223714,66,97,26,64,26,3,257,95,9999,254,27,97,5,1532892062,64,28,64,96,2,1337,65,5,5,10001,26,66,257,97,1338,97,9999,1337,254,1338,97,97,1,95,1532892063]",
                "sol": "[uint256(96),uint256(1338),uint256(254),uint256(256),uint256(5),uint256(255),uint256(1338),uint256(6),uint256(95),uint256(65),uint256(27),uint256(10000),uint256(1),uint256(254),uint256(29),uint256(254),uint256(29),uint256(4),uint256(254),uint256(26),uint256(255),uint256(1336),uint256(6),uint256(27),uint256(1),uint256(2014223714),uint256(2014223714),uint256(66),uint256(97),uint256(26),uint256(64),uint256(26),uint256(3),uint256(257),uint256(95),uint256(9999),uint256(254),uint256(27),uint256(97),uint256(5),uint256(1532892062),uint256(64),uint256(28),uint256(64),uint256(96),uint256(2),uint256(1337),uint256(65),uint256(5),uint256(5),uint256(10001),uint256(26),uint256(66),uint256(257),uint256(97),uint256(1338),uint256(97),uint256(9999),uint256(1337),uint256(254),uint256(1338),uint256(97),uint256(97),uint256(1),uint256(95),uint256(1532892063)]"
              },
              {
                "js": "[[245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205],[58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180],[232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117],[122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81],[46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231],[79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178],[128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246],[112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39],[17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244],[27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118],[77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225],[77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118],[212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209],[107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231],[13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176],[249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128],[174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17],[53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182],[174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239],[208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167],[190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177],[97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3],[97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242],[247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147],[211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73],[189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140],[95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153],[202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197],[184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185],[117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206],[213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162],[141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170],[69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22],[110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92],[160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112],[52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236],[57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45],[69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230],[93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110],[88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58],[247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14],[20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219],[51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124],[212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220],[13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208],[109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232],[198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116],[217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193],[78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49],[136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156],[130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37],[245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243],[86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183],[239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250],[253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11],[112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215],[199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51],[148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74],[251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205],[232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177],[44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205],[111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165],[147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116],[49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123],[15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197],[5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141]]",
                "sol": "[bytes32(stringToBytes32(\"245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205\")),bytes32(stringToBytes32(\"58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180\")),bytes32(stringToBytes32(\"232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117\")),bytes32(stringToBytes32(\"122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81\")),bytes32(stringToBytes32(\"46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231\")),bytes32(stringToBytes32(\"79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178\")),bytes32(stringToBytes32(\"128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246\")),bytes32(stringToBytes32(\"112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39\")),bytes32(stringToBytes32(\"17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244\")),bytes32(stringToBytes32(\"27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118\")),bytes32(stringToBytes32(\"77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225\")),bytes32(stringToBytes32(\"77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118\")),bytes32(stringToBytes32(\"212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209\")),bytes32(stringToBytes32(\"107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231\")),bytes32(stringToBytes32(\"13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176\")),bytes32(stringToBytes32(\"249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128\")),bytes32(stringToBytes32(\"174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17\")),bytes32(stringToBytes32(\"53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182\")),bytes32(stringToBytes32(\"174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239\")),bytes32(stringToBytes32(\"208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167\")),bytes32(stringToBytes32(\"190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177\")),bytes32(stringToBytes32(\"97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3\")),bytes32(stringToBytes32(\"97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242\")),bytes32(stringToBytes32(\"247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147\")),bytes32(stringToBytes32(\"211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73\")),bytes32(stringToBytes32(\"189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140\")),bytes32(stringToBytes32(\"95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153\")),bytes32(stringToBytes32(\"202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197\")),bytes32(stringToBytes32(\"184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185\")),bytes32(stringToBytes32(\"117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206\")),bytes32(stringToBytes32(\"213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162\")),bytes32(stringToBytes32(\"141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170\")),bytes32(stringToBytes32(\"69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22\")),bytes32(stringToBytes32(\"110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92\")),bytes32(stringToBytes32(\"160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112\")),bytes32(stringToBytes32(\"52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236\")),bytes32(stringToBytes32(\"57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45\")),bytes32(stringToBytes32(\"69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230\")),bytes32(stringToBytes32(\"93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110\")),bytes32(stringToBytes32(\"88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58\")),bytes32(stringToBytes32(\"247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14\")),bytes32(stringToBytes32(\"20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219\")),bytes32(stringToBytes32(\"51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124\")),bytes32(stringToBytes32(\"212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220\")),bytes32(stringToBytes32(\"13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208\")),bytes32(stringToBytes32(\"109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232\")),bytes32(stringToBytes32(\"198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116\")),bytes32(stringToBytes32(\"217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193\")),bytes32(stringToBytes32(\"78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49\")),bytes32(stringToBytes32(\"136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156\")),bytes32(stringToBytes32(\"130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37\")),bytes32(stringToBytes32(\"245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243\")),bytes32(stringToBytes32(\"86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183\")),bytes32(stringToBytes32(\"239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250\")),bytes32(stringToBytes32(\"253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11\")),bytes32(stringToBytes32(\"112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215\")),bytes32(stringToBytes32(\"199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51\")),bytes32(stringToBytes32(\"148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74\")),bytes32(stringToBytes32(\"251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205\")),bytes32(stringToBytes32(\"232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177\")),bytes32(stringToBytes32(\"44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205\")),bytes32(stringToBytes32(\"111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165\")),bytes32(stringToBytes32(\"147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116\")),bytes32(stringToBytes32(\"49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123\")),bytes32(stringToBytes32(\"15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197\")),bytes32(stringToBytes32(\"5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"accounts[8]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[254,2014223716,254,2014223716,29,255,97,1532892064,2014223716,4,95,2,10000,2014223715,0,0,6,257,29,3,1532892063,2014223714,3,28,2014223715,9999,257,1532892062,1337,2014223716,26,5,1,3,65,2,10000,254,65,1532892064,1532892062,28,10001,254,1338,10000,1532892063,29,256,1338,27,254,1338,9999,2,9999,1337,2014223715,1337,2,2014223716,1532892064,3,10001,1336,1338]",
                "sol": "[uint256(254),uint256(2014223716),uint256(254),uint256(2014223716),uint256(29),uint256(255),uint256(97),uint256(1532892064),uint256(2014223716),uint256(4),uint256(95),uint256(2),uint256(10000),uint256(2014223715),uint256(0),uint256(0),uint256(6),uint256(257),uint256(29),uint256(3),uint256(1532892063),uint256(2014223714),uint256(3),uint256(28),uint256(2014223715),uint256(9999),uint256(257),uint256(1532892062),uint256(1337),uint256(2014223716),uint256(26),uint256(5),uint256(1),uint256(3),uint256(65),uint256(2),uint256(10000),uint256(254),uint256(65),uint256(1532892064),uint256(1532892062),uint256(28),uint256(10001),uint256(254),uint256(1338),uint256(10000),uint256(1532892063),uint256(29),uint256(256),uint256(1338),uint256(27),uint256(254),uint256(1338),uint256(9999),uint256(2),uint256(9999),uint256(1337),uint256(2014223715),uint256(1337),uint256(2),uint256(2014223716),uint256(1532892064),uint256(3),uint256(10001),uint256(1336),uint256(1338)]"
              },
              {
                "js": "[96,1338,254,256,5,255,1338,6,95,65,27,10000,1,254,29,254,29,4,254,26,255,1336,6,27,1,2014223714,2014223714,66,97,26,64,26,3,257,95,9999,254,27,97,5,1532892062,64,28,64,96,2,1337,65,5,5,10001,26,66,257,97,1338,97,9999,1337,254,1338,97,97,1,95,1532892063]",
                "sol": "[uint256(96),uint256(1338),uint256(254),uint256(256),uint256(5),uint256(255),uint256(1338),uint256(6),uint256(95),uint256(65),uint256(27),uint256(10000),uint256(1),uint256(254),uint256(29),uint256(254),uint256(29),uint256(4),uint256(254),uint256(26),uint256(255),uint256(1336),uint256(6),uint256(27),uint256(1),uint256(2014223714),uint256(2014223714),uint256(66),uint256(97),uint256(26),uint256(64),uint256(26),uint256(3),uint256(257),uint256(95),uint256(9999),uint256(254),uint256(27),uint256(97),uint256(5),uint256(1532892062),uint256(64),uint256(28),uint256(64),uint256(96),uint256(2),uint256(1337),uint256(65),uint256(5),uint256(5),uint256(10001),uint256(26),uint256(66),uint256(257),uint256(97),uint256(1338),uint256(97),uint256(9999),uint256(1337),uint256(254),uint256(1338),uint256(97),uint256(97),uint256(1),uint256(95),uint256(1532892063)]"
              },
              {
                "js": "[[245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205],[58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180],[232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117],[122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81],[46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231],[79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178],[128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246],[112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39],[17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244],[27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118],[77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225],[77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118],[212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209],[107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231],[13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176],[249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128],[174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17],[53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182],[174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239],[208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167],[190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177],[97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3],[97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242],[247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147],[211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73],[189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140],[95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153],[202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197],[184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185],[117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206],[213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162],[141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170],[69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22],[110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92],[160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112],[52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236],[57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45],[69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230],[93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110],[88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58],[247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14],[20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219],[51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124],[212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220],[13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208],[109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232],[198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116],[217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193],[78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49],[136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156],[130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37],[245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243],[86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183],[239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250],[253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11],[112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215],[199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51],[148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74],[251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205],[232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177],[44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205],[111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165],[147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116],[49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123],[15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197],[5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141]]",
                "sol": "[bytes32(stringToBytes32(\"245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205\")),bytes32(stringToBytes32(\"58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180\")),bytes32(stringToBytes32(\"232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117\")),bytes32(stringToBytes32(\"122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81\")),bytes32(stringToBytes32(\"46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231\")),bytes32(stringToBytes32(\"79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178\")),bytes32(stringToBytes32(\"128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246\")),bytes32(stringToBytes32(\"112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39\")),bytes32(stringToBytes32(\"17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244\")),bytes32(stringToBytes32(\"27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118\")),bytes32(stringToBytes32(\"77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225\")),bytes32(stringToBytes32(\"77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118\")),bytes32(stringToBytes32(\"212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209\")),bytes32(stringToBytes32(\"107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231\")),bytes32(stringToBytes32(\"13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176\")),bytes32(stringToBytes32(\"249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128\")),bytes32(stringToBytes32(\"174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17\")),bytes32(stringToBytes32(\"53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182\")),bytes32(stringToBytes32(\"174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239\")),bytes32(stringToBytes32(\"208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167\")),bytes32(stringToBytes32(\"190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177\")),bytes32(stringToBytes32(\"97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3\")),bytes32(stringToBytes32(\"97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242\")),bytes32(stringToBytes32(\"247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147\")),bytes32(stringToBytes32(\"211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73\")),bytes32(stringToBytes32(\"189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140\")),bytes32(stringToBytes32(\"95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153\")),bytes32(stringToBytes32(\"202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197\")),bytes32(stringToBytes32(\"184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185\")),bytes32(stringToBytes32(\"117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206\")),bytes32(stringToBytes32(\"213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162\")),bytes32(stringToBytes32(\"141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170\")),bytes32(stringToBytes32(\"69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22\")),bytes32(stringToBytes32(\"110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92\")),bytes32(stringToBytes32(\"160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112\")),bytes32(stringToBytes32(\"52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236\")),bytes32(stringToBytes32(\"57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45\")),bytes32(stringToBytes32(\"69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230\")),bytes32(stringToBytes32(\"93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110\")),bytes32(stringToBytes32(\"88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58\")),bytes32(stringToBytes32(\"247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14\")),bytes32(stringToBytes32(\"20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219\")),bytes32(stringToBytes32(\"51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124\")),bytes32(stringToBytes32(\"212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220\")),bytes32(stringToBytes32(\"13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208\")),bytes32(stringToBytes32(\"109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232\")),bytes32(stringToBytes32(\"198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116\")),bytes32(stringToBytes32(\"217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193\")),bytes32(stringToBytes32(\"78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49\")),bytes32(stringToBytes32(\"136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156\")),bytes32(stringToBytes32(\"130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37\")),bytes32(stringToBytes32(\"245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243\")),bytes32(stringToBytes32(\"86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183\")),bytes32(stringToBytes32(\"239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250\")),bytes32(stringToBytes32(\"253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11\")),bytes32(stringToBytes32(\"112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215\")),bytes32(stringToBytes32(\"199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51\")),bytes32(stringToBytes32(\"148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74\")),bytes32(stringToBytes32(\"251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205\")),bytes32(stringToBytes32(\"232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177\")),bytes32(stringToBytes32(\"44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205\")),bytes32(stringToBytes32(\"111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165\")),bytes32(stringToBytes32(\"147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116\")),bytes32(stringToBytes32(\"49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123\")),bytes32(stringToBytes32(\"15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197\")),bytes32(stringToBytes32(\"5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _offchainPaymentHashes.length",
            "parameters": [
              {
                "js": "[accounts[1],accounts[4],accounts[5],accounts[7],accounts[2],accounts[8],accounts[2],accounts[4],accounts[7],accounts[2],accounts[1],accounts[3],accounts[6],accounts[5],accounts[7],accounts[2],accounts[2],accounts[2],accounts[4],accounts[0],accounts[2],accounts[7],accounts[4],accounts[8],accounts[1],accounts[2],accounts[8],accounts[3],accounts[1],accounts[2],accounts[2],accounts[4],accounts[0],accounts[4],accounts[7],accounts[9],accounts[0],accounts[5],accounts[4],accounts[6],accounts[1],accounts[9],accounts[0],accounts[0],accounts[2],accounts[9],accounts[9],accounts[8],accounts[4],accounts[9],accounts[9],accounts[7],accounts[5],accounts[1],accounts[6],accounts[4],accounts[2],accounts[7],accounts[7],accounts[7],accounts[4],accounts[6],accounts[1],accounts[1],accounts[9],accounts[2],accounts[7]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[254,2014223716,254,2014223716,29,255,97,1532892064,2014223716,4,95,2,10000,2014223715,0,0,6,257,29,3,1532892063,2014223714,3,28,2014223715,9999,257,1532892062,1337,2014223716,26,5,1,3,65,2,10000,254,65,1532892064,1532892062,28,10001,254,1338,10000,1532892063,29,256,1338,27,254,1338,9999,2,9999,1337,2014223715,1337,2,2014223716,1532892064,3,10001,1336,1338]",
                "sol": "[uint256(254),uint256(2014223716),uint256(254),uint256(2014223716),uint256(29),uint256(255),uint256(97),uint256(1532892064),uint256(2014223716),uint256(4),uint256(95),uint256(2),uint256(10000),uint256(2014223715),uint256(0),uint256(0),uint256(6),uint256(257),uint256(29),uint256(3),uint256(1532892063),uint256(2014223714),uint256(3),uint256(28),uint256(2014223715),uint256(9999),uint256(257),uint256(1532892062),uint256(1337),uint256(2014223716),uint256(26),uint256(5),uint256(1),uint256(3),uint256(65),uint256(2),uint256(10000),uint256(254),uint256(65),uint256(1532892064),uint256(1532892062),uint256(28),uint256(10001),uint256(254),uint256(1338),uint256(10000),uint256(1532892063),uint256(29),uint256(256),uint256(1338),uint256(27),uint256(254),uint256(1338),uint256(9999),uint256(2),uint256(9999),uint256(1337),uint256(2014223715),uint256(1337),uint256(2),uint256(2014223716),uint256(1532892064),uint256(3),uint256(10001),uint256(1336),uint256(1338)]"
              },
              {
                "js": "[96,1338,254,256,5,255,1338,6,95,65,27,10000,1,254,29,254,29,4,254,26,255,1336,6,27,1,2014223714,2014223714,66,97,26,64,26,3,257,95,9999,254,27,97,5,1532892062,64,28,64,96,2,1337,65,5,5,10001,26,66,257,97,1338,97,9999,1337,254,1338,97,97,1,95,1532892063]",
                "sol": "[uint256(96),uint256(1338),uint256(254),uint256(256),uint256(5),uint256(255),uint256(1338),uint256(6),uint256(95),uint256(65),uint256(27),uint256(10000),uint256(1),uint256(254),uint256(29),uint256(254),uint256(29),uint256(4),uint256(254),uint256(26),uint256(255),uint256(1336),uint256(6),uint256(27),uint256(1),uint256(2014223714),uint256(2014223714),uint256(66),uint256(97),uint256(26),uint256(64),uint256(26),uint256(3),uint256(257),uint256(95),uint256(9999),uint256(254),uint256(27),uint256(97),uint256(5),uint256(1532892062),uint256(64),uint256(28),uint256(64),uint256(96),uint256(2),uint256(1337),uint256(65),uint256(5),uint256(5),uint256(10001),uint256(26),uint256(66),uint256(257),uint256(97),uint256(1338),uint256(97),uint256(9999),uint256(1337),uint256(254),uint256(1338),uint256(97),uint256(97),uint256(1),uint256(95),uint256(1532892063)]"
              },
              {
                "js": "[[245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205],[58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180],[232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117],[122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81],[46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231],[79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178],[128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246],[112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39],[17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244],[27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118],[77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225],[77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118],[212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209],[107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231],[13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176],[249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128],[174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17],[53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182],[174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239],[208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167],[190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177],[97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3],[97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242],[247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147],[211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73],[189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140],[95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153],[202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197],[184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185],[117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206],[213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162],[141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170],[69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22],[110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92],[160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112],[52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236],[57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45],[69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230],[93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110],[88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58],[247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14],[20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219],[51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124],[212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220],[13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208],[109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232],[198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116],[217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193],[78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49],[136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156],[130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37],[245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243],[86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183],[239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250],[253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11],[112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215],[199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51],[148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74],[251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205],[232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177],[44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205],[111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165],[147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116],[49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123],[15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197],[5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141]]",
                "sol": "[bytes32(stringToBytes32(\"245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205\")),bytes32(stringToBytes32(\"58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180\")),bytes32(stringToBytes32(\"232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117\")),bytes32(stringToBytes32(\"122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81\")),bytes32(stringToBytes32(\"46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231\")),bytes32(stringToBytes32(\"79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178\")),bytes32(stringToBytes32(\"128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246\")),bytes32(stringToBytes32(\"112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39\")),bytes32(stringToBytes32(\"17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244\")),bytes32(stringToBytes32(\"27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118\")),bytes32(stringToBytes32(\"77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225\")),bytes32(stringToBytes32(\"77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118\")),bytes32(stringToBytes32(\"212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209\")),bytes32(stringToBytes32(\"107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231\")),bytes32(stringToBytes32(\"13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176\")),bytes32(stringToBytes32(\"249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128\")),bytes32(stringToBytes32(\"174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17\")),bytes32(stringToBytes32(\"53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182\")),bytes32(stringToBytes32(\"174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239\")),bytes32(stringToBytes32(\"208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167\")),bytes32(stringToBytes32(\"190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177\")),bytes32(stringToBytes32(\"97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3\")),bytes32(stringToBytes32(\"97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242\")),bytes32(stringToBytes32(\"247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147\")),bytes32(stringToBytes32(\"211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73\")),bytes32(stringToBytes32(\"189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140\")),bytes32(stringToBytes32(\"95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153\")),bytes32(stringToBytes32(\"202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197\")),bytes32(stringToBytes32(\"184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185\")),bytes32(stringToBytes32(\"117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206\")),bytes32(stringToBytes32(\"213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162\")),bytes32(stringToBytes32(\"141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170\")),bytes32(stringToBytes32(\"69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22\")),bytes32(stringToBytes32(\"110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92\")),bytes32(stringToBytes32(\"160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112\")),bytes32(stringToBytes32(\"52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236\")),bytes32(stringToBytes32(\"57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45\")),bytes32(stringToBytes32(\"69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230\")),bytes32(stringToBytes32(\"93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110\")),bytes32(stringToBytes32(\"88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58\")),bytes32(stringToBytes32(\"247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14\")),bytes32(stringToBytes32(\"20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219\")),bytes32(stringToBytes32(\"51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124\")),bytes32(stringToBytes32(\"212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220\")),bytes32(stringToBytes32(\"13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208\")),bytes32(stringToBytes32(\"109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232\")),bytes32(stringToBytes32(\"198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116\")),bytes32(stringToBytes32(\"217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193\")),bytes32(stringToBytes32(\"78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49\")),bytes32(stringToBytes32(\"136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156\")),bytes32(stringToBytes32(\"130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37\")),bytes32(stringToBytes32(\"245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243\")),bytes32(stringToBytes32(\"86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183\")),bytes32(stringToBytes32(\"239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250\")),bytes32(stringToBytes32(\"253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11\")),bytes32(stringToBytes32(\"112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215\")),bytes32(stringToBytes32(\"199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51\")),bytes32(stringToBytes32(\"148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74\")),bytes32(stringToBytes32(\"251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205\")),bytes32(stringToBytes32(\"232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177\")),bytes32(stringToBytes32(\"44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205\")),bytes32(stringToBytes32(\"111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165\")),bytes32(stringToBytes32(\"147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116\")),bytes32(stringToBytes32(\"49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123\")),bytes32(stringToBytes32(\"15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197\")),bytes32(stringToBytes32(\"5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentTimestamps.length",
            "parameters": [
              {
                "js": "[accounts[0],accounts[4],accounts[3],accounts[9],accounts[9],accounts[6],accounts[7],accounts[1],accounts[1],accounts[7],accounts[8],accounts[5],accounts[9],accounts[5],accounts[2],accounts[1],accounts[4],accounts[5],accounts[9],accounts[9],accounts[4],accounts[0],accounts[3],accounts[6],accounts[6],accounts[7],accounts[0],accounts[5],accounts[6],accounts[8],accounts[2],accounts[1],accounts[5],accounts[4],accounts[8],accounts[9],accounts[1],accounts[8],accounts[8],accounts[6],accounts[5],accounts[7],accounts[3],accounts[9],accounts[5],accounts[0],accounts[8],accounts[0],accounts[3],accounts[5],accounts[4],accounts[1],accounts[7],accounts[5],accounts[1],accounts[8],accounts[1],accounts[9],accounts[3],accounts[1],accounts[5],accounts[5],accounts[8],accounts[2],accounts[4],accounts[5],accounts[0]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[254,2014223716,254,2014223716,29,255,97,1532892064,2014223716,4,95,2,10000,2014223715,0,0,6,257,29,3,1532892063,2014223714,3,28,2014223715,9999,257,1532892062,1337,2014223716,26,5,1,3,65,2,10000,254,65,1532892064,1532892062,28,10001,254,1338,10000,1532892063,29,256,1338,27,254,1338,9999,2,9999,1337,2014223715,1337,2,2014223716,1532892064,3,10001,1336,1338]",
                "sol": "[uint256(254),uint256(2014223716),uint256(254),uint256(2014223716),uint256(29),uint256(255),uint256(97),uint256(1532892064),uint256(2014223716),uint256(4),uint256(95),uint256(2),uint256(10000),uint256(2014223715),uint256(0),uint256(0),uint256(6),uint256(257),uint256(29),uint256(3),uint256(1532892063),uint256(2014223714),uint256(3),uint256(28),uint256(2014223715),uint256(9999),uint256(257),uint256(1532892062),uint256(1337),uint256(2014223716),uint256(26),uint256(5),uint256(1),uint256(3),uint256(65),uint256(2),uint256(10000),uint256(254),uint256(65),uint256(1532892064),uint256(1532892062),uint256(28),uint256(10001),uint256(254),uint256(1338),uint256(10000),uint256(1532892063),uint256(29),uint256(256),uint256(1338),uint256(27),uint256(254),uint256(1338),uint256(9999),uint256(2),uint256(9999),uint256(1337),uint256(2014223715),uint256(1337),uint256(2),uint256(2014223716),uint256(1532892064),uint256(3),uint256(10001),uint256(1336),uint256(1338)]"
              },
              {
                "js": "[96,1338,254,256,5,255,1338,6,95,65,27,10000,1,254,29,254,29,4,254,26,255,1336,6,27,1,2014223714,2014223714,66,97,26,64,26,3,257,95,9999,254,27,97,5,1532892062,64,28,64,96,2,1337,65,5,5,10001,26,66,257,97,1338,97,9999,1337,254,1338,97,97,1,95,1532892063]",
                "sol": "[uint256(96),uint256(1338),uint256(254),uint256(256),uint256(5),uint256(255),uint256(1338),uint256(6),uint256(95),uint256(65),uint256(27),uint256(10000),uint256(1),uint256(254),uint256(29),uint256(254),uint256(29),uint256(4),uint256(254),uint256(26),uint256(255),uint256(1336),uint256(6),uint256(27),uint256(1),uint256(2014223714),uint256(2014223714),uint256(66),uint256(97),uint256(26),uint256(64),uint256(26),uint256(3),uint256(257),uint256(95),uint256(9999),uint256(254),uint256(27),uint256(97),uint256(5),uint256(1532892062),uint256(64),uint256(28),uint256(64),uint256(96),uint256(2),uint256(1337),uint256(65),uint256(5),uint256(5),uint256(10001),uint256(26),uint256(66),uint256(257),uint256(97),uint256(1338),uint256(97),uint256(9999),uint256(1337),uint256(254),uint256(1338),uint256(97),uint256(97),uint256(1),uint256(95),uint256(1532892063)]"
              },
              {
                "js": "[[245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205],[58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180],[232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117],[122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81],[46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231],[79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178],[128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246],[112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39],[17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244],[27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118],[77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225],[77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118],[212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209],[107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231],[13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176],[249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128],[174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17],[53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182],[174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239],[208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167],[190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177],[97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3],[97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242],[247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147],[211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73],[189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140],[95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153],[202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197],[184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185],[117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206],[213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162],[141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170],[69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22],[110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92],[160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112],[52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236],[57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45],[69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230],[93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110],[88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58],[247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14],[20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219],[51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124],[212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220],[13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208],[109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232],[198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116],[217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193],[78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49],[136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156],[130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37],[245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243],[86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183],[239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250],[253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11],[112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215],[199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51],[148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74],[251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205],[232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177],[44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205],[111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165],[147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116],[49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123],[15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197],[5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141]]",
                "sol": "[bytes32(stringToBytes32(\"245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205\")),bytes32(stringToBytes32(\"58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180\")),bytes32(stringToBytes32(\"232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117\")),bytes32(stringToBytes32(\"122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81\")),bytes32(stringToBytes32(\"46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231\")),bytes32(stringToBytes32(\"79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178\")),bytes32(stringToBytes32(\"128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246\")),bytes32(stringToBytes32(\"112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39\")),bytes32(stringToBytes32(\"17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244\")),bytes32(stringToBytes32(\"27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118\")),bytes32(stringToBytes32(\"77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225\")),bytes32(stringToBytes32(\"77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118\")),bytes32(stringToBytes32(\"212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209\")),bytes32(stringToBytes32(\"107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231\")),bytes32(stringToBytes32(\"13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176\")),bytes32(stringToBytes32(\"249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128\")),bytes32(stringToBytes32(\"174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17\")),bytes32(stringToBytes32(\"53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182\")),bytes32(stringToBytes32(\"174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239\")),bytes32(stringToBytes32(\"208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167\")),bytes32(stringToBytes32(\"190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177\")),bytes32(stringToBytes32(\"97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3\")),bytes32(stringToBytes32(\"97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242\")),bytes32(stringToBytes32(\"247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147\")),bytes32(stringToBytes32(\"211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73\")),bytes32(stringToBytes32(\"189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140\")),bytes32(stringToBytes32(\"95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153\")),bytes32(stringToBytes32(\"202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197\")),bytes32(stringToBytes32(\"184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185\")),bytes32(stringToBytes32(\"117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206\")),bytes32(stringToBytes32(\"213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162\")),bytes32(stringToBytes32(\"141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170\")),bytes32(stringToBytes32(\"69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22\")),bytes32(stringToBytes32(\"110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92\")),bytes32(stringToBytes32(\"160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112\")),bytes32(stringToBytes32(\"52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236\")),bytes32(stringToBytes32(\"57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45\")),bytes32(stringToBytes32(\"69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230\")),bytes32(stringToBytes32(\"93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110\")),bytes32(stringToBytes32(\"88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58\")),bytes32(stringToBytes32(\"247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14\")),bytes32(stringToBytes32(\"20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219\")),bytes32(stringToBytes32(\"51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124\")),bytes32(stringToBytes32(\"212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220\")),bytes32(stringToBytes32(\"13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208\")),bytes32(stringToBytes32(\"109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232\")),bytes32(stringToBytes32(\"198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116\")),bytes32(stringToBytes32(\"217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193\")),bytes32(stringToBytes32(\"78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49\")),bytes32(stringToBytes32(\"136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156\")),bytes32(stringToBytes32(\"130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37\")),bytes32(stringToBytes32(\"245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243\")),bytes32(stringToBytes32(\"86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183\")),bytes32(stringToBytes32(\"239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250\")),bytes32(stringToBytes32(\"253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11\")),bytes32(stringToBytes32(\"112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215\")),bytes32(stringToBytes32(\"199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51\")),bytes32(stringToBytes32(\"148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74\")),bytes32(stringToBytes32(\"251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205\")),bytes32(stringToBytes32(\"232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177\")),bytes32(stringToBytes32(\"44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205\")),bytes32(stringToBytes32(\"111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165\")),bytes32(stringToBytes32(\"147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116\")),bytes32(stringToBytes32(\"49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123\")),bytes32(stringToBytes32(\"15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197\")),bytes32(stringToBytes32(\"5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentValues.length",
            "parameters": [
              {
                "js": "[accounts[7],accounts[3],accounts[5],accounts[4],accounts[6],accounts[6],accounts[5],accounts[5],accounts[6],accounts[6],accounts[8],accounts[2],accounts[7],accounts[4],accounts[0],accounts[8],accounts[1],accounts[5],accounts[9],accounts[3],accounts[0],accounts[2],accounts[6],accounts[4],accounts[0],accounts[6],accounts[2],accounts[4],accounts[7],accounts[9],accounts[7],accounts[9],accounts[6],accounts[3],accounts[0],accounts[9],accounts[8],accounts[0],accounts[4],accounts[4],accounts[5],accounts[0],accounts[6],accounts[3],accounts[2],accounts[3],accounts[6],accounts[9],accounts[5],accounts[5],accounts[9],accounts[4],accounts[9],accounts[4],accounts[7],accounts[2],accounts[6],accounts[4],accounts[1],accounts[3],accounts[2],accounts[1],accounts[8],accounts[5],accounts[7],accounts[4],accounts[3]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[254,2014223716,254,2014223716,29,255,97,1532892064,2014223716,4,95,2,10000,2014223715,0,0,6,257,29,3,1532892063,2014223714,3,28,2014223715,9999,257,1532892062,1337,2014223716,26,5,1,3,65,2,10000,254,65,1532892064,1532892062,28,10001,254,1338,10000,1532892063,29,256,1338,27,254,1338,9999,2,9999,1337,2014223715,1337,2,2014223716,1532892064,3,10001,1336,1338]",
                "sol": "[uint256(254),uint256(2014223716),uint256(254),uint256(2014223716),uint256(29),uint256(255),uint256(97),uint256(1532892064),uint256(2014223716),uint256(4),uint256(95),uint256(2),uint256(10000),uint256(2014223715),uint256(0),uint256(0),uint256(6),uint256(257),uint256(29),uint256(3),uint256(1532892063),uint256(2014223714),uint256(3),uint256(28),uint256(2014223715),uint256(9999),uint256(257),uint256(1532892062),uint256(1337),uint256(2014223716),uint256(26),uint256(5),uint256(1),uint256(3),uint256(65),uint256(2),uint256(10000),uint256(254),uint256(65),uint256(1532892064),uint256(1532892062),uint256(28),uint256(10001),uint256(254),uint256(1338),uint256(10000),uint256(1532892063),uint256(29),uint256(256),uint256(1338),uint256(27),uint256(254),uint256(1338),uint256(9999),uint256(2),uint256(9999),uint256(1337),uint256(2014223715),uint256(1337),uint256(2),uint256(2014223716),uint256(1532892064),uint256(3),uint256(10001),uint256(1336),uint256(1338)]"
              },
              {
                "js": "[96,1338,254,256,5,255,1338,6,95,65,27,10000,1,254,29,254,29,4,254,26,255,1336,6,27,1,2014223714,2014223714,66,97,26,64,26,3,257,95,9999,254,27,97,5,1532892062,64,28,64,96,2,1337,65,5,5,10001,26,66,257,97,1338,97,9999,1337,254,1338,97,97,1,95,1532892063]",
                "sol": "[uint256(96),uint256(1338),uint256(254),uint256(256),uint256(5),uint256(255),uint256(1338),uint256(6),uint256(95),uint256(65),uint256(27),uint256(10000),uint256(1),uint256(254),uint256(29),uint256(254),uint256(29),uint256(4),uint256(254),uint256(26),uint256(255),uint256(1336),uint256(6),uint256(27),uint256(1),uint256(2014223714),uint256(2014223714),uint256(66),uint256(97),uint256(26),uint256(64),uint256(26),uint256(3),uint256(257),uint256(95),uint256(9999),uint256(254),uint256(27),uint256(97),uint256(5),uint256(1532892062),uint256(64),uint256(28),uint256(64),uint256(96),uint256(2),uint256(1337),uint256(65),uint256(5),uint256(5),uint256(10001),uint256(26),uint256(66),uint256(257),uint256(97),uint256(1338),uint256(97),uint256(9999),uint256(1337),uint256(254),uint256(1338),uint256(97),uint256(97),uint256(1),uint256(95),uint256(1532892063)]"
              },
              {
                "js": "[[245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205],[58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180],[232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117],[122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81],[46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231],[79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178],[128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246],[112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39],[17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244],[27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118],[77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225],[77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118],[212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209],[107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231],[13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176],[249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128],[174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17],[53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182],[174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239],[208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167],[190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177],[97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3],[97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242],[247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147],[211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73],[189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140],[95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153],[202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197],[184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185],[117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206],[213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162],[141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170],[69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22],[110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92],[160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112],[52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236],[57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45],[69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230],[93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110],[88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58],[247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14],[20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219],[51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124],[212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220],[13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208],[109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232],[198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116],[217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193],[78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49],[136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156],[130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37],[245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243],[86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183],[239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250],[253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11],[112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215],[199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51],[148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74],[251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205],[232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177],[44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205],[111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165],[147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116],[49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123],[15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197],[5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141]]",
                "sol": "[bytes32(stringToBytes32(\"245,198,57,42,234,214,218,24,64,121,29,57,192,157,223,8,34,169,96,70,104,239,15,88,232,50,179,152,129,99,81,205\")),bytes32(stringToBytes32(\"58,245,129,205,165,95,234,241,62,243,102,73,112,190,52,15,220,225,164,204,85,205,35,199,77,38,60,231,246,180,71,180\")),bytes32(stringToBytes32(\"232,231,172,143,208,62,134,240,31,72,14,41,52,203,76,11,199,170,4,58,45,95,207,234,140,23,33,161,176,117,0,117\")),bytes32(stringToBytes32(\"122,120,216,14,57,37,87,88,73,234,138,218,197,17,217,204,213,146,158,136,231,144,192,95,89,31,71,119,210,166,51,81\")),bytes32(stringToBytes32(\"46,120,87,229,180,128,68,253,247,133,188,63,156,214,147,107,190,234,196,234,198,52,138,235,35,91,190,124,240,28,27,231\")),bytes32(stringToBytes32(\"79,38,152,38,96,75,6,249,251,245,179,70,94,49,194,91,99,112,122,252,192,44,99,104,127,234,63,232,133,10,76,178\")),bytes32(stringToBytes32(\"128,149,215,166,110,14,136,206,210,224,216,200,56,224,124,190,36,158,149,27,182,138,190,174,113,89,159,3,250,243,161,246\")),bytes32(stringToBytes32(\"112,103,183,203,102,164,71,50,217,28,25,24,205,189,241,177,71,30,196,160,58,51,95,134,16,153,190,234,188,176,121,39\")),bytes32(stringToBytes32(\"17,8,80,190,127,239,165,215,17,174,48,134,124,116,111,11,2,185,2,14,91,1,58,240,55,194,151,157,155,212,156,244\")),bytes32(stringToBytes32(\"27,159,146,160,138,171,206,155,96,121,85,74,71,201,165,72,12,43,111,2,158,244,164,63,254,169,70,181,94,25,52,118\")),bytes32(stringToBytes32(\"77,144,184,151,55,254,59,159,97,56,82,53,86,235,132,252,79,108,197,181,85,82,134,131,174,208,69,47,205,39,25,225\")),bytes32(stringToBytes32(\"77,70,202,222,102,38,117,90,138,66,106,86,211,109,39,230,23,3,28,90,214,243,71,113,200,62,90,230,0,241,79,118\")),bytes32(stringToBytes32(\"212,32,174,231,134,95,220,253,165,10,149,13,78,29,145,212,24,225,71,194,46,127,14,100,221,65,136,151,211,159,128,209\")),bytes32(stringToBytes32(\"107,51,28,114,134,153,230,153,180,111,155,97,237,126,101,106,99,90,91,194,235,83,50,205,16,173,43,196,8,176,235,231\")),bytes32(stringToBytes32(\"13,202,64,149,128,92,67,27,218,219,97,114,250,102,188,39,150,207,91,58,31,139,131,90,203,22,182,44,120,120,6,176\")),bytes32(stringToBytes32(\"249,2,181,98,108,147,22,70,6,242,97,147,185,238,141,198,151,36,131,67,209,159,52,208,60,82,160,53,34,171,58,128\")),bytes32(stringToBytes32(\"174,45,69,111,151,134,239,236,118,37,33,198,50,55,92,58,144,181,94,3,214,42,18,227,102,212,223,178,245,7,34,17\")),bytes32(stringToBytes32(\"53,129,38,93,252,115,176,143,17,73,218,119,68,21,117,63,45,21,142,253,54,24,191,195,239,35,127,193,107,63,85,182\")),bytes32(stringToBytes32(\"174,32,217,100,176,231,188,189,195,173,186,44,103,199,96,131,217,66,53,210,135,172,106,169,139,132,131,35,14,168,129,239\")),bytes32(stringToBytes32(\"208,224,212,164,172,152,50,32,223,225,17,111,139,18,95,246,14,21,222,96,222,128,61,81,38,64,203,116,8,88,110,167\")),bytes32(stringToBytes32(\"190,228,205,182,20,182,128,119,234,245,113,173,127,25,192,224,8,95,255,122,22,165,230,140,138,27,19,57,162,55,71,177\")),bytes32(stringToBytes32(\"97,142,175,47,186,159,163,250,170,251,142,122,97,223,171,193,248,140,80,117,144,91,91,240,91,189,231,2,123,180,23,3\")),bytes32(stringToBytes32(\"97,153,32,160,100,75,239,98,184,193,183,245,138,105,111,65,221,79,131,227,219,24,220,175,151,204,246,164,98,122,143,242\")),bytes32(stringToBytes32(\"247,30,55,162,246,130,86,205,52,99,60,200,141,75,95,196,105,71,46,171,144,91,171,157,6,131,20,217,89,239,35,147\")),bytes32(stringToBytes32(\"211,52,101,122,190,234,27,113,42,94,100,70,246,135,53,42,82,124,231,199,7,84,125,175,99,0,151,22,191,96,146,73\")),bytes32(stringToBytes32(\"189,173,110,241,233,98,144,187,42,222,246,52,189,174,150,75,79,123,82,252,20,4,137,141,95,255,56,98,198,86,26,140\")),bytes32(stringToBytes32(\"95,129,41,103,170,33,49,194,122,223,56,244,59,216,81,216,237,142,143,243,106,186,89,198,42,151,66,22,253,174,150,153\")),bytes32(stringToBytes32(\"202,68,94,60,82,249,36,112,175,184,65,124,81,254,147,142,90,182,132,114,98,113,120,162,154,217,156,75,61,157,120,197\")),bytes32(stringToBytes32(\"184,197,100,56,109,28,69,14,179,40,78,4,111,101,49,230,99,40,11,82,11,227,253,114,178,50,46,177,94,247,214,185\")),bytes32(stringToBytes32(\"117,83,151,27,144,20,8,202,250,46,189,221,207,8,216,75,47,245,87,75,69,240,233,52,105,100,237,65,190,235,246,206\")),bytes32(stringToBytes32(\"213,185,186,58,99,163,58,242,144,133,12,44,182,82,83,195,244,209,187,110,206,107,212,49,100,193,35,51,70,232,94,162\")),bytes32(stringToBytes32(\"141,201,44,179,141,229,83,192,79,145,106,241,220,225,18,116,173,53,227,150,249,16,39,223,198,114,152,93,9,69,250,170\")),bytes32(stringToBytes32(\"69,122,54,78,167,69,37,242,100,243,5,29,54,189,220,48,37,3,181,139,243,214,207,64,21,76,145,93,74,119,33,22\")),bytes32(stringToBytes32(\"110,181,207,126,27,127,242,9,6,106,121,100,196,85,210,58,39,4,42,91,244,124,229,127,14,65,132,35,228,52,85,92\")),bytes32(stringToBytes32(\"160,253,165,124,25,140,15,75,7,161,87,41,209,151,91,14,46,56,147,129,172,141,178,11,101,37,16,101,18,140,9,112\")),bytes32(stringToBytes32(\"52,17,151,155,90,49,183,216,169,146,6,1,192,122,131,223,33,68,252,31,20,175,132,179,92,53,0,30,161,78,237,236\")),bytes32(stringToBytes32(\"57,173,59,216,30,170,254,66,154,217,223,37,218,89,106,216,243,22,254,114,41,74,136,105,125,216,161,56,219,18,90,45\")),bytes32(stringToBytes32(\"69,219,103,70,254,130,233,229,93,101,172,183,212,232,149,80,44,66,85,245,28,196,42,5,218,25,154,12,113,72,172,230\")),bytes32(stringToBytes32(\"93,65,148,219,112,4,186,140,220,82,149,144,186,124,202,15,145,73,217,248,244,190,127,146,137,123,29,114,250,234,82,110\")),bytes32(stringToBytes32(\"88,152,198,50,233,49,141,118,62,66,68,16,223,58,168,7,154,61,34,170,255,220,27,247,220,177,218,185,229,189,93,58\")),bytes32(stringToBytes32(\"247,19,149,253,84,62,164,10,215,159,143,44,33,40,38,37,51,216,59,143,107,63,213,44,153,158,160,91,65,182,148,14\")),bytes32(stringToBytes32(\"20,215,150,215,185,132,133,26,140,81,13,16,43,219,105,148,126,22,44,82,2,37,188,33,58,206,42,211,83,225,87,219\")),bytes32(stringToBytes32(\"51,207,94,103,119,69,222,232,145,8,254,79,178,195,47,202,190,52,98,18,62,51,86,132,214,210,127,50,157,28,61,124\")),bytes32(stringToBytes32(\"212,26,92,233,79,222,101,222,222,235,221,188,240,67,18,255,137,0,21,117,10,157,222,254,1,87,113,253,58,29,209,220\")),bytes32(stringToBytes32(\"13,50,98,49,198,184,97,158,169,91,103,231,217,32,77,76,131,45,9,52,40,220,161,19,111,184,187,87,140,84,99,208\")),bytes32(stringToBytes32(\"109,130,248,30,188,201,245,78,92,0,170,247,183,165,18,185,105,134,101,248,206,35,251,193,219,30,155,95,208,135,225,232\")),bytes32(stringToBytes32(\"198,68,253,236,181,56,3,196,251,237,136,93,220,100,202,152,48,158,11,20,187,141,145,95,253,229,158,120,230,72,123,116\")),bytes32(stringToBytes32(\"217,217,234,228,206,19,129,242,18,241,87,208,24,242,43,124,54,166,124,66,108,19,76,4,2,75,182,72,47,119,224,193\")),bytes32(stringToBytes32(\"78,4,14,175,225,139,212,125,163,121,227,196,60,86,211,101,48,91,201,208,84,241,176,76,77,33,255,173,7,114,81,49\")),bytes32(stringToBytes32(\"136,104,215,218,48,148,101,192,16,137,88,123,77,78,207,48,31,109,74,140,118,71,196,37,93,241,19,216,43,100,86,156\")),bytes32(stringToBytes32(\"130,150,195,23,67,55,28,115,255,90,241,207,251,225,80,39,245,33,213,142,13,75,213,132,50,188,42,89,22,89,208,37\")),bytes32(stringToBytes32(\"245,162,247,254,185,92,125,17,212,18,252,53,128,107,37,136,92,87,25,100,8,195,105,15,178,22,45,253,173,22,188,243\")),bytes32(stringToBytes32(\"86,99,5,89,249,144,115,133,131,93,93,140,41,237,53,163,199,0,147,79,210,106,210,167,243,96,190,7,220,42,86,183\")),bytes32(stringToBytes32(\"239,153,159,61,111,173,81,24,60,125,8,176,171,87,110,194,113,181,203,183,159,200,78,27,202,173,9,150,192,210,16,250\")),bytes32(stringToBytes32(\"253,239,170,134,45,105,198,219,130,121,182,55,141,117,237,251,146,15,107,63,122,200,184,76,200,180,52,108,134,218,145,11\")),bytes32(stringToBytes32(\"112,194,163,94,87,219,215,175,80,111,193,25,18,37,112,140,197,1,70,84,38,235,135,42,8,199,25,136,117,40,201,215\")),bytes32(stringToBytes32(\"199,39,27,233,142,61,175,24,149,174,213,33,79,240,63,20,92,82,179,167,244,84,250,26,160,150,42,74,215,246,170,51\")),bytes32(stringToBytes32(\"148,128,29,128,8,218,115,52,18,140,96,6,194,220,39,157,24,249,147,70,186,5,229,25,232,43,13,168,228,32,140,74\")),bytes32(stringToBytes32(\"251,235,113,116,83,136,220,238,153,46,65,254,241,241,46,124,227,230,105,78,128,107,148,17,170,189,219,192,145,177,117,205\")),bytes32(stringToBytes32(\"232,194,69,197,166,160,181,195,224,222,153,165,30,214,118,199,153,217,208,224,119,26,217,65,30,129,248,104,254,162,34,177\")),bytes32(stringToBytes32(\"44,167,152,46,134,236,55,13,15,74,9,237,173,77,175,189,147,108,249,3,77,25,34,15,139,17,177,236,32,161,245,205\")),bytes32(stringToBytes32(\"111,139,173,66,143,44,69,129,9,33,251,148,15,57,53,196,126,114,61,36,129,18,172,131,71,92,72,53,221,238,209,165\")),bytes32(stringToBytes32(\"147,54,23,176,232,115,116,108,229,255,194,16,228,124,96,219,105,236,198,231,246,170,223,134,2,13,126,110,42,234,43,116\")),bytes32(stringToBytes32(\"49,19,13,211,208,167,99,210,120,8,235,101,75,208,142,251,74,166,80,196,163,7,24,220,118,126,100,184,151,67,0,123\")),bytes32(stringToBytes32(\"15,116,79,179,105,144,40,123,210,116,144,138,212,103,229,240,26,151,197,215,33,178,169,61,167,242,143,32,254,206,112,197\")),bytes32(stringToBytes32(\"5,140,81,133,29,127,94,191,206,208,147,45,175,71,197,212,67,49,116,236,29,134,44,147,175,105,45,65,65,135,239,141\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.133ZOffChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,bytes32) WHEN _securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "[213,70,63,249,29,58,12,109,201,97,201,255,89,56,253,201,75,253,128,135,245,174,190,64,84,133,97,47,134,74,96,65]",
              "sol": "stringToBytes32(\"213,70,63,249,29,58,12,109,201,97,201,255,89,56,253,201,75,253,128,135,245,174,190,64,84,133,97,47,134,74,96,65\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,bytes32) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "[213,70,63,249,29,58,12,109,201,97,201,255,89,56,253,201,75,253,128,135,245,174,190,64,84,133,97,47,134,74,96,65]",
                "sol": "stringToBytes32(\"213,70,63,249,29,58,12,109,201,97,201,255,89,56,253,201,75,253,128,135,245,174,190,64,84,133,97,47,134,74,96,65\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.135ZOffChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "1336",
              "sol": "1336"
            },
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.136ZOffChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "169-192",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "[227,83,108,0,51,118,21,227,86,192,91,202,255,24,111,177,200,238,50,139,5,128,30,72,162,215,56,187,38,37,151,199]",
              "sol": "stringToBytes32(\"227,83,108,0,51,118,21,227,86,192,91,202,255,24,111,177,200,238,50,139,5,128,30,72,162,215,56,187,38,37,151,199\")"
            },
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "{from:accounts[9]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "[227,83,108,0,51,118,21,227,86,192,91,202,255,24,111,177,200,238,50,139,5,128,30,72,162,215,56,187,38,37,151,199]",
                "sol": "stringToBytes32(\"227,83,108,0,51,118,21,227,86,192,91,202,255,24,111,177,200,238,50,139,5,128,30,72,162,215,56,187,38,37,151,199\")"
              },
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"accounts[8]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[227,83,108,0,51,118,21,227,86,192,91,202,255,24,111,177,200,238,50,139,5,128,30,72,162,215,56,187,38,37,151,199]",
                "sol": "stringToBytes32(\"227,83,108,0,51,118,21,227,86,192,91,202,255,24,111,177,200,238,50,139,5,128,30,72,162,215,56,187,38,37,151,199\")"
              },
              {
                "js": "95",
                "sol": "95"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "177-192",
          "restrictions": [
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "[52,195,250,183,235,99,17,127,2,164,49,148,13,75,179,222,12,47,155,234,184,154,180,45,120,141,209,39,87,205,35,250]",
              "sol": "stringToBytes32(\"52,195,250,183,235,99,17,127,2,164,49,148,13,75,179,222,12,47,155,234,184,154,180,45,120,141,209,39,87,205,35,250\")"
            },
            {
              "js": "1532892063",
              "sol": "1532892063"
            },
            {
              "js": "{from:accounts[9]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "[52,195,250,183,235,99,17,127,2,164,49,148,13,75,179,222,12,47,155,234,184,154,180,45,120,141,209,39,87,205,35,250]",
                "sol": "stringToBytes32(\"52,195,250,183,235,99,17,127,2,164,49,148,13,75,179,222,12,47,155,234,184,154,180,45,120,141,209,39,87,205,35,250\")"
              },
              {
                "js": "1532892063",
                "sol": "1532892063"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"accounts[8]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[3]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[52,195,250,183,235,99,17,127,2,164,49,148,13,75,179,222,12,47,155,234,184,154,180,45,120,141,209,39,87,205,35,250]",
                "sol": "stringToBytes32(\"52,195,250,183,235,99,17,127,2,164,49,148,13,75,179,222,12,47,155,234,184,154,180,45,120,141,209,39,87,205,35,250\")"
              },
              {
                "js": "1532892063",
                "sol": "1532892063"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.139ZOnChainVoting.placeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute placeVote(string) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<endTime",
          "parameters": [
            {
              "js": "\"UsesExample\"",
              "sol": "\"UsesExample\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.140ZOnChainVoting.submitUserVotes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute submitUserVotes(bytes32[],bytes32[]) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,_usersSaltHash.length==_usersVote.length,_usersSaltHash.length!=0",
          "parameters": [
            {
              "js": "[[11,24,19,151,112,141,89,152,118,59,182,135,88,171,105,124,9,7,196,109,67,197,228,82,206,65,174,68,179,172,3,249],[19,215,110,205,11,213,201,129,40,111,184,222,171,156,237,62,182,188,19,119,97,62,156,229,145,165,190,112,54,117,67,101],[181,241,156,137,203,165,138,131,36,63,18,121,143,142,251,175,188,253,232,56,18,21,77,91,145,195,22,131,105,159,110,147],[178,225,216,172,22,76,55,167,108,220,234,97,198,160,254,247,158,173,164,148,153,208,35,222,202,0,165,52,226,148,50,219],[197,103,79,116,90,22,97,190,209,65,179,111,136,93,148,144,113,57,154,237,41,123,132,237,230,67,233,224,50,79,169,182],[125,116,118,29,75,170,139,58,223,12,22,231,30,223,223,46,166,71,239,171,4,36,115,52,177,201,165,165,127,86,221,205],[252,77,70,58,140,33,204,38,113,36,137,6,15,92,102,22,197,124,122,152,24,76,226,173,101,2,92,85,224,58,29,68],[201,159,206,57,151,238,11,7,133,2,133,41,192,12,86,159,195,157,76,91,89,61,233,232,229,9,62,218,183,56,26,234],[90,221,196,226,62,61,59,79,146,159,11,72,71,183,236,169,195,184,193,254,220,161,178,144,170,133,189,169,77,20,42,225],[242,246,218,12,67,166,126,30,92,148,77,58,179,153,65,85,156,240,160,193,68,232,36,38,126,174,248,119,230,244,178,152],[205,175,8,16,149,152,36,125,83,59,88,155,110,152,181,143,253,212,41,87,157,221,244,180,77,133,6,182,37,206,224,91],[50,107,126,187,89,165,123,77,173,7,186,156,236,59,134,164,225,70,27,200,96,136,98,214,187,115,210,14,150,53,31,44],[132,170,108,78,121,141,16,91,35,5,141,145,14,112,169,133,211,71,126,189,165,100,123,195,59,209,66,250,103,39,192,41],[108,23,135,82,118,197,126,146,239,253,26,220,125,15,110,14,119,233,21,203,196,115,95,69,1,167,26,56,151,235,135,165],[247,125,177,54,204,208,62,145,23,55,249,43,34,113,118,211,88,200,13,80,24,199,95,105,144,248,68,226,23,121,107,179],[191,40,28,187,137,17,78,57,106,160,189,243,64,164,129,204,97,234,251,73,233,28,190,250,179,93,171,155,221,67,142,130],[56,227,105,79,36,170,226,8,57,140,57,97,5,66,179,122,175,38,11,88,116,159,8,105,124,101,128,12,175,177,65,188],[225,2,166,87,12,170,189,56,10,203,30,109,60,41,130,47,161,249,65,107,73,210,191,173,85,180,194,25,44,241,182,112],[141,4,53,98,8,153,139,123,137,142,239,46,63,187,138,1,2,113,21,202,173,174,190,251,221,32,105,29,94,125,64,238],[81,207,161,193,64,150,174,245,172,119,166,75,98,225,84,193,72,151,114,84,197,143,1,51,143,36,254,21,18,39,89,170],[167,137,5,55,62,179,129,86,198,68,70,234,192,85,122,96,250,102,244,222,22,197,50,167,47,112,125,100,37,49,214,96],[236,8,72,1,167,137,61,207,125,92,110,72,0,76,238,197,51,84,65,72,62,103,79,235,91,233,250,73,183,210,248,9],[193,33,211,18,139,133,249,137,26,51,185,166,60,92,29,68,146,6,80,199,88,69,119,110,113,244,75,170,170,114,53,135],[205,72,171,72,198,29,214,151,84,158,10,128,253,24,160,116,15,182,142,231,62,161,143,171,59,196,178,20,129,19,246,83],[40,8,72,191,176,81,72,67,69,190,236,94,255,49,31,245,105,9,55,201,76,116,255,21,173,32,200,232,243,40,152,224],[211,80,54,167,207,92,63,75,102,179,146,210,145,242,151,175,137,63,214,240,86,127,55,154,116,187,189,244,51,161,73,127],[128,142,121,117,207,65,146,162,37,53,34,17,73,234,8,212,152,80,177,87,109,71,83,17,103,217,48,116,88,17,69,55],[183,233,101,150,150,245,127,7,92,136,26,203,207,192,31,8,251,86,131,203,77,5,77,89,96,94,78,90,159,227,34,143],[253,53,87,85,60,210,124,33,13,78,163,248,40,74,78,53,159,72,89,18,125,223,196,229,116,11,240,244,49,249,189,40],[84,31,16,60,17,72,220,237,92,158,116,255,108,65,44,47,197,121,106,43,191,60,37,85,207,231,45,181,250,215,73,102],[99,250,221,238,16,90,196,107,3,26,193,2,247,35,8,37,82,22,245,193,213,188,101,187,12,203,71,47,255,96,29,105],[95,44,40,207,1,32,147,204,29,27,145,179,71,157,115,244,15,148,120,164,234,158,188,123,104,230,110,90,188,129,228,52],[187,58,184,40,255,182,252,255,187,144,0,110,105,245,44,107,255,218,164,153,103,47,159,79,5,64,70,38,136,124,204,73],[167,88,121,174,39,67,32,188,103,227,119,19,193,19,101,158,105,2,208,29,105,7,239,250,207,108,242,124,60,112,25,213],[153,123,244,131,86,241,149,155,157,52,168,17,76,229,212,89,211,93,99,116,34,58,85,233,30,133,102,217,102,176,171,99],[140,45,229,206,127,170,181,138,6,42,169,96,20,59,105,194,164,44,218,24,179,117,32,200,60,56,50,127,105,27,34,193],[74,168,4,242,36,246,101,131,173,180,127,59,208,120,142,211,52,93,4,74,209,6,33,32,63,60,189,62,136,50,162,22],[75,117,172,208,223,57,98,52,145,38,2,64,88,250,115,97,41,151,72,157,174,18,1,111,184,144,208,5,138,129,66,83],[148,193,211,175,82,88,66,57,144,36,222,198,159,151,149,88,68,17,34,188,237,5,218,253,22,205,107,246,194,109,134,159],[118,152,20,123,166,226,34,106,27,188,97,17,136,175,107,32,76,197,44,213,70,4,174,109,210,249,19,61,241,241,246,70],[15,204,37,94,166,254,245,106,55,75,15,85,205,231,175,12,135,195,236,16,59,255,180,7,84,113,197,186,147,116,235,231],[235,129,137,219,148,230,99,178,52,192,213,78,227,212,25,74,54,195,204,108,120,96,73,201,187,7,81,149,237,4,202,207],[203,80,223,70,110,121,43,134,39,49,17,90,77,56,110,248,25,90,35,53,33,85,166,54,124,22,245,105,238,102,87,189],[204,125,58,164,76,28,15,18,187,184,126,187,32,58,37,21,247,250,13,25,215,247,221,94,216,126,186,8,194,81,215,127],[181,91,65,175,60,199,190,31,165,30,105,230,7,253,0,39,174,17,248,112,17,52,184,182,129,97,220,10,85,242,248,66],[166,82,83,227,152,187,37,60,142,45,249,184,246,24,149,104,228,198,25,237,136,176,44,30,215,245,67,55,10,222,148,253],[59,116,124,50,75,16,67,41,13,25,254,208,51,251,0,103,180,23,78,78,253,60,95,33,187,168,252,225,114,199,236,104],[194,162,10,209,123,33,185,76,70,81,207,137,171,126,110,51,13,107,206,92,209,175,83,70,203,219,51,143,162,177,113,84],[211,71,129,73,195,111,111,220,201,19,32,24,178,1,122,55,17,133,206,252,185,94,209,217,89,48,167,50,231,96,130,101],[32,147,94,54,125,229,144,200,113,12,93,158,105,175,220,76,58,243,166,41,60,85,74,177,249,168,136,101,72,176,95,122],[213,54,74,239,23,243,179,12,237,111,4,162,198,247,166,22,76,8,212,21,235,155,236,30,198,65,60,210,197,130,216,90],[136,104,16,245,241,144,67,181,172,79,91,243,130,167,202,3,210,241,186,116,88,161,140,12,86,119,97,109,184,95,36,205],[190,14,104,191,152,178,137,193,46,217,133,71,175,77,253,188,97,216,201,183,99,245,169,40,82,128,185,201,177,211,237,158],[228,255,146,190,192,54,72,218,101,189,161,19,107,195,126,87,250,241,66,205,166,149,222,135,26,203,215,19,28,158,139,0],[217,173,161,6,197,53,177,9,239,192,79,121,87,208,159,162,69,152,98,17,206,159,96,72,45,4,178,143,118,215,30,157],[147,93,154,195,244,30,68,242,137,114,52,102,13,223,222,146,41,87,100,221,231,120,244,97,154,160,37,203,165,206,219,24],[181,70,110,76,86,168,152,8,224,128,69,181,23,47,172,125,6,91,147,32,141,53,145,30,175,122,69,68,84,138,203,254],[176,60,181,171,225,132,119,87,239,110,58,254,90,60,23,168,44,125,36,203,88,250,175,43,77,255,102,193,103,255,231,208],[218,218,116,66,168,30,107,202,83,210,251,177,110,80,216,34,99,86,222,111,216,176,138,188,25,159,15,191,28,241,59,198],[69,23,24,223,7,238,157,133,89,90,211,54,66,139,146,208,20,136,9,73,246,15,107,255,153,195,141,125,162,48,81,106],[185,184,224,100,129,138,216,92,161,87,170,128,74,149,119,158,225,123,148,76,198,106,116,238,26,190,4,101,166,82,56,207],[230,89,10,23,112,77,175,251,217,12,81,157,48,83,86,139,177,91,44,162,187,227,116,56,164,221,60,243,182,118,40,155],[176,31,108,240,116,107,223,122,118,112,81,217,91,144,35,23,243,163,246,194,69,156,169,86,117,235,180,22,171,172,81,25],[235,178,119,184,110,189,14,104,47,187,143,166,88,75,228,93,43,218,51,52,88,193,21,17,103,209,25,173,77,179,128,247],[113,20,65,178,232,35,99,41,101,133,58,64,159,91,140,43,103,211,52,214,53,32,131,122,159,202,50,228,109,157,62,253],[69,127,131,92,227,220,169,51,195,238,29,114,138,127,231,77,75,50,250,132,96,0,120,133,87,186,81,189,26,2,120,197],[129,30,123,137,198,127,196,187,17,56,43,150,18,220,30,230,33,15,235,170,35,154,177,136,230,250,245,110,78,86,77,111],[228,210,94,18,108,139,47,209,71,201,199,61,154,6,17,143,73,32,53,126,85,249,70,2,161,167,161,34,114,169,24,63],[40,206,214,85,7,159,86,52,38,235,27,63,226,218,174,183,222,208,36,155,198,247,36,207,215,255,101,10,80,248,178,190],[124,118,247,87,86,138,42,254,247,154,67,216,45,36,216,206,75,156,67,179,109,247,92,198,65,115,197,143,208,87,248,169],[22,61,203,112,152,142,90,208,250,12,210,109,163,99,68,207,62,110,6,237,199,244,125,4,75,25,189,35,102,214,165,30],[199,141,103,225,156,205,26,81,128,245,252,67,219,244,45,82,27,232,88,198,71,253,97,159,8,56,172,97,193,48,251,175],[11,20,157,102,16,199,82,84,195,195,132,197,210,94,184,188,61,55,42,169,128,134,125,100,246,11,0,59,105,190,38,13],[25,217,137,95,132,143,113,133,46,59,67,254,133,101,225,76,107,119,182,66,70,249,18,11,204,164,206,35,250,57,251,95],[39,191,44,170,68,10,9,160,175,147,139,2,152,228,183,120,88,63,40,132,21,66,106,113,220,8,161,139,234,12,117,116],[67,72,80,166,93,91,31,227,53,117,127,105,40,57,187,181,179,67,159,228,158,207,34,179,197,246,9,35,49,228,6,14],[49,110,39,184,45,75,225,26,148,55,53,223,63,155,60,189,123,213,143,112,118,228,94,253,63,1,43,77,143,114,101,111],[185,102,237,203,137,95,140,149,214,85,207,243,96,253,78,128,248,21,138,63,116,16,157,242,6,188,183,115,40,90,108,47],[21,165,55,32,78,119,17,87,145,198,141,172,157,16,254,192,157,36,197,3,37,67,55,239,106,99,122,164,99,222,120,61],[111,191,254,133,52,160,231,7,219,70,34,6,101,24,76,191,153,141,49,117,98,39,180,214,8,67,186,133,122,145,26,123],[122,125,188,132,88,35,45,15,107,169,85,121,123,246,59,113,75,162,131,206,14,29,99,174,188,6,251,60,163,56,162,169],[254,87,234,14,47,14,77,69,144,114,214,214,163,173,228,104,178,35,135,65,27,225,42,72,226,175,19,21,93,143,108,200],[160,190,169,225,107,236,51,76,230,61,94,235,172,169,148,240,236,164,182,39,254,50,112,24,52,137,247,68,229,87,197,90],[245,67,140,180,97,92,52,97,186,116,143,133,227,106,48,92,75,251,197,123,54,87,193,188,207,157,156,222,128,75,17,195],[139,94,140,106,171,226,40,119,237,116,0,234,177,171,30,232,116,255,17,219,87,50,6,129,62,140,174,149,45,151,196,187],[220,173,145,51,239,119,13,215,90,39,48,181,65,206,220,52,192,98,62,254,149,154,136,102,181,191,110,92,243,18,34,12],[110,92,220,230,65,105,112,111,253,98,98,218,81,102,133,233,42,201,79,238,211,27,164,163,209,43,190,19,213,93,195,125],[12,240,118,122,26,35,6,186,84,121,36,240,155,3,147,5,43,209,89,131,122,59,81,24,26,29,167,161,17,219,70,62],[167,26,27,77,149,126,110,60,196,204,195,42,208,46,126,16,205,31,196,201,191,176,202,44,33,91,167,175,83,161,201,188],[217,1,215,132,135,241,118,20,240,177,250,39,94,163,226,216,137,176,63,41,102,52,244,89,77,254,167,118,61,1,161,108],[5,219,210,176,87,237,108,175,238,11,5,113,13,249,28,52,70,185,157,129,106,169,7,43,52,191,86,28,100,248,101,117],[214,251,31,253,190,198,163,71,148,147,238,251,92,156,248,150,255,146,167,169,121,26,15,170,158,247,249,193,87,29,77,104],[118,128,147,37,200,206,240,199,2,4,204,214,69,131,82,114,155,191,102,26,95,18,119,15,18,65,8,234,250,182,176,228],[36,246,184,96,6,193,70,148,116,93,133,39,156,255,248,111,214,196,69,46,198,206,47,199,176,120,225,148,88,78,67,213],[39,214,59,103,204,106,170,190,234,165,37,26,186,184,52,236,157,177,136,54,248,90,223,186,139,52,20,143,125,127,98,49]]",
              "sol": "[bytes32(stringToBytes32(\"11,24,19,151,112,141,89,152,118,59,182,135,88,171,105,124,9,7,196,109,67,197,228,82,206,65,174,68,179,172,3,249\")),bytes32(stringToBytes32(\"19,215,110,205,11,213,201,129,40,111,184,222,171,156,237,62,182,188,19,119,97,62,156,229,145,165,190,112,54,117,67,101\")),bytes32(stringToBytes32(\"181,241,156,137,203,165,138,131,36,63,18,121,143,142,251,175,188,253,232,56,18,21,77,91,145,195,22,131,105,159,110,147\")),bytes32(stringToBytes32(\"178,225,216,172,22,76,55,167,108,220,234,97,198,160,254,247,158,173,164,148,153,208,35,222,202,0,165,52,226,148,50,219\")),bytes32(stringToBytes32(\"197,103,79,116,90,22,97,190,209,65,179,111,136,93,148,144,113,57,154,237,41,123,132,237,230,67,233,224,50,79,169,182\")),bytes32(stringToBytes32(\"125,116,118,29,75,170,139,58,223,12,22,231,30,223,223,46,166,71,239,171,4,36,115,52,177,201,165,165,127,86,221,205\")),bytes32(stringToBytes32(\"252,77,70,58,140,33,204,38,113,36,137,6,15,92,102,22,197,124,122,152,24,76,226,173,101,2,92,85,224,58,29,68\")),bytes32(stringToBytes32(\"201,159,206,57,151,238,11,7,133,2,133,41,192,12,86,159,195,157,76,91,89,61,233,232,229,9,62,218,183,56,26,234\")),bytes32(stringToBytes32(\"90,221,196,226,62,61,59,79,146,159,11,72,71,183,236,169,195,184,193,254,220,161,178,144,170,133,189,169,77,20,42,225\")),bytes32(stringToBytes32(\"242,246,218,12,67,166,126,30,92,148,77,58,179,153,65,85,156,240,160,193,68,232,36,38,126,174,248,119,230,244,178,152\")),bytes32(stringToBytes32(\"205,175,8,16,149,152,36,125,83,59,88,155,110,152,181,143,253,212,41,87,157,221,244,180,77,133,6,182,37,206,224,91\")),bytes32(stringToBytes32(\"50,107,126,187,89,165,123,77,173,7,186,156,236,59,134,164,225,70,27,200,96,136,98,214,187,115,210,14,150,53,31,44\")),bytes32(stringToBytes32(\"132,170,108,78,121,141,16,91,35,5,141,145,14,112,169,133,211,71,126,189,165,100,123,195,59,209,66,250,103,39,192,41\")),bytes32(stringToBytes32(\"108,23,135,82,118,197,126,146,239,253,26,220,125,15,110,14,119,233,21,203,196,115,95,69,1,167,26,56,151,235,135,165\")),bytes32(stringToBytes32(\"247,125,177,54,204,208,62,145,23,55,249,43,34,113,118,211,88,200,13,80,24,199,95,105,144,248,68,226,23,121,107,179\")),bytes32(stringToBytes32(\"191,40,28,187,137,17,78,57,106,160,189,243,64,164,129,204,97,234,251,73,233,28,190,250,179,93,171,155,221,67,142,130\")),bytes32(stringToBytes32(\"56,227,105,79,36,170,226,8,57,140,57,97,5,66,179,122,175,38,11,88,116,159,8,105,124,101,128,12,175,177,65,188\")),bytes32(stringToBytes32(\"225,2,166,87,12,170,189,56,10,203,30,109,60,41,130,47,161,249,65,107,73,210,191,173,85,180,194,25,44,241,182,112\")),bytes32(stringToBytes32(\"141,4,53,98,8,153,139,123,137,142,239,46,63,187,138,1,2,113,21,202,173,174,190,251,221,32,105,29,94,125,64,238\")),bytes32(stringToBytes32(\"81,207,161,193,64,150,174,245,172,119,166,75,98,225,84,193,72,151,114,84,197,143,1,51,143,36,254,21,18,39,89,170\")),bytes32(stringToBytes32(\"167,137,5,55,62,179,129,86,198,68,70,234,192,85,122,96,250,102,244,222,22,197,50,167,47,112,125,100,37,49,214,96\")),bytes32(stringToBytes32(\"236,8,72,1,167,137,61,207,125,92,110,72,0,76,238,197,51,84,65,72,62,103,79,235,91,233,250,73,183,210,248,9\")),bytes32(stringToBytes32(\"193,33,211,18,139,133,249,137,26,51,185,166,60,92,29,68,146,6,80,199,88,69,119,110,113,244,75,170,170,114,53,135\")),bytes32(stringToBytes32(\"205,72,171,72,198,29,214,151,84,158,10,128,253,24,160,116,15,182,142,231,62,161,143,171,59,196,178,20,129,19,246,83\")),bytes32(stringToBytes32(\"40,8,72,191,176,81,72,67,69,190,236,94,255,49,31,245,105,9,55,201,76,116,255,21,173,32,200,232,243,40,152,224\")),bytes32(stringToBytes32(\"211,80,54,167,207,92,63,75,102,179,146,210,145,242,151,175,137,63,214,240,86,127,55,154,116,187,189,244,51,161,73,127\")),bytes32(stringToBytes32(\"128,142,121,117,207,65,146,162,37,53,34,17,73,234,8,212,152,80,177,87,109,71,83,17,103,217,48,116,88,17,69,55\")),bytes32(stringToBytes32(\"183,233,101,150,150,245,127,7,92,136,26,203,207,192,31,8,251,86,131,203,77,5,77,89,96,94,78,90,159,227,34,143\")),bytes32(stringToBytes32(\"253,53,87,85,60,210,124,33,13,78,163,248,40,74,78,53,159,72,89,18,125,223,196,229,116,11,240,244,49,249,189,40\")),bytes32(stringToBytes32(\"84,31,16,60,17,72,220,237,92,158,116,255,108,65,44,47,197,121,106,43,191,60,37,85,207,231,45,181,250,215,73,102\")),bytes32(stringToBytes32(\"99,250,221,238,16,90,196,107,3,26,193,2,247,35,8,37,82,22,245,193,213,188,101,187,12,203,71,47,255,96,29,105\")),bytes32(stringToBytes32(\"95,44,40,207,1,32,147,204,29,27,145,179,71,157,115,244,15,148,120,164,234,158,188,123,104,230,110,90,188,129,228,52\")),bytes32(stringToBytes32(\"187,58,184,40,255,182,252,255,187,144,0,110,105,245,44,107,255,218,164,153,103,47,159,79,5,64,70,38,136,124,204,73\")),bytes32(stringToBytes32(\"167,88,121,174,39,67,32,188,103,227,119,19,193,19,101,158,105,2,208,29,105,7,239,250,207,108,242,124,60,112,25,213\")),bytes32(stringToBytes32(\"153,123,244,131,86,241,149,155,157,52,168,17,76,229,212,89,211,93,99,116,34,58,85,233,30,133,102,217,102,176,171,99\")),bytes32(stringToBytes32(\"140,45,229,206,127,170,181,138,6,42,169,96,20,59,105,194,164,44,218,24,179,117,32,200,60,56,50,127,105,27,34,193\")),bytes32(stringToBytes32(\"74,168,4,242,36,246,101,131,173,180,127,59,208,120,142,211,52,93,4,74,209,6,33,32,63,60,189,62,136,50,162,22\")),bytes32(stringToBytes32(\"75,117,172,208,223,57,98,52,145,38,2,64,88,250,115,97,41,151,72,157,174,18,1,111,184,144,208,5,138,129,66,83\")),bytes32(stringToBytes32(\"148,193,211,175,82,88,66,57,144,36,222,198,159,151,149,88,68,17,34,188,237,5,218,253,22,205,107,246,194,109,134,159\")),bytes32(stringToBytes32(\"118,152,20,123,166,226,34,106,27,188,97,17,136,175,107,32,76,197,44,213,70,4,174,109,210,249,19,61,241,241,246,70\")),bytes32(stringToBytes32(\"15,204,37,94,166,254,245,106,55,75,15,85,205,231,175,12,135,195,236,16,59,255,180,7,84,113,197,186,147,116,235,231\")),bytes32(stringToBytes32(\"235,129,137,219,148,230,99,178,52,192,213,78,227,212,25,74,54,195,204,108,120,96,73,201,187,7,81,149,237,4,202,207\")),bytes32(stringToBytes32(\"203,80,223,70,110,121,43,134,39,49,17,90,77,56,110,248,25,90,35,53,33,85,166,54,124,22,245,105,238,102,87,189\")),bytes32(stringToBytes32(\"204,125,58,164,76,28,15,18,187,184,126,187,32,58,37,21,247,250,13,25,215,247,221,94,216,126,186,8,194,81,215,127\")),bytes32(stringToBytes32(\"181,91,65,175,60,199,190,31,165,30,105,230,7,253,0,39,174,17,248,112,17,52,184,182,129,97,220,10,85,242,248,66\")),bytes32(stringToBytes32(\"166,82,83,227,152,187,37,60,142,45,249,184,246,24,149,104,228,198,25,237,136,176,44,30,215,245,67,55,10,222,148,253\")),bytes32(stringToBytes32(\"59,116,124,50,75,16,67,41,13,25,254,208,51,251,0,103,180,23,78,78,253,60,95,33,187,168,252,225,114,199,236,104\")),bytes32(stringToBytes32(\"194,162,10,209,123,33,185,76,70,81,207,137,171,126,110,51,13,107,206,92,209,175,83,70,203,219,51,143,162,177,113,84\")),bytes32(stringToBytes32(\"211,71,129,73,195,111,111,220,201,19,32,24,178,1,122,55,17,133,206,252,185,94,209,217,89,48,167,50,231,96,130,101\")),bytes32(stringToBytes32(\"32,147,94,54,125,229,144,200,113,12,93,158,105,175,220,76,58,243,166,41,60,85,74,177,249,168,136,101,72,176,95,122\")),bytes32(stringToBytes32(\"213,54,74,239,23,243,179,12,237,111,4,162,198,247,166,22,76,8,212,21,235,155,236,30,198,65,60,210,197,130,216,90\")),bytes32(stringToBytes32(\"136,104,16,245,241,144,67,181,172,79,91,243,130,167,202,3,210,241,186,116,88,161,140,12,86,119,97,109,184,95,36,205\")),bytes32(stringToBytes32(\"190,14,104,191,152,178,137,193,46,217,133,71,175,77,253,188,97,216,201,183,99,245,169,40,82,128,185,201,177,211,237,158\")),bytes32(stringToBytes32(\"228,255,146,190,192,54,72,218,101,189,161,19,107,195,126,87,250,241,66,205,166,149,222,135,26,203,215,19,28,158,139,0\")),bytes32(stringToBytes32(\"217,173,161,6,197,53,177,9,239,192,79,121,87,208,159,162,69,152,98,17,206,159,96,72,45,4,178,143,118,215,30,157\")),bytes32(stringToBytes32(\"147,93,154,195,244,30,68,242,137,114,52,102,13,223,222,146,41,87,100,221,231,120,244,97,154,160,37,203,165,206,219,24\")),bytes32(stringToBytes32(\"181,70,110,76,86,168,152,8,224,128,69,181,23,47,172,125,6,91,147,32,141,53,145,30,175,122,69,68,84,138,203,254\")),bytes32(stringToBytes32(\"176,60,181,171,225,132,119,87,239,110,58,254,90,60,23,168,44,125,36,203,88,250,175,43,77,255,102,193,103,255,231,208\")),bytes32(stringToBytes32(\"218,218,116,66,168,30,107,202,83,210,251,177,110,80,216,34,99,86,222,111,216,176,138,188,25,159,15,191,28,241,59,198\")),bytes32(stringToBytes32(\"69,23,24,223,7,238,157,133,89,90,211,54,66,139,146,208,20,136,9,73,246,15,107,255,153,195,141,125,162,48,81,106\")),bytes32(stringToBytes32(\"185,184,224,100,129,138,216,92,161,87,170,128,74,149,119,158,225,123,148,76,198,106,116,238,26,190,4,101,166,82,56,207\")),bytes32(stringToBytes32(\"230,89,10,23,112,77,175,251,217,12,81,157,48,83,86,139,177,91,44,162,187,227,116,56,164,221,60,243,182,118,40,155\")),bytes32(stringToBytes32(\"176,31,108,240,116,107,223,122,118,112,81,217,91,144,35,23,243,163,246,194,69,156,169,86,117,235,180,22,171,172,81,25\")),bytes32(stringToBytes32(\"235,178,119,184,110,189,14,104,47,187,143,166,88,75,228,93,43,218,51,52,88,193,21,17,103,209,25,173,77,179,128,247\")),bytes32(stringToBytes32(\"113,20,65,178,232,35,99,41,101,133,58,64,159,91,140,43,103,211,52,214,53,32,131,122,159,202,50,228,109,157,62,253\")),bytes32(stringToBytes32(\"69,127,131,92,227,220,169,51,195,238,29,114,138,127,231,77,75,50,250,132,96,0,120,133,87,186,81,189,26,2,120,197\")),bytes32(stringToBytes32(\"129,30,123,137,198,127,196,187,17,56,43,150,18,220,30,230,33,15,235,170,35,154,177,136,230,250,245,110,78,86,77,111\")),bytes32(stringToBytes32(\"228,210,94,18,108,139,47,209,71,201,199,61,154,6,17,143,73,32,53,126,85,249,70,2,161,167,161,34,114,169,24,63\")),bytes32(stringToBytes32(\"40,206,214,85,7,159,86,52,38,235,27,63,226,218,174,183,222,208,36,155,198,247,36,207,215,255,101,10,80,248,178,190\")),bytes32(stringToBytes32(\"124,118,247,87,86,138,42,254,247,154,67,216,45,36,216,206,75,156,67,179,109,247,92,198,65,115,197,143,208,87,248,169\")),bytes32(stringToBytes32(\"22,61,203,112,152,142,90,208,250,12,210,109,163,99,68,207,62,110,6,237,199,244,125,4,75,25,189,35,102,214,165,30\")),bytes32(stringToBytes32(\"199,141,103,225,156,205,26,81,128,245,252,67,219,244,45,82,27,232,88,198,71,253,97,159,8,56,172,97,193,48,251,175\")),bytes32(stringToBytes32(\"11,20,157,102,16,199,82,84,195,195,132,197,210,94,184,188,61,55,42,169,128,134,125,100,246,11,0,59,105,190,38,13\")),bytes32(stringToBytes32(\"25,217,137,95,132,143,113,133,46,59,67,254,133,101,225,76,107,119,182,66,70,249,18,11,204,164,206,35,250,57,251,95\")),bytes32(stringToBytes32(\"39,191,44,170,68,10,9,160,175,147,139,2,152,228,183,120,88,63,40,132,21,66,106,113,220,8,161,139,234,12,117,116\")),bytes32(stringToBytes32(\"67,72,80,166,93,91,31,227,53,117,127,105,40,57,187,181,179,67,159,228,158,207,34,179,197,246,9,35,49,228,6,14\")),bytes32(stringToBytes32(\"49,110,39,184,45,75,225,26,148,55,53,223,63,155,60,189,123,213,143,112,118,228,94,253,63,1,43,77,143,114,101,111\")),bytes32(stringToBytes32(\"185,102,237,203,137,95,140,149,214,85,207,243,96,253,78,128,248,21,138,63,116,16,157,242,6,188,183,115,40,90,108,47\")),bytes32(stringToBytes32(\"21,165,55,32,78,119,17,87,145,198,141,172,157,16,254,192,157,36,197,3,37,67,55,239,106,99,122,164,99,222,120,61\")),bytes32(stringToBytes32(\"111,191,254,133,52,160,231,7,219,70,34,6,101,24,76,191,153,141,49,117,98,39,180,214,8,67,186,133,122,145,26,123\")),bytes32(stringToBytes32(\"122,125,188,132,88,35,45,15,107,169,85,121,123,246,59,113,75,162,131,206,14,29,99,174,188,6,251,60,163,56,162,169\")),bytes32(stringToBytes32(\"254,87,234,14,47,14,77,69,144,114,214,214,163,173,228,104,178,35,135,65,27,225,42,72,226,175,19,21,93,143,108,200\")),bytes32(stringToBytes32(\"160,190,169,225,107,236,51,76,230,61,94,235,172,169,148,240,236,164,182,39,254,50,112,24,52,137,247,68,229,87,197,90\")),bytes32(stringToBytes32(\"245,67,140,180,97,92,52,97,186,116,143,133,227,106,48,92,75,251,197,123,54,87,193,188,207,157,156,222,128,75,17,195\")),bytes32(stringToBytes32(\"139,94,140,106,171,226,40,119,237,116,0,234,177,171,30,232,116,255,17,219,87,50,6,129,62,140,174,149,45,151,196,187\")),bytes32(stringToBytes32(\"220,173,145,51,239,119,13,215,90,39,48,181,65,206,220,52,192,98,62,254,149,154,136,102,181,191,110,92,243,18,34,12\")),bytes32(stringToBytes32(\"110,92,220,230,65,105,112,111,253,98,98,218,81,102,133,233,42,201,79,238,211,27,164,163,209,43,190,19,213,93,195,125\")),bytes32(stringToBytes32(\"12,240,118,122,26,35,6,186,84,121,36,240,155,3,147,5,43,209,89,131,122,59,81,24,26,29,167,161,17,219,70,62\")),bytes32(stringToBytes32(\"167,26,27,77,149,126,110,60,196,204,195,42,208,46,126,16,205,31,196,201,191,176,202,44,33,91,167,175,83,161,201,188\")),bytes32(stringToBytes32(\"217,1,215,132,135,241,118,20,240,177,250,39,94,163,226,216,137,176,63,41,102,52,244,89,77,254,167,118,61,1,161,108\")),bytes32(stringToBytes32(\"5,219,210,176,87,237,108,175,238,11,5,113,13,249,28,52,70,185,157,129,106,169,7,43,52,191,86,28,100,248,101,117\")),bytes32(stringToBytes32(\"214,251,31,253,190,198,163,71,148,147,238,251,92,156,248,150,255,146,167,169,121,26,15,170,158,247,249,193,87,29,77,104\")),bytes32(stringToBytes32(\"118,128,147,37,200,206,240,199,2,4,204,214,69,131,82,114,155,191,102,26,95,18,119,15,18,65,8,234,250,182,176,228\")),bytes32(stringToBytes32(\"36,246,184,96,6,193,70,148,116,93,133,39,156,255,248,111,214,196,69,46,198,206,47,199,176,120,225,148,88,78,67,213\")),bytes32(stringToBytes32(\"39,214,59,103,204,106,170,190,234,165,37,26,186,184,52,236,157,177,136,54,248,90,223,186,139,52,20,143,125,127,98,49\"))]"
            },
            {
              "js": "[[122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32],[196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205],[252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32],[242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108],[70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250],[144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84],[217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189],[226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7],[145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122],[160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206],[254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102],[70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214],[150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54],[224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34],[125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7],[94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226],[213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149],[90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125],[186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66],[111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187],[98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103],[157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172],[117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228],[195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31],[229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79],[248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21],[217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92],[115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31],[248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52],[5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180],[113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181],[189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74],[23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53],[74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91],[57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134],[149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226],[151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118],[100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25],[249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62],[80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141],[13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221],[231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220],[68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9],[34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141],[139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197],[87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124],[154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175],[23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140],[4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40],[31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99],[98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12],[251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151],[211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228],[8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122],[51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240],[237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40],[199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87],[205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42],[206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53],[63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206],[254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55],[7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159],[25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45],[108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21],[206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119],[159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90],[191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165],[195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13],[126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213],[197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77],[88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246],[181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123],[30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19],[97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143],[159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76],[216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111],[118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0],[76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222],[228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149],[216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152],[6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49],[249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147],[83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225],[1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41],[240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118],[49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207],[94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59],[236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121],[104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220],[105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101],[208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134],[118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23],[151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188],[65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255],[110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109]]",
              "sol": "[bytes32(stringToBytes32(\"122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32\")),bytes32(stringToBytes32(\"196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205\")),bytes32(stringToBytes32(\"252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32\")),bytes32(stringToBytes32(\"242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108\")),bytes32(stringToBytes32(\"70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250\")),bytes32(stringToBytes32(\"144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84\")),bytes32(stringToBytes32(\"217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189\")),bytes32(stringToBytes32(\"226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7\")),bytes32(stringToBytes32(\"145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122\")),bytes32(stringToBytes32(\"160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206\")),bytes32(stringToBytes32(\"254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102\")),bytes32(stringToBytes32(\"70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214\")),bytes32(stringToBytes32(\"150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54\")),bytes32(stringToBytes32(\"224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34\")),bytes32(stringToBytes32(\"125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7\")),bytes32(stringToBytes32(\"94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226\")),bytes32(stringToBytes32(\"213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149\")),bytes32(stringToBytes32(\"90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125\")),bytes32(stringToBytes32(\"186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66\")),bytes32(stringToBytes32(\"111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187\")),bytes32(stringToBytes32(\"98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103\")),bytes32(stringToBytes32(\"157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172\")),bytes32(stringToBytes32(\"117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228\")),bytes32(stringToBytes32(\"195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31\")),bytes32(stringToBytes32(\"229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79\")),bytes32(stringToBytes32(\"248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21\")),bytes32(stringToBytes32(\"217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92\")),bytes32(stringToBytes32(\"115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31\")),bytes32(stringToBytes32(\"248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52\")),bytes32(stringToBytes32(\"5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180\")),bytes32(stringToBytes32(\"113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181\")),bytes32(stringToBytes32(\"189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74\")),bytes32(stringToBytes32(\"23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53\")),bytes32(stringToBytes32(\"74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91\")),bytes32(stringToBytes32(\"57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134\")),bytes32(stringToBytes32(\"149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226\")),bytes32(stringToBytes32(\"151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118\")),bytes32(stringToBytes32(\"100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25\")),bytes32(stringToBytes32(\"249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62\")),bytes32(stringToBytes32(\"80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141\")),bytes32(stringToBytes32(\"13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221\")),bytes32(stringToBytes32(\"231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220\")),bytes32(stringToBytes32(\"68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9\")),bytes32(stringToBytes32(\"34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141\")),bytes32(stringToBytes32(\"139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197\")),bytes32(stringToBytes32(\"87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124\")),bytes32(stringToBytes32(\"154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175\")),bytes32(stringToBytes32(\"23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140\")),bytes32(stringToBytes32(\"4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40\")),bytes32(stringToBytes32(\"31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99\")),bytes32(stringToBytes32(\"98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12\")),bytes32(stringToBytes32(\"251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151\")),bytes32(stringToBytes32(\"211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228\")),bytes32(stringToBytes32(\"8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122\")),bytes32(stringToBytes32(\"51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240\")),bytes32(stringToBytes32(\"237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40\")),bytes32(stringToBytes32(\"199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87\")),bytes32(stringToBytes32(\"205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42\")),bytes32(stringToBytes32(\"206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53\")),bytes32(stringToBytes32(\"63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206\")),bytes32(stringToBytes32(\"254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55\")),bytes32(stringToBytes32(\"7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159\")),bytes32(stringToBytes32(\"25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45\")),bytes32(stringToBytes32(\"108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21\")),bytes32(stringToBytes32(\"206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119\")),bytes32(stringToBytes32(\"159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90\")),bytes32(stringToBytes32(\"191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165\")),bytes32(stringToBytes32(\"195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13\")),bytes32(stringToBytes32(\"126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213\")),bytes32(stringToBytes32(\"197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77\")),bytes32(stringToBytes32(\"88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246\")),bytes32(stringToBytes32(\"181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123\")),bytes32(stringToBytes32(\"30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19\")),bytes32(stringToBytes32(\"97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143\")),bytes32(stringToBytes32(\"159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76\")),bytes32(stringToBytes32(\"216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111\")),bytes32(stringToBytes32(\"118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0\")),bytes32(stringToBytes32(\"76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222\")),bytes32(stringToBytes32(\"228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149\")),bytes32(stringToBytes32(\"216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152\")),bytes32(stringToBytes32(\"6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49\")),bytes32(stringToBytes32(\"249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147\")),bytes32(stringToBytes32(\"83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225\")),bytes32(stringToBytes32(\"1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41\")),bytes32(stringToBytes32(\"240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118\")),bytes32(stringToBytes32(\"49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207\")),bytes32(stringToBytes32(\"94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59\")),bytes32(stringToBytes32(\"236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121\")),bytes32(stringToBytes32(\"104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220\")),bytes32(stringToBytes32(\"105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101\")),bytes32(stringToBytes32(\"208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134\")),bytes32(stringToBytes32(\"118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23\")),bytes32(stringToBytes32(\"151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188\")),bytes32(stringToBytes32(\"65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255\")),bytes32(stringToBytes32(\"110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109\"))]"
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[[11,24,19,151,112,141,89,152,118,59,182,135,88,171,105,124,9,7,196,109,67,197,228,82,206,65,174,68,179,172,3,249],[19,215,110,205,11,213,201,129,40,111,184,222,171,156,237,62,182,188,19,119,97,62,156,229,145,165,190,112,54,117,67,101],[181,241,156,137,203,165,138,131,36,63,18,121,143,142,251,175,188,253,232,56,18,21,77,91,145,195,22,131,105,159,110,147],[178,225,216,172,22,76,55,167,108,220,234,97,198,160,254,247,158,173,164,148,153,208,35,222,202,0,165,52,226,148,50,219],[197,103,79,116,90,22,97,190,209,65,179,111,136,93,148,144,113,57,154,237,41,123,132,237,230,67,233,224,50,79,169,182],[125,116,118,29,75,170,139,58,223,12,22,231,30,223,223,46,166,71,239,171,4,36,115,52,177,201,165,165,127,86,221,205],[252,77,70,58,140,33,204,38,113,36,137,6,15,92,102,22,197,124,122,152,24,76,226,173,101,2,92,85,224,58,29,68],[201,159,206,57,151,238,11,7,133,2,133,41,192,12,86,159,195,157,76,91,89,61,233,232,229,9,62,218,183,56,26,234],[90,221,196,226,62,61,59,79,146,159,11,72,71,183,236,169,195,184,193,254,220,161,178,144,170,133,189,169,77,20,42,225],[242,246,218,12,67,166,126,30,92,148,77,58,179,153,65,85,156,240,160,193,68,232,36,38,126,174,248,119,230,244,178,152],[205,175,8,16,149,152,36,125,83,59,88,155,110,152,181,143,253,212,41,87,157,221,244,180,77,133,6,182,37,206,224,91],[50,107,126,187,89,165,123,77,173,7,186,156,236,59,134,164,225,70,27,200,96,136,98,214,187,115,210,14,150,53,31,44],[132,170,108,78,121,141,16,91,35,5,141,145,14,112,169,133,211,71,126,189,165,100,123,195,59,209,66,250,103,39,192,41],[108,23,135,82,118,197,126,146,239,253,26,220,125,15,110,14,119,233,21,203,196,115,95,69,1,167,26,56,151,235,135,165],[247,125,177,54,204,208,62,145,23,55,249,43,34,113,118,211,88,200,13,80,24,199,95,105,144,248,68,226,23,121,107,179],[191,40,28,187,137,17,78,57,106,160,189,243,64,164,129,204,97,234,251,73,233,28,190,250,179,93,171,155,221,67,142,130],[56,227,105,79,36,170,226,8,57,140,57,97,5,66,179,122,175,38,11,88,116,159,8,105,124,101,128,12,175,177,65,188],[225,2,166,87,12,170,189,56,10,203,30,109,60,41,130,47,161,249,65,107,73,210,191,173,85,180,194,25,44,241,182,112],[141,4,53,98,8,153,139,123,137,142,239,46,63,187,138,1,2,113,21,202,173,174,190,251,221,32,105,29,94,125,64,238],[81,207,161,193,64,150,174,245,172,119,166,75,98,225,84,193,72,151,114,84,197,143,1,51,143,36,254,21,18,39,89,170],[167,137,5,55,62,179,129,86,198,68,70,234,192,85,122,96,250,102,244,222,22,197,50,167,47,112,125,100,37,49,214,96],[236,8,72,1,167,137,61,207,125,92,110,72,0,76,238,197,51,84,65,72,62,103,79,235,91,233,250,73,183,210,248,9],[193,33,211,18,139,133,249,137,26,51,185,166,60,92,29,68,146,6,80,199,88,69,119,110,113,244,75,170,170,114,53,135],[205,72,171,72,198,29,214,151,84,158,10,128,253,24,160,116,15,182,142,231,62,161,143,171,59,196,178,20,129,19,246,83],[40,8,72,191,176,81,72,67,69,190,236,94,255,49,31,245,105,9,55,201,76,116,255,21,173,32,200,232,243,40,152,224],[211,80,54,167,207,92,63,75,102,179,146,210,145,242,151,175,137,63,214,240,86,127,55,154,116,187,189,244,51,161,73,127],[128,142,121,117,207,65,146,162,37,53,34,17,73,234,8,212,152,80,177,87,109,71,83,17,103,217,48,116,88,17,69,55],[183,233,101,150,150,245,127,7,92,136,26,203,207,192,31,8,251,86,131,203,77,5,77,89,96,94,78,90,159,227,34,143],[253,53,87,85,60,210,124,33,13,78,163,248,40,74,78,53,159,72,89,18,125,223,196,229,116,11,240,244,49,249,189,40],[84,31,16,60,17,72,220,237,92,158,116,255,108,65,44,47,197,121,106,43,191,60,37,85,207,231,45,181,250,215,73,102],[99,250,221,238,16,90,196,107,3,26,193,2,247,35,8,37,82,22,245,193,213,188,101,187,12,203,71,47,255,96,29,105],[95,44,40,207,1,32,147,204,29,27,145,179,71,157,115,244,15,148,120,164,234,158,188,123,104,230,110,90,188,129,228,52],[187,58,184,40,255,182,252,255,187,144,0,110,105,245,44,107,255,218,164,153,103,47,159,79,5,64,70,38,136,124,204,73],[167,88,121,174,39,67,32,188,103,227,119,19,193,19,101,158,105,2,208,29,105,7,239,250,207,108,242,124,60,112,25,213],[153,123,244,131,86,241,149,155,157,52,168,17,76,229,212,89,211,93,99,116,34,58,85,233,30,133,102,217,102,176,171,99],[140,45,229,206,127,170,181,138,6,42,169,96,20,59,105,194,164,44,218,24,179,117,32,200,60,56,50,127,105,27,34,193],[74,168,4,242,36,246,101,131,173,180,127,59,208,120,142,211,52,93,4,74,209,6,33,32,63,60,189,62,136,50,162,22],[75,117,172,208,223,57,98,52,145,38,2,64,88,250,115,97,41,151,72,157,174,18,1,111,184,144,208,5,138,129,66,83],[148,193,211,175,82,88,66,57,144,36,222,198,159,151,149,88,68,17,34,188,237,5,218,253,22,205,107,246,194,109,134,159],[118,152,20,123,166,226,34,106,27,188,97,17,136,175,107,32,76,197,44,213,70,4,174,109,210,249,19,61,241,241,246,70],[15,204,37,94,166,254,245,106,55,75,15,85,205,231,175,12,135,195,236,16,59,255,180,7,84,113,197,186,147,116,235,231],[235,129,137,219,148,230,99,178,52,192,213,78,227,212,25,74,54,195,204,108,120,96,73,201,187,7,81,149,237,4,202,207],[203,80,223,70,110,121,43,134,39,49,17,90,77,56,110,248,25,90,35,53,33,85,166,54,124,22,245,105,238,102,87,189],[204,125,58,164,76,28,15,18,187,184,126,187,32,58,37,21,247,250,13,25,215,247,221,94,216,126,186,8,194,81,215,127],[181,91,65,175,60,199,190,31,165,30,105,230,7,253,0,39,174,17,248,112,17,52,184,182,129,97,220,10,85,242,248,66],[166,82,83,227,152,187,37,60,142,45,249,184,246,24,149,104,228,198,25,237,136,176,44,30,215,245,67,55,10,222,148,253],[59,116,124,50,75,16,67,41,13,25,254,208,51,251,0,103,180,23,78,78,253,60,95,33,187,168,252,225,114,199,236,104],[194,162,10,209,123,33,185,76,70,81,207,137,171,126,110,51,13,107,206,92,209,175,83,70,203,219,51,143,162,177,113,84],[211,71,129,73,195,111,111,220,201,19,32,24,178,1,122,55,17,133,206,252,185,94,209,217,89,48,167,50,231,96,130,101],[32,147,94,54,125,229,144,200,113,12,93,158,105,175,220,76,58,243,166,41,60,85,74,177,249,168,136,101,72,176,95,122],[213,54,74,239,23,243,179,12,237,111,4,162,198,247,166,22,76,8,212,21,235,155,236,30,198,65,60,210,197,130,216,90],[136,104,16,245,241,144,67,181,172,79,91,243,130,167,202,3,210,241,186,116,88,161,140,12,86,119,97,109,184,95,36,205],[190,14,104,191,152,178,137,193,46,217,133,71,175,77,253,188,97,216,201,183,99,245,169,40,82,128,185,201,177,211,237,158],[228,255,146,190,192,54,72,218,101,189,161,19,107,195,126,87,250,241,66,205,166,149,222,135,26,203,215,19,28,158,139,0],[217,173,161,6,197,53,177,9,239,192,79,121,87,208,159,162,69,152,98,17,206,159,96,72,45,4,178,143,118,215,30,157],[147,93,154,195,244,30,68,242,137,114,52,102,13,223,222,146,41,87,100,221,231,120,244,97,154,160,37,203,165,206,219,24],[181,70,110,76,86,168,152,8,224,128,69,181,23,47,172,125,6,91,147,32,141,53,145,30,175,122,69,68,84,138,203,254],[176,60,181,171,225,132,119,87,239,110,58,254,90,60,23,168,44,125,36,203,88,250,175,43,77,255,102,193,103,255,231,208],[218,218,116,66,168,30,107,202,83,210,251,177,110,80,216,34,99,86,222,111,216,176,138,188,25,159,15,191,28,241,59,198],[69,23,24,223,7,238,157,133,89,90,211,54,66,139,146,208,20,136,9,73,246,15,107,255,153,195,141,125,162,48,81,106],[185,184,224,100,129,138,216,92,161,87,170,128,74,149,119,158,225,123,148,76,198,106,116,238,26,190,4,101,166,82,56,207],[230,89,10,23,112,77,175,251,217,12,81,157,48,83,86,139,177,91,44,162,187,227,116,56,164,221,60,243,182,118,40,155],[176,31,108,240,116,107,223,122,118,112,81,217,91,144,35,23,243,163,246,194,69,156,169,86,117,235,180,22,171,172,81,25],[235,178,119,184,110,189,14,104,47,187,143,166,88,75,228,93,43,218,51,52,88,193,21,17,103,209,25,173,77,179,128,247],[113,20,65,178,232,35,99,41,101,133,58,64,159,91,140,43,103,211,52,214,53,32,131,122,159,202,50,228,109,157,62,253],[69,127,131,92,227,220,169,51,195,238,29,114,138,127,231,77,75,50,250,132,96,0,120,133,87,186,81,189,26,2,120,197],[129,30,123,137,198,127,196,187,17,56,43,150,18,220,30,230,33,15,235,170,35,154,177,136,230,250,245,110,78,86,77,111],[228,210,94,18,108,139,47,209,71,201,199,61,154,6,17,143,73,32,53,126,85,249,70,2,161,167,161,34,114,169,24,63],[40,206,214,85,7,159,86,52,38,235,27,63,226,218,174,183,222,208,36,155,198,247,36,207,215,255,101,10,80,248,178,190],[124,118,247,87,86,138,42,254,247,154,67,216,45,36,216,206,75,156,67,179,109,247,92,198,65,115,197,143,208,87,248,169],[22,61,203,112,152,142,90,208,250,12,210,109,163,99,68,207,62,110,6,237,199,244,125,4,75,25,189,35,102,214,165,30],[199,141,103,225,156,205,26,81,128,245,252,67,219,244,45,82,27,232,88,198,71,253,97,159,8,56,172,97,193,48,251,175],[11,20,157,102,16,199,82,84,195,195,132,197,210,94,184,188,61,55,42,169,128,134,125,100,246,11,0,59,105,190,38,13],[25,217,137,95,132,143,113,133,46,59,67,254,133,101,225,76,107,119,182,66,70,249,18,11,204,164,206,35,250,57,251,95],[39,191,44,170,68,10,9,160,175,147,139,2,152,228,183,120,88,63,40,132,21,66,106,113,220,8,161,139,234,12,117,116],[67,72,80,166,93,91,31,227,53,117,127,105,40,57,187,181,179,67,159,228,158,207,34,179,197,246,9,35,49,228,6,14],[49,110,39,184,45,75,225,26,148,55,53,223,63,155,60,189,123,213,143,112,118,228,94,253,63,1,43,77,143,114,101,111],[185,102,237,203,137,95,140,149,214,85,207,243,96,253,78,128,248,21,138,63,116,16,157,242,6,188,183,115,40,90,108,47],[21,165,55,32,78,119,17,87,145,198,141,172,157,16,254,192,157,36,197,3,37,67,55,239,106,99,122,164,99,222,120,61],[111,191,254,133,52,160,231,7,219,70,34,6,101,24,76,191,153,141,49,117,98,39,180,214,8,67,186,133,122,145,26,123],[122,125,188,132,88,35,45,15,107,169,85,121,123,246,59,113,75,162,131,206,14,29,99,174,188,6,251,60,163,56,162,169],[254,87,234,14,47,14,77,69,144,114,214,214,163,173,228,104,178,35,135,65,27,225,42,72,226,175,19,21,93,143,108,200],[160,190,169,225,107,236,51,76,230,61,94,235,172,169,148,240,236,164,182,39,254,50,112,24,52,137,247,68,229,87,197,90],[245,67,140,180,97,92,52,97,186,116,143,133,227,106,48,92,75,251,197,123,54,87,193,188,207,157,156,222,128,75,17,195],[139,94,140,106,171,226,40,119,237,116,0,234,177,171,30,232,116,255,17,219,87,50,6,129,62,140,174,149,45,151,196,187],[220,173,145,51,239,119,13,215,90,39,48,181,65,206,220,52,192,98,62,254,149,154,136,102,181,191,110,92,243,18,34,12],[110,92,220,230,65,105,112,111,253,98,98,218,81,102,133,233,42,201,79,238,211,27,164,163,209,43,190,19,213,93,195,125],[12,240,118,122,26,35,6,186,84,121,36,240,155,3,147,5,43,209,89,131,122,59,81,24,26,29,167,161,17,219,70,62],[167,26,27,77,149,126,110,60,196,204,195,42,208,46,126,16,205,31,196,201,191,176,202,44,33,91,167,175,83,161,201,188],[217,1,215,132,135,241,118,20,240,177,250,39,94,163,226,216,137,176,63,41,102,52,244,89,77,254,167,118,61,1,161,108],[5,219,210,176,87,237,108,175,238,11,5,113,13,249,28,52,70,185,157,129,106,169,7,43,52,191,86,28,100,248,101,117],[214,251,31,253,190,198,163,71,148,147,238,251,92,156,248,150,255,146,167,169,121,26,15,170,158,247,249,193,87,29,77,104],[118,128,147,37,200,206,240,199,2,4,204,214,69,131,82,114,155,191,102,26,95,18,119,15,18,65,8,234,250,182,176,228],[36,246,184,96,6,193,70,148,116,93,133,39,156,255,248,111,214,196,69,46,198,206,47,199,176,120,225,148,88,78,67,213],[39,214,59,103,204,106,170,190,234,165,37,26,186,184,52,236,157,177,136,54,248,90,223,186,139,52,20,143,125,127,98,49]]",
                "sol": "[bytes32(stringToBytes32(\"11,24,19,151,112,141,89,152,118,59,182,135,88,171,105,124,9,7,196,109,67,197,228,82,206,65,174,68,179,172,3,249\")),bytes32(stringToBytes32(\"19,215,110,205,11,213,201,129,40,111,184,222,171,156,237,62,182,188,19,119,97,62,156,229,145,165,190,112,54,117,67,101\")),bytes32(stringToBytes32(\"181,241,156,137,203,165,138,131,36,63,18,121,143,142,251,175,188,253,232,56,18,21,77,91,145,195,22,131,105,159,110,147\")),bytes32(stringToBytes32(\"178,225,216,172,22,76,55,167,108,220,234,97,198,160,254,247,158,173,164,148,153,208,35,222,202,0,165,52,226,148,50,219\")),bytes32(stringToBytes32(\"197,103,79,116,90,22,97,190,209,65,179,111,136,93,148,144,113,57,154,237,41,123,132,237,230,67,233,224,50,79,169,182\")),bytes32(stringToBytes32(\"125,116,118,29,75,170,139,58,223,12,22,231,30,223,223,46,166,71,239,171,4,36,115,52,177,201,165,165,127,86,221,205\")),bytes32(stringToBytes32(\"252,77,70,58,140,33,204,38,113,36,137,6,15,92,102,22,197,124,122,152,24,76,226,173,101,2,92,85,224,58,29,68\")),bytes32(stringToBytes32(\"201,159,206,57,151,238,11,7,133,2,133,41,192,12,86,159,195,157,76,91,89,61,233,232,229,9,62,218,183,56,26,234\")),bytes32(stringToBytes32(\"90,221,196,226,62,61,59,79,146,159,11,72,71,183,236,169,195,184,193,254,220,161,178,144,170,133,189,169,77,20,42,225\")),bytes32(stringToBytes32(\"242,246,218,12,67,166,126,30,92,148,77,58,179,153,65,85,156,240,160,193,68,232,36,38,126,174,248,119,230,244,178,152\")),bytes32(stringToBytes32(\"205,175,8,16,149,152,36,125,83,59,88,155,110,152,181,143,253,212,41,87,157,221,244,180,77,133,6,182,37,206,224,91\")),bytes32(stringToBytes32(\"50,107,126,187,89,165,123,77,173,7,186,156,236,59,134,164,225,70,27,200,96,136,98,214,187,115,210,14,150,53,31,44\")),bytes32(stringToBytes32(\"132,170,108,78,121,141,16,91,35,5,141,145,14,112,169,133,211,71,126,189,165,100,123,195,59,209,66,250,103,39,192,41\")),bytes32(stringToBytes32(\"108,23,135,82,118,197,126,146,239,253,26,220,125,15,110,14,119,233,21,203,196,115,95,69,1,167,26,56,151,235,135,165\")),bytes32(stringToBytes32(\"247,125,177,54,204,208,62,145,23,55,249,43,34,113,118,211,88,200,13,80,24,199,95,105,144,248,68,226,23,121,107,179\")),bytes32(stringToBytes32(\"191,40,28,187,137,17,78,57,106,160,189,243,64,164,129,204,97,234,251,73,233,28,190,250,179,93,171,155,221,67,142,130\")),bytes32(stringToBytes32(\"56,227,105,79,36,170,226,8,57,140,57,97,5,66,179,122,175,38,11,88,116,159,8,105,124,101,128,12,175,177,65,188\")),bytes32(stringToBytes32(\"225,2,166,87,12,170,189,56,10,203,30,109,60,41,130,47,161,249,65,107,73,210,191,173,85,180,194,25,44,241,182,112\")),bytes32(stringToBytes32(\"141,4,53,98,8,153,139,123,137,142,239,46,63,187,138,1,2,113,21,202,173,174,190,251,221,32,105,29,94,125,64,238\")),bytes32(stringToBytes32(\"81,207,161,193,64,150,174,245,172,119,166,75,98,225,84,193,72,151,114,84,197,143,1,51,143,36,254,21,18,39,89,170\")),bytes32(stringToBytes32(\"167,137,5,55,62,179,129,86,198,68,70,234,192,85,122,96,250,102,244,222,22,197,50,167,47,112,125,100,37,49,214,96\")),bytes32(stringToBytes32(\"236,8,72,1,167,137,61,207,125,92,110,72,0,76,238,197,51,84,65,72,62,103,79,235,91,233,250,73,183,210,248,9\")),bytes32(stringToBytes32(\"193,33,211,18,139,133,249,137,26,51,185,166,60,92,29,68,146,6,80,199,88,69,119,110,113,244,75,170,170,114,53,135\")),bytes32(stringToBytes32(\"205,72,171,72,198,29,214,151,84,158,10,128,253,24,160,116,15,182,142,231,62,161,143,171,59,196,178,20,129,19,246,83\")),bytes32(stringToBytes32(\"40,8,72,191,176,81,72,67,69,190,236,94,255,49,31,245,105,9,55,201,76,116,255,21,173,32,200,232,243,40,152,224\")),bytes32(stringToBytes32(\"211,80,54,167,207,92,63,75,102,179,146,210,145,242,151,175,137,63,214,240,86,127,55,154,116,187,189,244,51,161,73,127\")),bytes32(stringToBytes32(\"128,142,121,117,207,65,146,162,37,53,34,17,73,234,8,212,152,80,177,87,109,71,83,17,103,217,48,116,88,17,69,55\")),bytes32(stringToBytes32(\"183,233,101,150,150,245,127,7,92,136,26,203,207,192,31,8,251,86,131,203,77,5,77,89,96,94,78,90,159,227,34,143\")),bytes32(stringToBytes32(\"253,53,87,85,60,210,124,33,13,78,163,248,40,74,78,53,159,72,89,18,125,223,196,229,116,11,240,244,49,249,189,40\")),bytes32(stringToBytes32(\"84,31,16,60,17,72,220,237,92,158,116,255,108,65,44,47,197,121,106,43,191,60,37,85,207,231,45,181,250,215,73,102\")),bytes32(stringToBytes32(\"99,250,221,238,16,90,196,107,3,26,193,2,247,35,8,37,82,22,245,193,213,188,101,187,12,203,71,47,255,96,29,105\")),bytes32(stringToBytes32(\"95,44,40,207,1,32,147,204,29,27,145,179,71,157,115,244,15,148,120,164,234,158,188,123,104,230,110,90,188,129,228,52\")),bytes32(stringToBytes32(\"187,58,184,40,255,182,252,255,187,144,0,110,105,245,44,107,255,218,164,153,103,47,159,79,5,64,70,38,136,124,204,73\")),bytes32(stringToBytes32(\"167,88,121,174,39,67,32,188,103,227,119,19,193,19,101,158,105,2,208,29,105,7,239,250,207,108,242,124,60,112,25,213\")),bytes32(stringToBytes32(\"153,123,244,131,86,241,149,155,157,52,168,17,76,229,212,89,211,93,99,116,34,58,85,233,30,133,102,217,102,176,171,99\")),bytes32(stringToBytes32(\"140,45,229,206,127,170,181,138,6,42,169,96,20,59,105,194,164,44,218,24,179,117,32,200,60,56,50,127,105,27,34,193\")),bytes32(stringToBytes32(\"74,168,4,242,36,246,101,131,173,180,127,59,208,120,142,211,52,93,4,74,209,6,33,32,63,60,189,62,136,50,162,22\")),bytes32(stringToBytes32(\"75,117,172,208,223,57,98,52,145,38,2,64,88,250,115,97,41,151,72,157,174,18,1,111,184,144,208,5,138,129,66,83\")),bytes32(stringToBytes32(\"148,193,211,175,82,88,66,57,144,36,222,198,159,151,149,88,68,17,34,188,237,5,218,253,22,205,107,246,194,109,134,159\")),bytes32(stringToBytes32(\"118,152,20,123,166,226,34,106,27,188,97,17,136,175,107,32,76,197,44,213,70,4,174,109,210,249,19,61,241,241,246,70\")),bytes32(stringToBytes32(\"15,204,37,94,166,254,245,106,55,75,15,85,205,231,175,12,135,195,236,16,59,255,180,7,84,113,197,186,147,116,235,231\")),bytes32(stringToBytes32(\"235,129,137,219,148,230,99,178,52,192,213,78,227,212,25,74,54,195,204,108,120,96,73,201,187,7,81,149,237,4,202,207\")),bytes32(stringToBytes32(\"203,80,223,70,110,121,43,134,39,49,17,90,77,56,110,248,25,90,35,53,33,85,166,54,124,22,245,105,238,102,87,189\")),bytes32(stringToBytes32(\"204,125,58,164,76,28,15,18,187,184,126,187,32,58,37,21,247,250,13,25,215,247,221,94,216,126,186,8,194,81,215,127\")),bytes32(stringToBytes32(\"181,91,65,175,60,199,190,31,165,30,105,230,7,253,0,39,174,17,248,112,17,52,184,182,129,97,220,10,85,242,248,66\")),bytes32(stringToBytes32(\"166,82,83,227,152,187,37,60,142,45,249,184,246,24,149,104,228,198,25,237,136,176,44,30,215,245,67,55,10,222,148,253\")),bytes32(stringToBytes32(\"59,116,124,50,75,16,67,41,13,25,254,208,51,251,0,103,180,23,78,78,253,60,95,33,187,168,252,225,114,199,236,104\")),bytes32(stringToBytes32(\"194,162,10,209,123,33,185,76,70,81,207,137,171,126,110,51,13,107,206,92,209,175,83,70,203,219,51,143,162,177,113,84\")),bytes32(stringToBytes32(\"211,71,129,73,195,111,111,220,201,19,32,24,178,1,122,55,17,133,206,252,185,94,209,217,89,48,167,50,231,96,130,101\")),bytes32(stringToBytes32(\"32,147,94,54,125,229,144,200,113,12,93,158,105,175,220,76,58,243,166,41,60,85,74,177,249,168,136,101,72,176,95,122\")),bytes32(stringToBytes32(\"213,54,74,239,23,243,179,12,237,111,4,162,198,247,166,22,76,8,212,21,235,155,236,30,198,65,60,210,197,130,216,90\")),bytes32(stringToBytes32(\"136,104,16,245,241,144,67,181,172,79,91,243,130,167,202,3,210,241,186,116,88,161,140,12,86,119,97,109,184,95,36,205\")),bytes32(stringToBytes32(\"190,14,104,191,152,178,137,193,46,217,133,71,175,77,253,188,97,216,201,183,99,245,169,40,82,128,185,201,177,211,237,158\")),bytes32(stringToBytes32(\"228,255,146,190,192,54,72,218,101,189,161,19,107,195,126,87,250,241,66,205,166,149,222,135,26,203,215,19,28,158,139,0\")),bytes32(stringToBytes32(\"217,173,161,6,197,53,177,9,239,192,79,121,87,208,159,162,69,152,98,17,206,159,96,72,45,4,178,143,118,215,30,157\")),bytes32(stringToBytes32(\"147,93,154,195,244,30,68,242,137,114,52,102,13,223,222,146,41,87,100,221,231,120,244,97,154,160,37,203,165,206,219,24\")),bytes32(stringToBytes32(\"181,70,110,76,86,168,152,8,224,128,69,181,23,47,172,125,6,91,147,32,141,53,145,30,175,122,69,68,84,138,203,254\")),bytes32(stringToBytes32(\"176,60,181,171,225,132,119,87,239,110,58,254,90,60,23,168,44,125,36,203,88,250,175,43,77,255,102,193,103,255,231,208\")),bytes32(stringToBytes32(\"218,218,116,66,168,30,107,202,83,210,251,177,110,80,216,34,99,86,222,111,216,176,138,188,25,159,15,191,28,241,59,198\")),bytes32(stringToBytes32(\"69,23,24,223,7,238,157,133,89,90,211,54,66,139,146,208,20,136,9,73,246,15,107,255,153,195,141,125,162,48,81,106\")),bytes32(stringToBytes32(\"185,184,224,100,129,138,216,92,161,87,170,128,74,149,119,158,225,123,148,76,198,106,116,238,26,190,4,101,166,82,56,207\")),bytes32(stringToBytes32(\"230,89,10,23,112,77,175,251,217,12,81,157,48,83,86,139,177,91,44,162,187,227,116,56,164,221,60,243,182,118,40,155\")),bytes32(stringToBytes32(\"176,31,108,240,116,107,223,122,118,112,81,217,91,144,35,23,243,163,246,194,69,156,169,86,117,235,180,22,171,172,81,25\")),bytes32(stringToBytes32(\"235,178,119,184,110,189,14,104,47,187,143,166,88,75,228,93,43,218,51,52,88,193,21,17,103,209,25,173,77,179,128,247\")),bytes32(stringToBytes32(\"113,20,65,178,232,35,99,41,101,133,58,64,159,91,140,43,103,211,52,214,53,32,131,122,159,202,50,228,109,157,62,253\")),bytes32(stringToBytes32(\"69,127,131,92,227,220,169,51,195,238,29,114,138,127,231,77,75,50,250,132,96,0,120,133,87,186,81,189,26,2,120,197\")),bytes32(stringToBytes32(\"129,30,123,137,198,127,196,187,17,56,43,150,18,220,30,230,33,15,235,170,35,154,177,136,230,250,245,110,78,86,77,111\")),bytes32(stringToBytes32(\"228,210,94,18,108,139,47,209,71,201,199,61,154,6,17,143,73,32,53,126,85,249,70,2,161,167,161,34,114,169,24,63\")),bytes32(stringToBytes32(\"40,206,214,85,7,159,86,52,38,235,27,63,226,218,174,183,222,208,36,155,198,247,36,207,215,255,101,10,80,248,178,190\")),bytes32(stringToBytes32(\"124,118,247,87,86,138,42,254,247,154,67,216,45,36,216,206,75,156,67,179,109,247,92,198,65,115,197,143,208,87,248,169\")),bytes32(stringToBytes32(\"22,61,203,112,152,142,90,208,250,12,210,109,163,99,68,207,62,110,6,237,199,244,125,4,75,25,189,35,102,214,165,30\")),bytes32(stringToBytes32(\"199,141,103,225,156,205,26,81,128,245,252,67,219,244,45,82,27,232,88,198,71,253,97,159,8,56,172,97,193,48,251,175\")),bytes32(stringToBytes32(\"11,20,157,102,16,199,82,84,195,195,132,197,210,94,184,188,61,55,42,169,128,134,125,100,246,11,0,59,105,190,38,13\")),bytes32(stringToBytes32(\"25,217,137,95,132,143,113,133,46,59,67,254,133,101,225,76,107,119,182,66,70,249,18,11,204,164,206,35,250,57,251,95\")),bytes32(stringToBytes32(\"39,191,44,170,68,10,9,160,175,147,139,2,152,228,183,120,88,63,40,132,21,66,106,113,220,8,161,139,234,12,117,116\")),bytes32(stringToBytes32(\"67,72,80,166,93,91,31,227,53,117,127,105,40,57,187,181,179,67,159,228,158,207,34,179,197,246,9,35,49,228,6,14\")),bytes32(stringToBytes32(\"49,110,39,184,45,75,225,26,148,55,53,223,63,155,60,189,123,213,143,112,118,228,94,253,63,1,43,77,143,114,101,111\")),bytes32(stringToBytes32(\"185,102,237,203,137,95,140,149,214,85,207,243,96,253,78,128,248,21,138,63,116,16,157,242,6,188,183,115,40,90,108,47\")),bytes32(stringToBytes32(\"21,165,55,32,78,119,17,87,145,198,141,172,157,16,254,192,157,36,197,3,37,67,55,239,106,99,122,164,99,222,120,61\")),bytes32(stringToBytes32(\"111,191,254,133,52,160,231,7,219,70,34,6,101,24,76,191,153,141,49,117,98,39,180,214,8,67,186,133,122,145,26,123\")),bytes32(stringToBytes32(\"122,125,188,132,88,35,45,15,107,169,85,121,123,246,59,113,75,162,131,206,14,29,99,174,188,6,251,60,163,56,162,169\")),bytes32(stringToBytes32(\"254,87,234,14,47,14,77,69,144,114,214,214,163,173,228,104,178,35,135,65,27,225,42,72,226,175,19,21,93,143,108,200\")),bytes32(stringToBytes32(\"160,190,169,225,107,236,51,76,230,61,94,235,172,169,148,240,236,164,182,39,254,50,112,24,52,137,247,68,229,87,197,90\")),bytes32(stringToBytes32(\"245,67,140,180,97,92,52,97,186,116,143,133,227,106,48,92,75,251,197,123,54,87,193,188,207,157,156,222,128,75,17,195\")),bytes32(stringToBytes32(\"139,94,140,106,171,226,40,119,237,116,0,234,177,171,30,232,116,255,17,219,87,50,6,129,62,140,174,149,45,151,196,187\")),bytes32(stringToBytes32(\"220,173,145,51,239,119,13,215,90,39,48,181,65,206,220,52,192,98,62,254,149,154,136,102,181,191,110,92,243,18,34,12\")),bytes32(stringToBytes32(\"110,92,220,230,65,105,112,111,253,98,98,218,81,102,133,233,42,201,79,238,211,27,164,163,209,43,190,19,213,93,195,125\")),bytes32(stringToBytes32(\"12,240,118,122,26,35,6,186,84,121,36,240,155,3,147,5,43,209,89,131,122,59,81,24,26,29,167,161,17,219,70,62\")),bytes32(stringToBytes32(\"167,26,27,77,149,126,110,60,196,204,195,42,208,46,126,16,205,31,196,201,191,176,202,44,33,91,167,175,83,161,201,188\")),bytes32(stringToBytes32(\"217,1,215,132,135,241,118,20,240,177,250,39,94,163,226,216,137,176,63,41,102,52,244,89,77,254,167,118,61,1,161,108\")),bytes32(stringToBytes32(\"5,219,210,176,87,237,108,175,238,11,5,113,13,249,28,52,70,185,157,129,106,169,7,43,52,191,86,28,100,248,101,117\")),bytes32(stringToBytes32(\"214,251,31,253,190,198,163,71,148,147,238,251,92,156,248,150,255,146,167,169,121,26,15,170,158,247,249,193,87,29,77,104\")),bytes32(stringToBytes32(\"118,128,147,37,200,206,240,199,2,4,204,214,69,131,82,114,155,191,102,26,95,18,119,15,18,65,8,234,250,182,176,228\")),bytes32(stringToBytes32(\"36,246,184,96,6,193,70,148,116,93,133,39,156,255,248,111,214,196,69,46,198,206,47,199,176,120,225,148,88,78,67,213\")),bytes32(stringToBytes32(\"39,214,59,103,204,106,170,190,234,165,37,26,186,184,52,236,157,177,136,54,248,90,223,186,139,52,20,143,125,127,98,49\"))]"
              },
              {
                "js": "[[122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32],[196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205],[252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32],[242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108],[70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250],[144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84],[217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189],[226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7],[145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122],[160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206],[254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102],[70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214],[150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54],[224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34],[125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7],[94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226],[213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149],[90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125],[186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66],[111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187],[98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103],[157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172],[117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228],[195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31],[229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79],[248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21],[217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92],[115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31],[248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52],[5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180],[113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181],[189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74],[23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53],[74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91],[57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134],[149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226],[151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118],[100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25],[249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62],[80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141],[13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221],[231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220],[68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9],[34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141],[139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197],[87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124],[154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175],[23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140],[4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40],[31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99],[98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12],[251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151],[211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228],[8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122],[51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240],[237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40],[199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87],[205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42],[206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53],[63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206],[254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55],[7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159],[25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45],[108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21],[206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119],[159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90],[191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165],[195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13],[126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213],[197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77],[88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246],[181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123],[30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19],[97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143],[159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76],[216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111],[118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0],[76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222],[228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149],[216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152],[6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49],[249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147],[83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225],[1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41],[240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118],[49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207],[94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59],[236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121],[104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220],[105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101],[208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134],[118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23],[151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188],[65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255],[110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109]]",
                "sol": "[bytes32(stringToBytes32(\"122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32\")),bytes32(stringToBytes32(\"196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205\")),bytes32(stringToBytes32(\"252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32\")),bytes32(stringToBytes32(\"242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108\")),bytes32(stringToBytes32(\"70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250\")),bytes32(stringToBytes32(\"144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84\")),bytes32(stringToBytes32(\"217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189\")),bytes32(stringToBytes32(\"226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7\")),bytes32(stringToBytes32(\"145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122\")),bytes32(stringToBytes32(\"160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206\")),bytes32(stringToBytes32(\"254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102\")),bytes32(stringToBytes32(\"70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214\")),bytes32(stringToBytes32(\"150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54\")),bytes32(stringToBytes32(\"224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34\")),bytes32(stringToBytes32(\"125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7\")),bytes32(stringToBytes32(\"94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226\")),bytes32(stringToBytes32(\"213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149\")),bytes32(stringToBytes32(\"90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125\")),bytes32(stringToBytes32(\"186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66\")),bytes32(stringToBytes32(\"111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187\")),bytes32(stringToBytes32(\"98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103\")),bytes32(stringToBytes32(\"157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172\")),bytes32(stringToBytes32(\"117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228\")),bytes32(stringToBytes32(\"195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31\")),bytes32(stringToBytes32(\"229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79\")),bytes32(stringToBytes32(\"248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21\")),bytes32(stringToBytes32(\"217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92\")),bytes32(stringToBytes32(\"115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31\")),bytes32(stringToBytes32(\"248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52\")),bytes32(stringToBytes32(\"5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180\")),bytes32(stringToBytes32(\"113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181\")),bytes32(stringToBytes32(\"189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74\")),bytes32(stringToBytes32(\"23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53\")),bytes32(stringToBytes32(\"74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91\")),bytes32(stringToBytes32(\"57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134\")),bytes32(stringToBytes32(\"149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226\")),bytes32(stringToBytes32(\"151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118\")),bytes32(stringToBytes32(\"100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25\")),bytes32(stringToBytes32(\"249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62\")),bytes32(stringToBytes32(\"80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141\")),bytes32(stringToBytes32(\"13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221\")),bytes32(stringToBytes32(\"231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220\")),bytes32(stringToBytes32(\"68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9\")),bytes32(stringToBytes32(\"34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141\")),bytes32(stringToBytes32(\"139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197\")),bytes32(stringToBytes32(\"87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124\")),bytes32(stringToBytes32(\"154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175\")),bytes32(stringToBytes32(\"23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140\")),bytes32(stringToBytes32(\"4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40\")),bytes32(stringToBytes32(\"31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99\")),bytes32(stringToBytes32(\"98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12\")),bytes32(stringToBytes32(\"251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151\")),bytes32(stringToBytes32(\"211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228\")),bytes32(stringToBytes32(\"8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122\")),bytes32(stringToBytes32(\"51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240\")),bytes32(stringToBytes32(\"237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40\")),bytes32(stringToBytes32(\"199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87\")),bytes32(stringToBytes32(\"205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42\")),bytes32(stringToBytes32(\"206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53\")),bytes32(stringToBytes32(\"63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206\")),bytes32(stringToBytes32(\"254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55\")),bytes32(stringToBytes32(\"7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159\")),bytes32(stringToBytes32(\"25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45\")),bytes32(stringToBytes32(\"108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21\")),bytes32(stringToBytes32(\"206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119\")),bytes32(stringToBytes32(\"159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90\")),bytes32(stringToBytes32(\"191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165\")),bytes32(stringToBytes32(\"195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13\")),bytes32(stringToBytes32(\"126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213\")),bytes32(stringToBytes32(\"197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77\")),bytes32(stringToBytes32(\"88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246\")),bytes32(stringToBytes32(\"181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123\")),bytes32(stringToBytes32(\"30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19\")),bytes32(stringToBytes32(\"97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143\")),bytes32(stringToBytes32(\"159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76\")),bytes32(stringToBytes32(\"216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111\")),bytes32(stringToBytes32(\"118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0\")),bytes32(stringToBytes32(\"76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222\")),bytes32(stringToBytes32(\"228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149\")),bytes32(stringToBytes32(\"216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152\")),bytes32(stringToBytes32(\"6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49\")),bytes32(stringToBytes32(\"249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147\")),bytes32(stringToBytes32(\"83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225\")),bytes32(stringToBytes32(\"1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41\")),bytes32(stringToBytes32(\"240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118\")),bytes32(stringToBytes32(\"49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207\")),bytes32(stringToBytes32(\"94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59\")),bytes32(stringToBytes32(\"236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121\")),bytes32(stringToBytes32(\"104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220\")),bytes32(stringToBytes32(\"105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101\")),bytes32(stringToBytes32(\"208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134\")),bytes32(stringToBytes32(\"118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23\")),bytes32(stringToBytes32(\"151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188\")),bytes32(stringToBytes32(\"65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255\")),bytes32(stringToBytes32(\"110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length == _usersVote.length",
            "parameters": [
              {
                "js": "[[205,83,56,135,140,173,32,254,46,10,51,248,229,83,83,46,91,150,76,13,166,12,65,219,245,9,125,57,123,91,202,234],[242,16,185,100,133,144,253,119,152,142,193,25,110,30,54,231,105,53,206,162,131,245,43,220,195,30,205,19,72,104,151,91],[185,49,44,129,53,176,107,242,56,140,123,214,86,121,24,125,152,193,115,224,201,143,95,142,194,54,84,212,126,35,81,118],[232,205,15,126,135,237,98,209,84,79,33,126,103,112,122,106,41,117,41,67,175,83,11,194,213,222,193,240,165,158,168,157],[200,176,115,232,193,115,80,235,23,6,57,229,150,80,68,118,11,44,81,248,162,151,244,189,161,156,177,137,59,88,124,134],[24,223,79,147,17,32,87,49,231,203,169,237,49,40,111,109,93,25,104,45,232,79,52,143,244,55,204,222,163,125,106,137],[216,45,97,214,19,145,59,210,26,169,133,195,170,24,198,46,181,148,90,148,21,71,125,131,148,222,122,118,11,151,213,33],[177,221,13,41,104,109,193,251,203,164,63,96,139,90,202,39,41,2,168,77,55,125,106,127,128,55,206,56,148,0,33,0],[200,184,210,10,246,172,199,8,144,65,120,9,15,113,188,252,53,247,24,157,233,189,136,150,169,55,250,112,192,173,42,147],[106,219,128,152,186,62,78,120,183,175,71,152,83,121,152,21,56,108,64,133,39,8,123,15,196,236,166,111,120,147,43,93],[13,236,180,75,182,211,87,215,132,189,133,129,118,46,84,20,227,154,110,209,194,113,22,16,69,22,8,0,47,201,143,144],[59,8,244,43,34,95,142,141,249,153,192,77,231,18,64,229,210,110,188,121,65,57,130,224,157,188,164,223,172,249,128,234],[67,221,154,53,235,41,236,218,61,190,219,145,103,91,157,103,71,206,228,165,149,44,24,0,126,102,161,50,251,100,87,189],[128,79,231,188,48,62,240,108,149,143,236,245,200,63,72,117,202,16,111,177,142,169,95,69,11,172,30,119,166,166,112,48],[28,134,73,48,131,78,255,99,119,6,144,195,192,136,8,206,226,218,41,133,3,158,182,173,253,81,54,190,79,25,48,82],[245,236,221,103,62,102,14,60,83,90,131,140,196,76,150,166,177,155,182,155,211,203,229,87,111,61,214,94,181,145,7,123],[243,30,166,199,235,149,153,252,89,48,83,189,22,91,157,120,46,77,80,233,49,183,12,219,93,156,184,19,87,151,225,191],[112,234,154,97,142,105,9,14,74,106,154,144,251,112,60,234,96,192,242,238,136,99,240,83,198,67,193,17,105,210,219,9],[65,160,182,249,60,2,146,195,16,166,245,149,109,67,145,97,58,61,179,117,104,93,130,234,84,225,254,238,96,53,218,156],[22,191,22,174,84,66,177,57,92,23,142,109,254,244,188,6,247,74,208,69,3,152,157,210,193,232,157,219,109,57,136,205],[215,203,151,46,110,74,34,121,78,119,230,39,26,234,67,176,205,14,46,216,24,190,26,58,10,65,168,170,6,55,48,221],[96,183,127,254,225,251,148,188,23,185,51,193,75,164,222,169,56,162,51,29,206,208,124,178,49,114,104,25,171,42,220,126],[245,90,160,241,2,209,178,22,31,127,151,248,156,196,192,191,117,183,129,252,224,233,244,238,56,239,51,188,240,237,115,208],[58,91,147,27,159,184,154,74,132,234,171,130,204,88,199,73,201,160,72,16,102,130,47,128,92,71,222,217,210,202,225,2],[148,0,120,173,75,123,196,231,138,172,202,7,118,5,211,169,26,71,196,81,65,205,127,172,245,29,212,18,42,224,249,214],[26,255,241,248,218,63,98,57,7,102,54,81,199,149,215,174,7,21,222,203,243,167,9,193,47,17,22,249,189,112,44,58],[32,192,124,150,231,183,247,211,112,210,140,112,17,85,200,37,229,161,105,160,10,252,252,203,222,139,104,233,171,63,17,233],[234,47,220,107,175,207,35,213,202,237,170,213,191,161,81,171,229,106,22,238,115,104,246,13,15,11,159,71,17,127,227,128],[171,22,120,93,181,245,220,79,91,150,126,173,119,54,223,183,165,59,31,138,243,29,145,6,227,22,47,19,146,88,77,99],[42,134,124,71,134,248,134,92,255,153,16,116,178,87,73,35,6,106,184,235,89,152,196,237,226,157,53,229,174,62,237,13],[171,60,138,141,10,110,202,140,61,127,107,119,211,8,187,38,245,30,223,127,218,84,198,161,71,104,26,223,212,115,123,217],[222,107,195,188,120,202,108,140,71,54,121,175,148,127,66,49,22,247,205,135,234,54,228,170,101,87,180,156,206,197,216,168],[70,215,231,170,180,11,163,154,6,127,140,3,224,253,43,182,101,121,193,103,41,66,36,24,251,66,32,189,183,180,204,173],[97,94,224,80,110,114,15,77,158,239,237,211,114,171,224,48,159,113,159,75,66,25,23,131,127,181,239,141,80,229,146,200],[224,16,0,215,112,0,73,143,35,255,172,178,195,169,40,5,31,37,3,166,180,87,205,194,214,211,59,168,146,213,105,76],[198,118,104,98,92,41,21,87,15,50,68,247,151,161,175,138,169,249,72,95,193,253,231,32,49,132,32,196,196,69,149,219],[130,23,193,95,196,160,164,92,158,89,6,111,43,62,14,112,146,141,236,63,195,109,102,14,176,78,211,226,19,133,176,8],[211,210,74,107,115,12,117,32,73,246,194,161,237,127,224,205,96,150,83,132,141,74,77,115,127,68,47,221,183,59,224,180],[112,184,85,53,195,72,63,201,195,128,130,129,69,219,144,190,201,124,81,100,113,47,248,78,205,29,144,78,73,242,154,219],[246,151,38,6,154,83,18,195,184,118,224,193,214,224,87,106,207,21,95,158,131,94,200,95,232,182,21,143,152,19,117,43],[162,73,100,50,240,69,233,25,206,15,72,167,126,129,56,255,176,213,252,186,24,193,167,126,68,183,204,181,177,183,249,47],[141,131,32,125,58,144,150,20,97,32,215,182,219,0,207,179,63,168,157,171,26,211,245,201,96,29,143,66,136,95,216,205],[154,185,7,75,70,81,176,169,202,135,165,237,14,237,82,142,179,127,52,13,235,39,186,206,213,16,87,198,99,42,184,121],[145,49,47,20,65,68,182,44,100,83,64,190,3,48,132,77,184,76,60,113,23,72,225,203,252,143,181,111,25,193,63,170],[228,15,206,28,32,241,245,102,241,18,211,201,247,133,226,157,202,157,247,224,245,227,58,208,164,129,139,160,30,33,141,104],[221,133,251,88,247,116,82,139,7,65,154,185,152,72,242,125,104,184,61,7,133,180,200,235,163,178,39,178,21,170,33,107],[252,181,15,155,0,60,233,21,150,17,87,104,208,125,84,19,134,28,55,107,41,110,112,111,10,17,8,59,225,151,76,176],[187,206,17,134,230,100,113,226,98,174,232,35,254,195,237,182,83,119,143,76,132,52,0,85,85,71,147,183,174,225,253,177],[227,140,109,154,96,60,188,34,224,145,63,243,81,135,17,49,89,76,244,6,253,39,75,180,95,251,141,197,171,217,248,106],[227,16,52,118,160,241,211,64,22,152,175,232,128,187,112,110,99,36,27,172,125,118,92,31,87,17,5,162,34,237,70,180],[230,135,196,205,69,212,45,156,154,116,19,234,115,152,159,140,213,87,97,96,251,139,25,60,205,36,89,209,184,217,211,99],[213,236,223,115,89,111,60,77,86,6,28,217,24,45,242,115,47,10,48,46,20,141,169,135,27,188,56,33,86,136,210,106],[111,19,255,102,193,9,36,158,209,171,87,72,80,87,111,79,93,59,0,111,146,0,12,232,32,145,133,68,84,197,20,66],[204,75,101,249,249,36,209,203,132,148,147,248,5,246,126,144,86,163,181,59,207,140,217,147,68,76,0,230,82,125,254,108],[52,82,228,244,234,236,15,2,3,83,130,201,174,7,124,53,67,127,134,184,220,142,238,232,130,249,77,143,57,48,70,190],[170,5,127,14,79,228,34,177,249,48,72,70,0,130,131,173,184,125,138,57,211,33,0,32,16,231,95,7,145,98,144,112],[39,10,13,71,245,3,206,24,203,236,199,158,152,74,181,202,0,20,100,170,15,214,112,9,6,94,96,176,205,105,232,0],[44,59,127,233,202,42,56,30,35,223,9,33,192,3,110,52,101,69,24,12,204,245,77,233,220,206,85,80,150,21,79,183],[105,177,24,202,39,90,98,158,1,231,206,136,247,236,147,60,158,222,160,75,164,230,37,169,91,117,30,147,142,228,147,2],[44,192,111,172,203,40,234,215,219,21,192,189,150,93,227,90,153,37,112,148,133,208,25,158,124,171,166,224,209,240,33,31],[227,55,25,137,207,0,18,20,92,9,195,172,131,8,47,249,65,148,74,44,194,169,185,18,0,57,187,222,77,25,29,186],[62,44,112,165,8,38,115,47,220,119,29,167,116,225,215,53,255,188,94,104,45,146,35,243,103,138,51,2,151,53,230,220],[137,13,153,199,29,174,82,228,37,181,132,35,20,85,0,116,84,180,17,133,144,51,222,205,101,98,238,176,114,140,34,205],[133,10,190,171,78,39,10,134,110,33,170,2,3,13,91,92,85,168,186,94,29,231,130,217,124,171,161,35,49,195,229,5],[213,130,41,209,210,225,210,9,245,25,224,106,95,117,118,202,213,128,192,125,126,253,102,92,48,75,189,138,175,74,4,117],[61,10,49,102,150,250,96,74,177,99,49,12,35,70,110,235,64,83,179,243,246,64,119,211,120,149,153,230,88,142,102,232],[144,252,174,115,212,47,189,73,106,209,23,4,99,150,253,103,39,56,93,161,132,127,196,252,30,80,185,73,115,33,155,22],[73,149,172,64,60,213,129,69,165,98,88,12,84,78,210,122,235,8,217,43,106,225,178,64,230,210,99,71,111,20,198,15],[13,85,191,66,106,109,215,190,195,129,232,186,168,53,41,222,2,98,192,251,80,43,37,227,187,100,234,142,204,82,239,165],[148,16,90,0,72,135,133,39,121,174,35,100,115,146,50,4,192,165,209,164,219,77,53,88,116,230,77,62,242,231,252,109],[49,49,124,99,233,96,210,209,121,210,54,95,80,162,106,40,245,248,130,193,23,46,132,87,111,111,130,237,55,175,119,151],[110,88,160,246,124,58,229,96,176,171,144,50,209,176,15,16,253,160,74,202,99,252,96,55,61,119,131,87,121,17,47,54],[210,122,61,101,129,191,106,25,97,16,37,233,140,50,47,149,18,251,218,1,208,219,234,125,2,138,234,47,188,163,46,69],[109,107,244,157,189,20,76,166,199,209,1,144,199,73,147,87,219,236,129,236,123,163,228,111,252,202,17,22,199,225,181,241],[113,179,162,150,218,238,106,86,47,38,249,5,77,157,125,151,64,189,81,41,125,4,173,206,240,11,1,177,208,118,158,163],[96,163,22,0,50,91,146,235,68,9,32,250,18,98,252,60,85,201,110,127,151,9,30,159,193,1,30,153,149,172,120,23],[14,71,146,245,179,250,59,49,104,122,242,203,23,218,187,64,55,196,29,43,133,168,254,69,47,73,245,48,2,253,179,179],[164,217,125,61,202,117,96,252,67,63,226,15,50,36,205,147,138,101,37,184,112,89,168,46,136,144,134,232,233,87,31,181],[114,122,120,50,173,20,55,212,71,24,46,127,155,104,149,59,88,215,231,37,210,249,6,12,116,154,105,208,29,120,36,78],[153,21,25,117,189,223,120,127,66,71,165,7,193,214,8,152,171,204,190,66,222,159,140,15,244,174,38,170,108,96,27,232],[183,75,125,247,119,128,3,95,29,199,22,174,41,250,87,237,139,250,250,198,149,173,236,205,124,1,61,70,136,165,230,86],[142,56,213,91,42,208,159,93,21,127,16,83,184,14,159,200,212,236,9,226,192,159,156,27,240,44,157,166,81,216,72,212],[37,18,17,179,86,37,217,115,109,240,200,112,219,17,160,69,186,207,226,75,228,221,34,37,208,15,7,82,35,246,36,179],[193,46,2,120,204,12,247,15,118,226,238,243,252,70,18,20,152,186,207,104,167,146,13,184,70,89,45,238,63,198,198,115],[68,120,129,92,184,93,255,187,62,149,219,29,216,125,114,230,96,154,18,121,237,134,39,26,211,147,168,143,229,247,86,152],[146,185,72,148,209,214,104,229,11,86,150,34,50,137,0,40,22,172,216,213,141,136,61,97,59,131,244,18,41,203,13,101],[208,255,12,144,13,2,8,216,99,197,166,49,129,217,166,196,128,237,236,157,212,29,22,97,164,207,108,35,3,105,99,119],[128,246,10,250,80,68,82,111,167,132,243,28,141,113,237,166,197,217,145,179,157,111,5,203,92,94,182,64,44,189,220,36],[65,95,48,61,99,41,43,115,158,164,233,135,78,157,175,1,35,99,197,50,166,81,99,103,182,240,86,57,197,40,103,66],[201,6,123,207,206,130,133,197,174,231,147,81,44,105,10,255,128,61,99,161,48,48,15,23,143,77,129,90,73,89,8,175],[202,251,86,3,118,177,101,174,176,125,218,126,238,76,33,170,129,244,68,221,65,151,18,53,228,1,83,240,135,152,233,7],[219,47,165,204,239,145,183,83,66,123,187,31,72,16,157,163,169,13,221,124,155,119,191,12,134,146,113,8,41,240,113,79],[108,115,224,167,213,0,167,131,74,82,50,195,221,241,206,177,5,6,175,123,216,60,45,144,123,222,84,42,140,18,94,173],[202,141,212,228,76,45,16,167,238,133,190,238,164,31,29,144,3,214,251,189,227,206,122,96,204,112,195,78,30,233,60,121],[207,98,99,202,141,93,37,147,131,158,108,243,51,58,73,127,35,143,8,150,90,11,251,69,8,2,139,189,204,145,209,72],[100,225,227,14,173,217,10,188,41,63,201,152,126,62,32,107,27,180,230,103,222,32,162,127,141,220,0,235,181,67,104,23]]",
                "sol": "[stringToBytes32(\"146,235,102,77,6,87,57,50,13,56,82,82,228,40,32,160,162,9,131,71,139,243,159,17,23,110,28,110,142,91,47,142\"),stringToBytes32(\"84,178,140,59,245,128,20,139,132,78,244,36,252,216,38,137,251,103,0,37,145,190,119,123,46,110,156,57,55,203,33,183\"),stringToBytes32(\"25,210,178,243,23,194,217,237,78,174,64,244,158,156,223,33,194,5,157,117,120,60,146,106,236,44,204,80,95,99,230,252\"),stringToBytes32(\"177,135,164,6,36,101,207,123,203,138,92,233,162,95,159,168,206,50,97,160,112,152,5,27,72,92,146,139,128,247,31,176\"),stringToBytes32(\"158,141,25,12,75,122,92,222,201,29,51,170,55,1,128,240,185,183,162,121,127,66,215,33,67,34,85,169,232,94,163,122\"),stringToBytes32(\"232,105,70,226,22,176,90,94,220,46,8,46,38,150,166,29,147,109,254,245,71,95,201,22,214,64,157,168,160,163,74,41\"),stringToBytes32(\"194,174,155,30,17,19,138,57,174,131,13,47,11,173,96,209,232,225,227,14,122,214,123,158,117,7,43,127,153,34,166,113\"),stringToBytes32(\"229,183,46,65,242,102,210,37,182,2,18,34,104,191,107,150,108,188,3,173,63,136,87,115,54,225,97,60,170,116,81,24\"),stringToBytes32(\"153,115,229,88,165,151,31,20,31,212,255,156,212,220,230,210,80,135,99,139,208,203,28,20,116,23,27,236,64,150,205,199\"),stringToBytes32(\"10,250,88,63,203,52,137,0,55,83,10,82,253,59,13,55,194,1,203,224,85,46,10,139,249,76,140,24,169,165,70,81\"),stringToBytes32(\"223,200,14,168,25,145,116,160,84,8,53,220,229,255,24,110,99,238,86,79,60,81,227,72,212,212,201,138,244,39,89,178\"),stringToBytes32(\"118,31,172,231,252,158,208,183,112,128,30,36,211,236,190,176,78,126,128,110,28,110,3,98,135,169,53,81,144,37,62,232\"),stringToBytes32(\"82,241,149,8,30,247,21,89,111,78,80,233,24,4,175,74,165,238,1,144,189,226,61,46,221,135,54,244,156,21,1,75\"),stringToBytes32(\"27,125,4,224,98,225,239,167,209,16,63,4,194,51,234,107,62,133,3,112,154,8,57,152,191,70,130,196,234,78,129,180\"),stringToBytes32(\"8,114,155,180,160,6,134,132,162,105,67,251,224,41,6,22,119,76,102,235,181,77,21,226,53,243,84,4,28,94,119,35\"),stringToBytes32(\"228,132,208,16,154,197,179,136,8,131,26,218,47,214,201,136,169,160,13,138,203,74,190,157,166,15,224,45,23,197,22,163\"),stringToBytes32(\"50,255,236,215,43,14,0,117,23,206,12,215,189,33,163,100,98,4,119,156,41,168,8,106,204,74,228,26,254,215,17,180\"),stringToBytes32(\"111,252,65,153,32,136,53,126,85,51,171,19,140,197,86,219,140,162,53,232,6,147,237,10,9,54,240,61,41,100,161,206\"),stringToBytes32(\"33,14,136,63,188,135,109,112,94,196,135,69,255,46,49,125,204,223,42,228,121,69,253,5,128,86,70,27,127,146,3,35\"),stringToBytes32(\"164,214,250,8,59,139,63,75,46,4,14,14,130,59,125,5,247,218,50,132,220,60,183,103,69,216,44,92,92,92,54,31\"),stringToBytes32(\"112,236,219,236,129,75,240,204,209,149,188,73,131,153,95,207,130,1,199,246,151,196,72,76,131,83,137,43,221,128,32,200\"),stringToBytes32(\"197,197,88,61,178,101,19,139,135,11,47,105,53,144,185,227,199,184,18,148,159,202,115,37,76,54,32,51,254,191,21,177\"),stringToBytes32(\"216,243,150,187,37,9,21,130,107,138,218,106,249,68,117,142,51,74,187,217,221,91,145,33,141,136,23,119,139,179,248,17\"),stringToBytes32(\"96,95,135,123,242,196,127,133,50,5,213,207,247,78,37,186,140,60,235,127,5,123,1,48,232,146,148,237,142,242,165,122\"),stringToBytes32(\"131,187,73,197,63,243,197,35,81,184,35,84,25,132,55,225,10,47,175,163,83,10,101,157,146,254,156,74,32,147,167,112\"),stringToBytes32(\"30,7,165,122,29,33,153,1,150,65,148,156,121,35,255,30,73,215,179,245,80,182,221,85,35,153,154,160,23,162,71,13\"),stringToBytes32(\"12,133,124,12,14,71,245,13,15,233,102,31,244,243,75,144,147,158,120,197,237,23,200,157,12,64,85,176,112,246,99,15\"),stringToBytes32(\"122,121,160,243,84,91,142,71,249,198,104,36,44,40,5,185,252,236,7,27,137,235,187,179,208,153,163,39,20,150,123,215\"),stringToBytes32(\"118,122,18,93,60,130,121,57,238,173,156,110,95,27,1,63,238,44,21,220,99,24,225,27,62,147,32,178,233,41,124,74\"),stringToBytes32(\"23,116,128,178,157,24,23,109,122,210,215,153,45,130,247,29,245,40,114,44,246,196,112,43,183,255,226,82,65,69,164,110\"),stringToBytes32(\"19,165,139,57,126,62,196,163,189,204,156,244,234,60,23,52,79,130,255,104,73,127,52,160,79,21,134,189,202,216,30,188\"),stringToBytes32(\"110,23,233,31,55,137,173,237,20,243,105,131,26,128,169,51,66,14,242,207,156,135,45,34,91,177,225,37,16,64,177,181\"),stringToBytes32(\"37,215,224,16,219,27,105,135,228,247,201,183,135,50,142,160,92,35,59,132,33,113,200,209,250,24,200,153,99,197,52,226\"),stringToBytes32(\"196,99,95,104,27,189,122,160,89,239,255,213,239,240,214,87,227,115,54,251,229,33,176,21,71,218,221,44,59,116,136,100\"),stringToBytes32(\"227,88,6,82,51,232,150,219,177,30,247,156,237,46,104,51,207,212,130,117,214,236,243,142,165,85,76,185,67,138,85,169\"),stringToBytes32(\"91,207,122,238,252,43,29,236,38,41,22,96,145,33,228,182,98,185,205,245,117,19,98,217,184,23,125,139,160,126,182,213\"),stringToBytes32(\"187,160,32,174,72,130,165,73,71,173,14,218,141,215,81,27,92,184,4,134,222,193,219,8,100,84,190,106,31,80,149,246\"),stringToBytes32(\"137,133,142,91,140,131,188,15,95,61,166,209,146,24,234,134,226,165,241,184,245,116,109,111,182,84,165,217,139,137,51,204\"),stringToBytes32(\"74,201,11,139,238,145,173,13,111,166,111,224,26,65,152,210,38,23,12,69,17,74,34,172,229,244,233,255,178,134,160,70\"),stringToBytes32(\"24,180,241,97,251,118,241,216,103,26,45,82,229,200,94,10,193,156,23,52,113,24,245,78,162,126,213,33,177,136,62,87\"),stringToBytes32(\"81,54,5,104,205,174,190,153,60,111,189,106,243,140,19,79,173,168,170,113,249,252,69,222,178,243,232,241,215,24,135,187\"),stringToBytes32(\"113,34,69,0,133,254,229,220,37,140,37,21,9,90,48,46,127,23,216,102,138,193,24,143,243,98,180,153,218,241,6,208\"),stringToBytes32(\"64,90,183,227,223,84,242,158,229,245,126,68,61,186,40,160,191,96,91,18,106,60,149,58,31,56,223,42,8,229,155,185\"),stringToBytes32(\"89,191,16,100,226,112,203,192,0,223,82,118,197,183,20,121,183,135,100,215,143,99,13,252,245,173,203,49,207,216,167,68\"),stringToBytes32(\"1,150,113,106,19,122,227,169,135,37,198,6,229,98,89,153,43,73,134,209,202,217,198,159,247,139,138,211,41,172,52,227\"),stringToBytes32(\"45,210,2,52,250,49,16,112,243,100,140,240,83,163,239,120,104,9,92,233,72,84,100,189,51,87,29,194,64,34,152,154\"),stringToBytes32(\"199,126,202,167,50,74,10,103,42,177,155,3,233,177,21,22,1,199,68,7,215,62,38,246,222,168,124,93,222,225,186,95\"),stringToBytes32(\"22,143,40,254,237,250,140,184,162,34,63,182,114,113,68,149,120,34,168,93,255,27,18,48,249,1,75,239,128,15,241,75\"),stringToBytes32(\"234,34,77,131,0,60,113,29,129,85,40,32,4,11,86,102,20,109,93,70,172,82,88,203,102,177,253,17,251,97,56,67\"),stringToBytes32(\"140,113,225,75,76,91,149,104,129,226,86,119,3,196,156,134,205,149,232,151,238,121,168,162,8,160,230,25,102,187,115,129\"),stringToBytes32(\"103,78,41,190,155,179,205,87,135,215,144,112,37,50,86,42,187,126,228,127,141,56,147,142,40,236,47,49,32,99,87,225\"),stringToBytes32(\"118,120,235,117,191,18,78,43,163,70,150,91,195,143,141,51,226,0,21,212,9,143,174,135,74,180,216,41,3,159,80,18\"),stringToBytes32(\"26,241,60,153,137,208,195,150,165,152,229,153,230,22,219,119,209,108,181,92,103,215,185,206,71,49,154,169,239,163,81,137\"),stringToBytes32(\"126,98,214,251,30,99,166,44,86,193,80,242,203,155,65,132,180,142,199,82,117,147,29,223,84,21,132,34,24,85,185,219\"),stringToBytes32(\"143,138,154,41,185,78,88,115,33,61,161,72,235,102,132,249,224,190,151,106,10,89,170,156,190,106,200,227,71,221,110,99\"),stringToBytes32(\"54,108,2,196,46,26,0,153,66,56,191,128,159,226,188,6,136,107,175,108,255,190,79,107,152,12,203,208,122,100,186,35\"),stringToBytes32(\"101,173,32,170,90,120,143,190,213,67,186,108,47,228,169,50,207,69,96,46,238,186,16,135,147,31,103,70,196,59,45,111\"),stringToBytes32(\"225,1,38,134,167,187,9,113,185,3,186,153,108,183,82,143,255,98,41,246,107,120,248,229,243,201,14,171,7,228,231,222\"),stringToBytes32(\"40,151,214,247,202,204,225,223,229,108,9,54,177,102,31,56,222,23,122,225,196,27,134,115,139,73,178,193,232,225,196,180\"),stringToBytes32(\"165,161,11,218,134,42,48,27,221,132,163,230,39,248,43,195,15,36,207,187,74,110,228,174,66,155,138,133,159,85,253,124\"),stringToBytes32(\"14,65,226,71,220,17,27,163,65,82,56,30,77,100,244,157,204,113,69,199,202,105,217,87,71,49,94,143,152,98,188,132\"),stringToBytes32(\"39,242,251,93,93,174,248,120,31,221,188,140,255,250,5,203,74,217,116,137,126,192,36,182,126,135,63,158,254,207,188,82\"),stringToBytes32(\"55,164,201,41,111,104,253,179,220,6,23,194,75,158,145,66,137,67,57,243,132,36,202,197,129,1,105,123,186,214,249,181\"),stringToBytes32(\"14,206,198,164,25,2,10,253,21,96,222,250,232,43,119,217,31,198,228,62,0,187,201,23,74,167,170,21,104,208,38,100\"),stringToBytes32(\"205,245,238,88,126,247,146,29,51,195,206,186,190,157,27,87,163,42,165,91,156,157,124,166,79,128,31,23,206,95,177,178\"),stringToBytes32(\"47,186,131,95,239,16,27,61,252,247,224,23,210,222,120,129,213,165,81,177,115,19,164,39,106,190,216,114,141,135,99,163\"),stringToBytes32(\"189,203,163,104,150,60,187,63,224,11,194,91,165,170,239,146,74,219,64,66,241,173,199,222,88,251,142,62,163,72,215,245\"),stringToBytes32(\"13,186,107,32,153,169,39,102,165,146,125,10,142,245,27,177,146,16,249,145,187,199,231,128,26,199,54,55,6,91,113,1\"),stringToBytes32(\"184,9,103,34,101,220,119,207,197,235,128,211,253,55,36,237,115,199,179,32,134,156,0,5,109,130,176,81,127,154,133,163\"),stringToBytes32(\"52,244,196,172,77,197,97,133,64,83,106,241,101,170,167,169,103,42,52,116,175,62,10,1,1,93,138,74,122,153,100,121\"),stringToBytes32(\"146,41,39,221,225,212,218,32,18,110,83,170,216,67,51,15,217,143,151,87,46,206,178,0,75,89,85,122,242,138,99,156\"),stringToBytes32(\"83,117,126,148,104,205,24,105,135,13,244,106,41,85,196,167,226,34,90,76,58,72,90,199,249,233,46,13,232,93,249,105\"),stringToBytes32(\"130,120,72,12,68,248,39,93,201,167,204,219,240,161,127,19,3,190,32,200,197,179,82,222,10,120,15,230,252,208,25,132\"),stringToBytes32(\"210,124,220,69,35,127,179,136,48,38,176,230,1,37,92,5,140,219,172,50,94,240,70,57,61,199,74,151,68,31,125,226\"),stringToBytes32(\"238,238,145,249,79,155,132,124,54,215,118,155,151,227,43,32,121,210,112,253,247,118,112,142,247,11,163,44,179,176,73,161\"),stringToBytes32(\"11,162,165,170,63,67,91,64,7,21,216,154,185,130,79,217,69,146,198,11,221,5,137,3,109,218,169,84,229,157,255,88\"),stringToBytes32(\"116,83,142,134,101,88,146,123,47,225,20,242,217,129,99,202,143,4,171,35,221,127,117,168,181,88,67,195,148,133,2,16\"),stringToBytes32(\"231,112,5,140,200,248,147,38,244,233,65,33,34,167,245,72,105,84,118,117,202,113,254,154,78,92,81,29,48,101,75,32\"),stringToBytes32(\"72,120,37,108,65,229,0,76,110,45,10,157,110,236,170,128,3,210,37,160,111,142,252,44,73,245,74,71,166,11,198,108\"),stringToBytes32(\"215,52,207,117,166,120,36,58,23,60,40,81,111,65,9,103,107,205,27,188,239,253,157,241,159,239,178,117,151,207,45,196\"),stringToBytes32(\"126,186,253,253,28,62,192,176,209,99,31,54,205,208,197,89,48,251,28,130,91,183,204,146,11,207,106,157,125,101,148,72\"),stringToBytes32(\"212,193,79,34,127,196,46,234,6,61,163,20,72,57,36,165,156,226,219,166,245,199,91,54,124,89,58,92,87,127,4,0\"),stringToBytes32(\"111,214,241,111,230,59,105,79,62,182,172,245,92,255,131,157,201,65,64,153,52,139,96,186,121,3,53,229,173,65,229,70\"),stringToBytes32(\"225,197,191,215,106,50,110,97,184,11,249,33,235,80,16,148,212,77,19,164,30,150,222,101,116,67,173,238,191,13,212,146\"),stringToBytes32(\"229,5,62,115,146,233,152,64,188,113,192,63,9,150,125,130,157,38,162,200,71,189,149,214,120,220,194,217,154,171,200,194\"),stringToBytes32(\"124,106,61,55,193,166,33,17,90,80,29,212,38,168,227,147,3,105,37,235,205,201,77,191,210,168,140,224,226,58,134,54\"),stringToBytes32(\"110,95,61,107,155,124,200,12,243,189,59,240,68,75,35,249,127,39,45,145,215,188,76,119,188,199,29,201,245,247,218,188\"),stringToBytes32(\"2,44,97,197,4,98,33,62,157,55,102,17,2,127,17,169,101,240,229,133,109,170,172,34,133,60,132,242,43,202,106,31\"),stringToBytes32(\"95,211,139,185,53,90,158,171,157,36,199,54,176,12,224,142,112,176,185,126,125,208,146,56,34,238,121,33,236,149,179,185\"),stringToBytes32(\"107,143,20,65,36,120,44,178,56,236,48,201,15,111,101,53,92,21,190,233,72,79,221,108,234,149,141,4,180,165,226,159\"),stringToBytes32(\"52,59,172,196,100,170,83,25,185,56,206,218,17,184,62,158,136,252,157,132,147,199,38,222,123,215,198,17,225,243,227,209\"),stringToBytes32(\"67,228,20,238,223,50,43,173,8,183,141,101,247,141,104,25,113,137,47,232,228,30,35,208,175,253,94,178,232,26,89,236\"),stringToBytes32(\"171,137,59,191,86,19,81,85,172,210,179,137,155,46,255,91,110,119,39,233,236,32,70,195,75,74,99,27,251,44,175,152\"),stringToBytes32(\"9,48,95,59,151,169,239,109,109,100,209,249,149,240,121,6,16,91,138,111,246,88,49,225,192,124,243,105,45,49,43,76\"),stringToBytes32(\"48,81,171,102,9,37,148,75,155,121,48,101,92,106,14,176,149,145,63,58,89,84,12,67,18,210,111,189,189,43,210,201\"),stringToBytes32(\"180,194,106,18,139,223,24,248,166,75,131,217,46,171,194,87,241,208,210,89,112,136,187,207,103,214,87,172,186,207,146,34\")]"
              },
              {
                "js": "[[122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32],[196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205],[252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32],[242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108],[70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250],[144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84],[217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189],[226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7],[145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122],[160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206],[254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102],[70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214],[150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54],[224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34],[125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7],[94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226],[213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149],[90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125],[186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66],[111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187],[98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103],[157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172],[117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228],[195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31],[229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79],[248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21],[217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92],[115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31],[248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52],[5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180],[113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181],[189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74],[23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53],[74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91],[57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134],[149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226],[151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118],[100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25],[249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62],[80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141],[13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221],[231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220],[68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9],[34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141],[139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197],[87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124],[154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175],[23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140],[4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40],[31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99],[98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12],[251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151],[211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228],[8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122],[51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240],[237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40],[199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87],[205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42],[206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53],[63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206],[254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55],[7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159],[25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45],[108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21],[206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119],[159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90],[191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165],[195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13],[126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213],[197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77],[88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246],[181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123],[30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19],[97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143],[159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76],[216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111],[118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0],[76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222],[228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149],[216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152],[6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49],[249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147],[83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225],[1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41],[240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118],[49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207],[94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59],[236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121],[104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220],[105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101],[208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134],[118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23],[151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188],[65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255],[110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109]]",
                "sol": "[bytes32(stringToBytes32(\"122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32\")),bytes32(stringToBytes32(\"196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205\")),bytes32(stringToBytes32(\"252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32\")),bytes32(stringToBytes32(\"242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108\")),bytes32(stringToBytes32(\"70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250\")),bytes32(stringToBytes32(\"144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84\")),bytes32(stringToBytes32(\"217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189\")),bytes32(stringToBytes32(\"226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7\")),bytes32(stringToBytes32(\"145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122\")),bytes32(stringToBytes32(\"160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206\")),bytes32(stringToBytes32(\"254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102\")),bytes32(stringToBytes32(\"70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214\")),bytes32(stringToBytes32(\"150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54\")),bytes32(stringToBytes32(\"224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34\")),bytes32(stringToBytes32(\"125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7\")),bytes32(stringToBytes32(\"94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226\")),bytes32(stringToBytes32(\"213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149\")),bytes32(stringToBytes32(\"90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125\")),bytes32(stringToBytes32(\"186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66\")),bytes32(stringToBytes32(\"111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187\")),bytes32(stringToBytes32(\"98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103\")),bytes32(stringToBytes32(\"157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172\")),bytes32(stringToBytes32(\"117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228\")),bytes32(stringToBytes32(\"195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31\")),bytes32(stringToBytes32(\"229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79\")),bytes32(stringToBytes32(\"248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21\")),bytes32(stringToBytes32(\"217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92\")),bytes32(stringToBytes32(\"115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31\")),bytes32(stringToBytes32(\"248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52\")),bytes32(stringToBytes32(\"5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180\")),bytes32(stringToBytes32(\"113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181\")),bytes32(stringToBytes32(\"189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74\")),bytes32(stringToBytes32(\"23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53\")),bytes32(stringToBytes32(\"74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91\")),bytes32(stringToBytes32(\"57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134\")),bytes32(stringToBytes32(\"149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226\")),bytes32(stringToBytes32(\"151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118\")),bytes32(stringToBytes32(\"100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25\")),bytes32(stringToBytes32(\"249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62\")),bytes32(stringToBytes32(\"80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141\")),bytes32(stringToBytes32(\"13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221\")),bytes32(stringToBytes32(\"231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220\")),bytes32(stringToBytes32(\"68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9\")),bytes32(stringToBytes32(\"34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141\")),bytes32(stringToBytes32(\"139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197\")),bytes32(stringToBytes32(\"87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124\")),bytes32(stringToBytes32(\"154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175\")),bytes32(stringToBytes32(\"23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140\")),bytes32(stringToBytes32(\"4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40\")),bytes32(stringToBytes32(\"31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99\")),bytes32(stringToBytes32(\"98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12\")),bytes32(stringToBytes32(\"251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151\")),bytes32(stringToBytes32(\"211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228\")),bytes32(stringToBytes32(\"8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122\")),bytes32(stringToBytes32(\"51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240\")),bytes32(stringToBytes32(\"237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40\")),bytes32(stringToBytes32(\"199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87\")),bytes32(stringToBytes32(\"205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42\")),bytes32(stringToBytes32(\"206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53\")),bytes32(stringToBytes32(\"63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206\")),bytes32(stringToBytes32(\"254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55\")),bytes32(stringToBytes32(\"7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159\")),bytes32(stringToBytes32(\"25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45\")),bytes32(stringToBytes32(\"108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21\")),bytes32(stringToBytes32(\"206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119\")),bytes32(stringToBytes32(\"159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90\")),bytes32(stringToBytes32(\"191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165\")),bytes32(stringToBytes32(\"195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13\")),bytes32(stringToBytes32(\"126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213\")),bytes32(stringToBytes32(\"197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77\")),bytes32(stringToBytes32(\"88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246\")),bytes32(stringToBytes32(\"181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123\")),bytes32(stringToBytes32(\"30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19\")),bytes32(stringToBytes32(\"97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143\")),bytes32(stringToBytes32(\"159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76\")),bytes32(stringToBytes32(\"216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111\")),bytes32(stringToBytes32(\"118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0\")),bytes32(stringToBytes32(\"76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222\")),bytes32(stringToBytes32(\"228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149\")),bytes32(stringToBytes32(\"216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152\")),bytes32(stringToBytes32(\"6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49\")),bytes32(stringToBytes32(\"249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147\")),bytes32(stringToBytes32(\"83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225\")),bytes32(stringToBytes32(\"1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41\")),bytes32(stringToBytes32(\"240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118\")),bytes32(stringToBytes32(\"49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207\")),bytes32(stringToBytes32(\"94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59\")),bytes32(stringToBytes32(\"236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121\")),bytes32(stringToBytes32(\"104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220\")),bytes32(stringToBytes32(\"105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101\")),bytes32(stringToBytes32(\"208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134\")),bytes32(stringToBytes32(\"118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23\")),bytes32(stringToBytes32(\"151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188\")),bytes32(stringToBytes32(\"65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255\")),bytes32(stringToBytes32(\"110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length != 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[[122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32],[196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205],[252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32],[242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108],[70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250],[144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84],[217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189],[226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7],[145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122],[160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206],[254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102],[70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214],[150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54],[224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34],[125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7],[94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226],[213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149],[90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125],[186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66],[111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187],[98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103],[157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172],[117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228],[195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31],[229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79],[248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21],[217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92],[115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31],[248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52],[5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180],[113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181],[189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74],[23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53],[74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91],[57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134],[149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226],[151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118],[100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25],[249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62],[80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141],[13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221],[231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220],[68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9],[34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141],[139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197],[87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124],[154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175],[23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140],[4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40],[31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99],[98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12],[251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151],[211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228],[8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122],[51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240],[237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40],[199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87],[205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42],[206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53],[63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206],[254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55],[7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159],[25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45],[108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21],[206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119],[159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90],[191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165],[195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13],[126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213],[197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77],[88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246],[181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123],[30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19],[97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143],[159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76],[216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111],[118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0],[76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222],[228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149],[216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152],[6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49],[249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147],[83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225],[1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41],[240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118],[49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207],[94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59],[236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121],[104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220],[105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101],[208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134],[118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23],[151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188],[65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255],[110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109]]",
                "sol": "[bytes32(stringToBytes32(\"122,112,172,255,16,210,50,15,114,220,178,166,180,136,187,211,154,137,30,179,35,65,37,127,173,252,132,56,78,199,67,32\")),bytes32(stringToBytes32(\"196,225,80,225,10,218,132,119,88,243,103,220,223,0,251,3,178,212,147,195,245,82,87,27,169,102,133,6,67,121,128,205\")),bytes32(stringToBytes32(\"252,80,53,178,23,12,173,223,57,99,172,24,178,159,245,31,63,164,217,50,26,89,123,94,94,102,33,159,255,149,253,32\")),bytes32(stringToBytes32(\"242,210,209,99,93,193,15,126,195,82,186,239,90,231,151,247,170,8,3,6,52,73,253,199,42,20,55,235,188,39,180,108\")),bytes32(stringToBytes32(\"70,61,94,235,209,210,11,164,53,48,14,160,42,25,82,140,102,196,181,202,51,252,232,218,81,57,145,252,75,244,19,250\")),bytes32(stringToBytes32(\"144,2,11,40,93,243,44,146,166,147,220,186,71,253,166,235,105,255,59,55,56,41,111,130,17,63,61,146,200,235,135,84\")),bytes32(stringToBytes32(\"217,61,13,15,231,136,246,206,190,218,53,36,109,6,74,175,233,139,201,41,35,68,67,146,199,140,219,197,233,225,59,189\")),bytes32(stringToBytes32(\"226,127,226,8,68,77,89,194,226,179,229,203,1,173,66,63,28,32,97,25,69,45,251,53,173,16,190,87,5,88,193,7\")),bytes32(stringToBytes32(\"145,162,34,220,43,211,177,24,136,228,11,83,236,139,226,32,146,26,250,1,117,213,21,116,135,140,22,170,2,51,63,122\")),bytes32(stringToBytes32(\"160,187,206,184,187,201,64,207,222,198,109,148,166,33,211,55,218,188,84,119,250,42,111,192,61,185,78,109,119,148,86,206\")),bytes32(stringToBytes32(\"254,216,91,154,158,128,219,47,69,14,62,227,116,111,42,89,152,48,107,249,220,68,179,192,147,107,74,5,187,167,204,102\")),bytes32(stringToBytes32(\"70,177,192,61,76,218,38,21,6,124,176,147,227,149,250,104,28,55,196,234,163,194,241,154,207,173,227,55,189,68,49,214\")),bytes32(stringToBytes32(\"150,15,239,161,174,102,187,39,68,66,214,235,214,80,201,64,171,79,201,216,200,84,53,52,30,153,213,81,210,170,6,54\")),bytes32(stringToBytes32(\"224,190,203,13,168,226,68,152,148,189,15,101,10,153,64,155,116,166,47,130,82,114,41,174,120,182,74,50,82,46,13,34\")),bytes32(stringToBytes32(\"125,150,76,44,109,18,103,149,181,17,190,186,1,75,50,86,15,86,72,92,226,7,34,157,103,244,56,82,191,217,244,7\")),bytes32(stringToBytes32(\"94,19,82,191,238,24,137,200,131,179,98,19,221,211,14,132,177,117,235,0,53,109,199,136,14,45,62,102,114,71,146,226\")),bytes32(stringToBytes32(\"213,160,213,15,89,212,209,142,225,40,177,133,117,237,46,4,239,82,188,164,136,196,243,82,52,124,23,96,194,190,36,149\")),bytes32(stringToBytes32(\"90,9,228,147,23,236,13,114,116,159,83,98,141,58,238,150,75,191,130,155,239,172,23,255,168,223,214,125,50,237,152,125\")),bytes32(stringToBytes32(\"186,53,221,28,57,203,73,161,135,44,161,146,129,204,113,103,193,215,201,177,25,134,17,29,31,94,60,199,187,1,50,66\")),bytes32(stringToBytes32(\"111,18,100,168,123,247,97,134,78,224,40,115,80,195,22,218,231,4,144,167,103,85,102,239,153,216,86,189,240,76,125,187\")),bytes32(stringToBytes32(\"98,158,31,95,177,198,10,88,119,57,253,254,253,252,88,3,41,161,80,232,184,206,8,89,157,19,89,26,163,218,191,103\")),bytes32(stringToBytes32(\"157,90,190,164,244,186,204,137,194,213,185,172,118,51,72,197,122,69,201,167,167,89,4,158,246,230,136,175,242,70,115,172\")),bytes32(stringToBytes32(\"117,15,181,135,101,219,35,236,95,165,154,133,46,160,75,227,77,34,138,227,208,148,59,110,234,151,190,198,170,113,35,228\")),bytes32(stringToBytes32(\"195,221,230,5,207,250,156,137,156,232,120,154,24,39,8,216,214,15,234,151,12,164,177,26,192,32,58,54,35,153,236,31\")),bytes32(stringToBytes32(\"229,194,202,77,196,98,77,229,210,106,177,177,32,210,69,13,184,221,128,116,77,200,70,54,244,255,169,158,97,130,147,79\")),bytes32(stringToBytes32(\"248,167,147,232,182,150,68,81,37,2,8,147,226,193,188,161,218,47,55,80,226,238,91,141,86,247,178,233,61,120,11,21\")),bytes32(stringToBytes32(\"217,68,71,218,43,114,165,197,73,190,118,6,251,155,178,240,188,111,169,46,117,173,86,2,183,0,127,134,141,179,247,92\")),bytes32(stringToBytes32(\"115,222,64,116,208,113,233,177,5,103,90,210,69,57,136,106,229,54,16,253,169,163,231,221,6,221,216,27,103,239,43,31\")),bytes32(stringToBytes32(\"248,38,245,252,57,160,183,188,51,185,116,87,21,68,125,31,148,198,135,176,199,222,245,249,194,162,245,39,203,43,110,52\")),bytes32(stringToBytes32(\"5,114,233,118,78,44,41,118,97,228,89,230,13,193,254,183,183,91,150,207,228,74,70,112,177,121,189,166,82,112,113,180\")),bytes32(stringToBytes32(\"113,47,183,171,99,169,19,126,85,219,125,12,72,253,100,42,68,174,85,198,216,145,36,28,70,97,250,102,209,157,160,181\")),bytes32(stringToBytes32(\"189,42,121,15,227,208,55,207,164,79,240,50,79,182,149,250,209,90,148,238,77,234,254,144,53,20,179,233,23,92,45,74\")),bytes32(stringToBytes32(\"23,46,156,37,235,109,211,249,189,147,117,217,25,91,166,247,104,165,27,230,140,82,51,40,20,25,129,155,131,85,17,53\")),bytes32(stringToBytes32(\"74,185,158,232,33,22,152,118,225,139,113,186,213,173,133,30,210,86,13,190,94,232,2,51,200,68,159,223,50,97,249,91\")),bytes32(stringToBytes32(\"57,172,207,227,20,7,85,42,202,23,247,76,243,85,126,11,203,141,163,98,62,120,186,233,144,25,12,47,13,153,239,134\")),bytes32(stringToBytes32(\"149,45,1,171,242,1,45,115,15,104,240,190,104,220,136,120,195,61,100,81,46,157,81,168,2,150,75,182,45,23,88,226\")),bytes32(stringToBytes32(\"151,88,4,51,244,103,197,15,204,16,76,125,90,118,238,0,178,238,52,1,224,131,86,159,165,150,242,194,148,45,72,118\")),bytes32(stringToBytes32(\"100,217,94,205,73,14,172,70,129,161,74,86,18,47,6,154,54,231,37,17,190,75,213,31,176,183,116,214,236,172,14,25\")),bytes32(stringToBytes32(\"249,72,68,235,248,5,200,39,13,178,103,219,217,244,140,70,196,29,147,61,152,146,176,13,32,63,96,172,10,252,101,62\")),bytes32(stringToBytes32(\"80,102,49,105,212,137,221,133,55,61,52,245,60,185,101,78,141,134,243,153,225,88,69,219,96,150,136,47,250,209,166,141\")),bytes32(stringToBytes32(\"13,59,177,160,238,194,53,80,214,22,132,37,64,20,124,180,119,24,192,183,39,26,57,33,91,240,55,254,142,192,80,221\")),bytes32(stringToBytes32(\"231,146,177,48,35,98,207,53,133,149,128,116,202,133,252,202,141,244,36,173,73,25,14,71,148,119,101,63,231,201,214,220\")),bytes32(stringToBytes32(\"68,245,46,38,207,62,95,149,97,4,138,144,183,15,106,78,152,56,234,91,31,231,85,44,205,179,236,205,12,175,55,9\")),bytes32(stringToBytes32(\"34,208,128,217,73,53,167,217,174,139,93,60,171,133,130,95,139,114,99,46,238,213,79,40,109,188,98,77,233,2,230,141\")),bytes32(stringToBytes32(\"139,153,42,252,49,74,223,48,109,218,79,1,44,223,90,207,57,79,197,32,8,155,102,100,26,26,164,153,118,165,78,197\")),bytes32(stringToBytes32(\"87,118,243,68,149,88,50,199,111,26,16,14,81,175,185,42,172,110,187,81,185,54,90,22,194,175,196,47,80,48,162,124\")),bytes32(stringToBytes32(\"154,180,29,134,41,25,213,237,6,189,162,187,31,28,178,185,120,95,160,136,199,137,78,218,245,98,58,126,199,77,246,175\")),bytes32(stringToBytes32(\"23,17,201,13,153,54,4,11,177,67,2,209,218,229,183,200,189,42,181,160,116,206,50,57,195,124,125,219,57,33,24,140\")),bytes32(stringToBytes32(\"4,203,131,83,170,134,104,27,45,100,253,201,37,28,69,86,141,136,22,67,166,248,42,124,224,142,245,191,90,13,4,40\")),bytes32(stringToBytes32(\"31,241,173,241,19,90,117,138,228,222,99,51,232,201,72,153,123,40,138,132,230,5,66,250,202,66,230,204,89,248,7,99\")),bytes32(stringToBytes32(\"98,241,60,139,127,184,100,135,77,214,148,83,47,178,59,107,233,245,37,51,66,226,114,115,37,183,233,239,22,153,158,12\")),bytes32(stringToBytes32(\"251,156,93,156,147,237,67,223,193,115,230,72,90,181,249,200,207,19,19,13,235,108,69,133,209,160,209,96,150,159,190,151\")),bytes32(stringToBytes32(\"211,242,244,173,215,245,246,147,150,243,105,240,60,230,83,89,49,63,78,203,149,31,204,115,51,104,87,114,26,201,170,228\")),bytes32(stringToBytes32(\"8,207,117,243,139,84,206,157,109,163,36,134,31,170,116,84,241,43,134,104,227,36,46,128,235,207,194,193,172,50,244,122\")),bytes32(stringToBytes32(\"51,27,9,225,209,140,151,215,182,106,30,56,56,159,112,164,80,213,40,113,144,44,94,0,240,176,9,102,138,253,197,240\")),bytes32(stringToBytes32(\"237,183,52,46,76,168,217,44,31,175,77,193,72,234,14,197,21,201,138,202,19,107,168,253,27,194,251,202,6,26,91,40\")),bytes32(stringToBytes32(\"199,207,143,11,35,197,28,17,118,56,235,173,149,49,98,173,53,194,219,135,140,144,9,185,118,29,103,127,251,240,204,87\")),bytes32(stringToBytes32(\"205,73,23,190,160,187,112,175,52,2,252,90,152,175,94,170,152,0,184,72,39,159,207,240,75,152,188,178,69,217,158,42\")),bytes32(stringToBytes32(\"206,99,254,151,242,76,83,3,188,222,146,7,1,178,79,147,111,169,51,123,24,90,225,249,224,106,125,13,161,80,182,53\")),bytes32(stringToBytes32(\"63,236,97,66,100,164,59,145,176,92,203,207,119,35,179,36,191,201,27,0,7,59,236,104,64,129,165,81,110,109,178,206\")),bytes32(stringToBytes32(\"254,228,143,245,14,24,182,182,49,216,166,217,9,78,195,12,2,134,57,168,57,40,226,202,119,222,151,223,187,201,162,55\")),bytes32(stringToBytes32(\"7,165,251,221,49,15,230,79,139,191,196,204,2,83,11,78,70,153,233,231,191,220,204,229,90,187,37,114,40,110,55,159\")),bytes32(stringToBytes32(\"25,1,70,238,248,115,20,149,105,161,148,64,58,187,182,81,19,74,80,156,104,180,9,197,91,222,4,200,207,102,69,45\")),bytes32(stringToBytes32(\"108,78,146,205,173,232,56,100,7,99,107,78,152,100,12,0,159,23,0,234,148,100,230,46,17,183,250,84,138,107,32,21\")),bytes32(stringToBytes32(\"206,43,11,220,205,92,43,148,211,168,229,135,133,20,64,26,3,58,61,67,224,238,69,121,60,124,151,105,86,252,225,119\")),bytes32(stringToBytes32(\"159,209,240,198,104,77,21,53,195,2,216,231,135,197,108,36,236,54,126,194,86,239,129,161,113,15,132,119,139,2,131,90\")),bytes32(stringToBytes32(\"191,104,102,171,81,42,178,225,69,12,81,54,157,93,165,203,50,231,62,46,3,198,119,78,173,156,236,202,130,149,246,165\")),bytes32(stringToBytes32(\"195,88,11,168,66,223,219,136,89,146,47,251,123,35,153,148,202,231,245,29,37,112,5,10,169,35,20,56,217,188,246,13\")),bytes32(stringToBytes32(\"126,142,52,170,75,214,228,175,252,19,43,205,205,162,209,178,210,249,59,210,227,3,99,193,198,114,249,94,159,22,113,213\")),bytes32(stringToBytes32(\"197,68,166,238,242,166,77,56,204,78,53,74,69,109,188,214,242,54,167,59,253,53,191,90,67,49,31,108,58,38,190,77\")),bytes32(stringToBytes32(\"88,9,33,223,179,225,96,114,186,48,189,93,192,19,7,134,236,158,121,184,103,204,144,114,0,219,217,139,45,223,13,246\")),bytes32(stringToBytes32(\"181,65,249,252,3,28,154,37,55,244,38,114,88,85,159,38,56,222,234,214,249,253,67,149,114,214,41,1,17,19,211,123\")),bytes32(stringToBytes32(\"30,94,142,40,113,236,64,121,217,66,66,11,58,32,28,66,232,138,137,131,161,57,105,34,3,8,210,180,217,150,182,19\")),bytes32(stringToBytes32(\"97,87,28,29,19,236,175,128,64,238,16,0,7,92,34,223,125,243,158,135,10,21,33,71,123,159,145,166,104,216,157,143\")),bytes32(stringToBytes32(\"159,191,230,147,56,44,232,126,202,184,199,90,81,166,109,173,241,197,80,10,158,43,131,56,179,175,141,228,186,131,46,76\")),bytes32(stringToBytes32(\"216,228,12,72,218,157,89,215,45,232,153,34,73,174,76,220,60,147,99,8,164,116,48,147,160,71,111,113,95,81,214,111\")),bytes32(stringToBytes32(\"118,44,3,212,179,2,100,71,76,92,198,235,145,111,171,202,11,149,189,55,144,37,64,152,190,136,96,190,117,186,118,0\")),bytes32(stringToBytes32(\"76,80,58,128,103,12,64,25,30,147,143,248,175,213,188,115,28,168,20,102,146,213,125,100,222,9,93,30,203,1,24,222\")),bytes32(stringToBytes32(\"228,40,86,190,93,106,78,245,150,203,194,142,126,199,64,164,49,175,22,236,202,99,14,26,219,159,116,25,229,47,20,149\")),bytes32(stringToBytes32(\"216,183,222,52,13,168,16,123,109,105,5,6,9,178,1,119,3,14,109,91,124,219,241,65,1,250,144,53,201,2,228,152\")),bytes32(stringToBytes32(\"6,85,241,210,65,27,196,60,57,206,130,157,171,83,108,34,143,132,113,241,253,0,235,176,74,143,102,239,46,236,39,49\")),bytes32(stringToBytes32(\"249,93,103,22,252,31,241,155,73,29,6,197,12,195,140,1,235,124,195,51,119,195,199,226,159,234,114,177,87,124,23,147\")),bytes32(stringToBytes32(\"83,169,242,165,51,149,139,120,85,235,87,187,160,60,47,190,165,246,178,165,21,16,162,174,38,246,18,210,100,72,18,225\")),bytes32(stringToBytes32(\"1,77,138,29,232,31,236,95,181,117,244,86,70,59,187,22,164,167,127,168,13,19,65,200,228,133,155,142,72,76,143,41\")),bytes32(stringToBytes32(\"240,251,50,150,209,19,153,145,245,161,233,172,213,224,120,59,245,128,65,225,85,39,221,230,14,242,114,75,131,244,15,118\")),bytes32(stringToBytes32(\"49,123,93,204,32,223,251,17,227,172,247,194,139,74,49,66,180,226,110,31,32,246,56,175,230,183,229,32,32,66,178,207\")),bytes32(stringToBytes32(\"94,108,202,204,196,118,235,238,253,23,39,49,148,124,211,133,30,234,187,36,147,6,36,134,186,230,87,45,184,127,254,59\")),bytes32(stringToBytes32(\"236,60,99,234,187,39,150,85,72,94,209,174,131,70,96,17,227,193,142,78,199,88,60,146,77,114,186,211,185,235,4,121\")),bytes32(stringToBytes32(\"104,203,203,27,247,59,251,58,255,145,190,66,192,205,41,81,102,26,222,6,168,95,96,20,244,220,159,225,121,251,133,220\")),bytes32(stringToBytes32(\"105,125,191,202,63,66,255,37,158,9,45,15,94,121,15,11,20,159,149,52,101,176,60,10,37,203,61,236,142,54,44,101\")),bytes32(stringToBytes32(\"208,178,142,183,187,15,180,233,255,182,233,38,35,180,154,75,208,149,70,166,88,144,54,155,50,35,56,212,64,28,60,134\")),bytes32(stringToBytes32(\"118,173,245,60,52,217,179,10,189,106,12,85,165,137,83,251,184,48,113,157,12,236,144,143,192,219,139,87,179,73,72,23\")),bytes32(stringToBytes32(\"151,117,120,128,75,105,49,60,135,40,211,4,191,36,2,153,81,91,224,53,246,185,9,254,79,142,140,142,187,169,154,188\")),bytes32(stringToBytes32(\"65,90,67,48,106,253,132,116,66,234,253,220,246,235,48,224,100,193,102,189,13,129,187,7,175,132,80,60,175,22,150,255\")),bytes32(stringToBytes32(\"110,195,28,118,51,124,200,52,199,129,65,118,115,122,225,194,227,192,56,189,27,9,55,171,142,119,16,174,218,95,135,109\"))]"
              },
              {
                "js": "{from:accounts[7]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.168ZOnChainVoting.finalizeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finalizeVote(string) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,submissionsCount==votesCount",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "{from:accounts[7]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finalizeVote(string) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "\"Example\"",
                "sol": "\"Example\""
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.172ZPartialRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[],uint256[]) WHEN msg.sender==_owner,_holders.length==_numberOfTokens.length,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[2],accounts[5],accounts[3],accounts[0],accounts[4],accounts[0],accounts[3],accounts[9],accounts[6],accounts[6],accounts[3],accounts[3],accounts[7],accounts[7],accounts[5],accounts[2],accounts[9],accounts[1],accounts[5],accounts[4],accounts[9],accounts[8],accounts[9],accounts[4],accounts[4],accounts[4],accounts[7],accounts[6],accounts[4],accounts[9],accounts[6],accounts[4],accounts[1],accounts[9],accounts[6],accounts[9],accounts[9],accounts[9],accounts[3],accounts[7],accounts[6],accounts[5],accounts[9],accounts[3],accounts[2],accounts[5],accounts[7],accounts[5],accounts[7],accounts[6],accounts[3],accounts[8],accounts[0],accounts[9],accounts[9],accounts[0],accounts[2],accounts[5],accounts[2],accounts[7],accounts[9],accounts[4],accounts[9],accounts[4],accounts[0],accounts[2],accounts[4],accounts[0],accounts[8],accounts[0],accounts[0],accounts[5],accounts[4],accounts[5],accounts[5],accounts[2],accounts[2],accounts[5],accounts[8],accounts[0],accounts[4],accounts[6],accounts[0],accounts[1],accounts[1],accounts[7],accounts[5],accounts[5],accounts[7],accounts[2],accounts[6],accounts[8],accounts[7],accounts[9],accounts[9],accounts[0],accounts[8],accounts[9],accounts[5],accounts[2],accounts[4],accounts[6],accounts[2],accounts[5],accounts[5],accounts[6],accounts[2],accounts[7],accounts[5],accounts[5],accounts[7],accounts[6],accounts[6],accounts[9],accounts[8],accounts[0],accounts[6],accounts[1],accounts[5],accounts[2],accounts[4],accounts[9],accounts[3],accounts[7],accounts[2],accounts[6],accounts[0],accounts[0],accounts[1],accounts[6],accounts[3],accounts[8],accounts[1],accounts[2],accounts[0],accounts[5],accounts[8],accounts[0],accounts[6],accounts[7],accounts[1],accounts[2],accounts[9],accounts[7],accounts[8],accounts[6],accounts[2],accounts[2],accounts[5],accounts[8],accounts[2],accounts[1],accounts[5],accounts[5],accounts[2],accounts[4],accounts[3],accounts[3],accounts[6],accounts[4],accounts[3],accounts[9],accounts[6],accounts[3],accounts[4],accounts[8],accounts[8],accounts[6],accounts[7],accounts[6],accounts[9],accounts[0],accounts[0],accounts[9],accounts[9],accounts[1],accounts[2],accounts[7],accounts[2],accounts[8],accounts[6],accounts[1],accounts[4],accounts[0],accounts[7],accounts[0],accounts[9],accounts[4],accounts[3],accounts[8],accounts[5],accounts[6],accounts[5],accounts[3],accounts[5],accounts[5],accounts[5],accounts[6],accounts[7],accounts[4],accounts[3],accounts[5],accounts[5],accounts[8],accounts[7],accounts[1],accounts[6],accounts[7],accounts[0],accounts[1],accounts[0],accounts[2],accounts[4],accounts[6],accounts[8],accounts[8],accounts[7],accounts[6],accounts[3],accounts[9],accounts[8],accounts[4],accounts[8],accounts[2],accounts[7],accounts[8],accounts[0],accounts[4],accounts[4],accounts[8],accounts[3],accounts[6],accounts[4],accounts[5],accounts[4],accounts[8],accounts[5],accounts[2],accounts[2],accounts[0],accounts[0],accounts[9],accounts[1],accounts[6],accounts[3],accounts[3],accounts[7],accounts[3],accounts[0],accounts[1],accounts[7],accounts[9],accounts[1],accounts[1],accounts[9]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[66,95,10001,10001,0,64,256,1337,97,257,95,4,10001,1,1336,1,2,10000,10000,256,2014223715,95,10000,257,2014223715,255,2014223716,1532892064,1336,96,28,10001,28,254,1338,257,10001,10001,97,1336,2014223716,2014223714,2014223715,29,29,64,1532892064,28,10001,4,64,97,0,1532892064,10001,95,10000,0,3,3,95,64,1338,27,96,65,1532892064,66,97,64,1338,1338,1338,10000,9999,27,1338,64,9999,65,28,5,1337,9999,4,96,1338,10001,66,2014223715,28,97,5,1336,1532892063,4,5,1338,97,1338,255,9999,10000,27,1337,1532892062,256,1338,66,1338,1338,97,1336,1336,64,10000,1338,255,1338,6,2014223715,95,1,65,64,5,2014223714,257,5,254,10000,29,3,9999,256,10000,2014223715,64,1338,3,2014223714,1532892063,4,2014223716,3,97,10000,28,1338,95,29,1338,256,97,0,2,1532892062,66,66,1532892064,95,1337,97,2,64,254,95,256,66,10001,6,64,1338,0,1,97,5,2014223715,1,257,10000,65,29,1532892064,1532892063,66,255,29,5,5,5,254,64,1338,27,4,6,1337,1336,6,1337,6,6,26,1336,6,1532892063,1532892063,2014223714,5,6,27,256,255,1532892064,29,64,1338,65,95,254,10001,1532892064,1,1532892064,2,26,1336,10001,10001,1,26,10000,2014223715,1336,254,1532892062,10000,257,1,1532892063,10001,97,95,10001,3,2,0,257,6,255,27,2014223715,255,26]",
              "sol": "[uint256(66),uint256(95),uint256(10001),uint256(10001),uint256(0),uint256(64),uint256(256),uint256(1337),uint256(97),uint256(257),uint256(95),uint256(4),uint256(10001),uint256(1),uint256(1336),uint256(1),uint256(2),uint256(10000),uint256(10000),uint256(256),uint256(2014223715),uint256(95),uint256(10000),uint256(257),uint256(2014223715),uint256(255),uint256(2014223716),uint256(1532892064),uint256(1336),uint256(96),uint256(28),uint256(10001),uint256(28),uint256(254),uint256(1338),uint256(257),uint256(10001),uint256(10001),uint256(97),uint256(1336),uint256(2014223716),uint256(2014223714),uint256(2014223715),uint256(29),uint256(29),uint256(64),uint256(1532892064),uint256(28),uint256(10001),uint256(4),uint256(64),uint256(97),uint256(0),uint256(1532892064),uint256(10001),uint256(95),uint256(10000),uint256(0),uint256(3),uint256(3),uint256(95),uint256(64),uint256(1338),uint256(27),uint256(96),uint256(65),uint256(1532892064),uint256(66),uint256(97),uint256(64),uint256(1338),uint256(1338),uint256(1338),uint256(10000),uint256(9999),uint256(27),uint256(1338),uint256(64),uint256(9999),uint256(65),uint256(28),uint256(5),uint256(1337),uint256(9999),uint256(4),uint256(96),uint256(1338),uint256(10001),uint256(66),uint256(2014223715),uint256(28),uint256(97),uint256(5),uint256(1336),uint256(1532892063),uint256(4),uint256(5),uint256(1338),uint256(97),uint256(1338),uint256(255),uint256(9999),uint256(10000),uint256(27),uint256(1337),uint256(1532892062),uint256(256),uint256(1338),uint256(66),uint256(1338),uint256(1338),uint256(97),uint256(1336),uint256(1336),uint256(64),uint256(10000),uint256(1338),uint256(255),uint256(1338),uint256(6),uint256(2014223715),uint256(95),uint256(1),uint256(65),uint256(64),uint256(5),uint256(2014223714),uint256(257),uint256(5),uint256(254),uint256(10000),uint256(29),uint256(3),uint256(9999),uint256(256),uint256(10000),uint256(2014223715),uint256(64),uint256(1338),uint256(3),uint256(2014223714),uint256(1532892063),uint256(4),uint256(2014223716),uint256(3),uint256(97),uint256(10000),uint256(28),uint256(1338),uint256(95),uint256(29),uint256(1338),uint256(256),uint256(97),uint256(0),uint256(2),uint256(1532892062),uint256(66),uint256(66),uint256(1532892064),uint256(95),uint256(1337),uint256(97),uint256(2),uint256(64),uint256(254),uint256(95),uint256(256),uint256(66),uint256(10001),uint256(6),uint256(64),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(5),uint256(2014223715),uint256(1),uint256(257),uint256(10000),uint256(65),uint256(29),uint256(1532892064),uint256(1532892063),uint256(66),uint256(255),uint256(29),uint256(5),uint256(5),uint256(5),uint256(254),uint256(64),uint256(1338),uint256(27),uint256(4),uint256(6),uint256(1337),uint256(1336),uint256(6),uint256(1337),uint256(6),uint256(6),uint256(26),uint256(1336),uint256(6),uint256(1532892063),uint256(1532892063),uint256(2014223714),uint256(5),uint256(6),uint256(27),uint256(256),uint256(255),uint256(1532892064),uint256(29),uint256(64),uint256(1338),uint256(65),uint256(95),uint256(254),uint256(10001),uint256(1532892064),uint256(1),uint256(1532892064),uint256(2),uint256(26),uint256(1336),uint256(10001),uint256(10001),uint256(1),uint256(26),uint256(10000),uint256(2014223715),uint256(1336),uint256(254),uint256(1532892062),uint256(10000),uint256(257),uint256(1),uint256(1532892063),uint256(10001),uint256(97),uint256(95),uint256(10001),uint256(3),uint256(2),uint256(0),uint256(257),uint256(6),uint256(255),uint256(27),uint256(2014223715),uint256(255),uint256(26)]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[2],accounts[5],accounts[3],accounts[0],accounts[4],accounts[0],accounts[3],accounts[9],accounts[6],accounts[6],accounts[3],accounts[3],accounts[7],accounts[7],accounts[5],accounts[2],accounts[9],accounts[1],accounts[5],accounts[4],accounts[9],accounts[8],accounts[9],accounts[4],accounts[4],accounts[4],accounts[7],accounts[6],accounts[4],accounts[9],accounts[6],accounts[4],accounts[1],accounts[9],accounts[6],accounts[9],accounts[9],accounts[9],accounts[3],accounts[7],accounts[6],accounts[5],accounts[9],accounts[3],accounts[2],accounts[5],accounts[7],accounts[5],accounts[7],accounts[6],accounts[3],accounts[8],accounts[0],accounts[9],accounts[9],accounts[0],accounts[2],accounts[5],accounts[2],accounts[7],accounts[9],accounts[4],accounts[9],accounts[4],accounts[0],accounts[2],accounts[4],accounts[0],accounts[8],accounts[0],accounts[0],accounts[5],accounts[4],accounts[5],accounts[5],accounts[2],accounts[2],accounts[5],accounts[8],accounts[0],accounts[4],accounts[6],accounts[0],accounts[1],accounts[1],accounts[7],accounts[5],accounts[5],accounts[7],accounts[2],accounts[6],accounts[8],accounts[7],accounts[9],accounts[9],accounts[0],accounts[8],accounts[9],accounts[5],accounts[2],accounts[4],accounts[6],accounts[2],accounts[5],accounts[5],accounts[6],accounts[2],accounts[7],accounts[5],accounts[5],accounts[7],accounts[6],accounts[6],accounts[9],accounts[8],accounts[0],accounts[6],accounts[1],accounts[5],accounts[2],accounts[4],accounts[9],accounts[3],accounts[7],accounts[2],accounts[6],accounts[0],accounts[0],accounts[1],accounts[6],accounts[3],accounts[8],accounts[1],accounts[2],accounts[0],accounts[5],accounts[8],accounts[0],accounts[6],accounts[7],accounts[1],accounts[2],accounts[9],accounts[7],accounts[8],accounts[6],accounts[2],accounts[2],accounts[5],accounts[8],accounts[2],accounts[1],accounts[5],accounts[5],accounts[2],accounts[4],accounts[3],accounts[3],accounts[6],accounts[4],accounts[3],accounts[9],accounts[6],accounts[3],accounts[4],accounts[8],accounts[8],accounts[6],accounts[7],accounts[6],accounts[9],accounts[0],accounts[0],accounts[9],accounts[9],accounts[1],accounts[2],accounts[7],accounts[2],accounts[8],accounts[6],accounts[1],accounts[4],accounts[0],accounts[7],accounts[0],accounts[9],accounts[4],accounts[3],accounts[8],accounts[5],accounts[6],accounts[5],accounts[3],accounts[5],accounts[5],accounts[5],accounts[6],accounts[7],accounts[4],accounts[3],accounts[5],accounts[5],accounts[8],accounts[7],accounts[1],accounts[6],accounts[7],accounts[0],accounts[1],accounts[0],accounts[2],accounts[4],accounts[6],accounts[8],accounts[8],accounts[7],accounts[6],accounts[3],accounts[9],accounts[8],accounts[4],accounts[8],accounts[2],accounts[7],accounts[8],accounts[0],accounts[4],accounts[4],accounts[8],accounts[3],accounts[6],accounts[4],accounts[5],accounts[4],accounts[8],accounts[5],accounts[2],accounts[2],accounts[0],accounts[0],accounts[9],accounts[1],accounts[6],accounts[3],accounts[3],accounts[7],accounts[3],accounts[0],accounts[1],accounts[7],accounts[9],accounts[1],accounts[1],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[66,95,10001,10001,0,64,256,1337,97,257,95,4,10001,1,1336,1,2,10000,10000,256,2014223715,95,10000,257,2014223715,255,2014223716,1532892064,1336,96,28,10001,28,254,1338,257,10001,10001,97,1336,2014223716,2014223714,2014223715,29,29,64,1532892064,28,10001,4,64,97,0,1532892064,10001,95,10000,0,3,3,95,64,1338,27,96,65,1532892064,66,97,64,1338,1338,1338,10000,9999,27,1338,64,9999,65,28,5,1337,9999,4,96,1338,10001,66,2014223715,28,97,5,1336,1532892063,4,5,1338,97,1338,255,9999,10000,27,1337,1532892062,256,1338,66,1338,1338,97,1336,1336,64,10000,1338,255,1338,6,2014223715,95,1,65,64,5,2014223714,257,5,254,10000,29,3,9999,256,10000,2014223715,64,1338,3,2014223714,1532892063,4,2014223716,3,97,10000,28,1338,95,29,1338,256,97,0,2,1532892062,66,66,1532892064,95,1337,97,2,64,254,95,256,66,10001,6,64,1338,0,1,97,5,2014223715,1,257,10000,65,29,1532892064,1532892063,66,255,29,5,5,5,254,64,1338,27,4,6,1337,1336,6,1337,6,6,26,1336,6,1532892063,1532892063,2014223714,5,6,27,256,255,1532892064,29,64,1338,65,95,254,10001,1532892064,1,1532892064,2,26,1336,10001,10001,1,26,10000,2014223715,1336,254,1532892062,10000,257,1,1532892063,10001,97,95,10001,3,2,0,257,6,255,27,2014223715,255,26]",
                "sol": "[uint256(66),uint256(95),uint256(10001),uint256(10001),uint256(0),uint256(64),uint256(256),uint256(1337),uint256(97),uint256(257),uint256(95),uint256(4),uint256(10001),uint256(1),uint256(1336),uint256(1),uint256(2),uint256(10000),uint256(10000),uint256(256),uint256(2014223715),uint256(95),uint256(10000),uint256(257),uint256(2014223715),uint256(255),uint256(2014223716),uint256(1532892064),uint256(1336),uint256(96),uint256(28),uint256(10001),uint256(28),uint256(254),uint256(1338),uint256(257),uint256(10001),uint256(10001),uint256(97),uint256(1336),uint256(2014223716),uint256(2014223714),uint256(2014223715),uint256(29),uint256(29),uint256(64),uint256(1532892064),uint256(28),uint256(10001),uint256(4),uint256(64),uint256(97),uint256(0),uint256(1532892064),uint256(10001),uint256(95),uint256(10000),uint256(0),uint256(3),uint256(3),uint256(95),uint256(64),uint256(1338),uint256(27),uint256(96),uint256(65),uint256(1532892064),uint256(66),uint256(97),uint256(64),uint256(1338),uint256(1338),uint256(1338),uint256(10000),uint256(9999),uint256(27),uint256(1338),uint256(64),uint256(9999),uint256(65),uint256(28),uint256(5),uint256(1337),uint256(9999),uint256(4),uint256(96),uint256(1338),uint256(10001),uint256(66),uint256(2014223715),uint256(28),uint256(97),uint256(5),uint256(1336),uint256(1532892063),uint256(4),uint256(5),uint256(1338),uint256(97),uint256(1338),uint256(255),uint256(9999),uint256(10000),uint256(27),uint256(1337),uint256(1532892062),uint256(256),uint256(1338),uint256(66),uint256(1338),uint256(1338),uint256(97),uint256(1336),uint256(1336),uint256(64),uint256(10000),uint256(1338),uint256(255),uint256(1338),uint256(6),uint256(2014223715),uint256(95),uint256(1),uint256(65),uint256(64),uint256(5),uint256(2014223714),uint256(257),uint256(5),uint256(254),uint256(10000),uint256(29),uint256(3),uint256(9999),uint256(256),uint256(10000),uint256(2014223715),uint256(64),uint256(1338),uint256(3),uint256(2014223714),uint256(1532892063),uint256(4),uint256(2014223716),uint256(3),uint256(97),uint256(10000),uint256(28),uint256(1338),uint256(95),uint256(29),uint256(1338),uint256(256),uint256(97),uint256(0),uint256(2),uint256(1532892062),uint256(66),uint256(66),uint256(1532892064),uint256(95),uint256(1337),uint256(97),uint256(2),uint256(64),uint256(254),uint256(95),uint256(256),uint256(66),uint256(10001),uint256(6),uint256(64),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(5),uint256(2014223715),uint256(1),uint256(257),uint256(10000),uint256(65),uint256(29),uint256(1532892064),uint256(1532892063),uint256(66),uint256(255),uint256(29),uint256(5),uint256(5),uint256(5),uint256(254),uint256(64),uint256(1338),uint256(27),uint256(4),uint256(6),uint256(1337),uint256(1336),uint256(6),uint256(1337),uint256(6),uint256(6),uint256(26),uint256(1336),uint256(6),uint256(1532892063),uint256(1532892063),uint256(2014223714),uint256(5),uint256(6),uint256(27),uint256(256),uint256(255),uint256(1532892064),uint256(29),uint256(64),uint256(1338),uint256(65),uint256(95),uint256(254),uint256(10001),uint256(1532892064),uint256(1),uint256(1532892064),uint256(2),uint256(26),uint256(1336),uint256(10001),uint256(10001),uint256(1),uint256(26),uint256(10000),uint256(2014223715),uint256(1336),uint256(254),uint256(1532892062),uint256(10000),uint256(257),uint256(1),uint256(1532892063),uint256(10001),uint256(97),uint256(95),uint256(10001),uint256(3),uint256(2),uint256(0),uint256(257),uint256(6),uint256(255),uint256(27),uint256(2014223715),uint256(255),uint256(26)]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length == _numberOfTokens.length",
            "parameters": [
              {
                "js": "[accounts[7],accounts[9],accounts[3],accounts[9],accounts[5],accounts[6],accounts[0],accounts[7],accounts[7],accounts[8],accounts[7],accounts[4],accounts[8],accounts[4],accounts[1],accounts[1],accounts[1],accounts[5],accounts[8],accounts[6],accounts[0],accounts[1],accounts[6],accounts[0],accounts[0],accounts[5],accounts[9],accounts[3],accounts[2],accounts[4],accounts[9],accounts[1],accounts[5],accounts[0],accounts[4],accounts[9],accounts[7],accounts[1],accounts[9],accounts[5],accounts[3],accounts[4],accounts[9],accounts[3],accounts[8],accounts[4],accounts[7],accounts[5],accounts[4],accounts[8],accounts[1],accounts[0],accounts[1],accounts[8],accounts[3],accounts[6],accounts[8],accounts[4],accounts[8],accounts[9],accounts[8],accounts[2],accounts[5],accounts[8],accounts[0],accounts[9],accounts[5],accounts[3],accounts[2],accounts[3],accounts[2],accounts[1],accounts[4],accounts[6],accounts[2],accounts[5],accounts[2],accounts[1],accounts[9],accounts[6],accounts[9],accounts[3],accounts[7],accounts[8],accounts[7],accounts[7],accounts[4],accounts[9],accounts[7],accounts[1],accounts[3],accounts[2],accounts[5],accounts[6],accounts[7],accounts[7],accounts[5],accounts[4],accounts[5],accounts[4],accounts[8],accounts[0],accounts[3],accounts[8],accounts[1],accounts[7],accounts[3],accounts[9],accounts[1],accounts[8],accounts[0],accounts[6],accounts[2],accounts[3],accounts[9],accounts[1],accounts[0],accounts[6],accounts[5],accounts[3],accounts[3],accounts[0],accounts[5],accounts[6],accounts[7],accounts[3],accounts[0],accounts[9],accounts[5],accounts[5],accounts[7],accounts[7],accounts[2],accounts[6],accounts[0],accounts[8],accounts[3],accounts[5],accounts[5],accounts[7],accounts[6],accounts[2],accounts[0],accounts[5],accounts[3],accounts[2],accounts[7],accounts[5],accounts[4],accounts[3],accounts[5],accounts[3],accounts[9],accounts[6],accounts[1],accounts[0],accounts[4],accounts[6],accounts[3],accounts[0],accounts[8],accounts[0],accounts[4],accounts[6],accounts[9],accounts[5],accounts[2],accounts[2],accounts[6],accounts[0],accounts[8],accounts[8],accounts[4],accounts[9],accounts[5],accounts[0],accounts[1],accounts[6],accounts[3],accounts[2],accounts[4],accounts[0],accounts[1],accounts[0],accounts[8],accounts[1],accounts[0],accounts[0],accounts[9],accounts[6],accounts[3],accounts[1],accounts[4],accounts[0],accounts[0],accounts[8],accounts[0],accounts[4],accounts[3],accounts[9],accounts[9],accounts[8],accounts[5],accounts[9],accounts[7],accounts[4],accounts[1],accounts[3],accounts[7],accounts[0],accounts[7],accounts[1],accounts[7],accounts[7],accounts[5],accounts[5],accounts[0],accounts[9],accounts[2],accounts[5],accounts[7],accounts[9],accounts[2],accounts[2],accounts[8],accounts[7],accounts[5],accounts[3],accounts[4],accounts[5],accounts[1],accounts[3],accounts[3],accounts[0],accounts[3],accounts[4],accounts[0],accounts[2],accounts[5],accounts[8],accounts[0],accounts[3],accounts[7],accounts[9],accounts[8],accounts[8],accounts[6],accounts[0],accounts[1],accounts[5],accounts[3],accounts[2],accounts[4],accounts[5],accounts[8],accounts[5]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[66,95,10001,10001,0,64,256,1337,97,257,95,4,10001,1,1336,1,2,10000,10000,256,2014223715,95,10000,257,2014223715,255,2014223716,1532892064,1336,96,28,10001,28,254,1338,257,10001,10001,97,1336,2014223716,2014223714,2014223715,29,29,64,1532892064,28,10001,4,64,97,0,1532892064,10001,95,10000,0,3,3,95,64,1338,27,96,65,1532892064,66,97,64,1338,1338,1338,10000,9999,27,1338,64,9999,65,28,5,1337,9999,4,96,1338,10001,66,2014223715,28,97,5,1336,1532892063,4,5,1338,97,1338,255,9999,10000,27,1337,1532892062,256,1338,66,1338,1338,97,1336,1336,64,10000,1338,255,1338,6,2014223715,95,1,65,64,5,2014223714,257,5,254,10000,29,3,9999,256,10000,2014223715,64,1338,3,2014223714,1532892063,4,2014223716,3,97,10000,28,1338,95,29,1338,256,97,0,2,1532892062,66,66,1532892064,95,1337,97,2,64,254,95,256,66,10001,6,64,1338,0,1,97,5,2014223715,1,257,10000,65,29,1532892064,1532892063,66,255,29,5,5,5,254,64,1338,27,4,6,1337,1336,6,1337,6,6,26,1336,6,1532892063,1532892063,2014223714,5,6,27,256,255,1532892064,29,64,1338,65,95,254,10001,1532892064,1,1532892064,2,26,1336,10001,10001,1,26,10000,2014223715,1336,254,1532892062,10000,257,1,1532892063,10001,97,95,10001,3,2,0,257,6,255,27,2014223715,255,26]",
                "sol": "[uint256(66),uint256(95),uint256(10001),uint256(10001),uint256(0),uint256(64),uint256(256),uint256(1337),uint256(97),uint256(257),uint256(95),uint256(4),uint256(10001),uint256(1),uint256(1336),uint256(1),uint256(2),uint256(10000),uint256(10000),uint256(256),uint256(2014223715),uint256(95),uint256(10000),uint256(257),uint256(2014223715),uint256(255),uint256(2014223716),uint256(1532892064),uint256(1336),uint256(96),uint256(28),uint256(10001),uint256(28),uint256(254),uint256(1338),uint256(257),uint256(10001),uint256(10001),uint256(97),uint256(1336),uint256(2014223716),uint256(2014223714),uint256(2014223715),uint256(29),uint256(29),uint256(64),uint256(1532892064),uint256(28),uint256(10001),uint256(4),uint256(64),uint256(97),uint256(0),uint256(1532892064),uint256(10001),uint256(95),uint256(10000),uint256(0),uint256(3),uint256(3),uint256(95),uint256(64),uint256(1338),uint256(27),uint256(96),uint256(65),uint256(1532892064),uint256(66),uint256(97),uint256(64),uint256(1338),uint256(1338),uint256(1338),uint256(10000),uint256(9999),uint256(27),uint256(1338),uint256(64),uint256(9999),uint256(65),uint256(28),uint256(5),uint256(1337),uint256(9999),uint256(4),uint256(96),uint256(1338),uint256(10001),uint256(66),uint256(2014223715),uint256(28),uint256(97),uint256(5),uint256(1336),uint256(1532892063),uint256(4),uint256(5),uint256(1338),uint256(97),uint256(1338),uint256(255),uint256(9999),uint256(10000),uint256(27),uint256(1337),uint256(1532892062),uint256(256),uint256(1338),uint256(66),uint256(1338),uint256(1338),uint256(97),uint256(1336),uint256(1336),uint256(64),uint256(10000),uint256(1338),uint256(255),uint256(1338),uint256(6),uint256(2014223715),uint256(95),uint256(1),uint256(65),uint256(64),uint256(5),uint256(2014223714),uint256(257),uint256(5),uint256(254),uint256(10000),uint256(29),uint256(3),uint256(9999),uint256(256),uint256(10000),uint256(2014223715),uint256(64),uint256(1338),uint256(3),uint256(2014223714),uint256(1532892063),uint256(4),uint256(2014223716),uint256(3),uint256(97),uint256(10000),uint256(28),uint256(1338),uint256(95),uint256(29),uint256(1338),uint256(256),uint256(97),uint256(0),uint256(2),uint256(1532892062),uint256(66),uint256(66),uint256(1532892064),uint256(95),uint256(1337),uint256(97),uint256(2),uint256(64),uint256(254),uint256(95),uint256(256),uint256(66),uint256(10001),uint256(6),uint256(64),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(5),uint256(2014223715),uint256(1),uint256(257),uint256(10000),uint256(65),uint256(29),uint256(1532892064),uint256(1532892063),uint256(66),uint256(255),uint256(29),uint256(5),uint256(5),uint256(5),uint256(254),uint256(64),uint256(1338),uint256(27),uint256(4),uint256(6),uint256(1337),uint256(1336),uint256(6),uint256(1337),uint256(6),uint256(6),uint256(26),uint256(1336),uint256(6),uint256(1532892063),uint256(1532892063),uint256(2014223714),uint256(5),uint256(6),uint256(27),uint256(256),uint256(255),uint256(1532892064),uint256(29),uint256(64),uint256(1338),uint256(65),uint256(95),uint256(254),uint256(10001),uint256(1532892064),uint256(1),uint256(1532892064),uint256(2),uint256(26),uint256(1336),uint256(10001),uint256(10001),uint256(1),uint256(26),uint256(10000),uint256(2014223715),uint256(1336),uint256(254),uint256(1532892062),uint256(10000),uint256(257),uint256(1),uint256(1532892063),uint256(10001),uint256(97),uint256(95),uint256(10001),uint256(3),uint256(2),uint256(0),uint256(257),uint256(6),uint256(255),uint256(27),uint256(2014223715),uint256(255),uint256(26)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[66,95,10001,10001,0,64,256,1337,97,257,95,4,10001,1,1336,1,2,10000,10000,256,2014223715,95,10000,257,2014223715,255,2014223716,1532892064,1336,96,28,10001,28,254,1338,257,10001,10001,97,1336,2014223716,2014223714,2014223715,29,29,64,1532892064,28,10001,4,64,97,0,1532892064,10001,95,10000,0,3,3,95,64,1338,27,96,65,1532892064,66,97,64,1338,1338,1338,10000,9999,27,1338,64,9999,65,28,5,1337,9999,4,96,1338,10001,66,2014223715,28,97,5,1336,1532892063,4,5,1338,97,1338,255,9999,10000,27,1337,1532892062,256,1338,66,1338,1338,97,1336,1336,64,10000,1338,255,1338,6,2014223715,95,1,65,64,5,2014223714,257,5,254,10000,29,3,9999,256,10000,2014223715,64,1338,3,2014223714,1532892063,4,2014223716,3,97,10000,28,1338,95,29,1338,256,97,0,2,1532892062,66,66,1532892064,95,1337,97,2,64,254,95,256,66,10001,6,64,1338,0,1,97,5,2014223715,1,257,10000,65,29,1532892064,1532892063,66,255,29,5,5,5,254,64,1338,27,4,6,1337,1336,6,1337,6,6,26,1336,6,1532892063,1532892063,2014223714,5,6,27,256,255,1532892064,29,64,1338,65,95,254,10001,1532892064,1,1532892064,2,26,1336,10001,10001,1,26,10000,2014223715,1336,254,1532892062,10000,257,1,1532892063,10001,97,95,10001,3,2,0,257,6,255,27,2014223715,255,26]",
                "sol": "[uint256(66),uint256(95),uint256(10001),uint256(10001),uint256(0),uint256(64),uint256(256),uint256(1337),uint256(97),uint256(257),uint256(95),uint256(4),uint256(10001),uint256(1),uint256(1336),uint256(1),uint256(2),uint256(10000),uint256(10000),uint256(256),uint256(2014223715),uint256(95),uint256(10000),uint256(257),uint256(2014223715),uint256(255),uint256(2014223716),uint256(1532892064),uint256(1336),uint256(96),uint256(28),uint256(10001),uint256(28),uint256(254),uint256(1338),uint256(257),uint256(10001),uint256(10001),uint256(97),uint256(1336),uint256(2014223716),uint256(2014223714),uint256(2014223715),uint256(29),uint256(29),uint256(64),uint256(1532892064),uint256(28),uint256(10001),uint256(4),uint256(64),uint256(97),uint256(0),uint256(1532892064),uint256(10001),uint256(95),uint256(10000),uint256(0),uint256(3),uint256(3),uint256(95),uint256(64),uint256(1338),uint256(27),uint256(96),uint256(65),uint256(1532892064),uint256(66),uint256(97),uint256(64),uint256(1338),uint256(1338),uint256(1338),uint256(10000),uint256(9999),uint256(27),uint256(1338),uint256(64),uint256(9999),uint256(65),uint256(28),uint256(5),uint256(1337),uint256(9999),uint256(4),uint256(96),uint256(1338),uint256(10001),uint256(66),uint256(2014223715),uint256(28),uint256(97),uint256(5),uint256(1336),uint256(1532892063),uint256(4),uint256(5),uint256(1338),uint256(97),uint256(1338),uint256(255),uint256(9999),uint256(10000),uint256(27),uint256(1337),uint256(1532892062),uint256(256),uint256(1338),uint256(66),uint256(1338),uint256(1338),uint256(97),uint256(1336),uint256(1336),uint256(64),uint256(10000),uint256(1338),uint256(255),uint256(1338),uint256(6),uint256(2014223715),uint256(95),uint256(1),uint256(65),uint256(64),uint256(5),uint256(2014223714),uint256(257),uint256(5),uint256(254),uint256(10000),uint256(29),uint256(3),uint256(9999),uint256(256),uint256(10000),uint256(2014223715),uint256(64),uint256(1338),uint256(3),uint256(2014223714),uint256(1532892063),uint256(4),uint256(2014223716),uint256(3),uint256(97),uint256(10000),uint256(28),uint256(1338),uint256(95),uint256(29),uint256(1338),uint256(256),uint256(97),uint256(0),uint256(2),uint256(1532892062),uint256(66),uint256(66),uint256(1532892064),uint256(95),uint256(1337),uint256(97),uint256(2),uint256(64),uint256(254),uint256(95),uint256(256),uint256(66),uint256(10001),uint256(6),uint256(64),uint256(1338),uint256(0),uint256(1),uint256(97),uint256(5),uint256(2014223715),uint256(1),uint256(257),uint256(10000),uint256(65),uint256(29),uint256(1532892064),uint256(1532892063),uint256(66),uint256(255),uint256(29),uint256(5),uint256(5),uint256(5),uint256(254),uint256(64),uint256(1338),uint256(27),uint256(4),uint256(6),uint256(1337),uint256(1336),uint256(6),uint256(1337),uint256(6),uint256(6),uint256(26),uint256(1336),uint256(6),uint256(1532892063),uint256(1532892063),uint256(2014223714),uint256(5),uint256(6),uint256(27),uint256(256),uint256(255),uint256(1532892064),uint256(29),uint256(64),uint256(1338),uint256(65),uint256(95),uint256(254),uint256(10001),uint256(1532892064),uint256(1),uint256(1532892064),uint256(2),uint256(26),uint256(1336),uint256(10001),uint256(10001),uint256(1),uint256(26),uint256(10000),uint256(2014223715),uint256(1336),uint256(254),uint256(1532892062),uint256(10000),uint256(257),uint256(1),uint256(1532892063),uint256(10001),uint256(97),uint256(95),uint256(10001),uint256(3),uint256(2),uint256(0),uint256(257),uint256(6),uint256(255),uint256(27),uint256(2014223715),uint256(255),uint256(26)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.184ZFullRedemption.setup": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setup() WHEN isSetUp!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.185ZFullRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[]) WHEN msg.sender==_owner,isSetUp==true,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[9],accounts[9]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[9],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: isSetUp == true",
            "parameters": [
              {
                "js": "[accounts[9],accounts[9]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.190ZFixedPriceTender.paymentTokensReady": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute paymentTokensReady() WHEN paymentReady!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.191ZFixedPriceTender.updateOfferEndTime": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateOfferEndTime(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newOfferEnd>=block.timestamp",
          "parameters": [
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+608",
              "sol": "block.timestamp+608"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+608",
                "sol": "block.timestamp+608"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: _newOfferEnd >= (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1",
                "sol": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.203ZFixedPriceTender.updatePaymentPerSecurity": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updatePaymentPerSecurity(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newPaymentPerSecurity>0",
          "parameters": [
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "1",
                "sol": "1"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: _newPaymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.208ZFixedPriceTender.updateTotalToRepurchase": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateTotalToRepurchase(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newTotalToRepurchase>=0",
          "parameters": [
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: _newTotalToRepurchase >= 0",
            "parameters": [
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.214ZFixedPriceTender.optInToTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optInToTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,paymentReady==true,_numberToTender>0",
          "parameters": [
            {
              "js": "2014223714",
              "sol": "2014223714"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: paymentReady == true",
            "parameters": [
              {
                "js": "2014223714",
                "sol": "2014223714"
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: _numberToTender > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.219ZFixedPriceTender.optOutOfTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optOutOfTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_numberToRemove>0",
          "parameters": [
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[1]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optOutOfTender(uint256) when NOT comply with: _numberToRemove > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[1]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.226ZFixedPriceTender.finaliseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finaliseTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=offerEndTime,nextTenderToAssess<orderedHolders.length,_batchSize>0",
          "parameters": [
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finaliseTender(uint256) when NOT comply with: _batchSize > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.232ZProxyFixedPriceTender.testrepurchaseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrepurchaseTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.233ZProxyFixedPriceTender.testreturnTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testreturnTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.235ZOnChainPayments.makePayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute makePayments(address[],uint256) WHEN msg.sender==_owner,_securityHolders.length>0,_paymentPerSecurity>0",
          "parameters": [
            {
              "js": "[accounts[9],accounts[7],accounts[4]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "254",
              "sol": "254"
            },
            {
              "js": "{from:accounts[3]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[9],accounts[7],accounts[4]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[3]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "[accounts[9],accounts[7],accounts[4]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[3]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.237ZOnChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,uint256,uint256) WHEN _timestamp!=0,_securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "6",
              "sol": "6"
            },
            {
              "js": "2014223715",
              "sol": "2014223715"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _timestamp != 0",
            "parameters": [
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "6",
                "sol": "6"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-12T18:13:31.238ZOnChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-12T18:13:31.240ZOnChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "171-187",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "{from:accounts[3]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "3",
                "sol": "3"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "3",
                "sol": "3"
              },
              {
                "js": "{from:accounts[3]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "174-187",
          "restrictions": [
            "_newValue > currentValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue>currentValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1336",
              "sol": "1336"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[3]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1336",
                "sol": "1336"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[3]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "2": {
        "branch": {
          "loc": "182-187",
          "restrictions": [
            "_newValue <= currentValue",
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue<=currentValue,currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "1337",
              "sol": "1337"
            },
            {
              "js": "{from:accounts[3]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "0",
                "sol": "0"
              },
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "{from:accounts[3]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
}