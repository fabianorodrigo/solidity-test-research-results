,{
  "2020-11-11T21:10:23.330ZPaymentTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "29",
                "sol": "29"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:10:29.724ZRedeemableTokenMock.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address,uint256) WHEN _initialAccount!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address,uint256) when NOT comply with: _initialAccount != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:10:35.967ZOffChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[7]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:10:42.370ZPartialRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[1]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[1]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:10:48.959ZOnChainPayments.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,IERC20,address) WHEN msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractPaymentTokenMock.address",
              "sol": "contractPaymentTokenMock"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,IERC20,address) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractPaymentTokenMock.address",
                "sol": "contractPaymentTokenMock"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:10:55.490ZFixedPriceTender.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(uint256,IERC20,IERC20,address,uint256,uint256) WHEN _paymentPerSecurity>0,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "1337",
              "sol": "1337"
            },
            {
              "js": "contractRedeemableToken.address",
              "sol": "contractRedeemableToken"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "9999",
              "sol": "9999"
            },
            {
              "js": "2014223715",
              "sol": "2014223715"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(uint256,IERC20,IERC20,address,uint256,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "1337",
                "sol": "1337"
              },
              {
                "js": "contractRedeemableToken.address",
                "sol": "contractRedeemableToken"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "9999",
                "sol": "9999"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:02.059ZFullRedemption.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,RedeemableToken,address,uint256) WHEN _paymentPerSecurity>0",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892063",
              "sol": "1532892063"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,RedeemableToken,address,uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:08.755ZOnChainVoting.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor(IERC20,address,uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<_endTime,_issuer!=0x0000000000000000000000000000000000000000,msg.sender==_owner,_issuer!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "contractRedeemableTokenMock.address",
              "sol": "contractRedeemableTokenMock"
            },
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+665",
              "sol": "block.timestamp+665"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp < _endTime",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
                "sol": "block.timestamp"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+665",
                "sol": "block.timestamp+665"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "accounts[6]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+665",
                "sol": "block.timestamp+665"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail constructor(IERC20,address,uint256) when NOT comply with: _issuer != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "contractRedeemableTokenMock.address",
                "sol": "contractRedeemableTokenMock"
              },
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+665",
                "sol": "block.timestamp+665"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.478ZRedeemableToken.setRedemption": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setRedemption(address) WHEN msg.sender==_owner,_redemption!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail setRedemption(address) when NOT comply with: _redemption != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.480ZRedeemableToken.redeemAllTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemAllTokens(address) WHEN msg.sender==redemption,msg.sender==_owner,balance>0",
          "parameters": [
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemAllTokens(address) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[2]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.483ZRedeemableToken.redeemPartialTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemPartialTokens(address,uint256) WHEN msg.sender==redemption,msg.sender==_owner",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == redemption",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemPartialTokens(address,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.487ZOffChainPayments.recordPayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute recordPayments(address[],uint256[],uint256[],bytes32[]) WHEN msg.sender==_owner,_securityHolders.length>0,_securityHolders.length==_offchainPaymentHashes.length,_securityHolders.length==_paymentTimestamps.length,_securityHolders.length==_paymentValues.length",
          "parameters": [
            {
              "js": "[accounts[2],accounts[9],accounts[4],accounts[3],accounts[3],accounts[4],accounts[7],accounts[0],accounts[4],accounts[7],accounts[6],accounts[3],accounts[9],accounts[7],accounts[0],accounts[7],accounts[6],accounts[2],accounts[8],accounts[6],accounts[1],accounts[7],accounts[5],accounts[0],accounts[9],accounts[7],accounts[4],accounts[3],accounts[2],accounts[7],accounts[6],accounts[0],accounts[2],accounts[3],accounts[0],accounts[7],accounts[3],accounts[7],accounts[9],accounts[3],accounts[5],accounts[3],accounts[4],accounts[0],accounts[8],accounts[0],accounts[4],accounts[2],accounts[3],accounts[8],accounts[7],accounts[3],accounts[9],accounts[3],accounts[9],accounts[1],accounts[6],accounts[9],accounts[4],accounts[0],accounts[5],accounts[9],accounts[3],accounts[8],accounts[7]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[2,64,256,65,0,257,3,4,2014223716,6,4,2014223715,9999,1338,66,10000,2014223714,1532892064,97,29,97,254,66,0,1336,9999,96,2,28,2014223715,28,97,1,1336,5,255,1532892064,1338,65,95,28,1532892062,9999,10000,1532892063,9999,64,97,1,255,29,64,2014223714,257,9999,10000,6,29,10001,1337,1532892063,9999,1338,1532892063,97]",
              "sol": "[uint256(2),uint256(64),uint256(256),uint256(65),uint256(0),uint256(257),uint256(3),uint256(4),uint256(2014223716),uint256(6),uint256(4),uint256(2014223715),uint256(9999),uint256(1338),uint256(66),uint256(10000),uint256(2014223714),uint256(1532892064),uint256(97),uint256(29),uint256(97),uint256(254),uint256(66),uint256(0),uint256(1336),uint256(9999),uint256(96),uint256(2),uint256(28),uint256(2014223715),uint256(28),uint256(97),uint256(1),uint256(1336),uint256(5),uint256(255),uint256(1532892064),uint256(1338),uint256(65),uint256(95),uint256(28),uint256(1532892062),uint256(9999),uint256(10000),uint256(1532892063),uint256(9999),uint256(64),uint256(97),uint256(1),uint256(255),uint256(29),uint256(64),uint256(2014223714),uint256(257),uint256(9999),uint256(10000),uint256(6),uint256(29),uint256(10001),uint256(1337),uint256(1532892063),uint256(9999),uint256(1338),uint256(1532892063),uint256(97)]"
            },
            {
              "js": "[10001,2014223715,1532892064,6,6,257,2014223715,2014223716,96,27,257,256,3,2014223715,96,66,65,95,6,1532892062,3,64,96,27,10001,4,2014223715,28,257,10000,28,6,257,26,66,1337,254,6,3,1532892064,2014223714,2014223714,1338,27,97,2,64,5,65,2014223715,3,256,64,2014223714,1,256,96,2014223714,29,256,66,10001,1532892064,26,28]",
              "sol": "[uint256(10001),uint256(2014223715),uint256(1532892064),uint256(6),uint256(6),uint256(257),uint256(2014223715),uint256(2014223716),uint256(96),uint256(27),uint256(257),uint256(256),uint256(3),uint256(2014223715),uint256(96),uint256(66),uint256(65),uint256(95),uint256(6),uint256(1532892062),uint256(3),uint256(64),uint256(96),uint256(27),uint256(10001),uint256(4),uint256(2014223715),uint256(28),uint256(257),uint256(10000),uint256(28),uint256(6),uint256(257),uint256(26),uint256(66),uint256(1337),uint256(254),uint256(6),uint256(3),uint256(1532892064),uint256(2014223714),uint256(2014223714),uint256(1338),uint256(27),uint256(97),uint256(2),uint256(64),uint256(5),uint256(65),uint256(2014223715),uint256(3),uint256(256),uint256(64),uint256(2014223714),uint256(1),uint256(256),uint256(96),uint256(2014223714),uint256(29),uint256(256),uint256(66),uint256(10001),uint256(1532892064),uint256(26),uint256(28)]"
            },
            {
              "js": "[[25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166],[40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150],[26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5],[200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133],[164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246],[237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38],[116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216],[202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180],[206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248],[35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74],[173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218],[234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222],[105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29],[220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176],[175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116],[146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62],[51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165],[134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48],[207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111],[185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30],[24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66],[228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192],[182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26],[57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98],[40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91],[253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231],[68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149],[203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58],[152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180],[40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239],[135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87],[119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87],[1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73],[148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222],[41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86],[167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6],[158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149],[33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221],[227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199],[253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175],[26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46],[46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227],[198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7],[200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225],[77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41],[224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201],[239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206],[58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79],[162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166],[117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69],[172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124],[131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201],[57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248],[121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196],[52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23],[136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150],[191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102],[54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24],[234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180],[229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111],[147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36],[30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23],[246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29],[241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209],[212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60]]",
              "sol": "[bytes32(stringToBytes32(\"25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166\")),bytes32(stringToBytes32(\"40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150\")),bytes32(stringToBytes32(\"26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5\")),bytes32(stringToBytes32(\"200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133\")),bytes32(stringToBytes32(\"164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246\")),bytes32(stringToBytes32(\"237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38\")),bytes32(stringToBytes32(\"116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216\")),bytes32(stringToBytes32(\"202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180\")),bytes32(stringToBytes32(\"206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248\")),bytes32(stringToBytes32(\"35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74\")),bytes32(stringToBytes32(\"173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218\")),bytes32(stringToBytes32(\"234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222\")),bytes32(stringToBytes32(\"105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29\")),bytes32(stringToBytes32(\"220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176\")),bytes32(stringToBytes32(\"175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116\")),bytes32(stringToBytes32(\"146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62\")),bytes32(stringToBytes32(\"51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165\")),bytes32(stringToBytes32(\"134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48\")),bytes32(stringToBytes32(\"207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111\")),bytes32(stringToBytes32(\"185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30\")),bytes32(stringToBytes32(\"24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66\")),bytes32(stringToBytes32(\"228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192\")),bytes32(stringToBytes32(\"182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26\")),bytes32(stringToBytes32(\"57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98\")),bytes32(stringToBytes32(\"40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91\")),bytes32(stringToBytes32(\"253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231\")),bytes32(stringToBytes32(\"68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149\")),bytes32(stringToBytes32(\"203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58\")),bytes32(stringToBytes32(\"152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180\")),bytes32(stringToBytes32(\"40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239\")),bytes32(stringToBytes32(\"135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87\")),bytes32(stringToBytes32(\"119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87\")),bytes32(stringToBytes32(\"1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73\")),bytes32(stringToBytes32(\"148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222\")),bytes32(stringToBytes32(\"41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86\")),bytes32(stringToBytes32(\"167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6\")),bytes32(stringToBytes32(\"158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149\")),bytes32(stringToBytes32(\"33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221\")),bytes32(stringToBytes32(\"227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199\")),bytes32(stringToBytes32(\"253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175\")),bytes32(stringToBytes32(\"26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46\")),bytes32(stringToBytes32(\"46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227\")),bytes32(stringToBytes32(\"198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7\")),bytes32(stringToBytes32(\"200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225\")),bytes32(stringToBytes32(\"77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41\")),bytes32(stringToBytes32(\"224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201\")),bytes32(stringToBytes32(\"239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206\")),bytes32(stringToBytes32(\"58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79\")),bytes32(stringToBytes32(\"162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166\")),bytes32(stringToBytes32(\"117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69\")),bytes32(stringToBytes32(\"172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124\")),bytes32(stringToBytes32(\"131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201\")),bytes32(stringToBytes32(\"57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248\")),bytes32(stringToBytes32(\"121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196\")),bytes32(stringToBytes32(\"52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23\")),bytes32(stringToBytes32(\"136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150\")),bytes32(stringToBytes32(\"191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102\")),bytes32(stringToBytes32(\"54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24\")),bytes32(stringToBytes32(\"234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180\")),bytes32(stringToBytes32(\"229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111\")),bytes32(stringToBytes32(\"147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36\")),bytes32(stringToBytes32(\"30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23\")),bytes32(stringToBytes32(\"246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29\")),bytes32(stringToBytes32(\"241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209\")),bytes32(stringToBytes32(\"212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60\"))]"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[2],accounts[9],accounts[4],accounts[3],accounts[3],accounts[4],accounts[7],accounts[0],accounts[4],accounts[7],accounts[6],accounts[3],accounts[9],accounts[7],accounts[0],accounts[7],accounts[6],accounts[2],accounts[8],accounts[6],accounts[1],accounts[7],accounts[5],accounts[0],accounts[9],accounts[7],accounts[4],accounts[3],accounts[2],accounts[7],accounts[6],accounts[0],accounts[2],accounts[3],accounts[0],accounts[7],accounts[3],accounts[7],accounts[9],accounts[3],accounts[5],accounts[3],accounts[4],accounts[0],accounts[8],accounts[0],accounts[4],accounts[2],accounts[3],accounts[8],accounts[7],accounts[3],accounts[9],accounts[3],accounts[9],accounts[1],accounts[6],accounts[9],accounts[4],accounts[0],accounts[5],accounts[9],accounts[3],accounts[8],accounts[7]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[2,64,256,65,0,257,3,4,2014223716,6,4,2014223715,9999,1338,66,10000,2014223714,1532892064,97,29,97,254,66,0,1336,9999,96,2,28,2014223715,28,97,1,1336,5,255,1532892064,1338,65,95,28,1532892062,9999,10000,1532892063,9999,64,97,1,255,29,64,2014223714,257,9999,10000,6,29,10001,1337,1532892063,9999,1338,1532892063,97]",
                "sol": "[uint256(2),uint256(64),uint256(256),uint256(65),uint256(0),uint256(257),uint256(3),uint256(4),uint256(2014223716),uint256(6),uint256(4),uint256(2014223715),uint256(9999),uint256(1338),uint256(66),uint256(10000),uint256(2014223714),uint256(1532892064),uint256(97),uint256(29),uint256(97),uint256(254),uint256(66),uint256(0),uint256(1336),uint256(9999),uint256(96),uint256(2),uint256(28),uint256(2014223715),uint256(28),uint256(97),uint256(1),uint256(1336),uint256(5),uint256(255),uint256(1532892064),uint256(1338),uint256(65),uint256(95),uint256(28),uint256(1532892062),uint256(9999),uint256(10000),uint256(1532892063),uint256(9999),uint256(64),uint256(97),uint256(1),uint256(255),uint256(29),uint256(64),uint256(2014223714),uint256(257),uint256(9999),uint256(10000),uint256(6),uint256(29),uint256(10001),uint256(1337),uint256(1532892063),uint256(9999),uint256(1338),uint256(1532892063),uint256(97)]"
              },
              {
                "js": "[10001,2014223715,1532892064,6,6,257,2014223715,2014223716,96,27,257,256,3,2014223715,96,66,65,95,6,1532892062,3,64,96,27,10001,4,2014223715,28,257,10000,28,6,257,26,66,1337,254,6,3,1532892064,2014223714,2014223714,1338,27,97,2,64,5,65,2014223715,3,256,64,2014223714,1,256,96,2014223714,29,256,66,10001,1532892064,26,28]",
                "sol": "[uint256(10001),uint256(2014223715),uint256(1532892064),uint256(6),uint256(6),uint256(257),uint256(2014223715),uint256(2014223716),uint256(96),uint256(27),uint256(257),uint256(256),uint256(3),uint256(2014223715),uint256(96),uint256(66),uint256(65),uint256(95),uint256(6),uint256(1532892062),uint256(3),uint256(64),uint256(96),uint256(27),uint256(10001),uint256(4),uint256(2014223715),uint256(28),uint256(257),uint256(10000),uint256(28),uint256(6),uint256(257),uint256(26),uint256(66),uint256(1337),uint256(254),uint256(6),uint256(3),uint256(1532892064),uint256(2014223714),uint256(2014223714),uint256(1338),uint256(27),uint256(97),uint256(2),uint256(64),uint256(5),uint256(65),uint256(2014223715),uint256(3),uint256(256),uint256(64),uint256(2014223714),uint256(1),uint256(256),uint256(96),uint256(2014223714),uint256(29),uint256(256),uint256(66),uint256(10001),uint256(1532892064),uint256(26),uint256(28)]"
              },
              {
                "js": "[[25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166],[40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150],[26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5],[200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133],[164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246],[237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38],[116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216],[202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180],[206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248],[35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74],[173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218],[234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222],[105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29],[220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176],[175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116],[146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62],[51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165],[134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48],[207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111],[185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30],[24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66],[228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192],[182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26],[57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98],[40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91],[253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231],[68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149],[203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58],[152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180],[40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239],[135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87],[119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87],[1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73],[148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222],[41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86],[167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6],[158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149],[33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221],[227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199],[253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175],[26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46],[46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227],[198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7],[200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225],[77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41],[224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201],[239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206],[58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79],[162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166],[117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69],[172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124],[131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201],[57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248],[121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196],[52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23],[136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150],[191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102],[54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24],[234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180],[229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111],[147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36],[30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23],[246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29],[241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209],[212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60]]",
                "sol": "[bytes32(stringToBytes32(\"25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166\")),bytes32(stringToBytes32(\"40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150\")),bytes32(stringToBytes32(\"26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5\")),bytes32(stringToBytes32(\"200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133\")),bytes32(stringToBytes32(\"164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246\")),bytes32(stringToBytes32(\"237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38\")),bytes32(stringToBytes32(\"116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216\")),bytes32(stringToBytes32(\"202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180\")),bytes32(stringToBytes32(\"206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248\")),bytes32(stringToBytes32(\"35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74\")),bytes32(stringToBytes32(\"173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218\")),bytes32(stringToBytes32(\"234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222\")),bytes32(stringToBytes32(\"105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29\")),bytes32(stringToBytes32(\"220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176\")),bytes32(stringToBytes32(\"175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116\")),bytes32(stringToBytes32(\"146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62\")),bytes32(stringToBytes32(\"51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165\")),bytes32(stringToBytes32(\"134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48\")),bytes32(stringToBytes32(\"207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111\")),bytes32(stringToBytes32(\"185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30\")),bytes32(stringToBytes32(\"24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66\")),bytes32(stringToBytes32(\"228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192\")),bytes32(stringToBytes32(\"182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26\")),bytes32(stringToBytes32(\"57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98\")),bytes32(stringToBytes32(\"40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91\")),bytes32(stringToBytes32(\"253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231\")),bytes32(stringToBytes32(\"68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149\")),bytes32(stringToBytes32(\"203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58\")),bytes32(stringToBytes32(\"152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180\")),bytes32(stringToBytes32(\"40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239\")),bytes32(stringToBytes32(\"135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87\")),bytes32(stringToBytes32(\"119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87\")),bytes32(stringToBytes32(\"1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73\")),bytes32(stringToBytes32(\"148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222\")),bytes32(stringToBytes32(\"41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86\")),bytes32(stringToBytes32(\"167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6\")),bytes32(stringToBytes32(\"158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149\")),bytes32(stringToBytes32(\"33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221\")),bytes32(stringToBytes32(\"227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199\")),bytes32(stringToBytes32(\"253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175\")),bytes32(stringToBytes32(\"26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46\")),bytes32(stringToBytes32(\"46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227\")),bytes32(stringToBytes32(\"198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7\")),bytes32(stringToBytes32(\"200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225\")),bytes32(stringToBytes32(\"77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41\")),bytes32(stringToBytes32(\"224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201\")),bytes32(stringToBytes32(\"239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206\")),bytes32(stringToBytes32(\"58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79\")),bytes32(stringToBytes32(\"162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166\")),bytes32(stringToBytes32(\"117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69\")),bytes32(stringToBytes32(\"172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124\")),bytes32(stringToBytes32(\"131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201\")),bytes32(stringToBytes32(\"57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248\")),bytes32(stringToBytes32(\"121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196\")),bytes32(stringToBytes32(\"52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23\")),bytes32(stringToBytes32(\"136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150\")),bytes32(stringToBytes32(\"191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102\")),bytes32(stringToBytes32(\"54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24\")),bytes32(stringToBytes32(\"234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180\")),bytes32(stringToBytes32(\"229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111\")),bytes32(stringToBytes32(\"147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36\")),bytes32(stringToBytes32(\"30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23\")),bytes32(stringToBytes32(\"246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29\")),bytes32(stringToBytes32(\"241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209\")),bytes32(stringToBytes32(\"212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[2,64,256,65,0,257,3,4,2014223716,6,4,2014223715,9999,1338,66,10000,2014223714,1532892064,97,29,97,254,66,0,1336,9999,96,2,28,2014223715,28,97,1,1336,5,255,1532892064,1338,65,95,28,1532892062,9999,10000,1532892063,9999,64,97,1,255,29,64,2014223714,257,9999,10000,6,29,10001,1337,1532892063,9999,1338,1532892063,97]",
                "sol": "[uint256(2),uint256(64),uint256(256),uint256(65),uint256(0),uint256(257),uint256(3),uint256(4),uint256(2014223716),uint256(6),uint256(4),uint256(2014223715),uint256(9999),uint256(1338),uint256(66),uint256(10000),uint256(2014223714),uint256(1532892064),uint256(97),uint256(29),uint256(97),uint256(254),uint256(66),uint256(0),uint256(1336),uint256(9999),uint256(96),uint256(2),uint256(28),uint256(2014223715),uint256(28),uint256(97),uint256(1),uint256(1336),uint256(5),uint256(255),uint256(1532892064),uint256(1338),uint256(65),uint256(95),uint256(28),uint256(1532892062),uint256(9999),uint256(10000),uint256(1532892063),uint256(9999),uint256(64),uint256(97),uint256(1),uint256(255),uint256(29),uint256(64),uint256(2014223714),uint256(257),uint256(9999),uint256(10000),uint256(6),uint256(29),uint256(10001),uint256(1337),uint256(1532892063),uint256(9999),uint256(1338),uint256(1532892063),uint256(97)]"
              },
              {
                "js": "[10001,2014223715,1532892064,6,6,257,2014223715,2014223716,96,27,257,256,3,2014223715,96,66,65,95,6,1532892062,3,64,96,27,10001,4,2014223715,28,257,10000,28,6,257,26,66,1337,254,6,3,1532892064,2014223714,2014223714,1338,27,97,2,64,5,65,2014223715,3,256,64,2014223714,1,256,96,2014223714,29,256,66,10001,1532892064,26,28]",
                "sol": "[uint256(10001),uint256(2014223715),uint256(1532892064),uint256(6),uint256(6),uint256(257),uint256(2014223715),uint256(2014223716),uint256(96),uint256(27),uint256(257),uint256(256),uint256(3),uint256(2014223715),uint256(96),uint256(66),uint256(65),uint256(95),uint256(6),uint256(1532892062),uint256(3),uint256(64),uint256(96),uint256(27),uint256(10001),uint256(4),uint256(2014223715),uint256(28),uint256(257),uint256(10000),uint256(28),uint256(6),uint256(257),uint256(26),uint256(66),uint256(1337),uint256(254),uint256(6),uint256(3),uint256(1532892064),uint256(2014223714),uint256(2014223714),uint256(1338),uint256(27),uint256(97),uint256(2),uint256(64),uint256(5),uint256(65),uint256(2014223715),uint256(3),uint256(256),uint256(64),uint256(2014223714),uint256(1),uint256(256),uint256(96),uint256(2014223714),uint256(29),uint256(256),uint256(66),uint256(10001),uint256(1532892064),uint256(26),uint256(28)]"
              },
              {
                "js": "[[25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166],[40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150],[26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5],[200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133],[164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246],[237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38],[116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216],[202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180],[206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248],[35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74],[173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218],[234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222],[105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29],[220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176],[175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116],[146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62],[51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165],[134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48],[207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111],[185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30],[24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66],[228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192],[182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26],[57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98],[40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91],[253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231],[68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149],[203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58],[152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180],[40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239],[135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87],[119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87],[1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73],[148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222],[41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86],[167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6],[158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149],[33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221],[227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199],[253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175],[26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46],[46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227],[198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7],[200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225],[77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41],[224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201],[239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206],[58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79],[162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166],[117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69],[172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124],[131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201],[57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248],[121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196],[52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23],[136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150],[191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102],[54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24],[234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180],[229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111],[147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36],[30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23],[246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29],[241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209],[212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60]]",
                "sol": "[bytes32(stringToBytes32(\"25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166\")),bytes32(stringToBytes32(\"40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150\")),bytes32(stringToBytes32(\"26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5\")),bytes32(stringToBytes32(\"200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133\")),bytes32(stringToBytes32(\"164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246\")),bytes32(stringToBytes32(\"237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38\")),bytes32(stringToBytes32(\"116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216\")),bytes32(stringToBytes32(\"202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180\")),bytes32(stringToBytes32(\"206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248\")),bytes32(stringToBytes32(\"35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74\")),bytes32(stringToBytes32(\"173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218\")),bytes32(stringToBytes32(\"234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222\")),bytes32(stringToBytes32(\"105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29\")),bytes32(stringToBytes32(\"220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176\")),bytes32(stringToBytes32(\"175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116\")),bytes32(stringToBytes32(\"146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62\")),bytes32(stringToBytes32(\"51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165\")),bytes32(stringToBytes32(\"134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48\")),bytes32(stringToBytes32(\"207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111\")),bytes32(stringToBytes32(\"185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30\")),bytes32(stringToBytes32(\"24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66\")),bytes32(stringToBytes32(\"228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192\")),bytes32(stringToBytes32(\"182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26\")),bytes32(stringToBytes32(\"57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98\")),bytes32(stringToBytes32(\"40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91\")),bytes32(stringToBytes32(\"253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231\")),bytes32(stringToBytes32(\"68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149\")),bytes32(stringToBytes32(\"203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58\")),bytes32(stringToBytes32(\"152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180\")),bytes32(stringToBytes32(\"40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239\")),bytes32(stringToBytes32(\"135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87\")),bytes32(stringToBytes32(\"119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87\")),bytes32(stringToBytes32(\"1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73\")),bytes32(stringToBytes32(\"148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222\")),bytes32(stringToBytes32(\"41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86\")),bytes32(stringToBytes32(\"167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6\")),bytes32(stringToBytes32(\"158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149\")),bytes32(stringToBytes32(\"33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221\")),bytes32(stringToBytes32(\"227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199\")),bytes32(stringToBytes32(\"253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175\")),bytes32(stringToBytes32(\"26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46\")),bytes32(stringToBytes32(\"46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227\")),bytes32(stringToBytes32(\"198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7\")),bytes32(stringToBytes32(\"200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225\")),bytes32(stringToBytes32(\"77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41\")),bytes32(stringToBytes32(\"224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201\")),bytes32(stringToBytes32(\"239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206\")),bytes32(stringToBytes32(\"58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79\")),bytes32(stringToBytes32(\"162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166\")),bytes32(stringToBytes32(\"117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69\")),bytes32(stringToBytes32(\"172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124\")),bytes32(stringToBytes32(\"131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201\")),bytes32(stringToBytes32(\"57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248\")),bytes32(stringToBytes32(\"121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196\")),bytes32(stringToBytes32(\"52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23\")),bytes32(stringToBytes32(\"136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150\")),bytes32(stringToBytes32(\"191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102\")),bytes32(stringToBytes32(\"54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24\")),bytes32(stringToBytes32(\"234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180\")),bytes32(stringToBytes32(\"229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111\")),bytes32(stringToBytes32(\"147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36\")),bytes32(stringToBytes32(\"30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23\")),bytes32(stringToBytes32(\"246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29\")),bytes32(stringToBytes32(\"241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209\")),bytes32(stringToBytes32(\"212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60\"))]"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _offchainPaymentHashes.length",
            "parameters": [
              {
                "js": "[accounts[3],accounts[5],accounts[2],accounts[1],accounts[0],accounts[4],accounts[8],accounts[9],accounts[3],accounts[2],accounts[0],accounts[3],accounts[0],accounts[3],accounts[2],accounts[0],accounts[8],accounts[1],accounts[9],accounts[8],accounts[8],accounts[5],accounts[7],accounts[5],accounts[8],accounts[9],accounts[1],accounts[5],accounts[5],accounts[0],accounts[5],accounts[8],accounts[3],accounts[0],accounts[4],accounts[2],accounts[6],accounts[4],accounts[7],accounts[0],accounts[0],accounts[2],accounts[1],accounts[9],accounts[4],accounts[5],accounts[0],accounts[6],accounts[2],accounts[2],accounts[8],accounts[2],accounts[7],accounts[8],accounts[5],accounts[3],accounts[5],accounts[5],accounts[3],accounts[7],accounts[5],accounts[6],accounts[2],accounts[9],accounts[5],accounts[5]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[2,64,256,65,0,257,3,4,2014223716,6,4,2014223715,9999,1338,66,10000,2014223714,1532892064,97,29,97,254,66,0,1336,9999,96,2,28,2014223715,28,97,1,1336,5,255,1532892064,1338,65,95,28,1532892062,9999,10000,1532892063,9999,64,97,1,255,29,64,2014223714,257,9999,10000,6,29,10001,1337,1532892063,9999,1338,1532892063,97]",
                "sol": "[uint256(2),uint256(64),uint256(256),uint256(65),uint256(0),uint256(257),uint256(3),uint256(4),uint256(2014223716),uint256(6),uint256(4),uint256(2014223715),uint256(9999),uint256(1338),uint256(66),uint256(10000),uint256(2014223714),uint256(1532892064),uint256(97),uint256(29),uint256(97),uint256(254),uint256(66),uint256(0),uint256(1336),uint256(9999),uint256(96),uint256(2),uint256(28),uint256(2014223715),uint256(28),uint256(97),uint256(1),uint256(1336),uint256(5),uint256(255),uint256(1532892064),uint256(1338),uint256(65),uint256(95),uint256(28),uint256(1532892062),uint256(9999),uint256(10000),uint256(1532892063),uint256(9999),uint256(64),uint256(97),uint256(1),uint256(255),uint256(29),uint256(64),uint256(2014223714),uint256(257),uint256(9999),uint256(10000),uint256(6),uint256(29),uint256(10001),uint256(1337),uint256(1532892063),uint256(9999),uint256(1338),uint256(1532892063),uint256(97)]"
              },
              {
                "js": "[10001,2014223715,1532892064,6,6,257,2014223715,2014223716,96,27,257,256,3,2014223715,96,66,65,95,6,1532892062,3,64,96,27,10001,4,2014223715,28,257,10000,28,6,257,26,66,1337,254,6,3,1532892064,2014223714,2014223714,1338,27,97,2,64,5,65,2014223715,3,256,64,2014223714,1,256,96,2014223714,29,256,66,10001,1532892064,26,28]",
                "sol": "[uint256(10001),uint256(2014223715),uint256(1532892064),uint256(6),uint256(6),uint256(257),uint256(2014223715),uint256(2014223716),uint256(96),uint256(27),uint256(257),uint256(256),uint256(3),uint256(2014223715),uint256(96),uint256(66),uint256(65),uint256(95),uint256(6),uint256(1532892062),uint256(3),uint256(64),uint256(96),uint256(27),uint256(10001),uint256(4),uint256(2014223715),uint256(28),uint256(257),uint256(10000),uint256(28),uint256(6),uint256(257),uint256(26),uint256(66),uint256(1337),uint256(254),uint256(6),uint256(3),uint256(1532892064),uint256(2014223714),uint256(2014223714),uint256(1338),uint256(27),uint256(97),uint256(2),uint256(64),uint256(5),uint256(65),uint256(2014223715),uint256(3),uint256(256),uint256(64),uint256(2014223714),uint256(1),uint256(256),uint256(96),uint256(2014223714),uint256(29),uint256(256),uint256(66),uint256(10001),uint256(1532892064),uint256(26),uint256(28)]"
              },
              {
                "js": "[[25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166],[40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150],[26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5],[200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133],[164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246],[237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38],[116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216],[202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180],[206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248],[35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74],[173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218],[234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222],[105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29],[220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176],[175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116],[146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62],[51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165],[134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48],[207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111],[185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30],[24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66],[228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192],[182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26],[57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98],[40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91],[253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231],[68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149],[203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58],[152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180],[40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239],[135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87],[119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87],[1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73],[148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222],[41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86],[167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6],[158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149],[33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221],[227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199],[253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175],[26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46],[46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227],[198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7],[200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225],[77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41],[224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201],[239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206],[58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79],[162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166],[117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69],[172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124],[131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201],[57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248],[121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196],[52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23],[136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150],[191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102],[54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24],[234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180],[229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111],[147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36],[30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23],[246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29],[241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209],[212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60]]",
                "sol": "[bytes32(stringToBytes32(\"25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166\")),bytes32(stringToBytes32(\"40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150\")),bytes32(stringToBytes32(\"26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5\")),bytes32(stringToBytes32(\"200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133\")),bytes32(stringToBytes32(\"164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246\")),bytes32(stringToBytes32(\"237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38\")),bytes32(stringToBytes32(\"116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216\")),bytes32(stringToBytes32(\"202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180\")),bytes32(stringToBytes32(\"206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248\")),bytes32(stringToBytes32(\"35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74\")),bytes32(stringToBytes32(\"173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218\")),bytes32(stringToBytes32(\"234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222\")),bytes32(stringToBytes32(\"105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29\")),bytes32(stringToBytes32(\"220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176\")),bytes32(stringToBytes32(\"175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116\")),bytes32(stringToBytes32(\"146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62\")),bytes32(stringToBytes32(\"51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165\")),bytes32(stringToBytes32(\"134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48\")),bytes32(stringToBytes32(\"207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111\")),bytes32(stringToBytes32(\"185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30\")),bytes32(stringToBytes32(\"24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66\")),bytes32(stringToBytes32(\"228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192\")),bytes32(stringToBytes32(\"182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26\")),bytes32(stringToBytes32(\"57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98\")),bytes32(stringToBytes32(\"40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91\")),bytes32(stringToBytes32(\"253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231\")),bytes32(stringToBytes32(\"68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149\")),bytes32(stringToBytes32(\"203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58\")),bytes32(stringToBytes32(\"152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180\")),bytes32(stringToBytes32(\"40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239\")),bytes32(stringToBytes32(\"135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87\")),bytes32(stringToBytes32(\"119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87\")),bytes32(stringToBytes32(\"1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73\")),bytes32(stringToBytes32(\"148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222\")),bytes32(stringToBytes32(\"41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86\")),bytes32(stringToBytes32(\"167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6\")),bytes32(stringToBytes32(\"158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149\")),bytes32(stringToBytes32(\"33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221\")),bytes32(stringToBytes32(\"227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199\")),bytes32(stringToBytes32(\"253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175\")),bytes32(stringToBytes32(\"26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46\")),bytes32(stringToBytes32(\"46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227\")),bytes32(stringToBytes32(\"198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7\")),bytes32(stringToBytes32(\"200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225\")),bytes32(stringToBytes32(\"77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41\")),bytes32(stringToBytes32(\"224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201\")),bytes32(stringToBytes32(\"239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206\")),bytes32(stringToBytes32(\"58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79\")),bytes32(stringToBytes32(\"162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166\")),bytes32(stringToBytes32(\"117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69\")),bytes32(stringToBytes32(\"172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124\")),bytes32(stringToBytes32(\"131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201\")),bytes32(stringToBytes32(\"57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248\")),bytes32(stringToBytes32(\"121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196\")),bytes32(stringToBytes32(\"52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23\")),bytes32(stringToBytes32(\"136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150\")),bytes32(stringToBytes32(\"191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102\")),bytes32(stringToBytes32(\"54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24\")),bytes32(stringToBytes32(\"234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180\")),bytes32(stringToBytes32(\"229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111\")),bytes32(stringToBytes32(\"147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36\")),bytes32(stringToBytes32(\"30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23\")),bytes32(stringToBytes32(\"246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29\")),bytes32(stringToBytes32(\"241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209\")),bytes32(stringToBytes32(\"212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60\"))]"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentTimestamps.length",
            "parameters": [
              {
                "js": "[accounts[9],accounts[6],accounts[1],accounts[4],accounts[7],accounts[4],accounts[3],accounts[9],accounts[6],accounts[5],accounts[1],accounts[4],accounts[0],accounts[5],accounts[0],accounts[3],accounts[0],accounts[7],accounts[0],accounts[0],accounts[1],accounts[7],accounts[6],accounts[6],accounts[7],accounts[5],accounts[9],accounts[2],accounts[7],accounts[7],accounts[9],accounts[6],accounts[6],accounts[7],accounts[2],accounts[4],accounts[1],accounts[9],accounts[5],accounts[2],accounts[2],accounts[1],accounts[8],accounts[9],accounts[6],accounts[2],accounts[7],accounts[2],accounts[9],accounts[5],accounts[2],accounts[2],accounts[8],accounts[1],accounts[3],accounts[6],accounts[7],accounts[0],accounts[4],accounts[9],accounts[6],accounts[1],accounts[7],accounts[2],accounts[2],accounts[0]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[2,64,256,65,0,257,3,4,2014223716,6,4,2014223715,9999,1338,66,10000,2014223714,1532892064,97,29,97,254,66,0,1336,9999,96,2,28,2014223715,28,97,1,1336,5,255,1532892064,1338,65,95,28,1532892062,9999,10000,1532892063,9999,64,97,1,255,29,64,2014223714,257,9999,10000,6,29,10001,1337,1532892063,9999,1338,1532892063,97]",
                "sol": "[uint256(2),uint256(64),uint256(256),uint256(65),uint256(0),uint256(257),uint256(3),uint256(4),uint256(2014223716),uint256(6),uint256(4),uint256(2014223715),uint256(9999),uint256(1338),uint256(66),uint256(10000),uint256(2014223714),uint256(1532892064),uint256(97),uint256(29),uint256(97),uint256(254),uint256(66),uint256(0),uint256(1336),uint256(9999),uint256(96),uint256(2),uint256(28),uint256(2014223715),uint256(28),uint256(97),uint256(1),uint256(1336),uint256(5),uint256(255),uint256(1532892064),uint256(1338),uint256(65),uint256(95),uint256(28),uint256(1532892062),uint256(9999),uint256(10000),uint256(1532892063),uint256(9999),uint256(64),uint256(97),uint256(1),uint256(255),uint256(29),uint256(64),uint256(2014223714),uint256(257),uint256(9999),uint256(10000),uint256(6),uint256(29),uint256(10001),uint256(1337),uint256(1532892063),uint256(9999),uint256(1338),uint256(1532892063),uint256(97)]"
              },
              {
                "js": "[10001,2014223715,1532892064,6,6,257,2014223715,2014223716,96,27,257,256,3,2014223715,96,66,65,95,6,1532892062,3,64,96,27,10001,4,2014223715,28,257,10000,28,6,257,26,66,1337,254,6,3,1532892064,2014223714,2014223714,1338,27,97,2,64,5,65,2014223715,3,256,64,2014223714,1,256,96,2014223714,29,256,66,10001,1532892064,26,28]",
                "sol": "[uint256(10001),uint256(2014223715),uint256(1532892064),uint256(6),uint256(6),uint256(257),uint256(2014223715),uint256(2014223716),uint256(96),uint256(27),uint256(257),uint256(256),uint256(3),uint256(2014223715),uint256(96),uint256(66),uint256(65),uint256(95),uint256(6),uint256(1532892062),uint256(3),uint256(64),uint256(96),uint256(27),uint256(10001),uint256(4),uint256(2014223715),uint256(28),uint256(257),uint256(10000),uint256(28),uint256(6),uint256(257),uint256(26),uint256(66),uint256(1337),uint256(254),uint256(6),uint256(3),uint256(1532892064),uint256(2014223714),uint256(2014223714),uint256(1338),uint256(27),uint256(97),uint256(2),uint256(64),uint256(5),uint256(65),uint256(2014223715),uint256(3),uint256(256),uint256(64),uint256(2014223714),uint256(1),uint256(256),uint256(96),uint256(2014223714),uint256(29),uint256(256),uint256(66),uint256(10001),uint256(1532892064),uint256(26),uint256(28)]"
              },
              {
                "js": "[[25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166],[40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150],[26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5],[200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133],[164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246],[237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38],[116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216],[202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180],[206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248],[35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74],[173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218],[234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222],[105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29],[220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176],[175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116],[146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62],[51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165],[134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48],[207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111],[185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30],[24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66],[228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192],[182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26],[57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98],[40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91],[253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231],[68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149],[203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58],[152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180],[40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239],[135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87],[119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87],[1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73],[148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222],[41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86],[167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6],[158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149],[33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221],[227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199],[253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175],[26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46],[46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227],[198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7],[200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225],[77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41],[224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201],[239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206],[58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79],[162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166],[117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69],[172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124],[131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201],[57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248],[121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196],[52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23],[136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150],[191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102],[54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24],[234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180],[229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111],[147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36],[30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23],[246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29],[241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209],[212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60]]",
                "sol": "[bytes32(stringToBytes32(\"25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166\")),bytes32(stringToBytes32(\"40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150\")),bytes32(stringToBytes32(\"26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5\")),bytes32(stringToBytes32(\"200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133\")),bytes32(stringToBytes32(\"164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246\")),bytes32(stringToBytes32(\"237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38\")),bytes32(stringToBytes32(\"116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216\")),bytes32(stringToBytes32(\"202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180\")),bytes32(stringToBytes32(\"206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248\")),bytes32(stringToBytes32(\"35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74\")),bytes32(stringToBytes32(\"173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218\")),bytes32(stringToBytes32(\"234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222\")),bytes32(stringToBytes32(\"105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29\")),bytes32(stringToBytes32(\"220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176\")),bytes32(stringToBytes32(\"175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116\")),bytes32(stringToBytes32(\"146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62\")),bytes32(stringToBytes32(\"51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165\")),bytes32(stringToBytes32(\"134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48\")),bytes32(stringToBytes32(\"207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111\")),bytes32(stringToBytes32(\"185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30\")),bytes32(stringToBytes32(\"24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66\")),bytes32(stringToBytes32(\"228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192\")),bytes32(stringToBytes32(\"182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26\")),bytes32(stringToBytes32(\"57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98\")),bytes32(stringToBytes32(\"40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91\")),bytes32(stringToBytes32(\"253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231\")),bytes32(stringToBytes32(\"68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149\")),bytes32(stringToBytes32(\"203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58\")),bytes32(stringToBytes32(\"152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180\")),bytes32(stringToBytes32(\"40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239\")),bytes32(stringToBytes32(\"135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87\")),bytes32(stringToBytes32(\"119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87\")),bytes32(stringToBytes32(\"1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73\")),bytes32(stringToBytes32(\"148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222\")),bytes32(stringToBytes32(\"41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86\")),bytes32(stringToBytes32(\"167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6\")),bytes32(stringToBytes32(\"158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149\")),bytes32(stringToBytes32(\"33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221\")),bytes32(stringToBytes32(\"227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199\")),bytes32(stringToBytes32(\"253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175\")),bytes32(stringToBytes32(\"26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46\")),bytes32(stringToBytes32(\"46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227\")),bytes32(stringToBytes32(\"198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7\")),bytes32(stringToBytes32(\"200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225\")),bytes32(stringToBytes32(\"77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41\")),bytes32(stringToBytes32(\"224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201\")),bytes32(stringToBytes32(\"239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206\")),bytes32(stringToBytes32(\"58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79\")),bytes32(stringToBytes32(\"162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166\")),bytes32(stringToBytes32(\"117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69\")),bytes32(stringToBytes32(\"172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124\")),bytes32(stringToBytes32(\"131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201\")),bytes32(stringToBytes32(\"57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248\")),bytes32(stringToBytes32(\"121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196\")),bytes32(stringToBytes32(\"52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23\")),bytes32(stringToBytes32(\"136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150\")),bytes32(stringToBytes32(\"191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102\")),bytes32(stringToBytes32(\"54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24\")),bytes32(stringToBytes32(\"234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180\")),bytes32(stringToBytes32(\"229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111\")),bytes32(stringToBytes32(\"147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36\")),bytes32(stringToBytes32(\"30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23\")),bytes32(stringToBytes32(\"246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29\")),bytes32(stringToBytes32(\"241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209\")),bytes32(stringToBytes32(\"212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60\"))]"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail recordPayments(address[],uint256[],uint256[],bytes32[]) when NOT comply with: _securityHolders.length == _paymentValues.length",
            "parameters": [
              {
                "js": "[accounts[7],accounts[8],accounts[1],accounts[8],accounts[8],accounts[3],accounts[0],accounts[8],accounts[5],accounts[2],accounts[9],accounts[6],accounts[8],accounts[4],accounts[6],accounts[8],accounts[3],accounts[5],accounts[1],accounts[1],accounts[2],accounts[3],accounts[6],accounts[5],accounts[9],accounts[5],accounts[2],accounts[4],accounts[8],accounts[0],accounts[8],accounts[5],accounts[9],accounts[1],accounts[8],accounts[5],accounts[8],accounts[5],accounts[8],accounts[8],accounts[3],accounts[9],accounts[0],accounts[3],accounts[7],accounts[3],accounts[6],accounts[2],accounts[1],accounts[1],accounts[4],accounts[2],accounts[4],accounts[0],accounts[2],accounts[4],accounts[9],accounts[2],accounts[0],accounts[3],accounts[0],accounts[4],accounts[8],accounts[9],accounts[3],accounts[8]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[2,64,256,65,0,257,3,4,2014223716,6,4,2014223715,9999,1338,66,10000,2014223714,1532892064,97,29,97,254,66,0,1336,9999,96,2,28,2014223715,28,97,1,1336,5,255,1532892064,1338,65,95,28,1532892062,9999,10000,1532892063,9999,64,97,1,255,29,64,2014223714,257,9999,10000,6,29,10001,1337,1532892063,9999,1338,1532892063,97]",
                "sol": "[uint256(2),uint256(64),uint256(256),uint256(65),uint256(0),uint256(257),uint256(3),uint256(4),uint256(2014223716),uint256(6),uint256(4),uint256(2014223715),uint256(9999),uint256(1338),uint256(66),uint256(10000),uint256(2014223714),uint256(1532892064),uint256(97),uint256(29),uint256(97),uint256(254),uint256(66),uint256(0),uint256(1336),uint256(9999),uint256(96),uint256(2),uint256(28),uint256(2014223715),uint256(28),uint256(97),uint256(1),uint256(1336),uint256(5),uint256(255),uint256(1532892064),uint256(1338),uint256(65),uint256(95),uint256(28),uint256(1532892062),uint256(9999),uint256(10000),uint256(1532892063),uint256(9999),uint256(64),uint256(97),uint256(1),uint256(255),uint256(29),uint256(64),uint256(2014223714),uint256(257),uint256(9999),uint256(10000),uint256(6),uint256(29),uint256(10001),uint256(1337),uint256(1532892063),uint256(9999),uint256(1338),uint256(1532892063),uint256(97)]"
              },
              {
                "js": "[10001,2014223715,1532892064,6,6,257,2014223715,2014223716,96,27,257,256,3,2014223715,96,66,65,95,6,1532892062,3,64,96,27,10001,4,2014223715,28,257,10000,28,6,257,26,66,1337,254,6,3,1532892064,2014223714,2014223714,1338,27,97,2,64,5,65,2014223715,3,256,64,2014223714,1,256,96,2014223714,29,256,66,10001,1532892064,26,28]",
                "sol": "[uint256(10001),uint256(2014223715),uint256(1532892064),uint256(6),uint256(6),uint256(257),uint256(2014223715),uint256(2014223716),uint256(96),uint256(27),uint256(257),uint256(256),uint256(3),uint256(2014223715),uint256(96),uint256(66),uint256(65),uint256(95),uint256(6),uint256(1532892062),uint256(3),uint256(64),uint256(96),uint256(27),uint256(10001),uint256(4),uint256(2014223715),uint256(28),uint256(257),uint256(10000),uint256(28),uint256(6),uint256(257),uint256(26),uint256(66),uint256(1337),uint256(254),uint256(6),uint256(3),uint256(1532892064),uint256(2014223714),uint256(2014223714),uint256(1338),uint256(27),uint256(97),uint256(2),uint256(64),uint256(5),uint256(65),uint256(2014223715),uint256(3),uint256(256),uint256(64),uint256(2014223714),uint256(1),uint256(256),uint256(96),uint256(2014223714),uint256(29),uint256(256),uint256(66),uint256(10001),uint256(1532892064),uint256(26),uint256(28)]"
              },
              {
                "js": "[[25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166],[40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150],[26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5],[200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133],[164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246],[237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38],[116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216],[202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180],[206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248],[35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74],[173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218],[234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222],[105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29],[220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176],[175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116],[146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62],[51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165],[134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48],[207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111],[185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30],[24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66],[228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192],[182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26],[57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98],[40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91],[253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231],[68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149],[203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58],[152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180],[40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239],[135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87],[119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87],[1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73],[148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222],[41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86],[167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6],[158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149],[33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221],[227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199],[253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175],[26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46],[46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227],[198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7],[200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225],[77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41],[224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201],[239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206],[58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79],[162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166],[117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69],[172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124],[131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201],[57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248],[121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196],[52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23],[136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150],[191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102],[54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24],[234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180],[229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111],[147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36],[30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23],[246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29],[241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209],[212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60]]",
                "sol": "[bytes32(stringToBytes32(\"25,144,227,4,186,174,189,232,200,119,214,174,245,229,227,3,189,98,173,236,228,85,13,69,117,197,221,38,85,85,113,166\")),bytes32(stringToBytes32(\"40,242,8,207,246,165,65,47,19,210,22,60,29,153,0,141,209,236,160,201,174,75,105,174,106,76,209,115,148,73,231,150\")),bytes32(stringToBytes32(\"26,55,120,204,150,238,208,66,90,182,248,185,22,245,115,41,237,36,183,107,128,186,210,47,62,206,1,35,221,214,244,5\")),bytes32(stringToBytes32(\"200,89,104,53,139,23,254,136,245,109,122,240,58,107,179,7,199,225,136,111,224,134,19,20,99,68,125,22,150,126,235,133\")),bytes32(stringToBytes32(\"164,153,208,155,209,91,229,241,33,216,13,44,245,43,243,199,36,248,155,42,108,13,106,143,182,58,69,188,149,152,8,246\")),bytes32(stringToBytes32(\"237,88,127,151,60,246,11,174,5,153,164,1,189,8,211,245,39,195,64,41,252,173,40,186,158,56,115,172,206,217,34,38\")),bytes32(stringToBytes32(\"116,35,232,85,228,247,76,133,192,180,221,34,226,94,151,139,144,203,247,246,88,75,17,96,117,245,150,221,60,12,34,216\")),bytes32(stringToBytes32(\"202,100,106,138,7,14,112,220,0,193,23,153,56,141,241,252,62,86,34,168,58,21,212,72,165,58,41,200,135,85,102,180\")),bytes32(stringToBytes32(\"206,137,174,43,254,243,247,24,97,109,60,110,9,205,250,252,69,103,217,13,246,115,44,36,86,206,166,186,236,25,14,248\")),bytes32(stringToBytes32(\"35,64,187,161,205,246,108,194,14,59,72,60,9,136,179,111,48,21,155,165,91,247,33,79,35,73,212,151,218,136,79,74\")),bytes32(stringToBytes32(\"173,195,68,62,197,52,205,37,195,161,172,89,83,68,165,239,255,3,35,28,165,109,220,241,168,165,189,215,166,25,7,218\")),bytes32(stringToBytes32(\"234,242,40,187,89,27,26,198,118,242,253,162,255,149,222,34,100,74,164,100,179,108,119,33,248,104,169,10,31,104,14,222\")),bytes32(stringToBytes32(\"105,163,226,140,143,96,139,67,21,124,92,52,248,86,73,45,175,121,230,206,102,213,32,214,19,186,234,189,253,75,159,29\")),bytes32(stringToBytes32(\"220,64,182,11,158,254,231,47,16,202,92,104,80,90,134,176,110,6,153,169,13,37,108,30,153,214,245,158,254,35,87,176\")),bytes32(stringToBytes32(\"175,230,113,244,42,0,249,182,176,178,58,41,216,90,94,237,18,250,50,223,37,230,181,94,91,107,100,33,31,82,103,116\")),bytes32(stringToBytes32(\"146,230,143,25,17,232,67,157,170,100,246,61,134,160,242,66,79,61,184,60,64,171,147,193,174,133,111,115,159,155,126,62\")),bytes32(stringToBytes32(\"51,110,231,228,94,117,64,161,70,107,52,110,121,140,7,52,221,203,163,247,136,91,162,94,146,129,120,56,1,171,151,165\")),bytes32(stringToBytes32(\"134,173,193,87,147,2,212,202,19,59,89,93,230,102,182,108,152,242,115,34,216,3,232,218,205,140,15,141,2,186,224,48\")),bytes32(stringToBytes32(\"207,176,177,205,252,21,230,192,170,120,134,59,253,151,238,245,66,118,227,99,113,47,243,210,16,251,73,215,16,197,138,111\")),bytes32(stringToBytes32(\"185,161,199,161,217,139,46,168,156,12,25,38,168,240,199,111,46,183,12,153,16,190,105,147,166,117,152,190,112,47,127,30\")),bytes32(stringToBytes32(\"24,174,90,70,210,84,8,9,114,108,191,157,35,3,130,221,121,210,205,225,179,130,242,10,63,250,113,240,120,112,233,66\")),bytes32(stringToBytes32(\"228,212,122,71,68,114,41,26,229,70,185,227,201,92,109,103,41,57,27,148,20,169,165,79,13,98,134,149,146,66,226,192\")),bytes32(stringToBytes32(\"182,210,176,74,59,113,106,120,247,166,148,197,248,4,127,6,136,166,1,208,152,103,131,59,163,158,171,112,138,246,83,26\")),bytes32(stringToBytes32(\"57,202,251,228,177,226,204,59,52,3,176,36,83,232,146,238,122,14,151,0,223,3,102,227,161,178,64,89,55,169,43,98\")),bytes32(stringToBytes32(\"40,26,129,213,108,115,6,177,58,223,63,217,120,223,151,252,42,196,112,35,88,233,135,69,231,202,35,44,16,16,52,91\")),bytes32(stringToBytes32(\"253,53,194,28,146,229,113,62,240,176,110,247,60,100,236,161,47,178,100,119,73,147,7,180,73,63,178,141,165,125,34,231\")),bytes32(stringToBytes32(\"68,80,109,161,204,26,214,253,254,227,29,144,183,121,216,129,197,2,198,184,130,88,227,166,240,44,184,183,93,77,101,149\")),bytes32(stringToBytes32(\"203,242,7,87,183,112,26,188,85,150,180,35,113,142,173,155,250,159,197,101,251,138,102,151,179,70,225,94,196,193,178,58\")),bytes32(stringToBytes32(\"152,55,97,3,77,5,2,225,130,19,41,21,87,39,184,100,156,68,10,227,112,35,243,105,69,222,231,26,204,35,70,180\")),bytes32(stringToBytes32(\"40,199,135,131,238,21,67,171,163,8,78,53,146,125,150,107,89,226,27,82,83,199,170,151,58,11,57,171,161,176,141,239\")),bytes32(stringToBytes32(\"135,233,21,2,231,234,166,52,75,207,149,224,38,81,1,6,238,221,107,255,8,12,186,76,26,252,234,212,32,98,137,87\")),bytes32(stringToBytes32(\"119,102,7,39,210,0,198,101,3,182,129,92,107,104,53,12,27,178,74,24,186,200,249,13,44,170,133,96,248,255,184,87\")),bytes32(stringToBytes32(\"1,146,23,88,159,148,114,89,186,31,243,130,109,132,239,213,201,183,191,88,56,62,19,69,193,96,25,161,219,115,255,73\")),bytes32(stringToBytes32(\"148,178,17,231,202,248,210,231,164,119,5,162,243,57,121,63,39,3,29,136,135,90,58,170,104,35,193,201,79,193,150,222\")),bytes32(stringToBytes32(\"41,251,242,179,90,33,191,142,130,208,152,109,202,171,84,54,27,179,214,166,233,117,36,249,182,172,8,203,34,113,35,86\")),bytes32(stringToBytes32(\"167,117,49,97,23,91,65,150,162,220,120,39,191,236,73,214,236,13,102,151,17,55,101,178,95,143,45,155,156,62,98,6\")),bytes32(stringToBytes32(\"158,144,220,106,124,83,97,85,122,48,180,29,183,201,1,37,108,107,170,249,250,73,181,131,15,204,162,243,86,118,62,149\")),bytes32(stringToBytes32(\"33,172,204,116,94,38,31,34,248,238,145,206,199,42,178,37,121,138,67,143,95,173,171,111,99,50,1,124,216,200,176,221\")),bytes32(stringToBytes32(\"227,1,211,220,230,98,9,73,127,20,164,254,1,197,21,98,209,122,71,252,30,65,23,158,61,139,68,116,85,246,99,199\")),bytes32(stringToBytes32(\"253,60,245,81,195,205,111,88,113,4,4,6,58,132,60,30,27,209,200,12,28,26,23,31,226,114,42,133,83,53,72,175\")),bytes32(stringToBytes32(\"26,192,177,94,227,192,55,145,240,74,166,191,22,9,52,26,129,40,53,36,50,221,83,228,219,238,243,207,93,208,191,46\")),bytes32(stringToBytes32(\"46,130,145,103,6,40,95,1,170,222,125,233,93,185,171,26,154,95,242,166,24,23,164,103,190,80,73,146,18,126,41,227\")),bytes32(stringToBytes32(\"198,91,201,155,142,158,140,253,184,175,229,57,109,113,194,73,26,0,36,138,158,94,88,182,233,100,70,89,216,163,36,7\")),bytes32(stringToBytes32(\"200,39,76,218,31,134,218,1,242,122,42,190,242,145,85,69,122,31,26,194,182,5,40,20,117,54,125,187,33,164,155,225\")),bytes32(stringToBytes32(\"77,131,49,142,86,255,243,230,236,82,184,85,10,67,150,7,251,97,245,225,69,78,249,16,129,84,87,197,10,50,135,41\")),bytes32(stringToBytes32(\"224,240,46,249,235,226,104,118,162,50,188,110,87,36,114,37,120,27,143,151,68,18,23,138,7,130,193,192,106,191,7,201\")),bytes32(stringToBytes32(\"239,159,86,79,178,164,55,14,181,220,70,103,174,180,71,199,251,49,90,200,226,190,236,120,163,3,16,181,71,12,151,206\")),bytes32(stringToBytes32(\"58,200,6,85,95,202,71,200,181,239,253,135,98,192,59,129,122,136,248,164,239,179,91,241,43,36,45,203,7,21,115,79\")),bytes32(stringToBytes32(\"162,145,91,115,153,196,65,165,76,163,12,24,168,79,254,174,96,102,229,52,137,219,19,175,219,189,98,197,79,212,225,166\")),bytes32(stringToBytes32(\"117,101,111,151,94,135,225,201,203,180,157,246,103,212,211,77,96,230,13,156,251,192,147,210,243,83,234,85,189,44,182,69\")),bytes32(stringToBytes32(\"172,238,155,200,116,242,1,7,101,117,114,84,187,121,57,11,41,187,155,229,136,191,31,181,203,42,174,100,229,141,10,124\")),bytes32(stringToBytes32(\"131,187,136,11,205,196,229,50,245,123,32,253,249,10,106,164,162,123,162,246,221,116,53,79,198,220,202,56,99,45,35,201\")),bytes32(stringToBytes32(\"57,222,210,184,144,24,111,101,204,41,162,29,115,172,77,227,156,203,116,117,116,254,191,151,210,2,99,54,77,40,4,248\")),bytes32(stringToBytes32(\"121,45,212,214,233,218,233,91,43,169,11,33,36,74,135,15,127,104,110,76,77,116,142,116,171,4,237,94,0,5,107,196\")),bytes32(stringToBytes32(\"52,33,18,97,56,200,25,144,107,137,148,129,75,243,239,115,91,100,71,134,44,64,210,72,227,247,211,67,109,96,126,23\")),bytes32(stringToBytes32(\"136,145,180,3,101,24,127,197,163,32,203,61,98,193,2,109,162,234,61,150,161,93,177,123,121,84,146,211,156,107,30,150\")),bytes32(stringToBytes32(\"191,196,196,190,254,159,101,188,91,97,0,95,150,58,231,91,74,235,194,143,180,232,81,169,37,219,170,140,142,17,240,102\")),bytes32(stringToBytes32(\"54,143,113,222,218,59,145,239,10,201,112,2,203,167,20,185,207,130,240,205,84,225,157,76,89,167,15,225,199,224,5,24\")),bytes32(stringToBytes32(\"234,252,44,154,173,22,85,148,136,182,64,217,106,65,128,41,65,106,111,123,24,207,200,94,203,202,248,23,148,4,50,180\")),bytes32(stringToBytes32(\"229,4,97,177,27,68,18,130,140,222,50,16,188,110,179,227,11,55,115,72,210,196,100,79,231,239,112,182,125,25,76,111\")),bytes32(stringToBytes32(\"147,225,252,147,249,238,19,16,106,0,76,124,250,170,241,88,236,65,40,130,132,179,201,117,103,245,21,246,143,147,239,36\")),bytes32(stringToBytes32(\"30,247,116,88,192,214,61,97,119,251,93,214,150,204,162,25,91,34,72,33,69,44,8,86,62,236,240,17,132,53,144,23\")),bytes32(stringToBytes32(\"246,99,70,50,172,2,50,71,143,198,181,20,59,147,185,101,45,139,141,234,236,31,37,233,106,29,195,104,103,53,117,29\")),bytes32(stringToBytes32(\"241,111,186,224,228,236,160,234,52,84,217,53,20,56,63,202,81,155,225,126,54,198,207,228,3,245,68,183,138,89,202,209\")),bytes32(stringToBytes32(\"212,127,255,206,181,220,100,158,155,201,184,224,43,170,58,103,3,150,62,179,70,9,121,72,71,251,134,195,183,0,66,60\"))]"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.505ZOffChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,bytes32) WHEN _securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "[255,58,252,254,59,37,0,226,151,59,56,45,95,93,204,68,73,143,40,58,177,239,24,57,237,186,195,57,15,225,41,113]",
              "sol": "stringToBytes32(\"255,58,252,254,59,37,0,226,151,59,56,45,95,93,204,68,73,143,40,58,177,239,24,57,237,186,195,57,15,225,41,113\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,bytes32) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "[255,58,252,254,59,37,0,226,151,59,56,45,95,93,204,68,73,143,40,58,177,239,24,57,237,186,195,57,15,225,41,113]",
                "sol": "stringToBytes32(\"255,58,252,254,59,37,0,226,151,59,56,45,95,93,204,68,73,143,40,58,177,239,24,57,237,186,195,57,15,225,41,113\")"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.507ZOffChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "10001",
              "sol": "10001"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.507ZOffChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "169-192",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "[97,48,73,79,250,163,233,17,219,130,173,204,119,26,208,69,172,199,48,68,52,74,106,142,132,253,112,225,244,36,15,104]",
              "sol": "stringToBytes32(\"97,48,73,79,250,163,233,17,219,130,173,204,119,26,208,69,172,199,48,68,52,74,106,142,132,253,112,225,244,36,15,104\")"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "0",
                "sol": "0"
              },
              {
                "js": "[97,48,73,79,250,163,233,17,219,130,173,204,119,26,208,69,172,199,48,68,52,74,106,142,132,253,112,225,244,36,15,104]",
                "sol": "stringToBytes32(\"97,48,73,79,250,163,233,17,219,130,173,204,119,26,208,69,172,199,48,68,52,74,106,142,132,253,112,225,244,36,15,104\")"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[9]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[97,48,73,79,250,163,233,17,219,130,173,204,119,26,208,69,172,199,48,68,52,74,106,142,132,253,112,225,244,36,15,104]",
                "sol": "stringToBytes32(\"97,48,73,79,250,163,233,17,219,130,173,204,119,26,208,69,172,199,48,68,52,74,106,142,132,253,112,225,244,36,15,104\")"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "177-192",
          "restrictions": [
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,bytes32,uint256) WHEN currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "[186,231,218,87,3,238,139,100,184,117,15,167,15,143,241,194,70,229,44,42,235,178,138,187,8,64,28,29,89,224,58,14]",
              "sol": "stringToBytes32(\"186,231,218,87,3,238,139,100,184,117,15,167,15,143,241,194,70,229,44,42,235,178,138,187,8,64,28,29,89,224,58,14\")"
            },
            {
              "js": "255",
              "sol": "255"
            },
            {
              "js": "{from:accounts[4]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "[186,231,218,87,3,238,139,100,184,117,15,167,15,143,241,194,70,229,44,42,235,178,138,187,8,64,28,29,89,224,58,14]",
                "sol": "stringToBytes32(\"186,231,218,87,3,238,139,100,184,117,15,167,15,143,241,194,70,229,44,42,235,178,138,187,8,64,28,29,89,224,58,14\")"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,bytes32,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "[186,231,218,87,3,238,139,100,184,117,15,167,15,143,241,194,70,229,44,42,235,178,138,187,8,64,28,29,89,224,58,14]",
                "sol": "stringToBytes32(\"186,231,218,87,3,238,139,100,184,117,15,167,15,143,241,194,70,229,44,42,235,178,138,187,8,64,28,29,89,224,58,14\")"
              },
              {
                "js": "255",
                "sol": "255"
              },
              {
                "js": "{from:accounts[4]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.511ZOnChainVoting.placeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute placeVote(string) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<endTime",
          "parameters": [
            {
              "js": "\"Example\"",
              "sol": "\"Example\""
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.511ZOnChainVoting.submitUserVotes": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute submitUserVotes(bytes32[],bytes32[]) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,_usersSaltHash.length==_usersVote.length,_usersSaltHash.length!=0",
          "parameters": [
            {
              "js": "[[26,18,245,226,8,64,87,145,31,210,254,242,74,210,38,124,244,207,56,108,103,179,60,179,253,162,11,45,170,229,198,90],[14,128,144,65,241,250,114,182,166,203,31,31,185,169,128,247,140,23,0,186,214,107,218,81,21,20,165,244,138,207,232,194],[251,95,97,75,205,163,123,147,218,10,136,94,42,216,60,17,37,82,33,102,118,111,196,132,123,154,188,159,6,77,211,216],[130,222,70,212,207,131,40,99,170,31,118,225,176,182,100,8,36,73,173,96,84,66,160,138,246,71,126,140,108,92,139,27],[109,153,152,230,50,143,180,46,184,94,18,116,0,72,231,126,25,73,76,38,244,150,242,190,90,124,194,248,143,74,31,120],[153,139,223,134,78,88,208,130,79,63,237,159,112,40,23,124,133,159,93,247,124,239,180,71,145,153,18,216,36,180,187,109],[58,109,166,6,150,141,218,191,244,22,120,9,245,110,171,146,193,150,157,144,234,136,40,159,235,242,67,165,213,83,127,192],[212,253,241,47,68,69,241,182,54,76,192,230,91,15,104,133,180,243,34,78,67,50,222,216,9,162,105,90,62,22,227,175],[20,146,120,46,150,157,55,23,186,92,13,185,88,187,27,46,32,71,231,37,134,161,193,76,215,161,25,103,54,50,55,193],[80,43,80,213,244,58,135,145,63,104,79,202,180,0,237,251,174,77,37,34,255,147,42,121,212,103,52,210,55,109,102,22],[202,48,188,254,23,213,50,208,34,190,139,243,201,176,50,156,99,72,40,177,122,129,17,229,196,115,116,32,40,250,77,56],[160,235,135,6,115,14,75,1,96,211,35,57,207,172,40,179,42,157,39,51,50,29,33,157,138,162,176,184,44,30,147,251],[146,131,202,249,210,105,18,83,240,37,206,243,146,51,99,231,137,248,12,79,122,203,224,79,55,172,176,88,38,63,105,8],[33,78,45,162,55,187,128,125,247,223,6,12,142,133,96,164,83,198,248,150,117,167,202,228,89,246,190,142,143,91,251,143],[251,114,204,243,32,226,54,135,67,211,248,13,23,153,23,12,228,12,136,61,168,166,3,47,49,99,76,136,4,15,224,57],[44,91,233,176,161,25,254,10,150,238,33,254,154,222,229,124,188,226,214,65,71,50,179,56,247,81,51,216,250,215,61,210],[72,120,244,197,120,129,229,241,151,245,152,197,95,169,117,170,107,137,74,240,22,23,227,205,25,133,150,143,196,50,232,68],[214,103,217,209,206,204,79,234,222,184,49,238,154,120,158,234,21,45,79,172,145,212,8,176,164,52,181,202,200,34,110,225],[158,246,178,136,2,83,88,105,149,48,81,234,211,241,10,9,46,61,135,14,162,157,188,238,208,69,174,188,34,228,14,143],[60,111,236,11,194,163,250,157,49,251,236,107,229,228,50,8,66,171,75,133,226,132,47,138,189,57,133,179,22,47,213,43],[238,67,94,174,212,154,92,160,81,40,62,85,217,186,51,51,253,171,111,224,241,210,53,223,6,210,159,202,223,75,189,65],[225,17,139,154,149,254,104,81,148,162,55,208,80,108,66,39,170,179,241,29,56,194,247,53,104,138,135,224,4,120,166,133],[232,163,37,144,155,104,149,204,140,117,0,85,231,33,179,187,131,83,27,48,149,180,95,131,192,124,174,221,131,47,212,120],[182,161,57,125,117,247,215,151,176,88,107,164,184,195,43,119,194,25,216,9,66,2,183,36,79,205,51,95,75,145,72,86],[182,233,64,201,3,133,174,207,220,52,147,106,220,144,140,245,141,104,89,4,152,138,198,106,196,2,178,55,189,222,37,169],[119,193,147,95,51,18,231,132,198,97,196,238,83,180,77,98,225,159,85,68,42,116,70,25,234,141,26,83,25,91,3,81],[150,85,66,195,133,210,1,187,65,43,213,187,37,71,117,30,23,175,111,41,80,121,252,66,167,42,21,246,99,237,119,248],[20,43,0,6,173,117,237,37,155,170,125,40,81,201,126,239,188,254,167,43,19,173,71,179,98,251,209,219,161,133,232,78],[44,213,208,139,97,15,243,150,87,73,157,0,92,222,62,218,56,245,210,46,17,192,23,211,122,108,54,52,174,47,177,161],[223,41,44,34,47,193,87,82,124,47,72,168,13,253,63,171,160,155,233,57,253,162,31,198,88,78,106,208,239,131,246,104],[234,144,39,223,69,231,81,100,155,228,111,127,173,20,5,47,9,193,145,217,206,248,214,3,44,163,241,106,121,7,94,203],[157,187,6,217,75,58,67,250,136,98,24,224,255,43,11,97,214,80,168,52,159,176,57,239,119,240,193,133,117,126,82,48],[236,36,15,186,147,77,31,236,178,195,171,121,251,148,134,13,241,198,42,18,252,185,43,173,48,194,134,113,206,228,253,209],[72,173,243,91,166,165,241,75,138,86,80,143,14,2,87,6,0,106,246,110,175,26,51,158,126,93,109,110,101,131,190,72],[24,6,110,244,164,121,3,53,215,171,10,71,112,54,171,42,6,219,225,123,91,88,48,125,190,203,101,39,129,182,112,112],[27,35,48,66,132,14,138,191,145,192,108,50,2,108,194,98,89,192,31,34,39,189,238,187,145,96,139,244,247,131,109,142],[239,208,153,220,18,187,231,146,5,215,39,34,72,51,71,95,118,204,137,182,27,123,114,142,75,128,251,13,90,187,249,167],[48,23,221,126,181,132,27,241,141,54,3,168,73,152,234,231,26,25,119,242,202,168,18,117,187,74,28,121,124,186,144,156],[56,15,115,28,62,213,138,60,108,113,188,253,178,140,9,92,174,133,132,10,36,189,67,157,236,81,193,195,221,212,84,92],[243,70,36,171,200,158,127,236,78,97,76,42,153,80,50,160,194,152,83,57,167,116,230,138,121,195,101,115,7,147,185,201],[16,172,5,110,238,2,253,91,119,48,0,251,2,133,187,67,49,106,253,30,249,30,135,68,138,4,6,180,150,78,139,31],[164,217,160,213,168,111,171,216,67,169,176,44,103,91,194,30,51,2,86,15,244,181,30,125,164,190,71,189,88,132,47,74],[224,182,171,154,130,59,14,161,76,244,163,103,197,48,235,10,164,114,99,15,252,35,76,229,240,20,59,62,224,14,113,188],[38,173,74,242,46,179,54,221,175,34,98,232,100,234,228,39,2,33,101,34,226,151,97,194,253,210,140,72,206,33,166,135],[204,95,208,208,223,242,90,21,24,232,253,194,122,74,37,167,103,6,18,117,243,157,156,234,204,16,33,233,89,139,171,29],[112,151,212,95,31,178,139,252,233,245,129,245,91,21,24,172,224,170,15,150,242,190,107,93,204,23,25,49,231,176,246,187],[136,5,129,212,111,191,37,116,135,206,195,253,88,44,70,22,169,213,185,112,133,87,185,243,103,209,171,212,106,218,96,4],[12,235,102,173,131,224,228,80,126,193,75,76,173,71,209,17,137,103,243,181,230,242,13,52,218,83,234,83,84,242,205,191],[110,234,157,49,199,232,236,6,254,6,103,84,20,113,102,206,22,151,30,248,31,245,6,69,69,223,26,210,77,147,136,105],[171,61,6,20,58,58,32,26,255,125,151,73,129,69,211,179,168,171,17,150,201,232,118,58,50,201,222,207,39,84,201,211],[55,153,111,82,149,72,2,91,60,178,29,209,86,128,65,193,249,240,52,217,174,233,10,196,131,244,251,48,33,194,228,10],[35,71,113,214,110,78,159,57,93,126,241,17,23,218,241,30,58,20,236,243,61,245,173,166,1,41,74,80,37,74,146,102],[182,51,233,75,200,207,214,57,177,16,109,217,127,7,177,198,155,9,163,73,81,27,136,155,133,97,122,152,152,95,235,25],[124,159,234,255,77,76,11,31,217,53,206,61,80,120,108,18,16,5,159,125,6,23,184,216,118,140,162,184,151,63,165,174],[63,115,186,47,243,154,99,10,124,194,134,148,15,45,240,8,34,110,45,124,118,236,243,8,238,19,175,82,194,200,246,191],[234,95,141,193,45,38,245,28,176,126,37,130,253,67,79,70,69,103,159,33,239,41,64,44,138,146,117,18,200,132,82,223],[64,219,83,41,46,213,12,163,226,9,1,152,238,167,193,238,255,171,76,36,70,95,185,63,178,121,22,141,84,159,14,70],[156,132,245,81,209,218,136,163,151,221,154,242,132,232,22,46,192,151,197,53,252,19,176,103,73,119,125,118,189,236,69,17],[245,12,88,160,218,113,235,52,169,87,75,116,48,114,122,76,37,18,33,232,156,254,212,50,223,117,121,159,205,210,189,219],[192,29,129,244,169,32,65,210,189,205,212,64,96,41,74,7,218,31,161,246,140,171,152,118,127,64,6,34,139,126,45,61],[22,215,236,105,64,139,90,17,165,93,8,31,23,177,34,166,77,111,121,58,235,187,137,183,121,213,41,54,146,55,185,133],[154,102,204,206,35,136,107,209,26,181,159,108,230,112,14,112,21,176,88,86,62,198,20,159,81,41,147,118,61,65,83,33],[233,247,178,217,128,65,170,79,120,80,7,45,26,235,55,253,223,36,109,212,131,83,115,102,72,207,34,202,229,255,148,17],[29,59,197,187,123,111,183,105,116,149,217,155,231,217,254,178,185,207,95,18,40,127,253,142,104,210,211,248,2,113,236,130],[122,188,244,115,245,196,152,6,195,253,51,138,94,85,204,149,67,71,236,245,10,108,195,220,92,76,36,139,230,210,140,229],[65,11,197,173,198,236,203,8,242,22,204,194,12,56,28,230,65,127,210,131,163,111,207,247,182,134,197,211,88,140,210,51],[9,196,46,134,255,30,8,88,79,153,131,251,26,103,218,5,93,63,191,17,126,104,212,82,29,198,76,141,210,54,232,38],[51,231,65,94,165,158,192,36,21,5,164,13,50,153,112,215,37,165,8,8,228,199,208,167,67,5,139,70,155,17,197,68],[90,207,46,78,39,252,135,218,11,205,195,77,252,206,161,36,4,25,94,128,197,24,181,251,202,200,159,228,239,132,142,2],[192,0,183,34,49,56,93,105,72,132,102,253,27,107,164,202,189,158,205,114,46,170,8,206,123,144,211,105,2,209,84,173],[66,6,48,62,26,84,165,73,155,171,48,230,17,215,104,207,97,239,212,25,105,172,119,210,53,191,119,9,119,24,83,86],[54,232,213,92,216,1,123,178,87,178,228,72,169,202,202,169,153,243,193,252,85,73,43,199,172,229,129,11,252,3,141,105],[251,147,216,157,211,161,154,121,192,125,208,107,35,184,25,198,167,21,119,196,46,180,90,191,28,205,6,198,64,142,167,94],[233,66,162,143,142,39,138,192,138,189,155,100,30,83,65,146,191,52,2,113,254,31,86,196,240,179,173,216,34,169,150,145],[0,176,252,219,51,162,96,142,196,137,3,169,155,223,231,52,158,75,125,126,55,240,25,121,27,193,84,57,194,232,78,6],[152,221,213,100,156,71,221,98,232,225,224,83,35,160,135,161,150,83,96,214,127,1,112,235,214,11,176,121,69,223,205,192],[165,244,104,67,177,232,102,16,5,60,96,52,238,168,229,226,232,98,209,169,246,188,183,211,30,1,164,197,101,110,2,47],[196,233,156,83,102,227,115,140,72,44,43,107,189,9,26,86,104,111,29,226,16,67,113,44,50,97,26,8,155,135,19,54],[27,140,202,165,140,153,187,228,61,25,71,238,195,86,248,26,121,104,140,252,6,245,119,66,38,40,98,199,192,238,214,180],[82,82,208,46,156,53,162,93,234,101,104,239,31,133,73,96,13,204,138,55,66,0,116,35,112,236,190,94,118,39,59,150],[57,194,241,3,157,94,91,130,110,11,77,48,83,197,250,7,216,125,199,156,181,179,40,235,48,68,219,23,217,62,202,197],[255,216,44,154,25,62,78,212,48,163,223,23,138,6,108,23,240,142,226,167,42,110,206,138,1,30,209,50,239,115,15,29],[209,7,207,113,225,247,20,173,31,13,238,97,36,196,31,176,205,115,231,230,163,44,2,213,105,128,179,64,119,38,84,35],[73,250,44,33,67,218,151,116,7,248,154,230,158,117,232,14,40,193,97,119,131,9,218,150,172,239,129,124,50,51,243,170],[179,169,188,131,54,225,70,233,44,91,20,12,196,233,161,144,168,51,83,6,31,207,110,34,122,180,77,65,56,145,101,179],[206,186,23,196,237,166,193,209,163,174,146,200,75,74,173,244,210,78,116,5,166,173,180,117,186,20,77,58,112,107,63,254],[84,148,246,230,14,167,99,111,222,222,51,104,194,82,182,29,128,119,64,2,188,60,28,177,47,42,219,229,35,87,182,118],[238,244,47,206,29,12,230,166,95,168,244,200,80,156,210,212,120,206,158,122,57,134,86,114,72,195,58,205,111,82,163,150],[138,176,206,18,247,98,159,42,0,144,50,0,50,84,131,17,85,13,226,253,125,236,129,176,155,56,63,143,206,219,206,87],[78,6,64,99,21,103,252,167,183,24,252,232,48,2,128,99,62,97,250,115,143,86,199,6,126,220,213,245,42,88,169,196],[201,253,84,99,43,148,147,123,98,223,198,70,212,100,67,173,25,252,135,235,32,255,170,217,8,121,198,87,253,187,193,199],[108,111,102,230,173,3,166,187,143,227,187,80,152,18,208,63,86,154,66,174,92,49,235,221,190,182,113,75,137,206,237,179],[214,109,238,25,134,198,233,44,152,85,255,230,67,62,5,88,70,61,36,153,255,231,74,255,93,175,185,48,14,169,207,66],[18,160,244,34,184,141,55,249,197,222,221,68,97,183,193,233,215,4,22,39,172,70,91,83,174,90,162,163,47,95,249,68],[91,165,192,104,208,200,73,140,1,221,80,60,208,36,108,243,98,147,119,0,37,93,104,121,115,80,75,28,8,60,222,245],[225,113,179,81,248,143,61,170,96,156,57,153,31,46,114,254,136,243,241,26,179,172,183,243,28,236,234,161,113,210,179,206],[47,197,155,36,84,43,230,229,4,220,38,155,207,7,95,192,217,198,84,125,148,116,132,183,40,87,69,54,186,250,228,156]]",
              "sol": "[bytes32(stringToBytes32(\"26,18,245,226,8,64,87,145,31,210,254,242,74,210,38,124,244,207,56,108,103,179,60,179,253,162,11,45,170,229,198,90\")),bytes32(stringToBytes32(\"14,128,144,65,241,250,114,182,166,203,31,31,185,169,128,247,140,23,0,186,214,107,218,81,21,20,165,244,138,207,232,194\")),bytes32(stringToBytes32(\"251,95,97,75,205,163,123,147,218,10,136,94,42,216,60,17,37,82,33,102,118,111,196,132,123,154,188,159,6,77,211,216\")),bytes32(stringToBytes32(\"130,222,70,212,207,131,40,99,170,31,118,225,176,182,100,8,36,73,173,96,84,66,160,138,246,71,126,140,108,92,139,27\")),bytes32(stringToBytes32(\"109,153,152,230,50,143,180,46,184,94,18,116,0,72,231,126,25,73,76,38,244,150,242,190,90,124,194,248,143,74,31,120\")),bytes32(stringToBytes32(\"153,139,223,134,78,88,208,130,79,63,237,159,112,40,23,124,133,159,93,247,124,239,180,71,145,153,18,216,36,180,187,109\")),bytes32(stringToBytes32(\"58,109,166,6,150,141,218,191,244,22,120,9,245,110,171,146,193,150,157,144,234,136,40,159,235,242,67,165,213,83,127,192\")),bytes32(stringToBytes32(\"212,253,241,47,68,69,241,182,54,76,192,230,91,15,104,133,180,243,34,78,67,50,222,216,9,162,105,90,62,22,227,175\")),bytes32(stringToBytes32(\"20,146,120,46,150,157,55,23,186,92,13,185,88,187,27,46,32,71,231,37,134,161,193,76,215,161,25,103,54,50,55,193\")),bytes32(stringToBytes32(\"80,43,80,213,244,58,135,145,63,104,79,202,180,0,237,251,174,77,37,34,255,147,42,121,212,103,52,210,55,109,102,22\")),bytes32(stringToBytes32(\"202,48,188,254,23,213,50,208,34,190,139,243,201,176,50,156,99,72,40,177,122,129,17,229,196,115,116,32,40,250,77,56\")),bytes32(stringToBytes32(\"160,235,135,6,115,14,75,1,96,211,35,57,207,172,40,179,42,157,39,51,50,29,33,157,138,162,176,184,44,30,147,251\")),bytes32(stringToBytes32(\"146,131,202,249,210,105,18,83,240,37,206,243,146,51,99,231,137,248,12,79,122,203,224,79,55,172,176,88,38,63,105,8\")),bytes32(stringToBytes32(\"33,78,45,162,55,187,128,125,247,223,6,12,142,133,96,164,83,198,248,150,117,167,202,228,89,246,190,142,143,91,251,143\")),bytes32(stringToBytes32(\"251,114,204,243,32,226,54,135,67,211,248,13,23,153,23,12,228,12,136,61,168,166,3,47,49,99,76,136,4,15,224,57\")),bytes32(stringToBytes32(\"44,91,233,176,161,25,254,10,150,238,33,254,154,222,229,124,188,226,214,65,71,50,179,56,247,81,51,216,250,215,61,210\")),bytes32(stringToBytes32(\"72,120,244,197,120,129,229,241,151,245,152,197,95,169,117,170,107,137,74,240,22,23,227,205,25,133,150,143,196,50,232,68\")),bytes32(stringToBytes32(\"214,103,217,209,206,204,79,234,222,184,49,238,154,120,158,234,21,45,79,172,145,212,8,176,164,52,181,202,200,34,110,225\")),bytes32(stringToBytes32(\"158,246,178,136,2,83,88,105,149,48,81,234,211,241,10,9,46,61,135,14,162,157,188,238,208,69,174,188,34,228,14,143\")),bytes32(stringToBytes32(\"60,111,236,11,194,163,250,157,49,251,236,107,229,228,50,8,66,171,75,133,226,132,47,138,189,57,133,179,22,47,213,43\")),bytes32(stringToBytes32(\"238,67,94,174,212,154,92,160,81,40,62,85,217,186,51,51,253,171,111,224,241,210,53,223,6,210,159,202,223,75,189,65\")),bytes32(stringToBytes32(\"225,17,139,154,149,254,104,81,148,162,55,208,80,108,66,39,170,179,241,29,56,194,247,53,104,138,135,224,4,120,166,133\")),bytes32(stringToBytes32(\"232,163,37,144,155,104,149,204,140,117,0,85,231,33,179,187,131,83,27,48,149,180,95,131,192,124,174,221,131,47,212,120\")),bytes32(stringToBytes32(\"182,161,57,125,117,247,215,151,176,88,107,164,184,195,43,119,194,25,216,9,66,2,183,36,79,205,51,95,75,145,72,86\")),bytes32(stringToBytes32(\"182,233,64,201,3,133,174,207,220,52,147,106,220,144,140,245,141,104,89,4,152,138,198,106,196,2,178,55,189,222,37,169\")),bytes32(stringToBytes32(\"119,193,147,95,51,18,231,132,198,97,196,238,83,180,77,98,225,159,85,68,42,116,70,25,234,141,26,83,25,91,3,81\")),bytes32(stringToBytes32(\"150,85,66,195,133,210,1,187,65,43,213,187,37,71,117,30,23,175,111,41,80,121,252,66,167,42,21,246,99,237,119,248\")),bytes32(stringToBytes32(\"20,43,0,6,173,117,237,37,155,170,125,40,81,201,126,239,188,254,167,43,19,173,71,179,98,251,209,219,161,133,232,78\")),bytes32(stringToBytes32(\"44,213,208,139,97,15,243,150,87,73,157,0,92,222,62,218,56,245,210,46,17,192,23,211,122,108,54,52,174,47,177,161\")),bytes32(stringToBytes32(\"223,41,44,34,47,193,87,82,124,47,72,168,13,253,63,171,160,155,233,57,253,162,31,198,88,78,106,208,239,131,246,104\")),bytes32(stringToBytes32(\"234,144,39,223,69,231,81,100,155,228,111,127,173,20,5,47,9,193,145,217,206,248,214,3,44,163,241,106,121,7,94,203\")),bytes32(stringToBytes32(\"157,187,6,217,75,58,67,250,136,98,24,224,255,43,11,97,214,80,168,52,159,176,57,239,119,240,193,133,117,126,82,48\")),bytes32(stringToBytes32(\"236,36,15,186,147,77,31,236,178,195,171,121,251,148,134,13,241,198,42,18,252,185,43,173,48,194,134,113,206,228,253,209\")),bytes32(stringToBytes32(\"72,173,243,91,166,165,241,75,138,86,80,143,14,2,87,6,0,106,246,110,175,26,51,158,126,93,109,110,101,131,190,72\")),bytes32(stringToBytes32(\"24,6,110,244,164,121,3,53,215,171,10,71,112,54,171,42,6,219,225,123,91,88,48,125,190,203,101,39,129,182,112,112\")),bytes32(stringToBytes32(\"27,35,48,66,132,14,138,191,145,192,108,50,2,108,194,98,89,192,31,34,39,189,238,187,145,96,139,244,247,131,109,142\")),bytes32(stringToBytes32(\"239,208,153,220,18,187,231,146,5,215,39,34,72,51,71,95,118,204,137,182,27,123,114,142,75,128,251,13,90,187,249,167\")),bytes32(stringToBytes32(\"48,23,221,126,181,132,27,241,141,54,3,168,73,152,234,231,26,25,119,242,202,168,18,117,187,74,28,121,124,186,144,156\")),bytes32(stringToBytes32(\"56,15,115,28,62,213,138,60,108,113,188,253,178,140,9,92,174,133,132,10,36,189,67,157,236,81,193,195,221,212,84,92\")),bytes32(stringToBytes32(\"243,70,36,171,200,158,127,236,78,97,76,42,153,80,50,160,194,152,83,57,167,116,230,138,121,195,101,115,7,147,185,201\")),bytes32(stringToBytes32(\"16,172,5,110,238,2,253,91,119,48,0,251,2,133,187,67,49,106,253,30,249,30,135,68,138,4,6,180,150,78,139,31\")),bytes32(stringToBytes32(\"164,217,160,213,168,111,171,216,67,169,176,44,103,91,194,30,51,2,86,15,244,181,30,125,164,190,71,189,88,132,47,74\")),bytes32(stringToBytes32(\"224,182,171,154,130,59,14,161,76,244,163,103,197,48,235,10,164,114,99,15,252,35,76,229,240,20,59,62,224,14,113,188\")),bytes32(stringToBytes32(\"38,173,74,242,46,179,54,221,175,34,98,232,100,234,228,39,2,33,101,34,226,151,97,194,253,210,140,72,206,33,166,135\")),bytes32(stringToBytes32(\"204,95,208,208,223,242,90,21,24,232,253,194,122,74,37,167,103,6,18,117,243,157,156,234,204,16,33,233,89,139,171,29\")),bytes32(stringToBytes32(\"112,151,212,95,31,178,139,252,233,245,129,245,91,21,24,172,224,170,15,150,242,190,107,93,204,23,25,49,231,176,246,187\")),bytes32(stringToBytes32(\"136,5,129,212,111,191,37,116,135,206,195,253,88,44,70,22,169,213,185,112,133,87,185,243,103,209,171,212,106,218,96,4\")),bytes32(stringToBytes32(\"12,235,102,173,131,224,228,80,126,193,75,76,173,71,209,17,137,103,243,181,230,242,13,52,218,83,234,83,84,242,205,191\")),bytes32(stringToBytes32(\"110,234,157,49,199,232,236,6,254,6,103,84,20,113,102,206,22,151,30,248,31,245,6,69,69,223,26,210,77,147,136,105\")),bytes32(stringToBytes32(\"171,61,6,20,58,58,32,26,255,125,151,73,129,69,211,179,168,171,17,150,201,232,118,58,50,201,222,207,39,84,201,211\")),bytes32(stringToBytes32(\"55,153,111,82,149,72,2,91,60,178,29,209,86,128,65,193,249,240,52,217,174,233,10,196,131,244,251,48,33,194,228,10\")),bytes32(stringToBytes32(\"35,71,113,214,110,78,159,57,93,126,241,17,23,218,241,30,58,20,236,243,61,245,173,166,1,41,74,80,37,74,146,102\")),bytes32(stringToBytes32(\"182,51,233,75,200,207,214,57,177,16,109,217,127,7,177,198,155,9,163,73,81,27,136,155,133,97,122,152,152,95,235,25\")),bytes32(stringToBytes32(\"124,159,234,255,77,76,11,31,217,53,206,61,80,120,108,18,16,5,159,125,6,23,184,216,118,140,162,184,151,63,165,174\")),bytes32(stringToBytes32(\"63,115,186,47,243,154,99,10,124,194,134,148,15,45,240,8,34,110,45,124,118,236,243,8,238,19,175,82,194,200,246,191\")),bytes32(stringToBytes32(\"234,95,141,193,45,38,245,28,176,126,37,130,253,67,79,70,69,103,159,33,239,41,64,44,138,146,117,18,200,132,82,223\")),bytes32(stringToBytes32(\"64,219,83,41,46,213,12,163,226,9,1,152,238,167,193,238,255,171,76,36,70,95,185,63,178,121,22,141,84,159,14,70\")),bytes32(stringToBytes32(\"156,132,245,81,209,218,136,163,151,221,154,242,132,232,22,46,192,151,197,53,252,19,176,103,73,119,125,118,189,236,69,17\")),bytes32(stringToBytes32(\"245,12,88,160,218,113,235,52,169,87,75,116,48,114,122,76,37,18,33,232,156,254,212,50,223,117,121,159,205,210,189,219\")),bytes32(stringToBytes32(\"192,29,129,244,169,32,65,210,189,205,212,64,96,41,74,7,218,31,161,246,140,171,152,118,127,64,6,34,139,126,45,61\")),bytes32(stringToBytes32(\"22,215,236,105,64,139,90,17,165,93,8,31,23,177,34,166,77,111,121,58,235,187,137,183,121,213,41,54,146,55,185,133\")),bytes32(stringToBytes32(\"154,102,204,206,35,136,107,209,26,181,159,108,230,112,14,112,21,176,88,86,62,198,20,159,81,41,147,118,61,65,83,33\")),bytes32(stringToBytes32(\"233,247,178,217,128,65,170,79,120,80,7,45,26,235,55,253,223,36,109,212,131,83,115,102,72,207,34,202,229,255,148,17\")),bytes32(stringToBytes32(\"29,59,197,187,123,111,183,105,116,149,217,155,231,217,254,178,185,207,95,18,40,127,253,142,104,210,211,248,2,113,236,130\")),bytes32(stringToBytes32(\"122,188,244,115,245,196,152,6,195,253,51,138,94,85,204,149,67,71,236,245,10,108,195,220,92,76,36,139,230,210,140,229\")),bytes32(stringToBytes32(\"65,11,197,173,198,236,203,8,242,22,204,194,12,56,28,230,65,127,210,131,163,111,207,247,182,134,197,211,88,140,210,51\")),bytes32(stringToBytes32(\"9,196,46,134,255,30,8,88,79,153,131,251,26,103,218,5,93,63,191,17,126,104,212,82,29,198,76,141,210,54,232,38\")),bytes32(stringToBytes32(\"51,231,65,94,165,158,192,36,21,5,164,13,50,153,112,215,37,165,8,8,228,199,208,167,67,5,139,70,155,17,197,68\")),bytes32(stringToBytes32(\"90,207,46,78,39,252,135,218,11,205,195,77,252,206,161,36,4,25,94,128,197,24,181,251,202,200,159,228,239,132,142,2\")),bytes32(stringToBytes32(\"192,0,183,34,49,56,93,105,72,132,102,253,27,107,164,202,189,158,205,114,46,170,8,206,123,144,211,105,2,209,84,173\")),bytes32(stringToBytes32(\"66,6,48,62,26,84,165,73,155,171,48,230,17,215,104,207,97,239,212,25,105,172,119,210,53,191,119,9,119,24,83,86\")),bytes32(stringToBytes32(\"54,232,213,92,216,1,123,178,87,178,228,72,169,202,202,169,153,243,193,252,85,73,43,199,172,229,129,11,252,3,141,105\")),bytes32(stringToBytes32(\"251,147,216,157,211,161,154,121,192,125,208,107,35,184,25,198,167,21,119,196,46,180,90,191,28,205,6,198,64,142,167,94\")),bytes32(stringToBytes32(\"233,66,162,143,142,39,138,192,138,189,155,100,30,83,65,146,191,52,2,113,254,31,86,196,240,179,173,216,34,169,150,145\")),bytes32(stringToBytes32(\"0,176,252,219,51,162,96,142,196,137,3,169,155,223,231,52,158,75,125,126,55,240,25,121,27,193,84,57,194,232,78,6\")),bytes32(stringToBytes32(\"152,221,213,100,156,71,221,98,232,225,224,83,35,160,135,161,150,83,96,214,127,1,112,235,214,11,176,121,69,223,205,192\")),bytes32(stringToBytes32(\"165,244,104,67,177,232,102,16,5,60,96,52,238,168,229,226,232,98,209,169,246,188,183,211,30,1,164,197,101,110,2,47\")),bytes32(stringToBytes32(\"196,233,156,83,102,227,115,140,72,44,43,107,189,9,26,86,104,111,29,226,16,67,113,44,50,97,26,8,155,135,19,54\")),bytes32(stringToBytes32(\"27,140,202,165,140,153,187,228,61,25,71,238,195,86,248,26,121,104,140,252,6,245,119,66,38,40,98,199,192,238,214,180\")),bytes32(stringToBytes32(\"82,82,208,46,156,53,162,93,234,101,104,239,31,133,73,96,13,204,138,55,66,0,116,35,112,236,190,94,118,39,59,150\")),bytes32(stringToBytes32(\"57,194,241,3,157,94,91,130,110,11,77,48,83,197,250,7,216,125,199,156,181,179,40,235,48,68,219,23,217,62,202,197\")),bytes32(stringToBytes32(\"255,216,44,154,25,62,78,212,48,163,223,23,138,6,108,23,240,142,226,167,42,110,206,138,1,30,209,50,239,115,15,29\")),bytes32(stringToBytes32(\"209,7,207,113,225,247,20,173,31,13,238,97,36,196,31,176,205,115,231,230,163,44,2,213,105,128,179,64,119,38,84,35\")),bytes32(stringToBytes32(\"73,250,44,33,67,218,151,116,7,248,154,230,158,117,232,14,40,193,97,119,131,9,218,150,172,239,129,124,50,51,243,170\")),bytes32(stringToBytes32(\"179,169,188,131,54,225,70,233,44,91,20,12,196,233,161,144,168,51,83,6,31,207,110,34,122,180,77,65,56,145,101,179\")),bytes32(stringToBytes32(\"206,186,23,196,237,166,193,209,163,174,146,200,75,74,173,244,210,78,116,5,166,173,180,117,186,20,77,58,112,107,63,254\")),bytes32(stringToBytes32(\"84,148,246,230,14,167,99,111,222,222,51,104,194,82,182,29,128,119,64,2,188,60,28,177,47,42,219,229,35,87,182,118\")),bytes32(stringToBytes32(\"238,244,47,206,29,12,230,166,95,168,244,200,80,156,210,212,120,206,158,122,57,134,86,114,72,195,58,205,111,82,163,150\")),bytes32(stringToBytes32(\"138,176,206,18,247,98,159,42,0,144,50,0,50,84,131,17,85,13,226,253,125,236,129,176,155,56,63,143,206,219,206,87\")),bytes32(stringToBytes32(\"78,6,64,99,21,103,252,167,183,24,252,232,48,2,128,99,62,97,250,115,143,86,199,6,126,220,213,245,42,88,169,196\")),bytes32(stringToBytes32(\"201,253,84,99,43,148,147,123,98,223,198,70,212,100,67,173,25,252,135,235,32,255,170,217,8,121,198,87,253,187,193,199\")),bytes32(stringToBytes32(\"108,111,102,230,173,3,166,187,143,227,187,80,152,18,208,63,86,154,66,174,92,49,235,221,190,182,113,75,137,206,237,179\")),bytes32(stringToBytes32(\"214,109,238,25,134,198,233,44,152,85,255,230,67,62,5,88,70,61,36,153,255,231,74,255,93,175,185,48,14,169,207,66\")),bytes32(stringToBytes32(\"18,160,244,34,184,141,55,249,197,222,221,68,97,183,193,233,215,4,22,39,172,70,91,83,174,90,162,163,47,95,249,68\")),bytes32(stringToBytes32(\"91,165,192,104,208,200,73,140,1,221,80,60,208,36,108,243,98,147,119,0,37,93,104,121,115,80,75,28,8,60,222,245\")),bytes32(stringToBytes32(\"225,113,179,81,248,143,61,170,96,156,57,153,31,46,114,254,136,243,241,26,179,172,183,243,28,236,234,161,113,210,179,206\")),bytes32(stringToBytes32(\"47,197,155,36,84,43,230,229,4,220,38,155,207,7,95,192,217,198,84,125,148,116,132,183,40,87,69,54,186,250,228,156\"))]"
            },
            {
              "js": "[[71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194],[86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165],[195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201],[7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35],[190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63],[96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250],[225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210],[242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201],[122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199],[35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145],[144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231],[89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96],[34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149],[95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94],[246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194],[233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144],[161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44],[63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220],[47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115],[221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77],[173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159],[233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139],[207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252],[30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27],[106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5],[141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220],[163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228],[126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31],[136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123],[105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70],[3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254],[176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73],[100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56],[83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215],[198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11],[152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159],[246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88],[123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220],[245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97],[213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21],[64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222],[188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63],[222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208],[114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28],[21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103],[69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43],[128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161],[219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0],[57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215],[89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83],[155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101],[135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13],[64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12],[235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60],[207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131],[240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126],[242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85],[14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72],[76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235],[49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128],[204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69],[179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46],[10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42],[230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89],[216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238],[148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111],[166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107],[222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71],[29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195],[221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111],[84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249],[211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50],[230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201],[217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158],[233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54],[120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78],[2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225],[164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230],[244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190],[169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73],[118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10],[171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35],[195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158],[30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88],[192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249],[248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114],[136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33],[69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26],[119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238],[144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80],[100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202],[252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177],[217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41],[25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36],[113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63],[127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182],[12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124]]",
              "sol": "[bytes32(stringToBytes32(\"71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194\")),bytes32(stringToBytes32(\"86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165\")),bytes32(stringToBytes32(\"195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201\")),bytes32(stringToBytes32(\"7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35\")),bytes32(stringToBytes32(\"190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63\")),bytes32(stringToBytes32(\"96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250\")),bytes32(stringToBytes32(\"225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210\")),bytes32(stringToBytes32(\"242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201\")),bytes32(stringToBytes32(\"122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199\")),bytes32(stringToBytes32(\"35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145\")),bytes32(stringToBytes32(\"144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231\")),bytes32(stringToBytes32(\"89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96\")),bytes32(stringToBytes32(\"34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149\")),bytes32(stringToBytes32(\"95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94\")),bytes32(stringToBytes32(\"246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194\")),bytes32(stringToBytes32(\"233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144\")),bytes32(stringToBytes32(\"161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44\")),bytes32(stringToBytes32(\"63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220\")),bytes32(stringToBytes32(\"47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115\")),bytes32(stringToBytes32(\"221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77\")),bytes32(stringToBytes32(\"173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159\")),bytes32(stringToBytes32(\"233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139\")),bytes32(stringToBytes32(\"207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252\")),bytes32(stringToBytes32(\"30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27\")),bytes32(stringToBytes32(\"106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5\")),bytes32(stringToBytes32(\"141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220\")),bytes32(stringToBytes32(\"163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228\")),bytes32(stringToBytes32(\"126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31\")),bytes32(stringToBytes32(\"136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123\")),bytes32(stringToBytes32(\"105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70\")),bytes32(stringToBytes32(\"3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254\")),bytes32(stringToBytes32(\"176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73\")),bytes32(stringToBytes32(\"100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56\")),bytes32(stringToBytes32(\"83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215\")),bytes32(stringToBytes32(\"198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11\")),bytes32(stringToBytes32(\"152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159\")),bytes32(stringToBytes32(\"246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88\")),bytes32(stringToBytes32(\"123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220\")),bytes32(stringToBytes32(\"245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97\")),bytes32(stringToBytes32(\"213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21\")),bytes32(stringToBytes32(\"64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222\")),bytes32(stringToBytes32(\"188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63\")),bytes32(stringToBytes32(\"222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208\")),bytes32(stringToBytes32(\"114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28\")),bytes32(stringToBytes32(\"21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103\")),bytes32(stringToBytes32(\"69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43\")),bytes32(stringToBytes32(\"128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161\")),bytes32(stringToBytes32(\"219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0\")),bytes32(stringToBytes32(\"57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215\")),bytes32(stringToBytes32(\"89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83\")),bytes32(stringToBytes32(\"155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101\")),bytes32(stringToBytes32(\"135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13\")),bytes32(stringToBytes32(\"64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12\")),bytes32(stringToBytes32(\"235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60\")),bytes32(stringToBytes32(\"207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131\")),bytes32(stringToBytes32(\"240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126\")),bytes32(stringToBytes32(\"242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85\")),bytes32(stringToBytes32(\"14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72\")),bytes32(stringToBytes32(\"76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235\")),bytes32(stringToBytes32(\"49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128\")),bytes32(stringToBytes32(\"204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69\")),bytes32(stringToBytes32(\"179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46\")),bytes32(stringToBytes32(\"10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42\")),bytes32(stringToBytes32(\"230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89\")),bytes32(stringToBytes32(\"216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238\")),bytes32(stringToBytes32(\"148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111\")),bytes32(stringToBytes32(\"166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107\")),bytes32(stringToBytes32(\"222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71\")),bytes32(stringToBytes32(\"29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195\")),bytes32(stringToBytes32(\"221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111\")),bytes32(stringToBytes32(\"84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249\")),bytes32(stringToBytes32(\"211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50\")),bytes32(stringToBytes32(\"230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201\")),bytes32(stringToBytes32(\"217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158\")),bytes32(stringToBytes32(\"233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54\")),bytes32(stringToBytes32(\"120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78\")),bytes32(stringToBytes32(\"2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225\")),bytes32(stringToBytes32(\"164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230\")),bytes32(stringToBytes32(\"244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190\")),bytes32(stringToBytes32(\"169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73\")),bytes32(stringToBytes32(\"118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10\")),bytes32(stringToBytes32(\"171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35\")),bytes32(stringToBytes32(\"195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158\")),bytes32(stringToBytes32(\"30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88\")),bytes32(stringToBytes32(\"192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249\")),bytes32(stringToBytes32(\"248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114\")),bytes32(stringToBytes32(\"136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33\")),bytes32(stringToBytes32(\"69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26\")),bytes32(stringToBytes32(\"119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238\")),bytes32(stringToBytes32(\"144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80\")),bytes32(stringToBytes32(\"100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202\")),bytes32(stringToBytes32(\"252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177\")),bytes32(stringToBytes32(\"217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41\")),bytes32(stringToBytes32(\"25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36\")),bytes32(stringToBytes32(\"113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63\")),bytes32(stringToBytes32(\"127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182\")),bytes32(stringToBytes32(\"12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124\"))]"
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[[26,18,245,226,8,64,87,145,31,210,254,242,74,210,38,124,244,207,56,108,103,179,60,179,253,162,11,45,170,229,198,90],[14,128,144,65,241,250,114,182,166,203,31,31,185,169,128,247,140,23,0,186,214,107,218,81,21,20,165,244,138,207,232,194],[251,95,97,75,205,163,123,147,218,10,136,94,42,216,60,17,37,82,33,102,118,111,196,132,123,154,188,159,6,77,211,216],[130,222,70,212,207,131,40,99,170,31,118,225,176,182,100,8,36,73,173,96,84,66,160,138,246,71,126,140,108,92,139,27],[109,153,152,230,50,143,180,46,184,94,18,116,0,72,231,126,25,73,76,38,244,150,242,190,90,124,194,248,143,74,31,120],[153,139,223,134,78,88,208,130,79,63,237,159,112,40,23,124,133,159,93,247,124,239,180,71,145,153,18,216,36,180,187,109],[58,109,166,6,150,141,218,191,244,22,120,9,245,110,171,146,193,150,157,144,234,136,40,159,235,242,67,165,213,83,127,192],[212,253,241,47,68,69,241,182,54,76,192,230,91,15,104,133,180,243,34,78,67,50,222,216,9,162,105,90,62,22,227,175],[20,146,120,46,150,157,55,23,186,92,13,185,88,187,27,46,32,71,231,37,134,161,193,76,215,161,25,103,54,50,55,193],[80,43,80,213,244,58,135,145,63,104,79,202,180,0,237,251,174,77,37,34,255,147,42,121,212,103,52,210,55,109,102,22],[202,48,188,254,23,213,50,208,34,190,139,243,201,176,50,156,99,72,40,177,122,129,17,229,196,115,116,32,40,250,77,56],[160,235,135,6,115,14,75,1,96,211,35,57,207,172,40,179,42,157,39,51,50,29,33,157,138,162,176,184,44,30,147,251],[146,131,202,249,210,105,18,83,240,37,206,243,146,51,99,231,137,248,12,79,122,203,224,79,55,172,176,88,38,63,105,8],[33,78,45,162,55,187,128,125,247,223,6,12,142,133,96,164,83,198,248,150,117,167,202,228,89,246,190,142,143,91,251,143],[251,114,204,243,32,226,54,135,67,211,248,13,23,153,23,12,228,12,136,61,168,166,3,47,49,99,76,136,4,15,224,57],[44,91,233,176,161,25,254,10,150,238,33,254,154,222,229,124,188,226,214,65,71,50,179,56,247,81,51,216,250,215,61,210],[72,120,244,197,120,129,229,241,151,245,152,197,95,169,117,170,107,137,74,240,22,23,227,205,25,133,150,143,196,50,232,68],[214,103,217,209,206,204,79,234,222,184,49,238,154,120,158,234,21,45,79,172,145,212,8,176,164,52,181,202,200,34,110,225],[158,246,178,136,2,83,88,105,149,48,81,234,211,241,10,9,46,61,135,14,162,157,188,238,208,69,174,188,34,228,14,143],[60,111,236,11,194,163,250,157,49,251,236,107,229,228,50,8,66,171,75,133,226,132,47,138,189,57,133,179,22,47,213,43],[238,67,94,174,212,154,92,160,81,40,62,85,217,186,51,51,253,171,111,224,241,210,53,223,6,210,159,202,223,75,189,65],[225,17,139,154,149,254,104,81,148,162,55,208,80,108,66,39,170,179,241,29,56,194,247,53,104,138,135,224,4,120,166,133],[232,163,37,144,155,104,149,204,140,117,0,85,231,33,179,187,131,83,27,48,149,180,95,131,192,124,174,221,131,47,212,120],[182,161,57,125,117,247,215,151,176,88,107,164,184,195,43,119,194,25,216,9,66,2,183,36,79,205,51,95,75,145,72,86],[182,233,64,201,3,133,174,207,220,52,147,106,220,144,140,245,141,104,89,4,152,138,198,106,196,2,178,55,189,222,37,169],[119,193,147,95,51,18,231,132,198,97,196,238,83,180,77,98,225,159,85,68,42,116,70,25,234,141,26,83,25,91,3,81],[150,85,66,195,133,210,1,187,65,43,213,187,37,71,117,30,23,175,111,41,80,121,252,66,167,42,21,246,99,237,119,248],[20,43,0,6,173,117,237,37,155,170,125,40,81,201,126,239,188,254,167,43,19,173,71,179,98,251,209,219,161,133,232,78],[44,213,208,139,97,15,243,150,87,73,157,0,92,222,62,218,56,245,210,46,17,192,23,211,122,108,54,52,174,47,177,161],[223,41,44,34,47,193,87,82,124,47,72,168,13,253,63,171,160,155,233,57,253,162,31,198,88,78,106,208,239,131,246,104],[234,144,39,223,69,231,81,100,155,228,111,127,173,20,5,47,9,193,145,217,206,248,214,3,44,163,241,106,121,7,94,203],[157,187,6,217,75,58,67,250,136,98,24,224,255,43,11,97,214,80,168,52,159,176,57,239,119,240,193,133,117,126,82,48],[236,36,15,186,147,77,31,236,178,195,171,121,251,148,134,13,241,198,42,18,252,185,43,173,48,194,134,113,206,228,253,209],[72,173,243,91,166,165,241,75,138,86,80,143,14,2,87,6,0,106,246,110,175,26,51,158,126,93,109,110,101,131,190,72],[24,6,110,244,164,121,3,53,215,171,10,71,112,54,171,42,6,219,225,123,91,88,48,125,190,203,101,39,129,182,112,112],[27,35,48,66,132,14,138,191,145,192,108,50,2,108,194,98,89,192,31,34,39,189,238,187,145,96,139,244,247,131,109,142],[239,208,153,220,18,187,231,146,5,215,39,34,72,51,71,95,118,204,137,182,27,123,114,142,75,128,251,13,90,187,249,167],[48,23,221,126,181,132,27,241,141,54,3,168,73,152,234,231,26,25,119,242,202,168,18,117,187,74,28,121,124,186,144,156],[56,15,115,28,62,213,138,60,108,113,188,253,178,140,9,92,174,133,132,10,36,189,67,157,236,81,193,195,221,212,84,92],[243,70,36,171,200,158,127,236,78,97,76,42,153,80,50,160,194,152,83,57,167,116,230,138,121,195,101,115,7,147,185,201],[16,172,5,110,238,2,253,91,119,48,0,251,2,133,187,67,49,106,253,30,249,30,135,68,138,4,6,180,150,78,139,31],[164,217,160,213,168,111,171,216,67,169,176,44,103,91,194,30,51,2,86,15,244,181,30,125,164,190,71,189,88,132,47,74],[224,182,171,154,130,59,14,161,76,244,163,103,197,48,235,10,164,114,99,15,252,35,76,229,240,20,59,62,224,14,113,188],[38,173,74,242,46,179,54,221,175,34,98,232,100,234,228,39,2,33,101,34,226,151,97,194,253,210,140,72,206,33,166,135],[204,95,208,208,223,242,90,21,24,232,253,194,122,74,37,167,103,6,18,117,243,157,156,234,204,16,33,233,89,139,171,29],[112,151,212,95,31,178,139,252,233,245,129,245,91,21,24,172,224,170,15,150,242,190,107,93,204,23,25,49,231,176,246,187],[136,5,129,212,111,191,37,116,135,206,195,253,88,44,70,22,169,213,185,112,133,87,185,243,103,209,171,212,106,218,96,4],[12,235,102,173,131,224,228,80,126,193,75,76,173,71,209,17,137,103,243,181,230,242,13,52,218,83,234,83,84,242,205,191],[110,234,157,49,199,232,236,6,254,6,103,84,20,113,102,206,22,151,30,248,31,245,6,69,69,223,26,210,77,147,136,105],[171,61,6,20,58,58,32,26,255,125,151,73,129,69,211,179,168,171,17,150,201,232,118,58,50,201,222,207,39,84,201,211],[55,153,111,82,149,72,2,91,60,178,29,209,86,128,65,193,249,240,52,217,174,233,10,196,131,244,251,48,33,194,228,10],[35,71,113,214,110,78,159,57,93,126,241,17,23,218,241,30,58,20,236,243,61,245,173,166,1,41,74,80,37,74,146,102],[182,51,233,75,200,207,214,57,177,16,109,217,127,7,177,198,155,9,163,73,81,27,136,155,133,97,122,152,152,95,235,25],[124,159,234,255,77,76,11,31,217,53,206,61,80,120,108,18,16,5,159,125,6,23,184,216,118,140,162,184,151,63,165,174],[63,115,186,47,243,154,99,10,124,194,134,148,15,45,240,8,34,110,45,124,118,236,243,8,238,19,175,82,194,200,246,191],[234,95,141,193,45,38,245,28,176,126,37,130,253,67,79,70,69,103,159,33,239,41,64,44,138,146,117,18,200,132,82,223],[64,219,83,41,46,213,12,163,226,9,1,152,238,167,193,238,255,171,76,36,70,95,185,63,178,121,22,141,84,159,14,70],[156,132,245,81,209,218,136,163,151,221,154,242,132,232,22,46,192,151,197,53,252,19,176,103,73,119,125,118,189,236,69,17],[245,12,88,160,218,113,235,52,169,87,75,116,48,114,122,76,37,18,33,232,156,254,212,50,223,117,121,159,205,210,189,219],[192,29,129,244,169,32,65,210,189,205,212,64,96,41,74,7,218,31,161,246,140,171,152,118,127,64,6,34,139,126,45,61],[22,215,236,105,64,139,90,17,165,93,8,31,23,177,34,166,77,111,121,58,235,187,137,183,121,213,41,54,146,55,185,133],[154,102,204,206,35,136,107,209,26,181,159,108,230,112,14,112,21,176,88,86,62,198,20,159,81,41,147,118,61,65,83,33],[233,247,178,217,128,65,170,79,120,80,7,45,26,235,55,253,223,36,109,212,131,83,115,102,72,207,34,202,229,255,148,17],[29,59,197,187,123,111,183,105,116,149,217,155,231,217,254,178,185,207,95,18,40,127,253,142,104,210,211,248,2,113,236,130],[122,188,244,115,245,196,152,6,195,253,51,138,94,85,204,149,67,71,236,245,10,108,195,220,92,76,36,139,230,210,140,229],[65,11,197,173,198,236,203,8,242,22,204,194,12,56,28,230,65,127,210,131,163,111,207,247,182,134,197,211,88,140,210,51],[9,196,46,134,255,30,8,88,79,153,131,251,26,103,218,5,93,63,191,17,126,104,212,82,29,198,76,141,210,54,232,38],[51,231,65,94,165,158,192,36,21,5,164,13,50,153,112,215,37,165,8,8,228,199,208,167,67,5,139,70,155,17,197,68],[90,207,46,78,39,252,135,218,11,205,195,77,252,206,161,36,4,25,94,128,197,24,181,251,202,200,159,228,239,132,142,2],[192,0,183,34,49,56,93,105,72,132,102,253,27,107,164,202,189,158,205,114,46,170,8,206,123,144,211,105,2,209,84,173],[66,6,48,62,26,84,165,73,155,171,48,230,17,215,104,207,97,239,212,25,105,172,119,210,53,191,119,9,119,24,83,86],[54,232,213,92,216,1,123,178,87,178,228,72,169,202,202,169,153,243,193,252,85,73,43,199,172,229,129,11,252,3,141,105],[251,147,216,157,211,161,154,121,192,125,208,107,35,184,25,198,167,21,119,196,46,180,90,191,28,205,6,198,64,142,167,94],[233,66,162,143,142,39,138,192,138,189,155,100,30,83,65,146,191,52,2,113,254,31,86,196,240,179,173,216,34,169,150,145],[0,176,252,219,51,162,96,142,196,137,3,169,155,223,231,52,158,75,125,126,55,240,25,121,27,193,84,57,194,232,78,6],[152,221,213,100,156,71,221,98,232,225,224,83,35,160,135,161,150,83,96,214,127,1,112,235,214,11,176,121,69,223,205,192],[165,244,104,67,177,232,102,16,5,60,96,52,238,168,229,226,232,98,209,169,246,188,183,211,30,1,164,197,101,110,2,47],[196,233,156,83,102,227,115,140,72,44,43,107,189,9,26,86,104,111,29,226,16,67,113,44,50,97,26,8,155,135,19,54],[27,140,202,165,140,153,187,228,61,25,71,238,195,86,248,26,121,104,140,252,6,245,119,66,38,40,98,199,192,238,214,180],[82,82,208,46,156,53,162,93,234,101,104,239,31,133,73,96,13,204,138,55,66,0,116,35,112,236,190,94,118,39,59,150],[57,194,241,3,157,94,91,130,110,11,77,48,83,197,250,7,216,125,199,156,181,179,40,235,48,68,219,23,217,62,202,197],[255,216,44,154,25,62,78,212,48,163,223,23,138,6,108,23,240,142,226,167,42,110,206,138,1,30,209,50,239,115,15,29],[209,7,207,113,225,247,20,173,31,13,238,97,36,196,31,176,205,115,231,230,163,44,2,213,105,128,179,64,119,38,84,35],[73,250,44,33,67,218,151,116,7,248,154,230,158,117,232,14,40,193,97,119,131,9,218,150,172,239,129,124,50,51,243,170],[179,169,188,131,54,225,70,233,44,91,20,12,196,233,161,144,168,51,83,6,31,207,110,34,122,180,77,65,56,145,101,179],[206,186,23,196,237,166,193,209,163,174,146,200,75,74,173,244,210,78,116,5,166,173,180,117,186,20,77,58,112,107,63,254],[84,148,246,230,14,167,99,111,222,222,51,104,194,82,182,29,128,119,64,2,188,60,28,177,47,42,219,229,35,87,182,118],[238,244,47,206,29,12,230,166,95,168,244,200,80,156,210,212,120,206,158,122,57,134,86,114,72,195,58,205,111,82,163,150],[138,176,206,18,247,98,159,42,0,144,50,0,50,84,131,17,85,13,226,253,125,236,129,176,155,56,63,143,206,219,206,87],[78,6,64,99,21,103,252,167,183,24,252,232,48,2,128,99,62,97,250,115,143,86,199,6,126,220,213,245,42,88,169,196],[201,253,84,99,43,148,147,123,98,223,198,70,212,100,67,173,25,252,135,235,32,255,170,217,8,121,198,87,253,187,193,199],[108,111,102,230,173,3,166,187,143,227,187,80,152,18,208,63,86,154,66,174,92,49,235,221,190,182,113,75,137,206,237,179],[214,109,238,25,134,198,233,44,152,85,255,230,67,62,5,88,70,61,36,153,255,231,74,255,93,175,185,48,14,169,207,66],[18,160,244,34,184,141,55,249,197,222,221,68,97,183,193,233,215,4,22,39,172,70,91,83,174,90,162,163,47,95,249,68],[91,165,192,104,208,200,73,140,1,221,80,60,208,36,108,243,98,147,119,0,37,93,104,121,115,80,75,28,8,60,222,245],[225,113,179,81,248,143,61,170,96,156,57,153,31,46,114,254,136,243,241,26,179,172,183,243,28,236,234,161,113,210,179,206],[47,197,155,36,84,43,230,229,4,220,38,155,207,7,95,192,217,198,84,125,148,116,132,183,40,87,69,54,186,250,228,156]]",
                "sol": "[bytes32(stringToBytes32(\"26,18,245,226,8,64,87,145,31,210,254,242,74,210,38,124,244,207,56,108,103,179,60,179,253,162,11,45,170,229,198,90\")),bytes32(stringToBytes32(\"14,128,144,65,241,250,114,182,166,203,31,31,185,169,128,247,140,23,0,186,214,107,218,81,21,20,165,244,138,207,232,194\")),bytes32(stringToBytes32(\"251,95,97,75,205,163,123,147,218,10,136,94,42,216,60,17,37,82,33,102,118,111,196,132,123,154,188,159,6,77,211,216\")),bytes32(stringToBytes32(\"130,222,70,212,207,131,40,99,170,31,118,225,176,182,100,8,36,73,173,96,84,66,160,138,246,71,126,140,108,92,139,27\")),bytes32(stringToBytes32(\"109,153,152,230,50,143,180,46,184,94,18,116,0,72,231,126,25,73,76,38,244,150,242,190,90,124,194,248,143,74,31,120\")),bytes32(stringToBytes32(\"153,139,223,134,78,88,208,130,79,63,237,159,112,40,23,124,133,159,93,247,124,239,180,71,145,153,18,216,36,180,187,109\")),bytes32(stringToBytes32(\"58,109,166,6,150,141,218,191,244,22,120,9,245,110,171,146,193,150,157,144,234,136,40,159,235,242,67,165,213,83,127,192\")),bytes32(stringToBytes32(\"212,253,241,47,68,69,241,182,54,76,192,230,91,15,104,133,180,243,34,78,67,50,222,216,9,162,105,90,62,22,227,175\")),bytes32(stringToBytes32(\"20,146,120,46,150,157,55,23,186,92,13,185,88,187,27,46,32,71,231,37,134,161,193,76,215,161,25,103,54,50,55,193\")),bytes32(stringToBytes32(\"80,43,80,213,244,58,135,145,63,104,79,202,180,0,237,251,174,77,37,34,255,147,42,121,212,103,52,210,55,109,102,22\")),bytes32(stringToBytes32(\"202,48,188,254,23,213,50,208,34,190,139,243,201,176,50,156,99,72,40,177,122,129,17,229,196,115,116,32,40,250,77,56\")),bytes32(stringToBytes32(\"160,235,135,6,115,14,75,1,96,211,35,57,207,172,40,179,42,157,39,51,50,29,33,157,138,162,176,184,44,30,147,251\")),bytes32(stringToBytes32(\"146,131,202,249,210,105,18,83,240,37,206,243,146,51,99,231,137,248,12,79,122,203,224,79,55,172,176,88,38,63,105,8\")),bytes32(stringToBytes32(\"33,78,45,162,55,187,128,125,247,223,6,12,142,133,96,164,83,198,248,150,117,167,202,228,89,246,190,142,143,91,251,143\")),bytes32(stringToBytes32(\"251,114,204,243,32,226,54,135,67,211,248,13,23,153,23,12,228,12,136,61,168,166,3,47,49,99,76,136,4,15,224,57\")),bytes32(stringToBytes32(\"44,91,233,176,161,25,254,10,150,238,33,254,154,222,229,124,188,226,214,65,71,50,179,56,247,81,51,216,250,215,61,210\")),bytes32(stringToBytes32(\"72,120,244,197,120,129,229,241,151,245,152,197,95,169,117,170,107,137,74,240,22,23,227,205,25,133,150,143,196,50,232,68\")),bytes32(stringToBytes32(\"214,103,217,209,206,204,79,234,222,184,49,238,154,120,158,234,21,45,79,172,145,212,8,176,164,52,181,202,200,34,110,225\")),bytes32(stringToBytes32(\"158,246,178,136,2,83,88,105,149,48,81,234,211,241,10,9,46,61,135,14,162,157,188,238,208,69,174,188,34,228,14,143\")),bytes32(stringToBytes32(\"60,111,236,11,194,163,250,157,49,251,236,107,229,228,50,8,66,171,75,133,226,132,47,138,189,57,133,179,22,47,213,43\")),bytes32(stringToBytes32(\"238,67,94,174,212,154,92,160,81,40,62,85,217,186,51,51,253,171,111,224,241,210,53,223,6,210,159,202,223,75,189,65\")),bytes32(stringToBytes32(\"225,17,139,154,149,254,104,81,148,162,55,208,80,108,66,39,170,179,241,29,56,194,247,53,104,138,135,224,4,120,166,133\")),bytes32(stringToBytes32(\"232,163,37,144,155,104,149,204,140,117,0,85,231,33,179,187,131,83,27,48,149,180,95,131,192,124,174,221,131,47,212,120\")),bytes32(stringToBytes32(\"182,161,57,125,117,247,215,151,176,88,107,164,184,195,43,119,194,25,216,9,66,2,183,36,79,205,51,95,75,145,72,86\")),bytes32(stringToBytes32(\"182,233,64,201,3,133,174,207,220,52,147,106,220,144,140,245,141,104,89,4,152,138,198,106,196,2,178,55,189,222,37,169\")),bytes32(stringToBytes32(\"119,193,147,95,51,18,231,132,198,97,196,238,83,180,77,98,225,159,85,68,42,116,70,25,234,141,26,83,25,91,3,81\")),bytes32(stringToBytes32(\"150,85,66,195,133,210,1,187,65,43,213,187,37,71,117,30,23,175,111,41,80,121,252,66,167,42,21,246,99,237,119,248\")),bytes32(stringToBytes32(\"20,43,0,6,173,117,237,37,155,170,125,40,81,201,126,239,188,254,167,43,19,173,71,179,98,251,209,219,161,133,232,78\")),bytes32(stringToBytes32(\"44,213,208,139,97,15,243,150,87,73,157,0,92,222,62,218,56,245,210,46,17,192,23,211,122,108,54,52,174,47,177,161\")),bytes32(stringToBytes32(\"223,41,44,34,47,193,87,82,124,47,72,168,13,253,63,171,160,155,233,57,253,162,31,198,88,78,106,208,239,131,246,104\")),bytes32(stringToBytes32(\"234,144,39,223,69,231,81,100,155,228,111,127,173,20,5,47,9,193,145,217,206,248,214,3,44,163,241,106,121,7,94,203\")),bytes32(stringToBytes32(\"157,187,6,217,75,58,67,250,136,98,24,224,255,43,11,97,214,80,168,52,159,176,57,239,119,240,193,133,117,126,82,48\")),bytes32(stringToBytes32(\"236,36,15,186,147,77,31,236,178,195,171,121,251,148,134,13,241,198,42,18,252,185,43,173,48,194,134,113,206,228,253,209\")),bytes32(stringToBytes32(\"72,173,243,91,166,165,241,75,138,86,80,143,14,2,87,6,0,106,246,110,175,26,51,158,126,93,109,110,101,131,190,72\")),bytes32(stringToBytes32(\"24,6,110,244,164,121,3,53,215,171,10,71,112,54,171,42,6,219,225,123,91,88,48,125,190,203,101,39,129,182,112,112\")),bytes32(stringToBytes32(\"27,35,48,66,132,14,138,191,145,192,108,50,2,108,194,98,89,192,31,34,39,189,238,187,145,96,139,244,247,131,109,142\")),bytes32(stringToBytes32(\"239,208,153,220,18,187,231,146,5,215,39,34,72,51,71,95,118,204,137,182,27,123,114,142,75,128,251,13,90,187,249,167\")),bytes32(stringToBytes32(\"48,23,221,126,181,132,27,241,141,54,3,168,73,152,234,231,26,25,119,242,202,168,18,117,187,74,28,121,124,186,144,156\")),bytes32(stringToBytes32(\"56,15,115,28,62,213,138,60,108,113,188,253,178,140,9,92,174,133,132,10,36,189,67,157,236,81,193,195,221,212,84,92\")),bytes32(stringToBytes32(\"243,70,36,171,200,158,127,236,78,97,76,42,153,80,50,160,194,152,83,57,167,116,230,138,121,195,101,115,7,147,185,201\")),bytes32(stringToBytes32(\"16,172,5,110,238,2,253,91,119,48,0,251,2,133,187,67,49,106,253,30,249,30,135,68,138,4,6,180,150,78,139,31\")),bytes32(stringToBytes32(\"164,217,160,213,168,111,171,216,67,169,176,44,103,91,194,30,51,2,86,15,244,181,30,125,164,190,71,189,88,132,47,74\")),bytes32(stringToBytes32(\"224,182,171,154,130,59,14,161,76,244,163,103,197,48,235,10,164,114,99,15,252,35,76,229,240,20,59,62,224,14,113,188\")),bytes32(stringToBytes32(\"38,173,74,242,46,179,54,221,175,34,98,232,100,234,228,39,2,33,101,34,226,151,97,194,253,210,140,72,206,33,166,135\")),bytes32(stringToBytes32(\"204,95,208,208,223,242,90,21,24,232,253,194,122,74,37,167,103,6,18,117,243,157,156,234,204,16,33,233,89,139,171,29\")),bytes32(stringToBytes32(\"112,151,212,95,31,178,139,252,233,245,129,245,91,21,24,172,224,170,15,150,242,190,107,93,204,23,25,49,231,176,246,187\")),bytes32(stringToBytes32(\"136,5,129,212,111,191,37,116,135,206,195,253,88,44,70,22,169,213,185,112,133,87,185,243,103,209,171,212,106,218,96,4\")),bytes32(stringToBytes32(\"12,235,102,173,131,224,228,80,126,193,75,76,173,71,209,17,137,103,243,181,230,242,13,52,218,83,234,83,84,242,205,191\")),bytes32(stringToBytes32(\"110,234,157,49,199,232,236,6,254,6,103,84,20,113,102,206,22,151,30,248,31,245,6,69,69,223,26,210,77,147,136,105\")),bytes32(stringToBytes32(\"171,61,6,20,58,58,32,26,255,125,151,73,129,69,211,179,168,171,17,150,201,232,118,58,50,201,222,207,39,84,201,211\")),bytes32(stringToBytes32(\"55,153,111,82,149,72,2,91,60,178,29,209,86,128,65,193,249,240,52,217,174,233,10,196,131,244,251,48,33,194,228,10\")),bytes32(stringToBytes32(\"35,71,113,214,110,78,159,57,93,126,241,17,23,218,241,30,58,20,236,243,61,245,173,166,1,41,74,80,37,74,146,102\")),bytes32(stringToBytes32(\"182,51,233,75,200,207,214,57,177,16,109,217,127,7,177,198,155,9,163,73,81,27,136,155,133,97,122,152,152,95,235,25\")),bytes32(stringToBytes32(\"124,159,234,255,77,76,11,31,217,53,206,61,80,120,108,18,16,5,159,125,6,23,184,216,118,140,162,184,151,63,165,174\")),bytes32(stringToBytes32(\"63,115,186,47,243,154,99,10,124,194,134,148,15,45,240,8,34,110,45,124,118,236,243,8,238,19,175,82,194,200,246,191\")),bytes32(stringToBytes32(\"234,95,141,193,45,38,245,28,176,126,37,130,253,67,79,70,69,103,159,33,239,41,64,44,138,146,117,18,200,132,82,223\")),bytes32(stringToBytes32(\"64,219,83,41,46,213,12,163,226,9,1,152,238,167,193,238,255,171,76,36,70,95,185,63,178,121,22,141,84,159,14,70\")),bytes32(stringToBytes32(\"156,132,245,81,209,218,136,163,151,221,154,242,132,232,22,46,192,151,197,53,252,19,176,103,73,119,125,118,189,236,69,17\")),bytes32(stringToBytes32(\"245,12,88,160,218,113,235,52,169,87,75,116,48,114,122,76,37,18,33,232,156,254,212,50,223,117,121,159,205,210,189,219\")),bytes32(stringToBytes32(\"192,29,129,244,169,32,65,210,189,205,212,64,96,41,74,7,218,31,161,246,140,171,152,118,127,64,6,34,139,126,45,61\")),bytes32(stringToBytes32(\"22,215,236,105,64,139,90,17,165,93,8,31,23,177,34,166,77,111,121,58,235,187,137,183,121,213,41,54,146,55,185,133\")),bytes32(stringToBytes32(\"154,102,204,206,35,136,107,209,26,181,159,108,230,112,14,112,21,176,88,86,62,198,20,159,81,41,147,118,61,65,83,33\")),bytes32(stringToBytes32(\"233,247,178,217,128,65,170,79,120,80,7,45,26,235,55,253,223,36,109,212,131,83,115,102,72,207,34,202,229,255,148,17\")),bytes32(stringToBytes32(\"29,59,197,187,123,111,183,105,116,149,217,155,231,217,254,178,185,207,95,18,40,127,253,142,104,210,211,248,2,113,236,130\")),bytes32(stringToBytes32(\"122,188,244,115,245,196,152,6,195,253,51,138,94,85,204,149,67,71,236,245,10,108,195,220,92,76,36,139,230,210,140,229\")),bytes32(stringToBytes32(\"65,11,197,173,198,236,203,8,242,22,204,194,12,56,28,230,65,127,210,131,163,111,207,247,182,134,197,211,88,140,210,51\")),bytes32(stringToBytes32(\"9,196,46,134,255,30,8,88,79,153,131,251,26,103,218,5,93,63,191,17,126,104,212,82,29,198,76,141,210,54,232,38\")),bytes32(stringToBytes32(\"51,231,65,94,165,158,192,36,21,5,164,13,50,153,112,215,37,165,8,8,228,199,208,167,67,5,139,70,155,17,197,68\")),bytes32(stringToBytes32(\"90,207,46,78,39,252,135,218,11,205,195,77,252,206,161,36,4,25,94,128,197,24,181,251,202,200,159,228,239,132,142,2\")),bytes32(stringToBytes32(\"192,0,183,34,49,56,93,105,72,132,102,253,27,107,164,202,189,158,205,114,46,170,8,206,123,144,211,105,2,209,84,173\")),bytes32(stringToBytes32(\"66,6,48,62,26,84,165,73,155,171,48,230,17,215,104,207,97,239,212,25,105,172,119,210,53,191,119,9,119,24,83,86\")),bytes32(stringToBytes32(\"54,232,213,92,216,1,123,178,87,178,228,72,169,202,202,169,153,243,193,252,85,73,43,199,172,229,129,11,252,3,141,105\")),bytes32(stringToBytes32(\"251,147,216,157,211,161,154,121,192,125,208,107,35,184,25,198,167,21,119,196,46,180,90,191,28,205,6,198,64,142,167,94\")),bytes32(stringToBytes32(\"233,66,162,143,142,39,138,192,138,189,155,100,30,83,65,146,191,52,2,113,254,31,86,196,240,179,173,216,34,169,150,145\")),bytes32(stringToBytes32(\"0,176,252,219,51,162,96,142,196,137,3,169,155,223,231,52,158,75,125,126,55,240,25,121,27,193,84,57,194,232,78,6\")),bytes32(stringToBytes32(\"152,221,213,100,156,71,221,98,232,225,224,83,35,160,135,161,150,83,96,214,127,1,112,235,214,11,176,121,69,223,205,192\")),bytes32(stringToBytes32(\"165,244,104,67,177,232,102,16,5,60,96,52,238,168,229,226,232,98,209,169,246,188,183,211,30,1,164,197,101,110,2,47\")),bytes32(stringToBytes32(\"196,233,156,83,102,227,115,140,72,44,43,107,189,9,26,86,104,111,29,226,16,67,113,44,50,97,26,8,155,135,19,54\")),bytes32(stringToBytes32(\"27,140,202,165,140,153,187,228,61,25,71,238,195,86,248,26,121,104,140,252,6,245,119,66,38,40,98,199,192,238,214,180\")),bytes32(stringToBytes32(\"82,82,208,46,156,53,162,93,234,101,104,239,31,133,73,96,13,204,138,55,66,0,116,35,112,236,190,94,118,39,59,150\")),bytes32(stringToBytes32(\"57,194,241,3,157,94,91,130,110,11,77,48,83,197,250,7,216,125,199,156,181,179,40,235,48,68,219,23,217,62,202,197\")),bytes32(stringToBytes32(\"255,216,44,154,25,62,78,212,48,163,223,23,138,6,108,23,240,142,226,167,42,110,206,138,1,30,209,50,239,115,15,29\")),bytes32(stringToBytes32(\"209,7,207,113,225,247,20,173,31,13,238,97,36,196,31,176,205,115,231,230,163,44,2,213,105,128,179,64,119,38,84,35\")),bytes32(stringToBytes32(\"73,250,44,33,67,218,151,116,7,248,154,230,158,117,232,14,40,193,97,119,131,9,218,150,172,239,129,124,50,51,243,170\")),bytes32(stringToBytes32(\"179,169,188,131,54,225,70,233,44,91,20,12,196,233,161,144,168,51,83,6,31,207,110,34,122,180,77,65,56,145,101,179\")),bytes32(stringToBytes32(\"206,186,23,196,237,166,193,209,163,174,146,200,75,74,173,244,210,78,116,5,166,173,180,117,186,20,77,58,112,107,63,254\")),bytes32(stringToBytes32(\"84,148,246,230,14,167,99,111,222,222,51,104,194,82,182,29,128,119,64,2,188,60,28,177,47,42,219,229,35,87,182,118\")),bytes32(stringToBytes32(\"238,244,47,206,29,12,230,166,95,168,244,200,80,156,210,212,120,206,158,122,57,134,86,114,72,195,58,205,111,82,163,150\")),bytes32(stringToBytes32(\"138,176,206,18,247,98,159,42,0,144,50,0,50,84,131,17,85,13,226,253,125,236,129,176,155,56,63,143,206,219,206,87\")),bytes32(stringToBytes32(\"78,6,64,99,21,103,252,167,183,24,252,232,48,2,128,99,62,97,250,115,143,86,199,6,126,220,213,245,42,88,169,196\")),bytes32(stringToBytes32(\"201,253,84,99,43,148,147,123,98,223,198,70,212,100,67,173,25,252,135,235,32,255,170,217,8,121,198,87,253,187,193,199\")),bytes32(stringToBytes32(\"108,111,102,230,173,3,166,187,143,227,187,80,152,18,208,63,86,154,66,174,92,49,235,221,190,182,113,75,137,206,237,179\")),bytes32(stringToBytes32(\"214,109,238,25,134,198,233,44,152,85,255,230,67,62,5,88,70,61,36,153,255,231,74,255,93,175,185,48,14,169,207,66\")),bytes32(stringToBytes32(\"18,160,244,34,184,141,55,249,197,222,221,68,97,183,193,233,215,4,22,39,172,70,91,83,174,90,162,163,47,95,249,68\")),bytes32(stringToBytes32(\"91,165,192,104,208,200,73,140,1,221,80,60,208,36,108,243,98,147,119,0,37,93,104,121,115,80,75,28,8,60,222,245\")),bytes32(stringToBytes32(\"225,113,179,81,248,143,61,170,96,156,57,153,31,46,114,254,136,243,241,26,179,172,183,243,28,236,234,161,113,210,179,206\")),bytes32(stringToBytes32(\"47,197,155,36,84,43,230,229,4,220,38,155,207,7,95,192,217,198,84,125,148,116,132,183,40,87,69,54,186,250,228,156\"))]"
              },
              {
                "js": "[[71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194],[86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165],[195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201],[7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35],[190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63],[96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250],[225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210],[242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201],[122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199],[35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145],[144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231],[89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96],[34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149],[95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94],[246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194],[233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144],[161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44],[63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220],[47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115],[221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77],[173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159],[233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139],[207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252],[30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27],[106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5],[141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220],[163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228],[126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31],[136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123],[105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70],[3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254],[176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73],[100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56],[83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215],[198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11],[152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159],[246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88],[123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220],[245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97],[213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21],[64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222],[188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63],[222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208],[114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28],[21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103],[69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43],[128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161],[219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0],[57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215],[89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83],[155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101],[135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13],[64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12],[235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60],[207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131],[240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126],[242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85],[14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72],[76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235],[49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128],[204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69],[179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46],[10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42],[230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89],[216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238],[148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111],[166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107],[222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71],[29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195],[221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111],[84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249],[211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50],[230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201],[217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158],[233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54],[120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78],[2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225],[164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230],[244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190],[169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73],[118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10],[171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35],[195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158],[30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88],[192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249],[248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114],[136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33],[69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26],[119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238],[144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80],[100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202],[252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177],[217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41],[25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36],[113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63],[127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182],[12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124]]",
                "sol": "[bytes32(stringToBytes32(\"71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194\")),bytes32(stringToBytes32(\"86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165\")),bytes32(stringToBytes32(\"195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201\")),bytes32(stringToBytes32(\"7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35\")),bytes32(stringToBytes32(\"190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63\")),bytes32(stringToBytes32(\"96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250\")),bytes32(stringToBytes32(\"225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210\")),bytes32(stringToBytes32(\"242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201\")),bytes32(stringToBytes32(\"122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199\")),bytes32(stringToBytes32(\"35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145\")),bytes32(stringToBytes32(\"144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231\")),bytes32(stringToBytes32(\"89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96\")),bytes32(stringToBytes32(\"34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149\")),bytes32(stringToBytes32(\"95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94\")),bytes32(stringToBytes32(\"246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194\")),bytes32(stringToBytes32(\"233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144\")),bytes32(stringToBytes32(\"161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44\")),bytes32(stringToBytes32(\"63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220\")),bytes32(stringToBytes32(\"47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115\")),bytes32(stringToBytes32(\"221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77\")),bytes32(stringToBytes32(\"173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159\")),bytes32(stringToBytes32(\"233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139\")),bytes32(stringToBytes32(\"207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252\")),bytes32(stringToBytes32(\"30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27\")),bytes32(stringToBytes32(\"106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5\")),bytes32(stringToBytes32(\"141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220\")),bytes32(stringToBytes32(\"163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228\")),bytes32(stringToBytes32(\"126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31\")),bytes32(stringToBytes32(\"136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123\")),bytes32(stringToBytes32(\"105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70\")),bytes32(stringToBytes32(\"3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254\")),bytes32(stringToBytes32(\"176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73\")),bytes32(stringToBytes32(\"100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56\")),bytes32(stringToBytes32(\"83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215\")),bytes32(stringToBytes32(\"198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11\")),bytes32(stringToBytes32(\"152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159\")),bytes32(stringToBytes32(\"246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88\")),bytes32(stringToBytes32(\"123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220\")),bytes32(stringToBytes32(\"245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97\")),bytes32(stringToBytes32(\"213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21\")),bytes32(stringToBytes32(\"64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222\")),bytes32(stringToBytes32(\"188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63\")),bytes32(stringToBytes32(\"222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208\")),bytes32(stringToBytes32(\"114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28\")),bytes32(stringToBytes32(\"21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103\")),bytes32(stringToBytes32(\"69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43\")),bytes32(stringToBytes32(\"128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161\")),bytes32(stringToBytes32(\"219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0\")),bytes32(stringToBytes32(\"57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215\")),bytes32(stringToBytes32(\"89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83\")),bytes32(stringToBytes32(\"155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101\")),bytes32(stringToBytes32(\"135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13\")),bytes32(stringToBytes32(\"64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12\")),bytes32(stringToBytes32(\"235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60\")),bytes32(stringToBytes32(\"207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131\")),bytes32(stringToBytes32(\"240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126\")),bytes32(stringToBytes32(\"242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85\")),bytes32(stringToBytes32(\"14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72\")),bytes32(stringToBytes32(\"76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235\")),bytes32(stringToBytes32(\"49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128\")),bytes32(stringToBytes32(\"204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69\")),bytes32(stringToBytes32(\"179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46\")),bytes32(stringToBytes32(\"10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42\")),bytes32(stringToBytes32(\"230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89\")),bytes32(stringToBytes32(\"216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238\")),bytes32(stringToBytes32(\"148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111\")),bytes32(stringToBytes32(\"166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107\")),bytes32(stringToBytes32(\"222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71\")),bytes32(stringToBytes32(\"29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195\")),bytes32(stringToBytes32(\"221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111\")),bytes32(stringToBytes32(\"84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249\")),bytes32(stringToBytes32(\"211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50\")),bytes32(stringToBytes32(\"230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201\")),bytes32(stringToBytes32(\"217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158\")),bytes32(stringToBytes32(\"233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54\")),bytes32(stringToBytes32(\"120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78\")),bytes32(stringToBytes32(\"2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225\")),bytes32(stringToBytes32(\"164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230\")),bytes32(stringToBytes32(\"244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190\")),bytes32(stringToBytes32(\"169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73\")),bytes32(stringToBytes32(\"118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10\")),bytes32(stringToBytes32(\"171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35\")),bytes32(stringToBytes32(\"195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158\")),bytes32(stringToBytes32(\"30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88\")),bytes32(stringToBytes32(\"192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249\")),bytes32(stringToBytes32(\"248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114\")),bytes32(stringToBytes32(\"136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33\")),bytes32(stringToBytes32(\"69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26\")),bytes32(stringToBytes32(\"119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238\")),bytes32(stringToBytes32(\"144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80\")),bytes32(stringToBytes32(\"100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202\")),bytes32(stringToBytes32(\"252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177\")),bytes32(stringToBytes32(\"217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41\")),bytes32(stringToBytes32(\"25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36\")),bytes32(stringToBytes32(\"113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63\")),bytes32(stringToBytes32(\"127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182\")),bytes32(stringToBytes32(\"12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124\"))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length == _usersVote.length",
            "parameters": [
              {
                "js": "[[22,188,42,118,214,179,178,96,38,128,193,195,228,56,209,125,227,82,10,35,211,31,207,33,34,140,183,109,29,82,141,141],[55,27,21,91,69,108,192,57,103,112,248,26,145,202,121,85,225,103,47,131,145,104,253,246,76,242,5,141,39,12,197,161],[59,176,110,243,94,79,105,13,139,194,252,27,252,245,196,215,95,87,100,61,243,23,34,31,163,4,125,178,220,0,8,242],[233,0,70,25,64,32,78,163,241,103,151,85,57,181,12,104,138,51,64,47,63,152,31,51,208,166,251,108,241,25,53,174],[193,196,61,200,102,24,210,142,21,198,197,207,211,3,208,42,99,125,200,29,67,9,29,96,186,76,210,12,83,238,46,231],[45,241,5,75,102,228,98,159,103,199,227,235,248,65,228,78,75,221,214,46,216,74,59,34,233,174,1,201,95,142,126,28],[92,95,170,70,250,190,214,112,70,134,90,248,188,173,39,179,187,54,26,34,94,44,19,153,131,194,255,152,8,240,227,252],[189,251,190,216,103,152,110,52,238,13,145,71,118,235,45,89,61,148,219,60,157,188,205,69,156,28,177,51,249,247,31,154],[184,240,168,188,40,134,101,20,181,198,22,198,140,148,97,92,140,108,251,168,71,100,219,116,186,210,159,95,149,135,9,224],[194,58,238,215,133,133,208,5,25,19,199,3,10,185,41,138,93,91,98,169,245,220,12,235,49,114,150,101,232,72,178,222],[108,63,7,8,170,47,183,23,64,105,36,253,213,53,146,154,37,248,243,75,121,81,26,247,28,182,223,163,103,237,70,254],[92,120,29,156,165,129,178,148,192,211,39,210,59,182,131,170,210,181,180,242,253,94,157,117,86,163,78,210,203,43,222,139],[219,97,112,48,165,120,161,181,27,238,208,9,251,84,119,87,147,37,138,197,193,97,191,204,215,216,103,145,115,205,99,49],[136,223,14,219,206,11,231,121,35,42,141,239,16,63,133,207,172,226,113,176,155,92,91,156,131,106,53,84,139,52,88,203],[151,16,6,49,105,124,187,111,51,130,178,128,245,104,10,105,69,201,234,146,200,167,212,97,243,47,225,31,164,234,199,71],[48,224,78,68,33,80,230,26,202,243,63,64,31,34,40,129,125,211,126,49,199,83,195,222,171,36,145,193,15,92,181,51],[127,245,223,85,212,180,239,154,55,30,206,245,116,97,90,8,186,7,254,184,107,176,154,8,2,9,163,62,40,68,47,166],[207,51,215,240,188,175,92,167,56,189,194,35,53,132,190,160,17,78,251,220,88,158,156,154,155,165,237,2,134,82,192,59],[86,31,52,202,55,190,29,226,78,26,255,231,20,158,57,46,5,178,170,26,205,200,184,36,105,4,50,102,226,157,55,200],[237,201,177,244,117,228,249,93,199,171,196,76,70,14,148,0,95,63,253,66,59,149,125,196,71,45,110,201,94,84,54,99],[123,178,171,254,26,36,59,87,207,4,163,67,234,112,123,118,7,36,148,85,111,41,238,85,64,150,25,10,31,39,72,208],[178,190,194,154,44,189,250,114,96,7,31,203,234,5,230,78,36,74,83,231,109,108,140,233,204,133,113,184,158,213,27,36],[179,166,94,211,155,16,50,129,150,140,48,241,199,21,170,193,187,42,8,72,58,145,152,64,86,98,126,253,2,157,63,18],[179,18,204,144,98,64,73,203,10,8,19,72,109,81,124,142,111,84,133,89,81,197,249,143,67,177,7,51,68,232,101,59],[62,111,146,123,69,121,250,123,220,32,164,208,205,117,153,108,126,211,241,119,6,117,82,101,207,144,24,237,106,203,17,172],[174,84,79,108,177,69,44,111,152,123,66,3,41,57,102,27,41,80,62,131,6,128,40,88,152,103,251,116,3,227,129,99],[40,112,68,21,217,80,116,157,199,217,0,27,245,251,150,199,101,57,25,109,246,30,17,248,186,200,198,26,92,143,156,217],[3,90,105,232,41,48,142,20,97,29,247,24,99,190,79,68,162,44,146,32,16,100,72,138,254,247,229,93,196,215,205,155],[90,242,71,75,121,149,76,44,61,116,64,92,204,54,93,92,195,49,66,23,163,72,156,3,49,118,74,140,252,85,1,143],[81,8,4,188,154,3,61,11,130,98,0,81,81,131,190,35,250,220,196,30,4,187,77,181,191,136,140,73,177,245,217,174],[45,193,224,42,12,104,22,150,5,103,176,55,217,232,254,37,29,17,24,183,40,187,210,101,178,123,255,94,174,19,77,201],[60,145,187,31,165,135,180,170,96,79,59,237,242,246,122,198,23,40,82,59,97,1,41,175,166,92,152,26,162,60,200,70],[180,209,69,49,194,139,14,4,176,242,198,186,197,151,252,25,75,44,21,205,109,174,142,102,112,221,145,246,213,156,161,198],[179,52,84,124,117,216,159,240,253,61,196,232,191,148,226,172,128,100,72,192,213,203,31,160,56,153,185,124,0,10,253,33],[67,75,191,42,83,82,13,186,32,109,98,235,68,6,175,71,8,167,68,236,200,223,222,53,244,247,89,99,209,181,215,148],[183,71,200,159,183,213,165,79,8,195,69,44,187,197,7,154,14,226,7,115,238,188,200,182,102,75,121,143,179,165,175,41],[214,58,150,238,214,34,135,52,186,97,167,172,93,61,198,66,102,107,144,216,192,96,132,122,108,236,228,53,160,186,62,68],[190,253,245,52,233,90,134,3,18,82,233,132,55,19,212,35,233,128,195,19,173,116,214,3,174,52,237,178,154,204,3,145],[52,180,31,141,154,239,35,208,241,118,64,177,33,181,67,83,26,180,183,218,100,68,30,173,76,142,221,79,216,241,111,3],[8,198,170,8,49,147,201,11,166,40,81,149,95,78,25,149,155,126,113,37,32,71,106,91,77,74,197,90,33,54,196,45],[212,221,152,254,20,155,91,45,218,253,87,120,156,54,195,143,154,77,204,228,98,9,23,5,115,76,136,110,54,16,188,65],[11,225,32,222,33,81,196,195,178,9,29,128,61,31,188,41,1,237,58,248,253,5,157,190,148,161,176,104,28,203,63,59],[62,95,25,212,22,76,38,96,48,112,92,112,183,133,172,213,47,101,84,230,49,82,67,139,181,53,65,98,96,148,141,241],[233,204,189,64,218,212,173,99,224,183,247,233,247,249,59,208,253,93,203,111,230,22,118,64,222,67,96,174,151,251,133,80],[207,110,180,242,3,158,128,216,152,46,143,28,108,132,132,110,5,186,85,124,233,3,139,129,75,178,186,6,148,94,228,188],[208,171,154,219,111,127,197,41,250,103,155,101,197,245,160,137,109,129,96,160,100,197,222,199,59,115,164,172,17,185,14,131],[14,199,161,92,222,40,141,62,252,15,116,43,143,73,56,64,84,164,230,41,104,119,129,105,30,227,179,240,0,36,45,26],[54,137,19,241,133,60,5,94,244,61,75,160,182,206,158,69,104,217,25,57,216,239,181,194,194,62,252,156,74,117,57,221],[217,190,111,248,1,238,169,50,223,244,164,14,25,98,136,137,62,190,70,87,79,132,69,83,204,218,10,182,118,43,180,8],[33,228,153,151,122,91,14,80,195,19,189,231,208,13,15,30,124,231,109,85,61,51,73,243,14,145,191,167,34,196,210,132],[244,197,189,17,58,46,93,24,213,16,142,176,45,191,46,82,248,44,142,155,211,165,45,73,184,253,155,11,60,73,24,150],[126,196,76,77,124,212,77,171,243,114,172,184,219,38,84,21,179,26,184,42,107,51,245,250,5,229,54,237,140,190,20,3],[45,71,138,181,179,97,249,161,228,55,22,242,49,149,209,151,189,129,220,18,0,20,204,218,85,216,94,58,69,42,115,225],[33,55,55,163,217,198,222,103,75,137,180,37,71,108,48,164,99,30,11,112,172,251,162,42,89,209,248,116,188,101,200,191],[252,172,140,110,169,5,231,245,121,91,217,13,127,16,85,134,97,94,53,84,230,203,120,245,205,181,7,23,250,143,120,89],[83,197,145,219,221,61,72,47,171,94,19,206,245,199,159,108,20,144,154,148,117,205,250,208,40,171,218,50,6,8,122,120],[63,162,122,185,213,67,166,228,62,21,240,210,246,106,122,40,231,30,196,131,58,126,213,47,33,137,89,12,38,240,173,229],[68,48,127,132,205,232,96,92,22,3,239,249,4,125,204,8,85,97,234,51,45,254,11,211,37,233,138,156,147,54,236,72],[246,58,202,228,208,173,69,62,153,171,21,117,138,113,225,171,68,49,193,213,235,253,107,155,83,243,211,222,115,203,237,240],[139,54,150,185,76,143,15,55,70,43,243,187,158,63,36,189,195,195,22,81,157,247,162,249,205,152,193,177,78,232,27,249],[169,159,128,5,101,31,166,147,45,254,37,138,203,11,91,191,206,184,157,112,107,70,160,198,171,92,98,134,71,165,136,92],[142,53,100,26,196,65,72,16,126,31,105,164,169,55,150,137,84,201,158,2,200,145,183,200,250,106,141,253,68,86,217,102],[164,172,163,88,221,20,57,185,28,88,37,233,219,38,58,104,151,0,5,3,121,177,71,26,39,91,233,92,17,198,208,243],[220,46,145,58,126,139,226,125,208,158,105,216,175,97,59,216,107,98,120,1,116,63,242,175,249,103,147,6,132,121,195,139],[231,80,130,52,31,76,191,44,125,241,42,204,79,205,253,108,104,229,231,0,128,52,254,60,184,251,163,41,75,19,63,224],[85,113,159,211,19,225,126,103,189,205,50,152,223,3,147,206,192,64,247,236,102,199,194,93,228,127,56,145,48,220,178,148],[30,243,82,131,203,121,112,85,114,42,2,236,107,59,119,150,217,85,146,249,250,97,69,85,75,5,242,77,93,165,50,193],[101,236,18,235,17,4,60,193,7,173,0,134,103,192,211,153,191,66,54,55,203,153,67,214,148,79,173,211,207,152,179,134],[10,130,247,0,159,161,251,97,74,156,139,184,110,151,238,4,57,169,152,78,67,156,186,49,205,103,0,186,253,227,145,141],[104,210,144,218,234,90,139,34,124,159,250,159,52,56,15,225,49,52,165,36,206,254,164,48,13,207,72,79,89,204,207,47],[94,75,167,202,77,247,149,145,59,232,207,48,202,236,133,155,129,124,175,23,6,245,23,222,38,165,56,141,173,157,167,131],[10,106,181,46,224,152,23,88,221,226,231,117,9,155,198,153,62,219,176,171,2,227,26,43,231,48,21,170,118,127,88,154],[221,249,119,92,173,104,42,232,74,44,78,35,174,75,8,229,102,72,59,235,34,52,35,244,51,134,244,98,153,216,95,21],[243,105,191,95,237,56,83,137,131,45,251,114,194,132,32,191,138,222,161,143,199,77,126,14,214,42,178,236,31,25,147,125],[154,184,55,6,216,233,113,94,9,193,206,5,215,191,128,174,129,161,34,103,151,71,85,84,146,141,128,196,254,253,214,51],[163,225,191,85,60,172,123,82,74,167,202,136,147,146,89,122,20,163,92,50,209,95,101,1,97,218,104,31,225,92,171,240],[66,120,28,186,82,241,155,161,217,51,183,227,197,150,203,191,218,144,191,13,227,10,171,150,5,76,86,106,254,211,252,149],[223,5,152,53,41,120,18,106,36,9,38,51,77,103,98,64,181,130,19,9,132,218,218,125,14,201,89,141,250,126,179,5],[204,3,152,103,136,30,152,200,222,7,211,28,88,208,244,185,14,203,49,44,147,213,11,13,5,150,200,182,154,125,232,234],[119,57,74,4,196,90,65,120,194,24,57,52,213,34,108,151,203,90,222,28,42,122,195,88,89,39,10,141,131,206,173,179],[111,9,128,42,109,196,249,162,203,0,37,68,205,196,161,114,83,17,177,45,120,125,116,253,154,212,159,90,190,98,214,78],[6,6,67,235,43,63,231,58,157,152,170,243,71,189,18,5,216,33,88,63,72,155,54,123,120,158,153,217,84,213,248,95],[110,158,102,38,12,51,1,170,27,89,124,160,25,185,235,162,17,59,233,243,228,205,97,171,82,129,17,98,49,228,204,218],[239,173,245,190,90,108,13,56,245,232,200,21,187,129,61,40,93,163,161,240,130,61,120,61,109,182,154,2,36,216,78,17],[255,209,27,134,171,207,156,246,80,232,222,202,22,113,6,189,34,233,13,176,145,195,39,246,253,232,90,111,66,191,58,5],[14,38,124,176,185,203,109,26,48,46,175,220,14,124,20,236,148,128,158,100,95,13,159,81,142,190,46,251,100,93,255,147],[42,21,56,116,13,210,59,163,35,250,106,130,23,27,211,11,127,239,33,89,162,56,48,29,8,159,1,4,93,7,93,200],[209,25,243,71,55,226,227,31,197,229,42,245,107,163,122,13,168,166,157,162,47,162,147,92,181,10,188,80,41,118,142,206],[9,189,217,84,113,227,78,234,160,100,36,51,92,11,133,108,105,116,90,129,252,66,239,92,196,97,24,67,90,98,188,79],[24,176,239,50,92,233,3,177,127,235,39,12,190,185,237,233,3,134,218,35,143,1,202,162,14,97,205,74,74,157,233,247],[89,244,135,218,113,201,69,27,154,220,157,255,85,143,125,71,74,27,79,249,210,175,252,179,138,221,76,1,250,125,113,85],[141,248,175,39,188,243,171,240,135,141,152,121,41,48,129,143,164,116,206,57,205,97,20,116,147,246,193,113,248,118,7,183],[66,247,68,166,205,242,154,73,0,99,196,97,18,142,33,153,165,165,176,129,191,56,209,85,65,214,188,28,6,79,24,68],[142,57,32,47,238,166,205,92,178,223,198,24,246,156,193,11,157,11,37,41,95,239,116,84,174,189,47,18,78,138,211,143],[116,89,48,4,178,216,197,129,163,122,120,241,223,44,154,106,20,185,233,149,136,46,246,32,25,184,205,199,161,169,235,130],[247,250,19,193,52,180,6,180,58,195,165,16,188,34,191,50,151,252,48,225,163,209,49,168,53,50,202,31,254,155,103,74],[156,101,33,29,76,148,71,253,117,218,71,96,123,249,58,192,84,173,179,206,200,110,68,179,89,116,173,98,110,30,182,221],[255,176,142,137,95,89,204,217,81,170,82,5,253,116,151,21,187,167,8,21,217,9,239,84,215,26,248,216,76,131,147,255]]",
                "sol": "[stringToBytes32(\"21,104,106,190,139,140,211,226,150,198,23,252,130,237,114,188,3,77,220,230,207,66,209,159,221,13,175,239,249,47,44,47\"),stringToBytes32(\"80,25,66,243,134,193,145,126,243,87,207,162,224,98,81,62,38,62,134,246,184,55,147,240,107,15,119,248,58,116,13,152\"),stringToBytes32(\"253,196,208,138,26,191,160,226,93,207,14,62,24,165,1,19,113,212,156,98,101,85,216,31,247,113,229,208,248,174,46,74\"),stringToBytes32(\"181,222,141,62,158,82,174,144,171,138,138,10,202,88,195,236,166,105,102,116,161,140,226,200,220,141,171,250,24,94,147,94\"),stringToBytes32(\"193,100,90,75,205,255,63,64,60,239,200,34,46,194,86,206,178,121,172,76,104,90,221,34,161,219,212,115,42,212,5,25\"),stringToBytes32(\"87,74,146,177,230,254,221,81,201,10,20,244,207,179,196,10,154,13,196,80,86,46,28,129,95,10,6,100,139,128,69,223\"),stringToBytes32(\"51,161,155,254,63,161,136,77,75,217,249,29,157,4,7,191,221,29,29,88,8,200,235,126,183,200,160,231,93,6,248,106\"),stringToBytes32(\"244,5,102,0,95,233,113,41,10,62,43,93,239,141,220,37,162,109,52,43,161,82,94,101,6,8,212,119,242,148,202,55\"),stringToBytes32(\"28,92,238,124,203,88,205,216,88,58,188,4,146,215,123,123,178,244,109,202,12,130,40,134,26,229,133,174,0,89,65,186\"),stringToBytes32(\"215,28,172,208,75,164,182,155,186,188,108,217,7,253,126,120,92,38,87,166,235,143,171,52,86,120,107,130,73,134,227,200\"),stringToBytes32(\"143,22,42,131,89,199,137,22,31,61,230,190,152,128,140,26,123,154,205,102,66,15,202,113,139,205,0,70,10,128,233,165\"),stringToBytes32(\"53,33,193,11,49,201,145,242,163,192,204,116,249,222,95,4,226,105,74,71,91,122,48,233,222,38,45,200,24,198,241,161\"),stringToBytes32(\"241,42,0,196,79,105,215,134,99,219,195,214,119,139,67,123,175,104,168,73,14,39,127,208,23,127,159,239,110,162,162,91\"),stringToBytes32(\"128,110,153,237,128,182,157,159,82,226,5,83,66,107,64,37,167,73,34,186,43,216,190,147,99,224,121,212,251,56,54,191\"),stringToBytes32(\"36,158,41,222,115,111,204,29,41,194,20,5,184,54,3,61,19,172,15,60,77,55,102,12,182,92,188,119,98,181,87,194\"),stringToBytes32(\"129,163,234,210,95,168,157,42,91,235,130,200,198,212,85,27,213,67,195,69,10,78,193,71,62,207,53,0,74,163,146,26\"),stringToBytes32(\"3,212,208,38,23,227,14,51,89,39,41,128,28,148,183,13,40,140,52,203,249,21,166,117,0,86,254,68,189,186,236,163\"),stringToBytes32(\"116,51,233,146,228,92,218,63,50,246,159,95,254,162,61,59,227,208,177,156,76,86,152,198,43,201,167,53,88,249,186,38\"),stringToBytes32(\"40,16,245,85,213,213,63,89,47,229,17,253,12,254,7,244,239,35,219,235,84,86,35,8,29,204,179,111,246,147,29,197\"),stringToBytes32(\"241,183,28,171,158,200,234,76,127,250,249,27,204,157,42,1,210,56,149,1,178,152,131,108,213,63,147,217,143,248,232,40\"),stringToBytes32(\"141,213,66,29,21,103,93,183,93,233,154,179,144,83,187,49,47,79,245,6,137,101,161,4,37,91,36,110,161,153,111,44\"),stringToBytes32(\"60,213,90,180,98,219,146,128,174,28,112,200,158,128,171,174,250,207,43,237,161,93,231,140,52,43,238,131,100,219,127,31\"),stringToBytes32(\"120,227,8,185,33,75,81,15,185,111,186,91,160,159,205,179,130,156,37,54,25,35,113,216,106,225,23,148,181,157,84,105\"),stringToBytes32(\"43,167,163,26,200,197,191,63,37,136,107,167,191,93,199,220,190,221,9,47,246,148,85,172,190,223,113,169,28,170,196,244\"),stringToBytes32(\"7,23,14,154,55,199,32,77,178,28,117,159,28,140,204,117,132,133,153,125,181,0,101,30,83,82,35,50,130,86,80,143\"),stringToBytes32(\"173,53,108,118,0,91,225,190,75,58,237,11,145,170,80,31,223,160,19,224,72,74,139,39,204,143,28,138,58,6,146,236\"),stringToBytes32(\"39,85,63,205,15,4,54,98,94,226,133,8,158,35,188,246,184,64,138,80,154,79,155,84,26,29,20,220,22,161,154,161\"),stringToBytes32(\"108,126,118,229,216,44,176,185,146,148,38,161,2,45,10,183,160,242,92,136,1,127,86,233,124,144,222,138,209,68,15,236\"),stringToBytes32(\"156,231,91,140,1,196,16,29,57,0,228,99,174,222,206,29,196,137,69,219,166,235,43,181,6,222,166,75,138,115,203,187\"),stringToBytes32(\"161,179,85,2,99,113,67,216,40,130,200,149,231,226,153,227,53,134,47,23,69,173,204,98,56,149,67,210,72,86,71,38\"),stringToBytes32(\"118,60,170,234,197,222,101,144,147,90,94,166,126,136,86,205,209,199,210,238,76,37,176,142,134,59,226,143,146,229,220,195\"),stringToBytes32(\"152,133,131,169,86,217,34,159,44,92,195,232,128,85,86,22,127,209,239,78,108,81,208,100,50,218,188,214,181,52,205,165\"),stringToBytes32(\"26,124,115,117,51,221,146,118,251,18,5,187,17,164,86,190,29,69,125,128,140,93,210,227,231,128,52,73,112,117,131,139\"),stringToBytes32(\"218,85,78,213,122,114,48,108,166,111,144,246,187,115,219,115,151,87,81,238,51,26,100,240,231,93,165,149,87,206,180,49\"),stringToBytes32(\"251,115,155,188,72,232,156,53,243,249,234,124,79,26,89,165,195,222,29,189,130,183,12,204,91,125,97,95,230,196,184,80\"),stringToBytes32(\"205,61,203,151,24,38,180,17,180,67,13,140,160,72,86,193,136,77,159,204,74,232,179,61,213,62,114,222,246,160,59,160\"),stringToBytes32(\"173,26,220,25,66,223,135,51,154,176,252,197,10,57,141,214,227,144,70,93,39,228,223,255,132,129,52,116,247,221,185,61\"),stringToBytes32(\"42,46,47,174,83,95,19,131,148,238,154,157,75,173,45,185,67,172,34,198,10,128,118,40,109,81,67,78,134,109,176,31\"),stringToBytes32(\"176,147,6,209,132,238,152,220,189,130,61,195,21,97,233,229,54,112,246,177,245,200,154,58,241,51,232,113,18,105,181,118\"),stringToBytes32(\"92,228,164,75,143,222,163,92,209,172,115,96,70,221,166,76,217,66,186,0,0,176,33,4,47,104,20,238,148,143,131,80\"),stringToBytes32(\"46,184,132,179,125,254,150,226,176,146,231,246,178,174,184,243,187,98,37,159,112,95,174,204,131,120,152,131,229,31,79,230\"),stringToBytes32(\"169,184,244,158,110,172,147,57,244,184,236,114,99,20,239,202,249,25,36,112,2,191,41,238,172,234,135,25,173,134,134,4\"),stringToBytes32(\"145,12,157,240,0,79,171,165,60,72,235,161,27,51,213,101,127,215,43,45,208,43,15,169,63,61,153,13,245,80,14,79\"),stringToBytes32(\"125,134,100,128,106,123,23,176,225,250,115,255,92,214,151,214,48,51,19,7,68,207,170,7,237,80,32,184,208,123,191,237\"),stringToBytes32(\"67,12,196,40,205,183,218,116,253,221,164,150,15,252,215,155,8,58,54,61,237,142,227,17,132,198,181,210,81,176,27,81\"),stringToBytes32(\"191,53,250,76,65,60,251,233,0,5,253,127,204,2,200,239,136,249,222,107,236,234,190,111,89,246,79,131,52,108,218,197\"),stringToBytes32(\"153,33,205,235,155,164,160,39,247,235,134,108,64,181,245,136,209,85,159,216,133,86,194,241,236,94,232,197,35,134,246,49\"),stringToBytes32(\"205,77,217,124,148,81,246,89,84,172,171,80,100,49,56,235,141,47,159,136,198,168,179,110,85,31,42,41,190,53,251,221\"),stringToBytes32(\"159,1,127,111,15,89,225,248,226,16,77,194,6,28,34,9,181,172,38,236,44,230,57,56,212,213,83,186,210,236,138,215\"),stringToBytes32(\"197,222,7,13,226,151,35,229,210,165,28,140,89,54,153,146,8,35,212,33,59,239,68,166,199,5,125,161,130,67,93,192\"),stringToBytes32(\"210,175,104,58,109,36,136,169,250,235,173,92,84,240,109,19,156,193,190,115,100,222,73,42,52,122,117,233,198,69,64,114\"),stringToBytes32(\"191,240,184,24,168,124,43,108,149,9,47,49,116,194,234,218,7,85,164,153,177,242,93,114,214,13,123,205,104,124,116,218\"),stringToBytes32(\"27,248,49,7,140,214,75,160,128,196,21,56,62,105,106,37,132,123,48,37,214,251,85,9,193,248,61,38,120,169,110,210\"),stringToBytes32(\"131,3,57,123,102,91,1,194,185,222,211,47,101,238,148,54,197,179,244,219,82,178,105,132,133,2,220,211,249,19,53,51\"),stringToBytes32(\"78,160,16,57,169,232,32,14,134,191,8,188,219,125,128,138,185,207,59,131,19,162,183,167,245,222,5,132,138,64,29,46\"),stringToBytes32(\"163,133,247,205,225,227,170,112,226,77,18,249,95,77,7,17,56,78,116,182,231,126,79,16,90,181,163,241,238,71,5,221\"),stringToBytes32(\"237,78,29,42,57,174,126,97,10,219,201,114,160,82,39,65,67,136,186,205,26,251,129,108,155,70,30,208,63,75,136,109\"),stringToBytes32(\"121,95,72,188,126,231,37,160,102,96,137,52,180,124,10,83,27,13,18,251,74,205,64,92,50,240,195,200,143,70,56,46\"),stringToBytes32(\"56,214,180,206,140,107,131,2,103,61,77,196,57,142,101,210,176,8,130,119,93,221,219,42,228,1,229,248,113,131,88,5\"),stringToBytes32(\"244,20,177,53,152,214,132,205,168,35,225,183,238,141,219,221,15,109,185,2,207,49,149,159,214,143,182,116,167,164,22,29\"),stringToBytes32(\"217,155,130,151,101,187,208,184,56,80,168,71,243,174,99,223,254,222,135,53,189,204,217,5,120,145,84,15,18,32,232,90\"),stringToBytes32(\"64,159,23,191,250,4,242,92,225,7,116,212,143,97,26,83,80,137,255,55,84,161,189,89,48,180,69,222,18,122,15,207\"),stringToBytes32(\"215,72,241,12,210,62,86,22,122,15,68,224,234,4,76,126,21,221,188,6,190,139,208,19,23,91,55,228,36,251,36,2\"),stringToBytes32(\"54,120,211,246,246,152,226,83,181,95,212,159,63,132,179,194,38,249,23,33,137,32,146,231,130,140,221,207,126,32,19,97\"),stringToBytes32(\"105,4,35,228,194,104,192,46,51,160,113,145,118,171,57,75,186,247,97,53,178,233,27,54,159,57,252,102,250,249,148,23\"),stringToBytes32(\"206,154,104,163,41,161,234,199,228,27,250,28,42,171,199,121,227,36,169,212,203,77,64,53,187,53,128,53,5,253,69,114\"),stringToBytes32(\"19,89,164,129,227,28,60,126,105,130,204,113,130,15,69,79,157,66,87,117,231,175,23,63,95,66,144,88,75,174,205,165\"),stringToBytes32(\"132,67,126,192,228,225,215,9,33,238,143,93,216,145,95,33,79,111,100,111,182,1,131,4,91,26,212,145,177,90,26,190\"),stringToBytes32(\"22,141,146,50,59,124,241,220,197,81,127,210,217,242,17,169,145,188,95,115,254,111,185,98,16,123,5,107,182,21,83,84\"),stringToBytes32(\"167,22,212,149,123,132,80,104,62,68,41,58,117,13,0,46,184,94,94,131,110,128,239,248,177,14,24,240,138,164,65,114\"),stringToBytes32(\"127,173,99,138,113,110,150,46,125,247,184,2,70,8,3,130,236,224,160,244,144,45,63,120,3,150,82,86,30,186,120,126\"),stringToBytes32(\"252,245,114,240,187,115,23,31,172,204,166,231,166,210,194,188,110,18,142,20,85,185,19,207,172,130,4,193,27,196,10,214\"),stringToBytes32(\"219,183,180,137,132,14,237,246,232,146,234,36,18,189,84,196,153,68,170,168,37,126,90,99,4,95,141,184,199,53,227,245\"),stringToBytes32(\"26,45,230,210,50,39,251,79,105,149,214,43,87,60,154,154,229,166,1,56,6,150,122,9,2,84,45,152,178,254,208,239\"),stringToBytes32(\"75,76,152,224,74,165,26,30,24,248,96,74,79,167,162,184,127,156,69,128,78,48,3,197,48,252,198,92,42,139,40,23\"),stringToBytes32(\"81,34,238,93,252,220,21,138,156,123,71,230,125,98,246,182,45,47,161,223,240,189,182,40,166,121,149,147,166,197,2,136\"),stringToBytes32(\"83,135,82,103,179,87,89,143,110,53,27,105,27,67,245,144,40,110,14,112,21,123,159,171,90,154,33,175,55,51,13,51\"),stringToBytes32(\"27,169,178,105,39,174,1,244,22,50,198,150,189,17,125,223,236,241,146,160,100,155,46,76,239,219,234,57,157,29,24,57\"),stringToBytes32(\"113,45,166,128,115,106,183,201,229,151,197,23,189,149,204,14,113,254,243,19,237,2,98,171,152,48,28,121,25,180,48,156\"),stringToBytes32(\"43,155,217,179,190,61,169,35,50,238,166,173,150,73,9,149,10,170,203,117,27,12,114,193,216,228,214,170,10,76,29,239\"),stringToBytes32(\"38,157,212,60,131,102,244,155,157,141,154,22,37,177,152,34,248,48,138,60,158,92,146,10,180,133,150,254,116,43,232,101\"),stringToBytes32(\"37,198,153,87,119,33,86,71,86,196,203,195,184,248,61,247,67,221,108,178,44,85,111,19,120,12,41,219,201,156,164,59\"),stringToBytes32(\"117,201,213,194,152,30,101,6,19,111,220,116,231,148,93,212,128,17,91,113,69,200,86,118,222,165,55,151,133,202,249,229\"),stringToBytes32(\"49,133,6,79,111,164,164,219,79,253,4,217,129,103,163,223,95,76,202,31,79,152,161,207,76,31,242,53,64,46,49,90\"),stringToBytes32(\"183,64,165,23,128,198,147,74,238,150,157,7,47,12,122,207,178,32,174,88,94,113,4,114,251,107,155,190,30,0,153,211\"),stringToBytes32(\"46,104,167,252,251,86,196,49,18,1,10,177,224,7,224,224,84,75,160,64,218,53,252,214,248,216,197,202,26,4,71,230\"),stringToBytes32(\"190,97,251,237,46,225,12,50,156,130,141,210,145,133,17,71,145,71,3,188,139,131,57,118,95,55,177,32,156,102,129,161\"),stringToBytes32(\"57,217,231,182,151,67,234,93,141,153,36,239,106,104,184,140,167,130,25,247,14,189,115,82,37,92,216,174,80,165,106,41\"),stringToBytes32(\"240,146,114,224,3,3,151,245,210,94,219,78,41,24,108,29,150,253,68,114,172,73,201,121,2,80,64,173,0,155,162,86\"),stringToBytes32(\"124,211,53,17,33,134,146,45,37,67,206,218,75,186,45,4,128,14,156,209,127,126,80,254,151,125,100,150,39,121,173,82\"),stringToBytes32(\"191,206,150,171,167,88,30,82,100,225,255,217,103,148,242,83,92,82,185,213,171,35,159,49,117,66,195,37,8,216,157,252\"),stringToBytes32(\"16,247,46,135,217,100,218,245,206,52,171,118,143,156,84,239,62,245,29,92,46,34,34,109,137,147,35,7,102,126,110,194\"),stringToBytes32(\"107,251,199,52,173,64,95,216,150,29,158,172,42,81,142,170,169,177,105,150,253,198,123,165,67,42,139,149,137,100,113,234\"),stringToBytes32(\"48,219,243,133,99,68,225,232,108,241,220,149,122,64,114,250,156,90,33,253,205,43,1,198,52,196,219,18,7,142,125,142\"),stringToBytes32(\"5,66,63,99,157,163,154,232,115,73,87,102,71,148,229,219,243,78,126,137,172,18,112,214,85,130,144,184,201,137,8,136\"),stringToBytes32(\"10,125,0,81,96,229,90,114,239,63,122,208,74,111,143,56,137,197,180,108,237,85,96,231,118,110,253,4,191,27,17,10\"),stringToBytes32(\"249,107,98,81,86,128,40,64,207,212,160,69,25,234,187,79,203,26,127,11,39,58,60,70,56,84,233,40,195,24,218,33\"),stringToBytes32(\"245,162,97,39,21,109,55,86,77,248,92,98,213,69,137,191,150,173,73,9,181,126,211,84,138,27,133,121,120,112,51,75\")]"
              },
              {
                "js": "[[71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194],[86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165],[195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201],[7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35],[190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63],[96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250],[225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210],[242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201],[122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199],[35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145],[144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231],[89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96],[34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149],[95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94],[246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194],[233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144],[161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44],[63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220],[47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115],[221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77],[173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159],[233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139],[207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252],[30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27],[106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5],[141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220],[163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228],[126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31],[136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123],[105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70],[3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254],[176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73],[100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56],[83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215],[198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11],[152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159],[246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88],[123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220],[245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97],[213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21],[64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222],[188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63],[222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208],[114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28],[21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103],[69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43],[128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161],[219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0],[57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215],[89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83],[155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101],[135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13],[64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12],[235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60],[207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131],[240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126],[242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85],[14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72],[76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235],[49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128],[204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69],[179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46],[10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42],[230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89],[216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238],[148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111],[166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107],[222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71],[29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195],[221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111],[84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249],[211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50],[230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201],[217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158],[233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54],[120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78],[2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225],[164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230],[244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190],[169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73],[118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10],[171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35],[195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158],[30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88],[192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249],[248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114],[136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33],[69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26],[119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238],[144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80],[100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202],[252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177],[217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41],[25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36],[113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63],[127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182],[12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124]]",
                "sol": "[bytes32(stringToBytes32(\"71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194\")),bytes32(stringToBytes32(\"86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165\")),bytes32(stringToBytes32(\"195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201\")),bytes32(stringToBytes32(\"7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35\")),bytes32(stringToBytes32(\"190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63\")),bytes32(stringToBytes32(\"96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250\")),bytes32(stringToBytes32(\"225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210\")),bytes32(stringToBytes32(\"242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201\")),bytes32(stringToBytes32(\"122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199\")),bytes32(stringToBytes32(\"35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145\")),bytes32(stringToBytes32(\"144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231\")),bytes32(stringToBytes32(\"89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96\")),bytes32(stringToBytes32(\"34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149\")),bytes32(stringToBytes32(\"95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94\")),bytes32(stringToBytes32(\"246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194\")),bytes32(stringToBytes32(\"233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144\")),bytes32(stringToBytes32(\"161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44\")),bytes32(stringToBytes32(\"63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220\")),bytes32(stringToBytes32(\"47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115\")),bytes32(stringToBytes32(\"221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77\")),bytes32(stringToBytes32(\"173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159\")),bytes32(stringToBytes32(\"233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139\")),bytes32(stringToBytes32(\"207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252\")),bytes32(stringToBytes32(\"30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27\")),bytes32(stringToBytes32(\"106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5\")),bytes32(stringToBytes32(\"141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220\")),bytes32(stringToBytes32(\"163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228\")),bytes32(stringToBytes32(\"126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31\")),bytes32(stringToBytes32(\"136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123\")),bytes32(stringToBytes32(\"105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70\")),bytes32(stringToBytes32(\"3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254\")),bytes32(stringToBytes32(\"176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73\")),bytes32(stringToBytes32(\"100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56\")),bytes32(stringToBytes32(\"83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215\")),bytes32(stringToBytes32(\"198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11\")),bytes32(stringToBytes32(\"152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159\")),bytes32(stringToBytes32(\"246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88\")),bytes32(stringToBytes32(\"123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220\")),bytes32(stringToBytes32(\"245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97\")),bytes32(stringToBytes32(\"213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21\")),bytes32(stringToBytes32(\"64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222\")),bytes32(stringToBytes32(\"188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63\")),bytes32(stringToBytes32(\"222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208\")),bytes32(stringToBytes32(\"114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28\")),bytes32(stringToBytes32(\"21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103\")),bytes32(stringToBytes32(\"69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43\")),bytes32(stringToBytes32(\"128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161\")),bytes32(stringToBytes32(\"219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0\")),bytes32(stringToBytes32(\"57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215\")),bytes32(stringToBytes32(\"89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83\")),bytes32(stringToBytes32(\"155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101\")),bytes32(stringToBytes32(\"135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13\")),bytes32(stringToBytes32(\"64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12\")),bytes32(stringToBytes32(\"235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60\")),bytes32(stringToBytes32(\"207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131\")),bytes32(stringToBytes32(\"240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126\")),bytes32(stringToBytes32(\"242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85\")),bytes32(stringToBytes32(\"14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72\")),bytes32(stringToBytes32(\"76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235\")),bytes32(stringToBytes32(\"49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128\")),bytes32(stringToBytes32(\"204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69\")),bytes32(stringToBytes32(\"179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46\")),bytes32(stringToBytes32(\"10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42\")),bytes32(stringToBytes32(\"230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89\")),bytes32(stringToBytes32(\"216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238\")),bytes32(stringToBytes32(\"148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111\")),bytes32(stringToBytes32(\"166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107\")),bytes32(stringToBytes32(\"222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71\")),bytes32(stringToBytes32(\"29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195\")),bytes32(stringToBytes32(\"221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111\")),bytes32(stringToBytes32(\"84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249\")),bytes32(stringToBytes32(\"211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50\")),bytes32(stringToBytes32(\"230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201\")),bytes32(stringToBytes32(\"217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158\")),bytes32(stringToBytes32(\"233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54\")),bytes32(stringToBytes32(\"120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78\")),bytes32(stringToBytes32(\"2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225\")),bytes32(stringToBytes32(\"164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230\")),bytes32(stringToBytes32(\"244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190\")),bytes32(stringToBytes32(\"169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73\")),bytes32(stringToBytes32(\"118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10\")),bytes32(stringToBytes32(\"171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35\")),bytes32(stringToBytes32(\"195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158\")),bytes32(stringToBytes32(\"30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88\")),bytes32(stringToBytes32(\"192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249\")),bytes32(stringToBytes32(\"248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114\")),bytes32(stringToBytes32(\"136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33\")),bytes32(stringToBytes32(\"69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26\")),bytes32(stringToBytes32(\"119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238\")),bytes32(stringToBytes32(\"144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80\")),bytes32(stringToBytes32(\"100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202\")),bytes32(stringToBytes32(\"252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177\")),bytes32(stringToBytes32(\"217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41\")),bytes32(stringToBytes32(\"25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36\")),bytes32(stringToBytes32(\"113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63\")),bytes32(stringToBytes32(\"127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182\")),bytes32(stringToBytes32(\"12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail submitUserVotes(bytes32[],bytes32[]) when NOT comply with: _usersSaltHash.length != 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[[71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194],[86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165],[195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201],[7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35],[190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63],[96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250],[225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210],[242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201],[122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199],[35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145],[144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231],[89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96],[34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149],[95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94],[246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194],[233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144],[161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44],[63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220],[47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115],[221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77],[173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159],[233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139],[207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252],[30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27],[106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5],[141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220],[163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228],[126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31],[136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123],[105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70],[3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254],[176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73],[100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56],[83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215],[198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11],[152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159],[246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88],[123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220],[245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97],[213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21],[64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222],[188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63],[222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208],[114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28],[21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103],[69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43],[128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161],[219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0],[57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215],[89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83],[155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101],[135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13],[64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12],[235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60],[207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131],[240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126],[242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85],[14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72],[76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235],[49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128],[204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69],[179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46],[10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42],[230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89],[216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238],[148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111],[166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107],[222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71],[29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195],[221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111],[84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249],[211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50],[230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201],[217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158],[233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54],[120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78],[2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225],[164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230],[244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190],[169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73],[118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10],[171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35],[195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158],[30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88],[192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249],[248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114],[136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33],[69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26],[119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238],[144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80],[100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202],[252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177],[217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41],[25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36],[113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63],[127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182],[12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124]]",
                "sol": "[bytes32(stringToBytes32(\"71,230,18,67,216,181,240,146,144,160,233,184,32,70,178,236,7,250,231,19,238,136,91,40,72,165,6,162,50,142,233,194\")),bytes32(stringToBytes32(\"86,27,253,69,254,62,237,122,243,209,229,6,50,237,88,197,122,19,137,251,118,169,231,0,90,137,8,188,33,135,30,165\")),bytes32(stringToBytes32(\"195,36,163,114,134,215,249,241,72,111,138,224,161,26,29,95,168,79,105,98,14,103,49,203,102,135,132,216,70,142,245,201\")),bytes32(stringToBytes32(\"7,80,107,172,75,26,218,136,54,76,6,249,185,110,60,240,76,38,141,70,142,147,234,113,95,74,108,17,48,101,173,35\")),bytes32(stringToBytes32(\"190,35,106,47,166,94,232,74,112,240,30,76,190,179,246,19,36,52,36,37,189,132,130,70,56,195,157,204,211,121,79,63\")),bytes32(stringToBytes32(\"96,150,104,49,212,90,63,11,180,145,239,146,188,167,25,57,42,180,114,19,93,115,66,70,196,214,136,180,125,119,110,250\")),bytes32(stringToBytes32(\"225,120,213,177,161,111,164,85,182,202,131,1,236,134,242,161,76,5,204,186,150,77,21,238,206,32,102,205,83,174,252,210\")),bytes32(stringToBytes32(\"242,210,23,201,142,173,36,8,227,90,101,185,89,44,185,151,209,220,172,143,81,5,208,162,102,153,106,63,95,47,39,201\")),bytes32(stringToBytes32(\"122,84,28,34,93,237,103,45,185,148,17,113,161,192,42,235,133,62,149,180,22,202,150,10,232,226,151,20,183,170,1,199\")),bytes32(stringToBytes32(\"35,153,74,8,210,193,84,66,48,61,191,221,168,129,235,206,8,13,72,210,114,110,227,15,199,244,13,102,18,54,81,145\")),bytes32(stringToBytes32(\"144,85,212,178,231,73,33,204,193,90,197,208,109,75,55,107,106,33,194,52,180,232,7,78,227,161,94,82,188,231,24,231\")),bytes32(stringToBytes32(\"89,96,95,62,73,58,136,83,226,23,36,103,65,54,72,170,33,98,150,177,74,104,173,11,119,167,3,136,254,190,237,96\")),bytes32(stringToBytes32(\"34,0,81,250,27,105,160,144,65,98,166,125,70,228,86,53,1,214,137,15,215,203,36,200,21,234,94,91,32,110,176,149\")),bytes32(stringToBytes32(\"95,151,77,255,91,183,119,202,194,93,184,80,229,106,77,252,44,109,156,101,154,153,144,236,198,25,153,128,160,219,98,94\")),bytes32(stringToBytes32(\"246,94,103,116,185,225,66,244,233,161,82,32,238,67,201,183,26,147,2,84,37,78,107,40,31,108,49,168,207,252,103,194\")),bytes32(stringToBytes32(\"233,228,221,224,236,76,187,89,110,106,238,7,182,44,173,33,215,6,162,121,40,195,199,78,120,24,36,80,29,33,41,144\")),bytes32(stringToBytes32(\"161,69,27,72,17,159,82,212,248,139,186,157,149,217,226,4,158,213,234,222,199,89,8,110,241,242,233,227,37,243,240,44\")),bytes32(stringToBytes32(\"63,252,149,137,204,200,142,92,46,228,193,168,223,40,154,30,81,127,135,152,68,251,11,248,172,193,234,208,233,181,253,220\")),bytes32(stringToBytes32(\"47,115,129,110,163,237,86,60,180,80,117,149,180,62,76,126,85,77,119,46,151,49,137,98,26,216,183,80,241,16,75,115\")),bytes32(stringToBytes32(\"221,26,189,35,250,9,247,200,93,28,232,81,119,236,142,120,121,38,229,176,222,62,164,89,87,71,229,5,7,139,64,77\")),bytes32(stringToBytes32(\"173,237,184,87,98,189,161,170,245,118,187,6,174,14,116,196,9,228,12,98,183,219,254,25,33,78,12,134,253,144,6,159\")),bytes32(stringToBytes32(\"233,170,211,51,200,196,3,184,160,179,124,216,192,239,209,217,192,128,139,41,203,10,5,31,123,97,195,130,207,134,156,139\")),bytes32(stringToBytes32(\"207,250,210,31,156,178,198,28,170,47,148,84,229,210,185,203,150,221,152,36,166,114,1,24,167,67,172,167,59,26,143,252\")),bytes32(stringToBytes32(\"30,28,152,51,172,71,153,200,250,120,153,101,83,30,11,210,12,211,162,166,74,195,199,190,233,12,39,50,211,208,52,27\")),bytes32(stringToBytes32(\"106,206,194,170,143,238,30,93,92,173,191,30,118,172,31,140,196,156,176,141,158,238,129,66,130,135,118,127,159,120,62,5\")),bytes32(stringToBytes32(\"141,42,3,235,241,164,170,43,54,229,22,87,221,35,25,216,105,59,107,148,134,116,141,190,206,249,59,217,219,124,165,220\")),bytes32(stringToBytes32(\"163,96,41,22,244,119,43,241,148,220,123,182,182,177,122,79,25,161,171,33,93,150,96,219,223,158,245,1,140,231,6,228\")),bytes32(stringToBytes32(\"126,144,78,58,251,145,112,239,133,157,118,124,183,238,149,13,72,193,164,207,190,129,248,40,108,224,87,174,51,143,104,31\")),bytes32(stringToBytes32(\"136,252,134,145,101,196,63,39,218,143,197,31,158,140,24,54,90,5,119,69,182,73,105,199,56,200,165,57,247,186,238,123\")),bytes32(stringToBytes32(\"105,241,93,44,205,79,37,167,78,31,89,16,251,10,1,110,15,69,68,139,169,141,159,29,211,153,246,36,167,110,194,70\")),bytes32(stringToBytes32(\"3,238,235,237,101,222,111,5,134,52,252,196,104,192,233,193,144,48,52,254,225,83,49,4,22,74,111,239,16,142,114,254\")),bytes32(stringToBytes32(\"176,90,16,110,199,129,68,26,132,157,132,208,123,157,254,25,38,251,100,37,159,64,168,234,165,253,44,4,115,60,217,73\")),bytes32(stringToBytes32(\"100,70,221,217,235,100,248,194,56,1,193,180,212,230,173,91,65,110,39,72,168,182,7,161,123,244,202,234,212,14,109,56\")),bytes32(stringToBytes32(\"83,65,118,127,203,195,5,136,204,249,120,148,97,227,173,5,195,89,159,16,33,224,1,159,28,34,244,48,241,141,3,215\")),bytes32(stringToBytes32(\"198,227,180,250,104,131,215,173,187,166,87,134,237,137,136,27,126,19,75,78,63,30,82,85,182,168,105,97,146,3,126,11\")),bytes32(stringToBytes32(\"152,51,166,180,92,2,200,143,103,61,192,186,20,192,122,216,123,41,71,56,106,33,207,119,254,105,55,155,26,18,196,159\")),bytes32(stringToBytes32(\"246,157,74,210,77,54,185,97,176,86,194,54,122,139,41,85,135,147,24,120,115,76,3,131,160,149,95,227,80,175,59,88\")),bytes32(stringToBytes32(\"123,60,106,132,128,126,3,69,44,110,178,88,142,82,159,12,48,214,1,122,44,201,38,196,20,135,248,132,141,99,38,220\")),bytes32(stringToBytes32(\"245,209,213,152,32,182,82,29,174,101,161,232,14,47,79,0,1,243,158,82,54,23,150,6,168,14,249,226,174,79,181,97\")),bytes32(stringToBytes32(\"213,211,233,109,27,140,234,5,8,202,93,52,17,12,226,215,97,33,149,251,79,175,177,241,186,151,148,161,138,150,127,21\")),bytes32(stringToBytes32(\"64,45,205,27,53,59,33,209,181,176,190,149,157,81,208,92,253,138,165,223,194,153,126,155,217,219,136,177,166,170,187,222\")),bytes32(stringToBytes32(\"188,138,95,27,35,165,98,160,46,92,19,52,199,150,115,60,210,114,253,212,176,140,112,84,167,222,48,131,245,45,249,63\")),bytes32(stringToBytes32(\"222,123,27,173,236,219,212,85,251,114,95,127,31,196,220,228,26,188,169,212,228,47,98,176,185,155,193,201,193,226,58,208\")),bytes32(stringToBytes32(\"114,219,127,237,146,101,76,44,85,208,135,44,138,206,157,125,175,201,5,231,225,77,155,219,198,13,239,219,234,117,205,28\")),bytes32(stringToBytes32(\"21,96,153,211,168,201,187,13,24,127,230,204,128,36,83,176,18,37,240,13,231,76,158,175,142,204,39,245,196,158,64,103\")),bytes32(stringToBytes32(\"69,172,34,236,108,19,228,60,196,212,55,146,172,162,172,111,29,63,72,44,162,115,234,207,175,40,212,64,47,126,216,43\")),bytes32(stringToBytes32(\"128,147,231,111,219,14,63,82,72,91,189,46,54,116,143,61,165,4,10,53,24,219,74,174,28,54,55,97,103,229,137,161\")),bytes32(stringToBytes32(\"219,98,63,10,165,119,48,100,50,83,220,137,193,136,142,117,85,5,216,197,118,136,29,193,123,196,53,68,231,26,169,0\")),bytes32(stringToBytes32(\"57,99,102,220,194,125,25,78,210,147,200,194,74,6,9,249,161,189,55,106,231,143,192,214,0,183,110,177,45,175,173,215\")),bytes32(stringToBytes32(\"89,137,203,178,64,211,185,75,248,231,109,162,27,180,12,179,204,214,199,150,147,236,184,232,190,115,247,195,102,120,160,83\")),bytes32(stringToBytes32(\"155,188,87,35,121,23,30,247,149,209,36,215,65,62,198,40,239,186,169,223,215,251,202,182,199,102,255,122,210,252,82,101\")),bytes32(stringToBytes32(\"135,29,237,167,250,135,197,145,52,88,91,84,160,87,172,135,221,181,180,174,73,50,53,223,65,143,78,111,22,9,237,13\")),bytes32(stringToBytes32(\"64,12,35,121,71,107,54,151,245,245,75,129,149,201,55,186,140,186,126,139,163,2,198,79,194,56,88,245,82,113,150,12\")),bytes32(stringToBytes32(\"235,172,220,232,185,98,174,221,150,172,131,144,43,108,20,250,212,167,224,254,87,143,183,97,37,38,39,19,247,21,58,60\")),bytes32(stringToBytes32(\"207,146,94,203,0,255,43,133,175,163,114,85,238,108,113,52,84,27,240,68,124,17,187,72,67,238,117,250,129,184,144,131\")),bytes32(stringToBytes32(\"240,112,13,129,187,116,123,176,8,144,231,246,181,231,45,29,222,130,186,134,17,139,30,11,239,20,155,37,210,0,173,126\")),bytes32(stringToBytes32(\"242,184,50,148,247,218,69,59,3,61,74,238,121,74,169,84,100,39,224,114,39,185,38,68,153,131,36,242,70,227,75,85\")),bytes32(stringToBytes32(\"14,15,238,128,229,67,205,23,109,14,14,153,220,59,139,11,125,33,248,46,157,43,253,141,201,24,42,65,74,69,49,72\")),bytes32(stringToBytes32(\"76,222,253,67,106,233,32,1,129,80,102,220,216,95,51,6,162,17,144,98,139,44,119,180,217,188,121,95,77,51,177,235\")),bytes32(stringToBytes32(\"49,184,49,142,230,74,239,160,35,122,198,5,193,196,122,139,85,191,115,210,28,76,85,168,136,182,29,40,121,15,225,128\")),bytes32(stringToBytes32(\"204,157,155,223,38,129,234,218,50,107,81,244,122,194,210,70,18,152,230,107,15,21,117,116,108,185,243,197,104,113,135,69\")),bytes32(stringToBytes32(\"179,26,193,138,95,89,171,246,164,55,37,129,46,238,21,41,172,180,215,226,203,61,177,36,119,18,0,117,231,241,218,46\")),bytes32(stringToBytes32(\"10,211,133,14,27,83,54,60,42,159,249,203,89,175,169,52,134,29,40,242,185,68,112,156,160,226,60,83,103,83,2,42\")),bytes32(stringToBytes32(\"230,97,205,163,192,231,59,205,99,155,142,20,182,130,64,110,9,230,165,189,25,233,103,56,13,38,159,116,129,115,78,89\")),bytes32(stringToBytes32(\"216,44,31,208,51,185,74,233,13,23,207,32,66,89,188,253,110,254,12,228,128,140,30,130,159,24,234,7,9,143,232,238\")),bytes32(stringToBytes32(\"148,231,69,130,23,142,192,99,167,97,43,114,21,227,181,24,228,5,119,103,63,13,224,202,120,163,117,122,143,228,41,111\")),bytes32(stringToBytes32(\"166,142,177,96,168,216,17,33,10,53,207,242,52,125,84,249,185,50,187,201,238,53,240,233,196,21,89,111,21,232,11,107\")),bytes32(stringToBytes32(\"222,59,7,230,118,64,0,233,88,47,122,69,69,30,218,65,93,73,166,67,145,165,255,111,57,251,237,67,106,150,38,71\")),bytes32(stringToBytes32(\"29,135,160,99,168,167,154,117,233,181,82,94,36,226,16,147,159,5,183,30,253,206,199,105,217,88,55,234,192,196,224,195\")),bytes32(stringToBytes32(\"221,239,161,170,168,57,37,223,37,112,3,193,117,155,93,208,77,88,51,173,185,93,229,9,36,194,101,32,48,15,231,111\")),bytes32(stringToBytes32(\"84,99,237,205,183,68,164,35,247,247,193,100,238,134,191,225,177,168,136,150,106,121,36,81,221,48,228,7,214,7,26,249\")),bytes32(stringToBytes32(\"211,237,142,55,11,241,238,43,220,86,3,248,148,62,210,229,0,31,215,74,41,50,172,34,134,248,253,116,157,180,138,50\")),bytes32(stringToBytes32(\"230,64,126,154,142,115,207,146,184,10,247,141,55,194,186,27,233,60,118,251,32,51,68,57,198,192,223,30,101,250,68,201\")),bytes32(stringToBytes32(\"217,127,14,61,12,175,176,225,54,211,48,55,158,197,142,150,30,244,84,204,177,41,2,138,179,95,88,99,205,117,134,158\")),bytes32(stringToBytes32(\"233,108,195,138,153,215,144,211,234,68,188,79,110,173,54,216,196,215,144,212,27,233,184,204,74,194,18,213,23,254,98,54\")),bytes32(stringToBytes32(\"120,187,189,95,248,206,208,187,20,141,94,197,5,7,214,126,49,167,91,148,216,19,151,104,65,30,210,81,146,108,254,78\")),bytes32(stringToBytes32(\"2,31,98,137,241,121,69,20,70,1,246,162,183,193,239,163,208,62,71,110,111,81,80,88,5,96,147,188,131,234,72,225\")),bytes32(stringToBytes32(\"164,70,146,131,152,91,107,192,122,93,204,5,146,255,45,155,69,176,47,209,202,72,141,120,204,146,156,76,14,41,28,230\")),bytes32(stringToBytes32(\"244,153,223,155,132,120,166,101,60,199,2,68,41,193,31,25,194,34,235,117,104,226,59,159,205,111,31,131,141,216,189,190\")),bytes32(stringToBytes32(\"169,110,6,100,150,235,236,22,203,100,102,192,155,13,80,208,57,183,196,161,118,98,96,47,75,21,190,156,185,122,59,73\")),bytes32(stringToBytes32(\"118,153,57,54,121,21,71,105,78,50,135,106,152,231,46,252,85,176,57,94,143,130,133,153,169,96,191,163,33,133,125,10\")),bytes32(stringToBytes32(\"171,185,9,253,172,177,252,120,195,67,21,152,94,10,121,146,227,102,108,140,173,80,177,175,249,208,176,69,78,56,70,35\")),bytes32(stringToBytes32(\"195,125,38,153,1,219,6,76,175,19,245,183,20,139,215,43,24,169,252,227,30,189,219,235,199,177,148,15,158,204,244,158\")),bytes32(stringToBytes32(\"30,242,247,127,52,218,252,68,47,227,55,164,123,208,79,225,167,12,135,34,198,173,135,180,72,20,111,131,223,197,53,88\")),bytes32(stringToBytes32(\"192,133,210,206,51,51,114,186,156,61,247,18,128,185,14,219,192,146,230,172,0,138,145,225,94,187,84,184,61,126,36,249\")),bytes32(stringToBytes32(\"248,252,92,71,217,254,8,215,194,4,193,41,231,130,85,173,212,170,3,118,156,167,17,25,39,65,123,175,178,155,228,114\")),bytes32(stringToBytes32(\"136,30,113,23,170,65,185,196,123,17,64,167,254,102,21,119,94,252,209,48,56,82,217,194,116,8,224,94,184,58,212,33\")),bytes32(stringToBytes32(\"69,136,135,79,52,164,130,187,7,67,182,223,39,220,123,242,94,233,235,103,14,40,227,208,55,123,252,90,78,27,32,26\")),bytes32(stringToBytes32(\"119,70,27,54,233,109,150,6,23,72,244,48,75,5,221,95,156,103,22,58,12,23,58,115,65,0,56,233,192,163,195,238\")),bytes32(stringToBytes32(\"144,97,7,133,132,28,161,84,186,183,206,5,138,228,251,208,74,71,49,116,76,234,157,64,145,209,200,224,111,69,108,80\")),bytes32(stringToBytes32(\"100,176,152,44,237,179,161,92,0,199,183,220,250,21,34,135,112,7,132,30,19,37,123,43,28,95,98,196,136,120,153,202\")),bytes32(stringToBytes32(\"252,6,60,172,154,190,9,158,81,48,187,40,79,227,133,149,35,48,230,25,220,34,145,58,208,132,23,142,159,157,23,177\")),bytes32(stringToBytes32(\"217,209,121,207,8,71,63,185,3,138,30,71,177,110,48,196,15,99,2,1,214,67,86,13,204,5,184,222,137,64,108,41\")),bytes32(stringToBytes32(\"25,124,177,168,121,4,142,48,220,252,118,220,198,155,37,246,121,254,192,11,46,93,24,104,253,74,190,119,134,10,238,36\")),bytes32(stringToBytes32(\"113,229,131,249,213,187,63,64,163,246,0,61,214,20,88,37,142,197,53,9,232,232,74,240,79,247,94,56,167,154,104,63\")),bytes32(stringToBytes32(\"127,230,62,103,102,81,156,70,243,135,180,182,48,5,187,77,65,149,176,166,160,66,31,109,11,125,174,25,183,178,79,182\")),bytes32(stringToBytes32(\"12,8,3,82,5,52,10,158,212,178,38,191,4,157,58,227,204,6,188,178,101,38,254,123,17,139,226,182,172,54,118,124\"))]"
              },
              {
                "js": "{from:accounts[8]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.537ZOnChainVoting.finalizeVote": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finalizeVote(string) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=endTime,submissionsCount==votesCount",
          "parameters": [
            {
              "js": "\"UsesExample\"",
              "sol": "\"UsesExample\""
            },
            {
              "js": "{from:accounts[8]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finalizeVote(string) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "\"UsesExample\"",
                "sol": "\"UsesExample\""
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.542ZPartialRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[],uint256[]) WHEN msg.sender==_owner,_holders.length==_numberOfTokens.length,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[4],accounts[9],accounts[2],accounts[5],accounts[4],accounts[6],accounts[8],accounts[2],accounts[7],accounts[8],accounts[2],accounts[4],accounts[7],accounts[6],accounts[7],accounts[2],accounts[4],accounts[8],accounts[5],accounts[4],accounts[7],accounts[2],accounts[3],accounts[1],accounts[8],accounts[5],accounts[9],accounts[3],accounts[6],accounts[6],accounts[5],accounts[0],accounts[2],accounts[3],accounts[9],accounts[7],accounts[3],accounts[8],accounts[2],accounts[5],accounts[0],accounts[7],accounts[2],accounts[8],accounts[9],accounts[4],accounts[0],accounts[9],accounts[6],accounts[4],accounts[4],accounts[3],accounts[8],accounts[9],accounts[0],accounts[3],accounts[3],accounts[4],accounts[3],accounts[8],accounts[7],accounts[9],accounts[5],accounts[0],accounts[6],accounts[0],accounts[7],accounts[9],accounts[2],accounts[4],accounts[3],accounts[9],accounts[1],accounts[5],accounts[2],accounts[2],accounts[1],accounts[4],accounts[5],accounts[3],accounts[2],accounts[8],accounts[5],accounts[9],accounts[2],accounts[6],accounts[8],accounts[9],accounts[6],accounts[0],accounts[2],accounts[3],accounts[7],accounts[8],accounts[4],accounts[0],accounts[9],accounts[8],accounts[2],accounts[0],accounts[4],accounts[3],accounts[2],accounts[9],accounts[1],accounts[4],accounts[6],accounts[2],accounts[3],accounts[5],accounts[4],accounts[8],accounts[2],accounts[8],accounts[6],accounts[7],accounts[9],accounts[3],accounts[0],accounts[8],accounts[5],accounts[8],accounts[3],accounts[9],accounts[5],accounts[1],accounts[5],accounts[1],accounts[7],accounts[3],accounts[3],accounts[4],accounts[4],accounts[0],accounts[0],accounts[8],accounts[9],accounts[9],accounts[1],accounts[4],accounts[7],accounts[6],accounts[8],accounts[2],accounts[1],accounts[5],accounts[5],accounts[0],accounts[0],accounts[6],accounts[8],accounts[4],accounts[7],accounts[5],accounts[3],accounts[7],accounts[0],accounts[5],accounts[3],accounts[8],accounts[1],accounts[4],accounts[2],accounts[8],accounts[3],accounts[5],accounts[5],accounts[9],accounts[7],accounts[3],accounts[4],accounts[6],accounts[3],accounts[2],accounts[8],accounts[0],accounts[2],accounts[5],accounts[2],accounts[1],accounts[0],accounts[7],accounts[7],accounts[1],accounts[4],accounts[8],accounts[8],accounts[6],accounts[3],accounts[3],accounts[3],accounts[2],accounts[3],accounts[5],accounts[4],accounts[5],accounts[9],accounts[0],accounts[5],accounts[5],accounts[6],accounts[3],accounts[5],accounts[9],accounts[5],accounts[1],accounts[7],accounts[7],accounts[0],accounts[0],accounts[7],accounts[2],accounts[2],accounts[7],accounts[4],accounts[6],accounts[7],accounts[4],accounts[0],accounts[5],accounts[3],accounts[4],accounts[1],accounts[6],accounts[7],accounts[3],accounts[6],accounts[4],accounts[4],accounts[0],accounts[2],accounts[7],accounts[1],accounts[9],accounts[1],accounts[9],accounts[4],accounts[9],accounts[7],accounts[3],accounts[6],accounts[3],accounts[2],accounts[7],accounts[9],accounts[4],accounts[7],accounts[5],accounts[0],accounts[6],accounts[1],accounts[6],accounts[2],accounts[7],accounts[1]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "[4,1338,3,4,95,2014223716,28,96,0,2014223716,6,1338,2014223715,1337,2014223714,6,254,3,95,0,65,29,1336,1336,2014223716,10000,29,5,2014223714,6,64,10001,96,6,1532892064,28,10001,2014223714,9999,2,95,10001,256,9999,3,10000,1532892064,1338,1532892063,6,256,4,1532892062,1532892063,254,64,1,6,66,1,3,257,9999,0,257,256,1532892064,1337,1337,254,96,257,3,1,5,64,1532892064,95,97,1532892062,96,28,96,64,0,1532892064,97,6,66,1532892062,96,97,256,95,2014223714,96,29,0,1532892064,3,1532892064,10000,254,2014223714,1532892064,256,66,97,255,10000,1337,5,10001,2,1532892064,10000,66,4,3,3,1532892064,1532892064,2014223714,27,27,64,6,10000,65,2014223715,9999,6,255,64,64,10001,2014223715,64,28,1337,6,256,254,1532892064,1338,95,28,1336,96,66,29,97,64,6,2014223716,257,1336,1,9999,27,97,2014223716,254,1,26,26,64,2,1532892062,6,1532892062,255,2,64,65,27,256,257,3,27,2014223714,1338,95,96,1,6,5,1338,1532892064,1532892062,65,1532892063,97,6,4,64,2014223714,2014223715,66,1337,2014223715,1532892063,5,29,1532892062,2014223715,1532892063,64,2014223714,1532892062,97,4,66,2014223716,2014223716,29,66,257,257,1532892064,1532892064,97,1,1532892062,97,0,65,96,97,3,4,2014223714,65,1338,255,64,1338,254,2014223714,256,256,1532892063,0,1337,255,1532892062,256,255,95,3,1532892063,1532892062,0,4,5]",
              "sol": "[uint256(4),uint256(1338),uint256(3),uint256(4),uint256(95),uint256(2014223716),uint256(28),uint256(96),uint256(0),uint256(2014223716),uint256(6),uint256(1338),uint256(2014223715),uint256(1337),uint256(2014223714),uint256(6),uint256(254),uint256(3),uint256(95),uint256(0),uint256(65),uint256(29),uint256(1336),uint256(1336),uint256(2014223716),uint256(10000),uint256(29),uint256(5),uint256(2014223714),uint256(6),uint256(64),uint256(10001),uint256(96),uint256(6),uint256(1532892064),uint256(28),uint256(10001),uint256(2014223714),uint256(9999),uint256(2),uint256(95),uint256(10001),uint256(256),uint256(9999),uint256(3),uint256(10000),uint256(1532892064),uint256(1338),uint256(1532892063),uint256(6),uint256(256),uint256(4),uint256(1532892062),uint256(1532892063),uint256(254),uint256(64),uint256(1),uint256(6),uint256(66),uint256(1),uint256(3),uint256(257),uint256(9999),uint256(0),uint256(257),uint256(256),uint256(1532892064),uint256(1337),uint256(1337),uint256(254),uint256(96),uint256(257),uint256(3),uint256(1),uint256(5),uint256(64),uint256(1532892064),uint256(95),uint256(97),uint256(1532892062),uint256(96),uint256(28),uint256(96),uint256(64),uint256(0),uint256(1532892064),uint256(97),uint256(6),uint256(66),uint256(1532892062),uint256(96),uint256(97),uint256(256),uint256(95),uint256(2014223714),uint256(96),uint256(29),uint256(0),uint256(1532892064),uint256(3),uint256(1532892064),uint256(10000),uint256(254),uint256(2014223714),uint256(1532892064),uint256(256),uint256(66),uint256(97),uint256(255),uint256(10000),uint256(1337),uint256(5),uint256(10001),uint256(2),uint256(1532892064),uint256(10000),uint256(66),uint256(4),uint256(3),uint256(3),uint256(1532892064),uint256(1532892064),uint256(2014223714),uint256(27),uint256(27),uint256(64),uint256(6),uint256(10000),uint256(65),uint256(2014223715),uint256(9999),uint256(6),uint256(255),uint256(64),uint256(64),uint256(10001),uint256(2014223715),uint256(64),uint256(28),uint256(1337),uint256(6),uint256(256),uint256(254),uint256(1532892064),uint256(1338),uint256(95),uint256(28),uint256(1336),uint256(96),uint256(66),uint256(29),uint256(97),uint256(64),uint256(6),uint256(2014223716),uint256(257),uint256(1336),uint256(1),uint256(9999),uint256(27),uint256(97),uint256(2014223716),uint256(254),uint256(1),uint256(26),uint256(26),uint256(64),uint256(2),uint256(1532892062),uint256(6),uint256(1532892062),uint256(255),uint256(2),uint256(64),uint256(65),uint256(27),uint256(256),uint256(257),uint256(3),uint256(27),uint256(2014223714),uint256(1338),uint256(95),uint256(96),uint256(1),uint256(6),uint256(5),uint256(1338),uint256(1532892064),uint256(1532892062),uint256(65),uint256(1532892063),uint256(97),uint256(6),uint256(4),uint256(64),uint256(2014223714),uint256(2014223715),uint256(66),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(5),uint256(29),uint256(1532892062),uint256(2014223715),uint256(1532892063),uint256(64),uint256(2014223714),uint256(1532892062),uint256(97),uint256(4),uint256(66),uint256(2014223716),uint256(2014223716),uint256(29),uint256(66),uint256(257),uint256(257),uint256(1532892064),uint256(1532892064),uint256(97),uint256(1),uint256(1532892062),uint256(97),uint256(0),uint256(65),uint256(96),uint256(97),uint256(3),uint256(4),uint256(2014223714),uint256(65),uint256(1338),uint256(255),uint256(64),uint256(1338),uint256(254),uint256(2014223714),uint256(256),uint256(256),uint256(1532892063),uint256(0),uint256(1337),uint256(255),uint256(1532892062),uint256(256),uint256(255),uint256(95),uint256(3),uint256(1532892063),uint256(1532892062),uint256(0),uint256(4),uint256(5)]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[4],accounts[9],accounts[2],accounts[5],accounts[4],accounts[6],accounts[8],accounts[2],accounts[7],accounts[8],accounts[2],accounts[4],accounts[7],accounts[6],accounts[7],accounts[2],accounts[4],accounts[8],accounts[5],accounts[4],accounts[7],accounts[2],accounts[3],accounts[1],accounts[8],accounts[5],accounts[9],accounts[3],accounts[6],accounts[6],accounts[5],accounts[0],accounts[2],accounts[3],accounts[9],accounts[7],accounts[3],accounts[8],accounts[2],accounts[5],accounts[0],accounts[7],accounts[2],accounts[8],accounts[9],accounts[4],accounts[0],accounts[9],accounts[6],accounts[4],accounts[4],accounts[3],accounts[8],accounts[9],accounts[0],accounts[3],accounts[3],accounts[4],accounts[3],accounts[8],accounts[7],accounts[9],accounts[5],accounts[0],accounts[6],accounts[0],accounts[7],accounts[9],accounts[2],accounts[4],accounts[3],accounts[9],accounts[1],accounts[5],accounts[2],accounts[2],accounts[1],accounts[4],accounts[5],accounts[3],accounts[2],accounts[8],accounts[5],accounts[9],accounts[2],accounts[6],accounts[8],accounts[9],accounts[6],accounts[0],accounts[2],accounts[3],accounts[7],accounts[8],accounts[4],accounts[0],accounts[9],accounts[8],accounts[2],accounts[0],accounts[4],accounts[3],accounts[2],accounts[9],accounts[1],accounts[4],accounts[6],accounts[2],accounts[3],accounts[5],accounts[4],accounts[8],accounts[2],accounts[8],accounts[6],accounts[7],accounts[9],accounts[3],accounts[0],accounts[8],accounts[5],accounts[8],accounts[3],accounts[9],accounts[5],accounts[1],accounts[5],accounts[1],accounts[7],accounts[3],accounts[3],accounts[4],accounts[4],accounts[0],accounts[0],accounts[8],accounts[9],accounts[9],accounts[1],accounts[4],accounts[7],accounts[6],accounts[8],accounts[2],accounts[1],accounts[5],accounts[5],accounts[0],accounts[0],accounts[6],accounts[8],accounts[4],accounts[7],accounts[5],accounts[3],accounts[7],accounts[0],accounts[5],accounts[3],accounts[8],accounts[1],accounts[4],accounts[2],accounts[8],accounts[3],accounts[5],accounts[5],accounts[9],accounts[7],accounts[3],accounts[4],accounts[6],accounts[3],accounts[2],accounts[8],accounts[0],accounts[2],accounts[5],accounts[2],accounts[1],accounts[0],accounts[7],accounts[7],accounts[1],accounts[4],accounts[8],accounts[8],accounts[6],accounts[3],accounts[3],accounts[3],accounts[2],accounts[3],accounts[5],accounts[4],accounts[5],accounts[9],accounts[0],accounts[5],accounts[5],accounts[6],accounts[3],accounts[5],accounts[9],accounts[5],accounts[1],accounts[7],accounts[7],accounts[0],accounts[0],accounts[7],accounts[2],accounts[2],accounts[7],accounts[4],accounts[6],accounts[7],accounts[4],accounts[0],accounts[5],accounts[3],accounts[4],accounts[1],accounts[6],accounts[7],accounts[3],accounts[6],accounts[4],accounts[4],accounts[0],accounts[2],accounts[7],accounts[1],accounts[9],accounts[1],accounts[9],accounts[4],accounts[9],accounts[7],accounts[3],accounts[6],accounts[3],accounts[2],accounts[7],accounts[9],accounts[4],accounts[7],accounts[5],accounts[0],accounts[6],accounts[1],accounts[6],accounts[2],accounts[7],accounts[1]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "[4,1338,3,4,95,2014223716,28,96,0,2014223716,6,1338,2014223715,1337,2014223714,6,254,3,95,0,65,29,1336,1336,2014223716,10000,29,5,2014223714,6,64,10001,96,6,1532892064,28,10001,2014223714,9999,2,95,10001,256,9999,3,10000,1532892064,1338,1532892063,6,256,4,1532892062,1532892063,254,64,1,6,66,1,3,257,9999,0,257,256,1532892064,1337,1337,254,96,257,3,1,5,64,1532892064,95,97,1532892062,96,28,96,64,0,1532892064,97,6,66,1532892062,96,97,256,95,2014223714,96,29,0,1532892064,3,1532892064,10000,254,2014223714,1532892064,256,66,97,255,10000,1337,5,10001,2,1532892064,10000,66,4,3,3,1532892064,1532892064,2014223714,27,27,64,6,10000,65,2014223715,9999,6,255,64,64,10001,2014223715,64,28,1337,6,256,254,1532892064,1338,95,28,1336,96,66,29,97,64,6,2014223716,257,1336,1,9999,27,97,2014223716,254,1,26,26,64,2,1532892062,6,1532892062,255,2,64,65,27,256,257,3,27,2014223714,1338,95,96,1,6,5,1338,1532892064,1532892062,65,1532892063,97,6,4,64,2014223714,2014223715,66,1337,2014223715,1532892063,5,29,1532892062,2014223715,1532892063,64,2014223714,1532892062,97,4,66,2014223716,2014223716,29,66,257,257,1532892064,1532892064,97,1,1532892062,97,0,65,96,97,3,4,2014223714,65,1338,255,64,1338,254,2014223714,256,256,1532892063,0,1337,255,1532892062,256,255,95,3,1532892063,1532892062,0,4,5]",
                "sol": "[uint256(4),uint256(1338),uint256(3),uint256(4),uint256(95),uint256(2014223716),uint256(28),uint256(96),uint256(0),uint256(2014223716),uint256(6),uint256(1338),uint256(2014223715),uint256(1337),uint256(2014223714),uint256(6),uint256(254),uint256(3),uint256(95),uint256(0),uint256(65),uint256(29),uint256(1336),uint256(1336),uint256(2014223716),uint256(10000),uint256(29),uint256(5),uint256(2014223714),uint256(6),uint256(64),uint256(10001),uint256(96),uint256(6),uint256(1532892064),uint256(28),uint256(10001),uint256(2014223714),uint256(9999),uint256(2),uint256(95),uint256(10001),uint256(256),uint256(9999),uint256(3),uint256(10000),uint256(1532892064),uint256(1338),uint256(1532892063),uint256(6),uint256(256),uint256(4),uint256(1532892062),uint256(1532892063),uint256(254),uint256(64),uint256(1),uint256(6),uint256(66),uint256(1),uint256(3),uint256(257),uint256(9999),uint256(0),uint256(257),uint256(256),uint256(1532892064),uint256(1337),uint256(1337),uint256(254),uint256(96),uint256(257),uint256(3),uint256(1),uint256(5),uint256(64),uint256(1532892064),uint256(95),uint256(97),uint256(1532892062),uint256(96),uint256(28),uint256(96),uint256(64),uint256(0),uint256(1532892064),uint256(97),uint256(6),uint256(66),uint256(1532892062),uint256(96),uint256(97),uint256(256),uint256(95),uint256(2014223714),uint256(96),uint256(29),uint256(0),uint256(1532892064),uint256(3),uint256(1532892064),uint256(10000),uint256(254),uint256(2014223714),uint256(1532892064),uint256(256),uint256(66),uint256(97),uint256(255),uint256(10000),uint256(1337),uint256(5),uint256(10001),uint256(2),uint256(1532892064),uint256(10000),uint256(66),uint256(4),uint256(3),uint256(3),uint256(1532892064),uint256(1532892064),uint256(2014223714),uint256(27),uint256(27),uint256(64),uint256(6),uint256(10000),uint256(65),uint256(2014223715),uint256(9999),uint256(6),uint256(255),uint256(64),uint256(64),uint256(10001),uint256(2014223715),uint256(64),uint256(28),uint256(1337),uint256(6),uint256(256),uint256(254),uint256(1532892064),uint256(1338),uint256(95),uint256(28),uint256(1336),uint256(96),uint256(66),uint256(29),uint256(97),uint256(64),uint256(6),uint256(2014223716),uint256(257),uint256(1336),uint256(1),uint256(9999),uint256(27),uint256(97),uint256(2014223716),uint256(254),uint256(1),uint256(26),uint256(26),uint256(64),uint256(2),uint256(1532892062),uint256(6),uint256(1532892062),uint256(255),uint256(2),uint256(64),uint256(65),uint256(27),uint256(256),uint256(257),uint256(3),uint256(27),uint256(2014223714),uint256(1338),uint256(95),uint256(96),uint256(1),uint256(6),uint256(5),uint256(1338),uint256(1532892064),uint256(1532892062),uint256(65),uint256(1532892063),uint256(97),uint256(6),uint256(4),uint256(64),uint256(2014223714),uint256(2014223715),uint256(66),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(5),uint256(29),uint256(1532892062),uint256(2014223715),uint256(1532892063),uint256(64),uint256(2014223714),uint256(1532892062),uint256(97),uint256(4),uint256(66),uint256(2014223716),uint256(2014223716),uint256(29),uint256(66),uint256(257),uint256(257),uint256(1532892064),uint256(1532892064),uint256(97),uint256(1),uint256(1532892062),uint256(97),uint256(0),uint256(65),uint256(96),uint256(97),uint256(3),uint256(4),uint256(2014223714),uint256(65),uint256(1338),uint256(255),uint256(64),uint256(1338),uint256(254),uint256(2014223714),uint256(256),uint256(256),uint256(1532892063),uint256(0),uint256(1337),uint256(255),uint256(1532892062),uint256(256),uint256(255),uint256(95),uint256(3),uint256(1532892063),uint256(1532892062),uint256(0),uint256(4),uint256(5)]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length == _numberOfTokens.length",
            "parameters": [
              {
                "js": "[accounts[0],accounts[6],accounts[4],accounts[0],accounts[5],accounts[5],accounts[7],accounts[6],accounts[0],accounts[7],accounts[4],accounts[7],accounts[6],accounts[8],accounts[3],accounts[9],accounts[1],accounts[4],accounts[8],accounts[2],accounts[2],accounts[9],accounts[3],accounts[3],accounts[2],accounts[7],accounts[5],accounts[2],accounts[4],accounts[6],accounts[8],accounts[9],accounts[8],accounts[9],accounts[6],accounts[0],accounts[0],accounts[0],accounts[3],accounts[3],accounts[5],accounts[8],accounts[7],accounts[5],accounts[0],accounts[1],accounts[6],accounts[3],accounts[2],accounts[7],accounts[8],accounts[0],accounts[2],accounts[5],accounts[1],accounts[9],accounts[8],accounts[5],accounts[3],accounts[4],accounts[1],accounts[9],accounts[8],accounts[7],accounts[3],accounts[6],accounts[6],accounts[8],accounts[7],accounts[5],accounts[2],accounts[7],accounts[3],accounts[4],accounts[5],accounts[9],accounts[7],accounts[1],accounts[8],accounts[0],accounts[1],accounts[0],accounts[1],accounts[5],accounts[2],accounts[8],accounts[3],accounts[6],accounts[4],accounts[4],accounts[0],accounts[0],accounts[2],accounts[6],accounts[0],accounts[2],accounts[6],accounts[5],accounts[3],accounts[7],accounts[5],accounts[8],accounts[0],accounts[1],accounts[6],accounts[5],accounts[0],accounts[9],accounts[8],accounts[6],accounts[4],accounts[0],accounts[3],accounts[9],accounts[0],accounts[6],accounts[8],accounts[9],accounts[9],accounts[4],accounts[5],accounts[7],accounts[3],accounts[3],accounts[0],accounts[8],accounts[1],accounts[8],accounts[5],accounts[9],accounts[5],accounts[2],accounts[0],accounts[9],accounts[2],accounts[6],accounts[2],accounts[9],accounts[4],accounts[2],accounts[0],accounts[1],accounts[3],accounts[4],accounts[7],accounts[9],accounts[6],accounts[8],accounts[4],accounts[6],accounts[0],accounts[7],accounts[3],accounts[6],accounts[6],accounts[3],accounts[0],accounts[3],accounts[7],accounts[7],accounts[5],accounts[1],accounts[2],accounts[9],accounts[2],accounts[7],accounts[5],accounts[3],accounts[3],accounts[6],accounts[3],accounts[0],accounts[5],accounts[9],accounts[3],accounts[4],accounts[5],accounts[8],accounts[8],accounts[4],accounts[7],accounts[3],accounts[7],accounts[3],accounts[6],accounts[2],accounts[7],accounts[6],accounts[8],accounts[0],accounts[2],accounts[7],accounts[1],accounts[1],accounts[1],accounts[8],accounts[8],accounts[2],accounts[9],accounts[6],accounts[5],accounts[5],accounts[5],accounts[4],accounts[6],accounts[0],accounts[2],accounts[2],accounts[8],accounts[2],accounts[5],accounts[1],accounts[4],accounts[6],accounts[8],accounts[1],accounts[1],accounts[6],accounts[6],accounts[5],accounts[7],accounts[5],accounts[7],accounts[0],accounts[4],accounts[0],accounts[1],accounts[1],accounts[1],accounts[6],accounts[1],accounts[9],accounts[6],accounts[9],accounts[6],accounts[6],accounts[1],accounts[0],accounts[9],accounts[4],accounts[2],accounts[9],accounts[1],accounts[3],accounts[6],accounts[8],accounts[4],accounts[1],accounts[0],accounts[5],accounts[9],accounts[7],accounts[4],accounts[5],accounts[8],accounts[4]]",
                "sol": "[address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))),address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))]"
              },
              {
                "js": "[4,1338,3,4,95,2014223716,28,96,0,2014223716,6,1338,2014223715,1337,2014223714,6,254,3,95,0,65,29,1336,1336,2014223716,10000,29,5,2014223714,6,64,10001,96,6,1532892064,28,10001,2014223714,9999,2,95,10001,256,9999,3,10000,1532892064,1338,1532892063,6,256,4,1532892062,1532892063,254,64,1,6,66,1,3,257,9999,0,257,256,1532892064,1337,1337,254,96,257,3,1,5,64,1532892064,95,97,1532892062,96,28,96,64,0,1532892064,97,6,66,1532892062,96,97,256,95,2014223714,96,29,0,1532892064,3,1532892064,10000,254,2014223714,1532892064,256,66,97,255,10000,1337,5,10001,2,1532892064,10000,66,4,3,3,1532892064,1532892064,2014223714,27,27,64,6,10000,65,2014223715,9999,6,255,64,64,10001,2014223715,64,28,1337,6,256,254,1532892064,1338,95,28,1336,96,66,29,97,64,6,2014223716,257,1336,1,9999,27,97,2014223716,254,1,26,26,64,2,1532892062,6,1532892062,255,2,64,65,27,256,257,3,27,2014223714,1338,95,96,1,6,5,1338,1532892064,1532892062,65,1532892063,97,6,4,64,2014223714,2014223715,66,1337,2014223715,1532892063,5,29,1532892062,2014223715,1532892063,64,2014223714,1532892062,97,4,66,2014223716,2014223716,29,66,257,257,1532892064,1532892064,97,1,1532892062,97,0,65,96,97,3,4,2014223714,65,1338,255,64,1338,254,2014223714,256,256,1532892063,0,1337,255,1532892062,256,255,95,3,1532892063,1532892062,0,4,5]",
                "sol": "[uint256(4),uint256(1338),uint256(3),uint256(4),uint256(95),uint256(2014223716),uint256(28),uint256(96),uint256(0),uint256(2014223716),uint256(6),uint256(1338),uint256(2014223715),uint256(1337),uint256(2014223714),uint256(6),uint256(254),uint256(3),uint256(95),uint256(0),uint256(65),uint256(29),uint256(1336),uint256(1336),uint256(2014223716),uint256(10000),uint256(29),uint256(5),uint256(2014223714),uint256(6),uint256(64),uint256(10001),uint256(96),uint256(6),uint256(1532892064),uint256(28),uint256(10001),uint256(2014223714),uint256(9999),uint256(2),uint256(95),uint256(10001),uint256(256),uint256(9999),uint256(3),uint256(10000),uint256(1532892064),uint256(1338),uint256(1532892063),uint256(6),uint256(256),uint256(4),uint256(1532892062),uint256(1532892063),uint256(254),uint256(64),uint256(1),uint256(6),uint256(66),uint256(1),uint256(3),uint256(257),uint256(9999),uint256(0),uint256(257),uint256(256),uint256(1532892064),uint256(1337),uint256(1337),uint256(254),uint256(96),uint256(257),uint256(3),uint256(1),uint256(5),uint256(64),uint256(1532892064),uint256(95),uint256(97),uint256(1532892062),uint256(96),uint256(28),uint256(96),uint256(64),uint256(0),uint256(1532892064),uint256(97),uint256(6),uint256(66),uint256(1532892062),uint256(96),uint256(97),uint256(256),uint256(95),uint256(2014223714),uint256(96),uint256(29),uint256(0),uint256(1532892064),uint256(3),uint256(1532892064),uint256(10000),uint256(254),uint256(2014223714),uint256(1532892064),uint256(256),uint256(66),uint256(97),uint256(255),uint256(10000),uint256(1337),uint256(5),uint256(10001),uint256(2),uint256(1532892064),uint256(10000),uint256(66),uint256(4),uint256(3),uint256(3),uint256(1532892064),uint256(1532892064),uint256(2014223714),uint256(27),uint256(27),uint256(64),uint256(6),uint256(10000),uint256(65),uint256(2014223715),uint256(9999),uint256(6),uint256(255),uint256(64),uint256(64),uint256(10001),uint256(2014223715),uint256(64),uint256(28),uint256(1337),uint256(6),uint256(256),uint256(254),uint256(1532892064),uint256(1338),uint256(95),uint256(28),uint256(1336),uint256(96),uint256(66),uint256(29),uint256(97),uint256(64),uint256(6),uint256(2014223716),uint256(257),uint256(1336),uint256(1),uint256(9999),uint256(27),uint256(97),uint256(2014223716),uint256(254),uint256(1),uint256(26),uint256(26),uint256(64),uint256(2),uint256(1532892062),uint256(6),uint256(1532892062),uint256(255),uint256(2),uint256(64),uint256(65),uint256(27),uint256(256),uint256(257),uint256(3),uint256(27),uint256(2014223714),uint256(1338),uint256(95),uint256(96),uint256(1),uint256(6),uint256(5),uint256(1338),uint256(1532892064),uint256(1532892062),uint256(65),uint256(1532892063),uint256(97),uint256(6),uint256(4),uint256(64),uint256(2014223714),uint256(2014223715),uint256(66),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(5),uint256(29),uint256(1532892062),uint256(2014223715),uint256(1532892063),uint256(64),uint256(2014223714),uint256(1532892062),uint256(97),uint256(4),uint256(66),uint256(2014223716),uint256(2014223716),uint256(29),uint256(66),uint256(257),uint256(257),uint256(1532892064),uint256(1532892064),uint256(97),uint256(1),uint256(1532892062),uint256(97),uint256(0),uint256(65),uint256(96),uint256(97),uint256(3),uint256(4),uint256(2014223714),uint256(65),uint256(1338),uint256(255),uint256(64),uint256(1338),uint256(254),uint256(2014223714),uint256(256),uint256(256),uint256(1532892063),uint256(0),uint256(1337),uint256(255),uint256(1532892062),uint256(256),uint256(255),uint256(95),uint256(3),uint256(1532892063),uint256(1532892062),uint256(0),uint256(4),uint256(5)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[],uint256[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "[4,1338,3,4,95,2014223716,28,96,0,2014223716,6,1338,2014223715,1337,2014223714,6,254,3,95,0,65,29,1336,1336,2014223716,10000,29,5,2014223714,6,64,10001,96,6,1532892064,28,10001,2014223714,9999,2,95,10001,256,9999,3,10000,1532892064,1338,1532892063,6,256,4,1532892062,1532892063,254,64,1,6,66,1,3,257,9999,0,257,256,1532892064,1337,1337,254,96,257,3,1,5,64,1532892064,95,97,1532892062,96,28,96,64,0,1532892064,97,6,66,1532892062,96,97,256,95,2014223714,96,29,0,1532892064,3,1532892064,10000,254,2014223714,1532892064,256,66,97,255,10000,1337,5,10001,2,1532892064,10000,66,4,3,3,1532892064,1532892064,2014223714,27,27,64,6,10000,65,2014223715,9999,6,255,64,64,10001,2014223715,64,28,1337,6,256,254,1532892064,1338,95,28,1336,96,66,29,97,64,6,2014223716,257,1336,1,9999,27,97,2014223716,254,1,26,26,64,2,1532892062,6,1532892062,255,2,64,65,27,256,257,3,27,2014223714,1338,95,96,1,6,5,1338,1532892064,1532892062,65,1532892063,97,6,4,64,2014223714,2014223715,66,1337,2014223715,1532892063,5,29,1532892062,2014223715,1532892063,64,2014223714,1532892062,97,4,66,2014223716,2014223716,29,66,257,257,1532892064,1532892064,97,1,1532892062,97,0,65,96,97,3,4,2014223714,65,1338,255,64,1338,254,2014223714,256,256,1532892063,0,1337,255,1532892062,256,255,95,3,1532892063,1532892062,0,4,5]",
                "sol": "[uint256(4),uint256(1338),uint256(3),uint256(4),uint256(95),uint256(2014223716),uint256(28),uint256(96),uint256(0),uint256(2014223716),uint256(6),uint256(1338),uint256(2014223715),uint256(1337),uint256(2014223714),uint256(6),uint256(254),uint256(3),uint256(95),uint256(0),uint256(65),uint256(29),uint256(1336),uint256(1336),uint256(2014223716),uint256(10000),uint256(29),uint256(5),uint256(2014223714),uint256(6),uint256(64),uint256(10001),uint256(96),uint256(6),uint256(1532892064),uint256(28),uint256(10001),uint256(2014223714),uint256(9999),uint256(2),uint256(95),uint256(10001),uint256(256),uint256(9999),uint256(3),uint256(10000),uint256(1532892064),uint256(1338),uint256(1532892063),uint256(6),uint256(256),uint256(4),uint256(1532892062),uint256(1532892063),uint256(254),uint256(64),uint256(1),uint256(6),uint256(66),uint256(1),uint256(3),uint256(257),uint256(9999),uint256(0),uint256(257),uint256(256),uint256(1532892064),uint256(1337),uint256(1337),uint256(254),uint256(96),uint256(257),uint256(3),uint256(1),uint256(5),uint256(64),uint256(1532892064),uint256(95),uint256(97),uint256(1532892062),uint256(96),uint256(28),uint256(96),uint256(64),uint256(0),uint256(1532892064),uint256(97),uint256(6),uint256(66),uint256(1532892062),uint256(96),uint256(97),uint256(256),uint256(95),uint256(2014223714),uint256(96),uint256(29),uint256(0),uint256(1532892064),uint256(3),uint256(1532892064),uint256(10000),uint256(254),uint256(2014223714),uint256(1532892064),uint256(256),uint256(66),uint256(97),uint256(255),uint256(10000),uint256(1337),uint256(5),uint256(10001),uint256(2),uint256(1532892064),uint256(10000),uint256(66),uint256(4),uint256(3),uint256(3),uint256(1532892064),uint256(1532892064),uint256(2014223714),uint256(27),uint256(27),uint256(64),uint256(6),uint256(10000),uint256(65),uint256(2014223715),uint256(9999),uint256(6),uint256(255),uint256(64),uint256(64),uint256(10001),uint256(2014223715),uint256(64),uint256(28),uint256(1337),uint256(6),uint256(256),uint256(254),uint256(1532892064),uint256(1338),uint256(95),uint256(28),uint256(1336),uint256(96),uint256(66),uint256(29),uint256(97),uint256(64),uint256(6),uint256(2014223716),uint256(257),uint256(1336),uint256(1),uint256(9999),uint256(27),uint256(97),uint256(2014223716),uint256(254),uint256(1),uint256(26),uint256(26),uint256(64),uint256(2),uint256(1532892062),uint256(6),uint256(1532892062),uint256(255),uint256(2),uint256(64),uint256(65),uint256(27),uint256(256),uint256(257),uint256(3),uint256(27),uint256(2014223714),uint256(1338),uint256(95),uint256(96),uint256(1),uint256(6),uint256(5),uint256(1338),uint256(1532892064),uint256(1532892062),uint256(65),uint256(1532892063),uint256(97),uint256(6),uint256(4),uint256(64),uint256(2014223714),uint256(2014223715),uint256(66),uint256(1337),uint256(2014223715),uint256(1532892063),uint256(5),uint256(29),uint256(1532892062),uint256(2014223715),uint256(1532892063),uint256(64),uint256(2014223714),uint256(1532892062),uint256(97),uint256(4),uint256(66),uint256(2014223716),uint256(2014223716),uint256(29),uint256(66),uint256(257),uint256(257),uint256(1532892064),uint256(1532892064),uint256(97),uint256(1),uint256(1532892062),uint256(97),uint256(0),uint256(65),uint256(96),uint256(97),uint256(3),uint256(4),uint256(2014223714),uint256(65),uint256(1338),uint256(255),uint256(64),uint256(1338),uint256(254),uint256(2014223714),uint256(256),uint256(256),uint256(1532892063),uint256(0),uint256(1337),uint256(255),uint256(1532892062),uint256(256),uint256(255),uint256(95),uint256(3),uint256(1532892063),uint256(1532892062),uint256(0),uint256(4),uint256(5)]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.553ZFullRedemption.setup": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute setup() WHEN isSetUp!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.553ZFullRedemption.redeemTokens": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute redeemTokens(address[]) WHEN msg.sender==_owner,isSetUp==true,_holders.length>0",
          "parameters": [
            {
              "js": "[accounts[6],accounts[5],accounts[0],accounts[0],accounts[5],accounts[3],accounts[0],accounts[6],accounts[6],accounts[9],accounts[4],accounts[0],accounts[7],accounts[7],accounts[2],accounts[8],accounts[3],accounts[7],accounts[3],accounts[8],accounts[7],accounts[9],accounts[4],accounts[3],accounts[2],accounts[5],accounts[1],accounts[6]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[6],accounts[5],accounts[0],accounts[0],accounts[5],accounts[3],accounts[0],accounts[6],accounts[6],accounts[9],accounts[4],accounts[0],accounts[7],accounts[7],accounts[2],accounts[8],accounts[3],accounts[7],accounts[3],accounts[8],accounts[7],accounts[9],accounts[4],accounts[3],accounts[2],accounts[5],accounts[1],accounts[6]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: isSetUp == true",
            "parameters": [
              {
                "js": "[accounts[6],accounts[5],accounts[0],accounts[0],accounts[5],accounts[3],accounts[0],accounts[6],accounts[6],accounts[9],accounts[4],accounts[0],accounts[7],accounts[7],accounts[2],accounts[8],accounts[3],accounts[7],accounts[3],accounts[8],accounts[7],accounts[9],accounts[4],accounts[3],accounts[2],accounts[5],accounts[1],accounts[6]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail redeemTokens(address[]) when NOT comply with: _holders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.557ZFixedPriceTender.paymentTokensReady": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute paymentTokensReady() WHEN paymentReady!=true",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.558ZFixedPriceTender.updateOfferEndTime": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateOfferEndTime(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newOfferEnd>=block.timestamp",
          "parameters": [
            {
              "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+951",
              "sol": "block.timestamp+951"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp+951",
                "sol": "block.timestamp+951"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateOfferEndTime(uint256) when NOT comply with: _newOfferEnd >= (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp",
            "parameters": [
              {
                "js": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1",
                "sol": "(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp-1"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.563ZFixedPriceTender.updatePaymentPerSecurity": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updatePaymentPerSecurity(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newPaymentPerSecurity>0",
          "parameters": [
            {
              "js": "1338",
              "sol": "1338"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "1338",
                "sol": "1338"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updatePaymentPerSecurity(uint256) when NOT comply with: _newPaymentPerSecurity > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.568ZFixedPriceTender.updateTotalToRepurchase": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateTotalToRepurchase(uint256) WHEN msg.sender==_owner,(await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_newTotalToRepurchase>=0",
          "parameters": [
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "65",
                "sol": "65"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail updateTotalToRepurchase(uint256) when NOT comply with: _newTotalToRepurchase >= 0",
            "parameters": [
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.572ZFixedPriceTender.optInToTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optInToTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,paymentReady==true,_numberToTender>0",
          "parameters": [
            {
              "js": "254",
              "sol": "254"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: paymentReady == true",
            "parameters": [
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail optInToTender(uint256) when NOT comply with: _numberToTender > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.578ZFixedPriceTender.optOutOfTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute optOutOfTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp<offerEndTime,_numberToRemove>0",
          "parameters": [
            {
              "js": "6",
              "sol": "6"
            },
            {
              "js": "{from:accounts[6]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail optOutOfTender(uint256) when NOT comply with: _numberToRemove > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[6]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.582ZFixedPriceTender.finaliseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute finaliseTender(uint256) WHEN (await web3.eth.getBlock(await web3.eth.getBlockNumber())).timestamp>=offerEndTime,nextTenderToAssess<orderedHolders.length,_batchSize>0",
          "parameters": [
            {
              "js": "1532892064",
              "sol": "1532892064"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail finaliseTender(uint256) when NOT comply with: _batchSize > 0",
            "parameters": [
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.584ZProxyFixedPriceTender.testrepurchaseTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrepurchaseTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.585ZProxyFixedPriceTender.testreturnTender": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testreturnTender()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.585ZOnChainPayments.makePayments": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute makePayments(address[],uint256) WHEN msg.sender==_owner,_securityHolders.length>0,_paymentPerSecurity>0",
          "parameters": [
            {
              "js": "[accounts[3],accounts[7],accounts[1],accounts[9],accounts[7],accounts[2],accounts[6],accounts[7],accounts[3],accounts[1],accounts[4],accounts[6],accounts[9],accounts[5],accounts[6],accounts[0],accounts[2],accounts[2],accounts[4],accounts[3],accounts[6],accounts[7],accounts[6],accounts[5],accounts[7],accounts[4],accounts[3],accounts[7],accounts[6],accounts[2],accounts[4],accounts[9],accounts[8],accounts[0],accounts[0],accounts[3],accounts[7],accounts[9],accounts[4],accounts[0],accounts[7],accounts[0],accounts[6],accounts[0],accounts[2],accounts[0],accounts[6],accounts[2],accounts[9],accounts[6],accounts[9],accounts[3],accounts[5],accounts[4],accounts[0],accounts[3],accounts[9],accounts[7],accounts[0],accounts[6],accounts[4],accounts[5],accounts[1],accounts[9],accounts[8],accounts[8],accounts[0],accounts[8],accounts[8],accounts[5],accounts[1],accounts[2],accounts[2],accounts[4],accounts[2],accounts[2],accounts[3],accounts[1],accounts[5],accounts[0],accounts[4],accounts[5],accounts[7],accounts[1],accounts[2],accounts[6],accounts[0],accounts[2],accounts[0],accounts[9],accounts[7],accounts[5],accounts[2],accounts[1],accounts[0],accounts[2],accounts[1]]",
              "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "[accounts[3],accounts[7],accounts[1],accounts[9],accounts[7],accounts[2],accounts[6],accounts[7],accounts[3],accounts[1],accounts[4],accounts[6],accounts[9],accounts[5],accounts[6],accounts[0],accounts[2],accounts[2],accounts[4],accounts[3],accounts[6],accounts[7],accounts[6],accounts[5],accounts[7],accounts[4],accounts[3],accounts[7],accounts[6],accounts[2],accounts[4],accounts[9],accounts[8],accounts[0],accounts[0],accounts[3],accounts[7],accounts[9],accounts[4],accounts[0],accounts[7],accounts[0],accounts[6],accounts[0],accounts[2],accounts[0],accounts[6],accounts[2],accounts[9],accounts[6],accounts[9],accounts[3],accounts[5],accounts[4],accounts[0],accounts[3],accounts[9],accounts[7],accounts[0],accounts[6],accounts[4],accounts[5],accounts[1],accounts[9],accounts[8],accounts[8],accounts[0],accounts[8],accounts[8],accounts[5],accounts[1],accounts[2],accounts[2],accounts[4],accounts[2],accounts[2],accounts[3],accounts[1],accounts[5],accounts[0],accounts[4],accounts[5],accounts[7],accounts[1],accounts[2],accounts[6],accounts[0],accounts[2],accounts[0],accounts[9],accounts[7],accounts[5],accounts[2],accounts[1],accounts[0],accounts[2],accounts[1]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _securityHolders.length > 0",
            "parameters": [
              {
                "js": "[]",
                "sol": "[]"
              },
              {
                "js": "64",
                "sol": "64"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail makePayments(address[],uint256) when NOT comply with: _paymentPerSecurity > 0",
            "parameters": [
              {
                "js": "[accounts[3],accounts[7],accounts[1],accounts[9],accounts[7],accounts[2],accounts[6],accounts[7],accounts[3],accounts[1],accounts[4],accounts[6],accounts[9],accounts[5],accounts[6],accounts[0],accounts[2],accounts[2],accounts[4],accounts[3],accounts[6],accounts[7],accounts[6],accounts[5],accounts[7],accounts[4],accounts[3],accounts[7],accounts[6],accounts[2],accounts[4],accounts[9],accounts[8],accounts[0],accounts[0],accounts[3],accounts[7],accounts[9],accounts[4],accounts[0],accounts[7],accounts[0],accounts[6],accounts[0],accounts[2],accounts[0],accounts[6],accounts[2],accounts[9],accounts[6],accounts[9],accounts[3],accounts[5],accounts[4],accounts[0],accounts[3],accounts[9],accounts[7],accounts[0],accounts[6],accounts[4],accounts[5],accounts[1],accounts[9],accounts[8],accounts[8],accounts[0],accounts[8],accounts[8],accounts[5],accounts[1],accounts[2],accounts[2],accounts[4],accounts[2],accounts[2],accounts[3],accounts[1],accounts[5],accounts[0],accounts[4],accounts[5],accounts[7],accounts[1],accounts[2],accounts[6],accounts[0],accounts[2],accounts[0],accounts[9],accounts[7],accounts[5],accounts[2],accounts[1],accounts[0],accounts[2],accounts[1]]",
                "sol": "[address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))),address(address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number)))))))]"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.589ZOnChainPayments.lookUpPaymentIndex": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute lookUpPaymentIndex(address,uint256,uint256) WHEN _timestamp!=0,_securityHolder!=0x0000000000000000000000000000000000000000",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "256",
              "sol": "256"
            },
            {
              "js": "254",
              "sol": "254"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _timestamp != 0",
            "parameters": [
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": 0,
                "sol": 0
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail lookUpPaymentIndex(address,uint256,uint256) when NOT comply with: _securityHolder != 0x0000000000000000000000000000000000000000",
            "parameters": [
              {
                "js": "\"0x0000000000000000000000000000000000000000\"",
                "sol": "0x0000000000000000000000000000000000000000"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "254",
                "sol": "254"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"0x0\"}"
              }
            ]
          }
        ]
      }
    }
  }
},{
  "2020-11-11T21:11:15.590ZOnChainPayments.challengePayment": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute challengePayment(uint256,uint256)",
          "parameters": [
            {
              "js": "1338",
              "sol": "1338"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T21:11:15.591ZOnChainPayments.resolveChallenge": {
    "branches": {
      "0": {
        "branch": {
          "loc": "171-187",
          "restrictions": [
            "currentValue == _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN currentValue==_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223715",
              "sol": "2014223715"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[0]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "1532892062",
                "sol": "1532892062"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "1": {
        "branch": {
          "loc": "174-187",
          "restrictions": [
            "_newValue > currentValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue>currentValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "10000",
              "sol": "10000"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "10000",
                "sol": "10000"
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[4]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "97",
                "sol": "97"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      },
      "2": {
        "branch": {
          "loc": "182-187",
          "restrictions": [
            "_newValue <= currentValue",
            "currentValue != _newValue"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute resolveChallenge(address,uint256,uint256) WHEN _newValue<=currentValue,currentValue!=_newValue,msg.sender==_owner,_index>=0",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223715",
              "sol": "2014223715"
            },
            {
              "js": "256",
              "sol": "256"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
            }
          ]
        },
        "scenarioFail": [
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: msg.sender == _owner",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": "2014223715",
                "sol": "2014223715"
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[9]}",
                "sol": "{\"from\":\"accounts[9]\"}"
              }
            ]
          },
          {
            "success": false,
            "description": "Should fail resolveChallenge(address,uint256,uint256) when NOT comply with: _index >= 0",
            "parameters": [
              {
                "js": "accounts[5]",
                "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
              },
              {
                "js": -1,
                "sol": -1
              },
              {
                "js": "256",
                "sol": "256"
              },
              {
                "js": "{from:accounts[0]}",
                "sol": "{\"from\":\"address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))\"}"
              }
            ]
          }
        ]
      }
    }
  }
}