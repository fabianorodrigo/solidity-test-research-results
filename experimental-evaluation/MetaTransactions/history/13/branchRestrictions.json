,{
  "2020-11-11T07:14:12.260ZMetaTxProxy.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.941ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[136,35,207,38,100,202,100,150,77,222,10,77,49,24,60,35,90,114,110,105,105,130,249,2,12,109,3,52,68,103,64,130]",
              "sol": "stringToBytes32(\"136,35,207,38,100,202,100,150,77,222,10,77,49,24,60,35,90,114,110,105,105,130,249,2,12,109,3,52,68,103,64,130\")"
            },
            {
              "js": "[68,18,165,112]",
              "sol": "abi.encode(\"68,18,165,112\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[111,20,169,241,69,7,212,16,45,52,213,177,40,222,45,166,185,108,117,96,235,30,64,248,110,112,46,96,123,247,203,232]",
              "sol": "stringToBytes32(\"111,20,169,241,69,7,212,16,45,52,213,177,40,222,45,166,185,108,117,96,235,30,64,248,110,112,46,96,123,247,203,232\")"
            },
            {
              "js": "[118,89,196,55,201,213,213,125,215,54,185,195,111,162,25,250,52,40,242,190,137,5,40,247,4,58,54,55,70,133,160,137,45,236,86,241,166,73,224,190,121,205,249,212,210,106,99,65,120,146,96,215,130,172,189,113,210,20,220,127,52,102,252,188,146]",
              "sol": "abi.encode(\"118,89,196,55,201,213,213,125,215,54,185,195,111,162,25,250,52,40,242,190,137,5,40,247,4,58,54,55,70,133,160,137,45,236,86,241,166,73,224,190,121,205,249,212,210,106,99,65,120,146,96,215,130,172,189,113,210,20,220,127,52,102,252,188,146\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.942ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[249,7,71,0,197,30,148,83,7,57,253,241,17,254,140,87,73,211,115,110,11,76,209,15,132,0,44,156,111,200,93,49]",
              "sol": "stringToBytes32(\"249,7,71,0,197,30,148,83,7,57,253,241,17,254,140,87,73,211,115,110,11,76,209,15,132,0,44,156,111,200,93,49\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.942ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[59,9,178,134,70,64,81,71,27,101,189,28,35,41,83,25,106,234,160,223,77,248,88,184,29,120,243,207,236,199,151,44]",
              "sol": "stringToBytes32(\"59,9,178,134,70,64,81,71,27,101,189,28,35,41,83,25,106,234,160,223,77,248,88,184,29,120,243,207,236,199,151,44\")"
            },
            {
              "js": "[135,84,70,37,243,146,171,51,45,24,213,29,63,0,112,252,185,249,40,179,36,76,155,229,165,158,5,179,130,9,25,122]",
              "sol": "abi.encode(\"135,84,70,37,243,146,171,51,45,24,213,29,63,0,112,252,185,249,40,179,36,76,155,229,165,158,5,179,130,9,25,122\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.943ZExternalContract.updateValue": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateValue(uint256)",
          "parameters": [
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.944ZMetaTxProxy.": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute fallback()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.944ZMetaTxProxy.getTransactionHashNonce": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHashNonce(bytes32)",
          "parameters": [
            {
              "js": "[76,89,18,185,120,76,9,235,13,43,15,100,31,33,156,116,105,204,12,95,134,219,118,101,225,42,15,171,238,36,230,55]",
              "sol": "stringToBytes32(\"76,89,18,185,120,76,9,235,13,43,15,100,31,33,156,116,105,204,12,95,134,219,118,101,225,42,15,171,238,36,230,55\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.944ZMetaTxProxy.getTransactionHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHash(address,uint256,bytes,uint256)",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "[204,65,30,126,198,230,145,173,13,120,225,84,67,150,45,25,237,231,29,2,188,135,162,229,80,132,38,13,32,155,233,13]",
              "sol": "abi.encode(\"204,65,30,126,198,230,145,173,13,120,225,84,67,150,45,25,237,231,29,2,188,135,162,229,80,132,38,13,32,155,233,13\")"
            },
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.944ZMetaTxProxy.getSigner": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getSigner(bytes32,bytes)",
          "parameters": [
            {
              "js": "[42,125,106,44,34,125,11,244,107,213,239,49,23,0,54,243,113,228,183,9,191,95,244,239,93,197,133,184,213,151,104,221]",
              "sol": "stringToBytes32(\"42,125,106,44,34,125,11,244,107,213,239,49,23,0,54,243,113,228,183,9,191,95,244,239,93,197,133,184,213,151,104,221\")"
            },
            {
              "js": "[31,188,252,65,122,21,139,189,39,168,170,94,31,215,214,111,221,25,4,195,43,138,142,50,43,11,31,102,155,85,237,210]",
              "sol": "abi.encode(\"31,188,252,65,122,21,139,189,39,168,170,94,31,215,214,111,221,25,4,195,43,138,142,50,43,11,31,102,155,85,237,210\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.945ZMetaTxProxy.executeTransaction": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute executeTransaction(address,uint256,bytes,uint256,uint256,bytes)",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "[171,98,91,58,38,195,102,241,160,144,43,74,0,136,4,53,89,211,65,4,235,80,81,169,237,31,1,218,142,13,207,206]",
              "sol": "abi.encode(\"171,98,91,58,38,195,102,241,160,144,43,74,0,136,4,53,89,211,65,4,235,80,81,169,237,31,1,218,142,13,207,206\")"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "[49,232,230,82,120,239,89,108,154,231,207,249,177,146,97,165,42,49,241,107,152,245,140,155,132,42,155,172,76,25,242,179]",
              "sol": "abi.encode(\"49,232,230,82,120,239,89,108,154,231,207,249,177,146,97,165,42,49,241,107,152,245,140,155,132,42,155,172,76,25,242,179\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T07:14:15.945ZMetaTxProxy.verifySignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySignature(address,uint256,bytes,uint256,bytes) WHEN signer==_signer",
          "parameters": [
            {
              "js": "accounts[5]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "[72,93,82,146,203,223,85,173,250,106,129,42,45,139,38,69,146,146,15,38,40,188,41,39,53,21,67,31,99,0,187,42]",
              "sol": "abi.encode(\"72,93,82,146,203,223,85,173,250,106,129,42,45,139,38,69,146,146,15,38,40,188,41,39,53,21,67,31,99,0,187,42\")"
            },
            {
              "js": "97",
              "sol": "97"
            },
            {
              "js": "[148,11,7,83,153,225,45,33,175,156,254,17,138,251,141,63,137,80,172,236,242,120,190,47,46,252,217,127,254,139,210,64]",
              "sol": "abi.encode(\"148,11,7,83,153,225,45,33,175,156,254,17,138,251,141,63,137,80,172,236,242,120,190,47,46,252,217,127,254,139,210,64\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}