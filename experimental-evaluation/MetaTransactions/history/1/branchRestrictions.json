,{
  "2020-11-10T04:21:14.736ZMetaTxProxy.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.422ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[48,231,6,185,163,152,216,231,95,254,164,51,39,148,77,94,168,2,18,131,89,146,63,253,176,46,249,154,128,218,20,57]",
              "sol": "stringToBytes32(\"48,231,6,185,163,152,216,231,95,254,164,51,39,148,77,94,168,2,18,131,89,146,63,253,176,46,249,154,128,218,20,57\")"
            },
            {
              "js": "[61]",
              "sol": "abi.encode(\"61\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[93,65,118,201,126,108,26,155,83,119,102,59,125,115,74,133,109,80,230,39,197,108,86,189,164,246,189,156,27,162,191,1]",
              "sol": "stringToBytes32(\"93,65,118,201,126,108,26,155,83,119,102,59,125,115,74,133,109,80,230,39,197,108,86,189,164,246,189,156,27,162,191,1\")"
            },
            {
              "js": "[231,212,241,61,24,129,8,199,6,100,241,148,240,52,160,18,242,234,73,0,103,107,220,35,156,58,255,216,80,47,233,99,111,217,13,28,17,183,70,22,190,42,109,158,143,139,143,21,237,166,255,65,239,0,187,27,253,216,49,196,102,177,254,201,26]",
              "sol": "abi.encode(\"231,212,241,61,24,129,8,199,6,100,241,148,240,52,160,18,242,234,73,0,103,107,220,35,156,58,255,216,80,47,233,99,111,217,13,28,17,183,70,22,190,42,109,158,143,139,143,21,237,166,255,65,239,0,187,27,253,216,49,196,102,177,254,201,26\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.424ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[38,198,236,208,64,236,68,218,89,133,219,253,75,253,201,15,6,228,24,235,116,96,207,156,192,18,178,216,88,221,37,3]",
              "sol": "stringToBytes32(\"38,198,236,208,64,236,68,218,89,133,219,253,75,253,201,15,6,228,24,235,116,96,207,156,192,18,178,216,88,221,37,3\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.424ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[27,23,207,203,113,207,212,233,121,187,88,18,121,161,200,232,47,98,205,82,232,183,59,236,59,238,185,127,85,245,99,202]",
              "sol": "stringToBytes32(\"27,23,207,203,113,207,212,233,121,187,88,18,121,161,200,232,47,98,205,82,232,183,59,236,59,238,185,127,85,245,99,202\")"
            },
            {
              "js": "[107,8,87,137,29,247,7,20,152,167,36,103,232,216,22,46,184,197,81,38,80,182,181,243,71,254,96,202,148,122,113,89]",
              "sol": "abi.encode(\"107,8,87,137,29,247,7,20,152,167,36,103,232,216,22,46,184,197,81,38,80,182,181,243,71,254,96,202,148,122,113,89\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.426ZExternalContract.updateValue": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateValue(uint256)",
          "parameters": [
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.427ZMetaTxProxy.": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute fallback()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.427ZMetaTxProxy.getTransactionHashNonce": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHashNonce(bytes32)",
          "parameters": [
            {
              "js": "[104,161,147,25,195,244,102,59,51,61,235,123,66,195,162,107,23,17,30,199,213,91,171,210,107,123,250,152,82,240,4,84]",
              "sol": "stringToBytes32(\"104,161,147,25,195,244,102,59,51,61,235,123,66,195,162,107,23,17,30,199,213,91,171,210,107,123,250,152,82,240,4,84\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.427ZMetaTxProxy.getTransactionHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHash(address,uint256,bytes,uint256)",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "[78,71,26,212,185,219,152,222,225,22,116,41,108,232,172,85,146,167,146,69,23,122,131,145,166,248,201,89,95,249,138,24]",
              "sol": "abi.encode(\"78,71,26,212,185,219,152,222,225,22,116,41,108,232,172,85,146,167,146,69,23,122,131,145,166,248,201,89,95,249,138,24\")"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.428ZMetaTxProxy.getSigner": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getSigner(bytes32,bytes)",
          "parameters": [
            {
              "js": "[171,153,76,147,232,179,226,45,179,44,6,156,178,194,18,117,216,8,46,5,124,112,143,245,142,86,53,181,76,90,244,35]",
              "sol": "stringToBytes32(\"171,153,76,147,232,179,226,45,179,44,6,156,178,194,18,117,216,8,46,5,124,112,143,245,142,86,53,181,76,90,244,35\")"
            },
            {
              "js": "[183,228,91,63,150,127,158,143,44,58,134,25,188,247,114,40,179,89,242,103,70,78,68,240,71,201,92,107,21,32,204,207]",
              "sol": "abi.encode(\"183,228,91,63,150,127,158,143,44,58,134,25,188,247,114,40,179,89,242,103,70,78,68,240,71,201,92,107,21,32,204,207\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.429ZMetaTxProxy.executeTransaction": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute executeTransaction(address,uint256,bytes,uint256,uint256,bytes)",
          "parameters": [
            {
              "js": "accounts[6]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "[75,161,152,89,44,24,60,90,51,107,212,56,152,255,120,82,249,101,242,42,237,208,138,91,209,137,168,138,24,24,106,79]",
              "sol": "abi.encode(\"75,161,152,89,44,24,60,90,51,107,212,56,152,255,120,82,249,101,242,42,237,208,138,91,209,137,168,138,24,24,106,79\")"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "[70,66,119,126,159,67,255,45,137,3,140,171,234,232,79,190,137,213,168,46,41,179,166,247,226,179,44,190,164,186,225,8]",
              "sol": "abi.encode(\"70,66,119,126,159,67,255,45,137,3,140,171,234,232,79,190,137,213,168,46,41,179,166,247,226,179,44,190,164,186,225,8\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T04:21:18.429ZMetaTxProxy.verifySignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySignature(address,uint256,bytes,uint256,bytes) WHEN signer==_signer",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "[214,76,136,20,190,181,151,235,114,7,11,236,36,162,218,167,218,121,175,69,5,152,30,240,201,135,252,41,226,193,226,86]",
              "sol": "abi.encode(\"214,76,136,20,190,181,151,235,114,7,11,236,36,162,218,167,218,121,175,69,5,152,30,240,201,135,252,41,226,193,226,86\")"
            },
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "[118,32,88,248,13,147,252,205,89,132,164,100,140,166,187,117,161,164,171,45,109,136,152,235,100,74,16,0,209,70,168,170]",
              "sol": "abi.encode(\"118,32,88,248,13,147,252,205,89,132,164,100,140,166,187,117,161,164,171,45,109,136,152,235,100,74,16,0,209,70,168,170\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}