,{
  "2020-11-10T15:30:20.210ZMetaTxProxy.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.687ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[118,225,130,185,50,85,129,115,211,169,199,249,61,159,246,92,106,200,164,252,221,100,35,39,117,123,189,231,9,65,67,12]",
              "sol": "stringToBytes32(\"118,225,130,185,50,85,129,115,211,169,199,249,61,159,246,92,106,200,164,252,221,100,35,39,117,123,189,231,9,65,67,12\")"
            },
            {
              "js": "[]",
              "sol": "abi.encode(\"\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[156,252,159,73,210,206,144,122,19,101,243,81,76,164,218,81,21,144,143,235,103,175,134,105,186,32,105,176,82,112,57,238]",
              "sol": "stringToBytes32(\"156,252,159,73,210,206,144,122,19,101,243,81,76,164,218,81,21,144,143,235,103,175,134,105,186,32,105,176,82,112,57,238\")"
            },
            {
              "js": "[109,34,244,139,108,198,121,148,194,172,227,183,243,131,180,155,121,112,190,186,18,150,69,218,99,47,245,3,16,246,6,73,235,194,186,20,154,208,78,221,124,82,9,75,52,135,138,163,202,58,128,76,230,235,250,128,13,247,46,197,152,211,155,131,188]",
              "sol": "abi.encode(\"109,34,244,139,108,198,121,148,194,172,227,183,243,131,180,155,121,112,190,186,18,150,69,218,99,47,245,3,16,246,6,73,235,194,186,20,154,208,78,221,124,82,9,75,52,135,138,163,202,58,128,76,230,235,250,128,13,247,46,197,152,211,155,131,188\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.688ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[198,247,159,149,101,49,227,125,29,119,153,250,111,50,182,167,175,199,114,187,109,212,159,132,4,140,201,101,184,246,235,239]",
              "sol": "stringToBytes32(\"198,247,159,149,101,49,227,125,29,119,153,250,111,50,182,167,175,199,114,187,109,212,159,132,4,140,201,101,184,246,235,239\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.689ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[118,97,35,123,170,141,136,134,142,161,202,103,95,108,239,62,135,210,102,124,129,205,217,172,27,40,70,31,187,186,106,93]",
              "sol": "stringToBytes32(\"118,97,35,123,170,141,136,134,142,161,202,103,95,108,239,62,135,210,102,124,129,205,217,172,27,40,70,31,187,186,106,93\")"
            },
            {
              "js": "[163,212,158,255,249,247,216,197,80,92,173,36,161,174,2,231,125,169,171,231,27,6,107,128,200,131,146,6,27,88,78,31]",
              "sol": "abi.encode(\"163,212,158,255,249,247,216,197,80,92,173,36,161,174,2,231,125,169,171,231,27,6,107,128,200,131,146,6,27,88,78,31\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.690ZExternalContract.updateValue": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateValue(uint256)",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.691ZMetaTxProxy.": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute fallback()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.691ZMetaTxProxy.getTransactionHashNonce": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHashNonce(bytes32)",
          "parameters": [
            {
              "js": "[191,233,137,95,164,14,50,167,165,142,239,60,176,242,211,242,215,122,246,57,22,189,237,138,113,120,208,87,251,242,239,231]",
              "sol": "stringToBytes32(\"191,233,137,95,164,14,50,167,165,142,239,60,176,242,211,242,215,122,246,57,22,189,237,138,113,120,208,87,251,242,239,231\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.692ZMetaTxProxy.getTransactionHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHash(address,uint256,bytes,uint256)",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "[173,219,123,93,122,144,159,22,84,240,128,56,133,166,134,212,138,90,186,33,79,135,206,215,223,21,182,35,210,76,130,160]",
              "sol": "abi.encode(\"173,219,123,93,122,144,159,22,84,240,128,56,133,166,134,212,138,90,186,33,79,135,206,215,223,21,182,35,210,76,130,160\")"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.692ZMetaTxProxy.getSigner": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getSigner(bytes32,bytes)",
          "parameters": [
            {
              "js": "[139,15,194,223,60,13,230,143,208,14,106,119,103,118,63,39,148,44,115,2,215,112,105,213,171,31,154,46,169,222,149,11]",
              "sol": "stringToBytes32(\"139,15,194,223,60,13,230,143,208,14,106,119,103,118,63,39,148,44,115,2,215,112,105,213,171,31,154,46,169,222,149,11\")"
            },
            {
              "js": "[99,105,206,40,208,152,182,51,167,254,104,249,34,14,9,205,103,82,175,102,241,4,148,37,93,199,19,107,222,83,151,223]",
              "sol": "abi.encode(\"99,105,206,40,208,152,182,51,167,254,104,249,34,14,9,205,103,82,175,102,241,4,148,37,93,199,19,107,222,83,151,223\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.693ZMetaTxProxy.executeTransaction": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute executeTransaction(address,uint256,bytes,uint256,uint256,bytes)",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "[16,66,209,178,198,236,68,62,171,184,234,54,166,242,182,212,108,71,87,82,172,222,190,227,200,151,122,175,88,190,249,168]",
              "sol": "abi.encode(\"16,66,209,178,198,236,68,62,171,184,234,54,166,242,182,212,108,71,87,82,172,222,190,227,200,151,122,175,88,190,249,168\")"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "[123,162,190,68,132,145,16,143,255,240,1,17,5,200,71,161,135,116,171,120,170,135,94,3,115,24,253,11,228,245,125,228]",
              "sol": "abi.encode(\"123,162,190,68,132,145,16,143,255,240,1,17,5,200,71,161,135,116,171,120,170,135,94,3,115,24,253,11,228,245,125,228\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T15:30:23.694ZMetaTxProxy.verifySignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySignature(address,uint256,bytes,uint256,bytes) WHEN signer==_signer",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "64",
              "sol": "64"
            },
            {
              "js": "[156,117,25,53,200,181,121,68,243,170,182,216,31,89,210,133,29,179,64,193,32,44,131,201,227,245,179,58,162,183,99,158]",
              "sol": "abi.encode(\"156,117,25,53,200,181,121,68,243,170,182,216,31,89,210,133,29,179,64,193,32,44,131,201,227,245,179,58,162,183,99,158\")"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "[125,133,88,203,3,39,247,18,4,115,193,201,59,176,0,249,182,212,205,87,185,107,159,196,1,251,128,10,192,87,21,85]",
              "sol": "abi.encode(\"125,133,88,203,3,39,247,18,4,115,193,201,59,176,0,249,182,212,205,87,185,107,159,196,1,251,128,10,192,87,21,85\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}