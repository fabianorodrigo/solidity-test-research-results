,{
  "2020-11-10T13:18:03.301ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[175,202,63,136,109,88,128,62,6,185,57,160,147,79,194,172,174,253,191,0,190,190,247,6,110,178,62,216,46,224,23,252]",
              "sol": "stringToBytes32(\"175,202,63,136,109,88,128,62,6,185,57,160,147,79,194,172,174,253,191,0,190,190,247,6,110,178,62,216,46,224,23,252\")"
            },
            {
              "js": "[211,14,250,251,15,132,81,99,109,108,107,170,67,93,66,188,15,126,141,41,117,173,8,253,44,190,226,57,192,151,26,111,18,74,7,211,85,103,214,248,161,6,91,240,88,58,28,2,31,180,72,91,84,247,0,159,181,11,56,37,105,23,74,255,18,148]",
              "sol": "abi.encode(\"211,14,250,251,15,132,81,99,109,108,107,170,67,93,66,188,15,126,141,41,117,173,8,253,44,190,226,57,192,151,26,111,18,74,7,211,85,103,214,248,161,6,91,240,88,58,28,2,31,180,72,91,84,247,0,159,181,11,56,37,105,23,74,255,18,148\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[159,170,112,210,76,254,20,209,130,123,156,206,90,84,38,127,195,70,141,17,41,215,94,232,48,146,233,224,249,148,235,28]",
              "sol": "stringToBytes32(\"159,170,112,210,76,254,20,209,130,123,156,206,90,84,38,127,195,70,141,17,41,215,94,232,48,146,233,224,249,148,235,28\")"
            },
            {
              "js": "[31,246,80,103,154,19,68,224,149,81,129,127,71,141,107,163,188,200,62,230,241,237,244,180,115,125,81,36,19,160,93,158,1,43,231,107,45,116,227,92,95,45,21,119,75,141,245,139,25,82,192,204,60,201,212,90,167,73,33,129,107,171,89,66,10]",
              "sol": "abi.encode(\"31,246,80,103,154,19,68,224,149,81,129,127,71,141,107,163,188,200,62,230,241,237,244,180,115,125,81,36,19,160,93,158,1,43,231,107,45,116,227,92,95,45,21,119,75,141,245,139,25,82,192,204,60,201,212,90,167,73,33,129,107,171,89,66,10\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:18:03.303ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[102,105,48,102,121,14,227,9,219,114,250,122,107,19,210,100,187,36,165,169,43,137,50,236,89,111,254,29,60,220,58,181]",
              "sol": "stringToBytes32(\"102,105,48,102,121,14,227,9,219,114,250,122,107,19,210,100,187,36,165,169,43,137,50,236,89,111,254,29,60,220,58,181\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:18:03.303ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[232,182,96,74,9,58,118,108,34,149,69,171,107,175,182,206,71,201,8,132,206,146,94,166,155,28,69,115,50,64,29,58]",
              "sol": "stringToBytes32(\"232,182,96,74,9,58,118,108,34,149,69,171,107,175,182,206,71,201,8,132,206,146,94,166,155,28,69,115,50,64,29,58\")"
            },
            {
              "js": "[147,231,116,190,91,140,115,234,149,253,123,39,74,114,230,17,158,93,206,77,28,21,202,170,173,214,31,180,215,18,223,127]",
              "sol": "abi.encode(\"147,231,116,190,91,140,115,234,149,253,123,39,74,114,230,17,158,93,206,77,28,21,202,170,173,214,31,180,215,18,223,127\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:18:03.304ZSignatureVerifier.hashBid": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute hashBid(SignatureVerifier.Bid)",
          "parameters": [
            {
              "js": "{\"amount\": 28,\"bidder\": {\"userId\": 65,\"wallet\": accounts[5]}}",
              "sol": "SignatureVerifier.Bid(28,SignatureVerifier.Identity(65,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:18:03.305ZSignatureVerifier.verifyHardCoded": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifyHardCoded()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:18:03.305ZSignatureVerifier.verifySpecificWithPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 2,\"bidder\": {\"userId\": 65,\"wallet\": accounts[5]}}",
              "sol": "SignatureVerifier.Bid(2,SignatureVerifier.Identity(65,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[68,1,3,211,42,41,83,225,193,63,179,221,173,156,127,202,246,180,32,187,47,97,199,250,89,116,222,140,219,174,141,156]",
              "sol": "abi.encode(\"68,1,3,211,42,41,83,225,193,63,179,221,173,156,127,202,246,180,32,187,47,97,199,250,89,116,222,140,219,174,141,156\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T13:18:03.305ZSignatureVerifier.verifySpecificWithoutPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithoutPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 322,\"bidder\": {\"userId\": 324,\"wallet\": accounts[2]}}",
              "sol": "SignatureVerifier.Bid(322,SignatureVerifier.Identity(324,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[6,229,207,220,200,76,125,235,194,57,187,83,29,68,125,43,6,127,235,121,67,237,210,141,23,165,47,139,63,33,88,231]",
              "sol": "abi.encode(\"6,229,207,220,200,76,125,235,194,57,187,83,29,68,125,43,6,127,235,121,67,237,210,141,23,165,47,139,63,33,88,231\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}