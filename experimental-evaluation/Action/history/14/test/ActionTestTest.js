const truffleAssert = require('truffle-assertions');
const ActionTest = artifacts.require("ActionTest");
const FreezableTestToken = artifacts.require("FreezableTestToken");
const TokenProportionalCapped = artifacts.require("electusvoting/contracts/poll/TokenProportionalCapped.sol");
const TokenProportionalUncapped = artifacts.require("electusvoting/contracts/poll/TokenProportionalUncapped.sol");
const Protocol = artifacts.require("electusvoting/contracts/protocol/Protocol.sol");
const TokenProportionalCappedTest = artifacts.require("electusvoting/contracts/testContracts/TokenProportionalCappedTest.sol");
const TokenProportionalUncappedTest = artifacts.require("electusvoting/contracts/testContracts/TokenProportionalUncappedTest.sol");
const FreezableToken = artifacts.require("electusvoting/contracts/Token/FreezableToken.sol");
const ERC1261MetaData = artifacts.require("membershipverificationtoken/contracts/ERC1261MetaData.sol");
const MembershipVerificationToken = artifacts.require("membershipverificationtoken/contracts/MembershipVerificationToken.sol");
const SafeMath = artifacts.require("openzeppelin-solidity/contracts/math/SafeMath.sol");
const ERC20 = artifacts.require("openzeppelin-solidity/contracts/token/ERC20/ERC20.sol");

contract("ActionTest",(accounts)=>{
  let trace = false;
  let contractSafeMath = null;
  let contractERC20 = null;
  let contractFreezableToken = null;
  let contractProtocol = null;
  let contractERC1261MetaData = null;
  let contractMembershipVerificationToken = null;
  let contractTokenProportionalCapped = null;
  let contractTokenProportionalUncapped = null;
  let contractTokenProportionalUncappedTest = null;
  let contractTokenProportionalCappedTest = null;
  let contractFreezableTestToken = null;
  let contractActionTest = null;
  beforeEach(async () => {
    contractSafeMath = await SafeMath.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: SafeMath.new({from: accounts[0]}');
    ERC20.link("SafeMath",contractSafeMath.address);
    contractERC20 = await ERC20.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: ERC20.new({from: accounts[0]}');
    contractFreezableToken = await FreezableToken.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: FreezableToken.new({from: accounts[0]}');
    contractProtocol = await Protocol.new([16,217,104,74,184,113,187,108,243,255,248,169,236,106,14,58,55,55,87,255,136,131,126,178,12,102,47,233,40,197,194,215],[112,104,87,86,34,236,164,220,28,250,147,242,48,227,84,135,73,36,222,20,251,84,180,126,195,50,167,154,105,176,211,39],{from:accounts[0]});
    if(trace) console.log('SUCESSO: Protocol.new([16,217,104,74,184,113,187,108,243,255,248,169,236,106,14,58,55,55,87,255,136,131,126,178,12,102,47,233,40,197,194,215],[112,104,87,86,34,236,164,220,28,250,147,242,48,227,84,135,73,36,222,20,251,84,180,126,195,50,167,154,105,176,211,39],{from:accounts[0]}');
    contractERC1261MetaData = await ERC1261MetaData.new([124,14,150,16,205,25,14,82,126,122,143,180,183,254,37,14,18,64,240,173,165,138,126,154,146,9,179,118,245,221,189,87],[2,44,62,212,113,93,184,156,18,222,187,6,81,176,36,109,74,126,104,150,78,254,245,213,143,180,142,198,16,188,124,216],{from:accounts[0]});
    if(trace) console.log('SUCESSO: ERC1261MetaData.new([124,14,150,16,205,25,14,82,126,122,143,180,183,254,37,14,18,64,240,173,165,138,126,154,146,9,179,118,245,221,189,87],[2,44,62,212,113,93,184,156,18,222,187,6,81,176,36,109,74,126,104,150,78,254,245,213,143,180,142,198,16,188,124,216],{from:accounts[0]}');
    contractMembershipVerificationToken = await MembershipVerificationToken.new({from:accounts[0]});
    if(trace) console.log('SUCESSO: MembershipVerificationToken.new({from:accounts[0]}');
    contractTokenProportionalUncappedTest = await TokenProportionalUncappedTest.new([contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address],[[11,31,70,94,213,62,100,125,21,159,219,208,169,43,88,132,69,111,209,108,4,194,167,135,65,160,99,246,158,225,146,28],[2,60,47,4,11,130,107,194,54,157,163,36,218,177,174,233,253,149,2,131,245,186,246,238,48,118,58,143,218,202,214,154],[73,50,41,225,9,120,235,128,19,229,16,115,114,208,196,3,139,225,134,225,132,22,73,142,211,26,110,73,6,41,182,234],[201,167,71,78,99,27,42,6,68,2,193,29,101,134,226,159,47,171,58,98,222,214,166,243,45,142,237,31,20,178,114,250],[248,159,52,58,230,142,122,92,228,229,168,254,253,150,29,252,54,31,22,230,46,195,55,234,136,113,65,14,215,104,117,157],[35,23,198,170,134,67,171,116,79,239,209,140,242,134,200,50,40,107,21,224,246,8,69,73,124,146,121,46,7,34,245,28],[60,94,36,95,228,99,199,69,233,60,255,88,22,212,154,83,194,194,64,150,59,173,110,123,198,172,214,20,120,214,47,167],[241,149,223,252,213,103,85,177,75,187,206,143,191,142,226,219,138,63,51,212,67,8,142,55,156,105,160,57,191,223,225,122],[148,191,237,144,106,25,208,67,238,22,18,126,247,9,49,191,201,214,194,127,21,249,136,171,46,188,95,185,224,44,184,74],[194,0,248,139,114,111,152,236,68,46,9,231,221,192,224,62,203,98,126,133,124,104,75,113,67,17,204,203,234,46,161,35],[229,85,6,154,6,198,64,106,184,145,190,104,83,222,114,126,231,217,200,253,107,118,46,230,187,139,44,98,110,243,37,107],[236,66,118,87,85,224,174,200,178,31,183,196,99,255,146,204,65,72,49,232,227,245,62,235,82,91,108,252,249,68,23,88],[128,241,189,236,153,93,114,227,250,42,160,64,192,172,109,14,86,135,84,82,226,208,117,197,65,211,97,230,109,96,175,187],[135,231,144,43,240,88,104,136,74,183,49,210,200,144,167,29,80,201,199,25,132,29,48,227,68,230,144,166,59,157,231,101],[236,81,235,89,254,172,163,218,65,255,200,177,131,175,60,173,50,31,139,118,160,52,106,238,120,186,11,32,2,70,7,139],[10,76,146,105,64,6,174,96,191,117,67,222,177,114,95,141,223,46,115,17,151,107,25,80,201,61,229,119,43,138,186,240],[193,62,29,17,0,186,99,67,101,65,144,215,163,109,115,228,163,16,251,169,230,229,203,217,89,80,0,211,205,0,52,24],[237,40,206,159,65,159,253,143,47,255,115,239,204,236,214,233,55,168,15,224,201,239,118,180,101,87,36,165,10,11,198,203],[229,187,204,70,176,30,174,73,195,175,191,105,253,55,246,53,176,81,84,74,236,221,97,105,28,19,252,16,138,226,161,43],[15,88,109,154,77,30,163,33,67,41,224,217,232,42,205,48,234,242,14,195,195,128,9,23,222,238,85,83,123,132,126,26],[160,87,198,146,123,125,159,28,121,221,14,175,27,57,116,185,9,217,32,12,43,184,197,76,251,26,108,194,102,210,73,91],[204,124,120,32,218,41,250,166,161,11,87,236,254,102,202,146,123,202,8,192,47,153,222,202,37,36,86,162,227,174,174,172],[75,138,87,40,61,126,2,16,160,240,225,231,90,178,75,65,225,67,137,244,182,31,228,158,31,184,255,55,211,174,255,100],[217,59,200,149,243,212,0,252,247,212,45,73,29,22,123,178,62,152,30,7,68,5,51,20,201,34,181,86,155,165,180,14],[28,142,79,198,63,37,188,88,148,96,238,24,52,226,157,206,142,172,32,24,115,140,101,46,93,130,104,66,28,89,150,150],[202,171,6,0,188,72,88,55,89,27,24,201,177,51,211,250,212,238,16,250,208,112,120,89,161,107,57,205,72,71,136,165],[170,84,201,141,74,209,33,15,76,3,225,221,246,97,158,162,244,100,202,80,119,163,177,70,34,207,237,163,123,161,155,151],[135,66,163,225,41,172,65,218,160,12,51,208,16,252,152,21,249,161,165,83,53,119,19,182,47,116,123,0,147,196,203,128]],contractFreezableToken.address,[88,114,33,4,91,124,5,230,78,153,171,16,240,81,108,116,144,5,170,92,221,53,154,152,116,92,161,226,239,211,187,213],[147,72,116,89,219,222,119,1,120,222,162,204,17,136,165,180,157,125,245,87,196,126,155,96,92,190,21,245,82,12,71,187],[207,106,206,65,107,2,165,0,197,62,112,85,178,163,62,246,239,9,226,66,76,162,43,211,51,235,171,194,89,204,238,12],1001,1532892064,{from:accounts[0]});
    if(trace) console.log('SUCESSO: TokenProportionalUncappedTest.new([contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address,contractMembershipVerificationToken.address],[[11,31,70,94,213,62,100,125,21,159,219,208,169,43,88,132,69,111,209,108,4,194,167,135,65,160,99,246,158,225,146,28],[2,60,47,4,11,130,107,194,54,157,163,36,218,177,174,233,253,149,2,131,245,186,246,238,48,118,58,143,218,202,214,154],[73,50,41,225,9,120,235,128,19,229,16,115,114,208,196,3,139,225,134,225,132,22,73,142,211,26,110,73,6,41,182,234],[201,167,71,78,99,27,42,6,68,2,193,29,101,134,226,159,47,171,58,98,222,214,166,243,45,142,237,31,20,178,114,250],[248,159,52,58,230,142,122,92,228,229,168,254,253,150,29,252,54,31,22,230,46,195,55,234,136,113,65,14,215,104,117,157],[35,23,198,170,134,67,171,116,79,239,209,140,242,134,200,50,40,107,21,224,246,8,69,73,124,146,121,46,7,34,245,28],[60,94,36,95,228,99,199,69,233,60,255,88,22,212,154,83,194,194,64,150,59,173,110,123,198,172,214,20,120,214,47,167],[241,149,223,252,213,103,85,177,75,187,206,143,191,142,226,219,138,63,51,212,67,8,142,55,156,105,160,57,191,223,225,122],[148,191,237,144,106,25,208,67,238,22,18,126,247,9,49,191,201,214,194,127,21,249,136,171,46,188,95,185,224,44,184,74],[194,0,248,139,114,111,152,236,68,46,9,231,221,192,224,62,203,98,126,133,124,104,75,113,67,17,204,203,234,46,161,35],[229,85,6,154,6,198,64,106,184,145,190,104,83,222,114,126,231,217,200,253,107,118,46,230,187,139,44,98,110,243,37,107],[236,66,118,87,85,224,174,200,178,31,183,196,99,255,146,204,65,72,49,232,227,245,62,235,82,91,108,252,249,68,23,88],[128,241,189,236,153,93,114,227,250,42,160,64,192,172,109,14,86,135,84,82,226,208,117,197,65,211,97,230,109,96,175,187],[135,231,144,43,240,88,104,136,74,183,49,210,200,144,167,29,80,201,199,25,132,29,48,227,68,230,144,166,59,157,231,101],[236,81,235,89,254,172,163,218,65,255,200,177,131,175,60,173,50,31,139,118,160,52,106,238,120,186,11,32,2,70,7,139],[10,76,146,105,64,6,174,96,191,117,67,222,177,114,95,141,223,46,115,17,151,107,25,80,201,61,229,119,43,138,186,240],[193,62,29,17,0,186,99,67,101,65,144,215,163,109,115,228,163,16,251,169,230,229,203,217,89,80,0,211,205,0,52,24],[237,40,206,159,65,159,253,143,47,255,115,239,204,236,214,233,55,168,15,224,201,239,118,180,101,87,36,165,10,11,198,203],[229,187,204,70,176,30,174,73,195,175,191,105,253,55,246,53,176,81,84,74,236,221,97,105,28,19,252,16,138,226,161,43],[15,88,109,154,77,30,163,33,67,41,224,217,232,42,205,48,234,242,14,195,195,128,9,23,222,238,85,83,123,132,126,26],[160,87,198,146,123,125,159,28,121,221,14,175,27,57,116,185,9,217,32,12,43,184,197,76,251,26,108,194,102,210,73,91],[204,124,120,32,218,41,250,166,161,11,87,236,254,102,202,146,123,202,8,192,47,153,222,202,37,36,86,162,227,174,174,172],[75,138,87,40,61,126,2,16,160,240,225,231,90,178,75,65,225,67,137,244,182,31,228,158,31,184,255,55,211,174,255,100],[217,59,200,149,243,212,0,252,247,212,45,73,29,22,123,178,62,152,30,7,68,5,51,20,201,34,181,86,155,165,180,14],[28,142,79,198,63,37,188,88,148,96,238,24,52,226,157,206,142,172,32,24,115,140,101,46,93,130,104,66,28,89,150,150],[202,171,6,0,188,72,88,55,89,27,24,201,177,51,211,250,212,238,16,250,208,112,120,89,161,107,57,205,72,71,136,165],[170,84,201,141,74,209,33,15,76,3,225,221,246,97,158,162,244,100,202,80,119,163,177,70,34,207,237,163,123,161,155,151],[135,66,163,225,41,172,65,218,160,12,51,208,16,252,152,21,249,161,165,83,53,119,19,182,47,116,123,0,147,196,203,128]],contractFreezableToken.address,[88,114,33,4,91,124,5,230,78,153,171,16,240,81,108,116,144,5,170,92,221,53,154,152,116,92,161,226,239,211,187,213],[147,72,116,89,219,222,119,1,120,222,162,204,17,136,165,180,157,125,245,87,196,126,155,96,92,190,21,245,82,12,71,187],[207,106,206,65,107,2,165,0,197,62,112,85,178,163,62,246,239,9,226,66,76,162,43,211,51,235,171,194,89,204,238,12],1001,1532892064,{from:accounts[0]}');
    contractTokenProportionalCappedTest = await TokenProportionalCappedTest.new([contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address],[[255,0,102,138,18,126,105,170,98,81,42,215,165,57,101,6,36,130,246,216,108,30,50,170,106,156,221,224,253,161,228,182],[68,77,50,104,183,17,111,177,23,245,81,55,227,142,54,18,155,2,222,93,23,161,6,31,247,33,203,204,80,13,119,173],[110,30,235,34,5,25,209,172,229,181,250,201,205,42,144,0,2,0,74,96,17,32,106,113,117,20,99,88,7,89,180,95],[178,201,103,51,146,166,101,6,54,22,198,6,160,208,219,118,68,100,251,48,179,33,34,60,220,156,206,238,116,42,138,127],[159,11,65,213,158,230,181,215,79,91,15,33,77,67,221,78,100,83,174,197,7,32,6,32,84,245,7,67,105,202,55,74]],contractFreezableToken.address,255,[102,209,81,220,146,160,242,243,191,72,234,45,200,89,167,226,9,67,228,72,247,19,32,171,154,208,101,146,158,65,232,167],[29,64,109,25,33,123,38,251,41,192,139,34,204,227,195,154,100,186,118,218,97,149,32,191,250,222,157,153,125,57,60,80],[200,176,158,1,93,69,42,58,243,194,83,245,109,157,127,92,27,85,114,171,90,165,144,237,82,80,210,7,137,57,206,142],255,0,{from:accounts[0]});
    if(trace) console.log('SUCESSO: TokenProportionalCappedTest.new([contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address,contractProtocol.address],[[255,0,102,138,18,126,105,170,98,81,42,215,165,57,101,6,36,130,246,216,108,30,50,170,106,156,221,224,253,161,228,182],[68,77,50,104,183,17,111,177,23,245,81,55,227,142,54,18,155,2,222,93,23,161,6,31,247,33,203,204,80,13,119,173],[110,30,235,34,5,25,209,172,229,181,250,201,205,42,144,0,2,0,74,96,17,32,106,113,117,20,99,88,7,89,180,95],[178,201,103,51,146,166,101,6,54,22,198,6,160,208,219,118,68,100,251,48,179,33,34,60,220,156,206,238,116,42,138,127],[159,11,65,213,158,230,181,215,79,91,15,33,77,67,221,78,100,83,174,197,7,32,6,32,84,245,7,67,105,202,55,74]],contractFreezableToken.address,255,[102,209,81,220,146,160,242,243,191,72,234,45,200,89,167,226,9,67,228,72,247,19,32,171,154,208,101,146,158,65,232,167],[29,64,109,25,33,123,38,251,41,192,139,34,204,227,195,154,100,186,118,218,97,149,32,191,250,222,157,153,125,57,60,80],[200,176,158,1,93,69,42,58,243,194,83,245,109,157,127,92,27,85,114,171,90,165,144,237,82,80,210,7,137,57,206,142],255,0,{from:accounts[0]}');
    contractFreezableTestToken = await FreezableTestToken.new({from:accounts[6]});
    if(trace) console.log('SUCESSO: FreezableTestToken.new({from:accounts[6]}');
    contractActionTest = await ActionTest.new([contractTokenProportionalUncappedTest.address,contractTokenProportionalCappedTest.address,contractTokenProportionalUncappedTest.address,contractTokenProportionalUncappedTest.address],accounts[2],{from:accounts[0]});
    if(trace) console.log('SUCESSO: ActionTest.new([contractTokenProportionalUncappedTest.address,contractTokenProportionalCappedTest.address,contractTokenProportionalUncappedTest.address,contractTokenProportionalUncappedTest.address],accounts[2],{from:accounts[0]}');
  });
  
  it('Should execute fallback()', async () => {
    let result = await contractActionTest.sendTransaction({from: accounts[0]});
  });
  it('Should execute execute()', async () => {
    let result = await contractActionTest.execute({from: accounts[0]});
  });
  it('Should execute canExecute()', async () => {
    let result = await contractActionTest.canExecute({from: accounts[0]});
  });
});
