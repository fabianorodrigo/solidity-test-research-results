,{
  "2020-11-10T11:12:20.747ZMetaTxProxy.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.421ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[8,161,82,72,28,42,140,175,171,21,147,183,252,63,207,133,231,24,47,106,1,250,244,173,32,27,76,226,231,147,222,138]",
              "sol": "stringToBytes32(\"8,161,82,72,28,42,140,175,171,21,147,183,252,63,207,133,231,24,47,106,1,250,244,173,32,27,76,226,231,147,222,138\")"
            },
            {
              "js": "[]",
              "sol": "abi.encode(\"\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[71,242,182,88,73,50,40,28,79,79,16,154,148,101,60,214,70,129,119,88,13,0,131,175,255,84,237,247,204,143,221,242]",
              "sol": "stringToBytes32(\"71,242,182,88,73,50,40,28,79,79,16,154,148,101,60,214,70,129,119,88,13,0,131,175,255,84,237,247,204,143,221,242\")"
            },
            {
              "js": "[234,99,118,53,229,83,72,31,101,47,149,57,15,148,86,101,148,158,97,175,42,51,153,65,3,124,137,158,238,85,67,97,230,229,234,202,215,160,78,210,201,164,72,252,202,206,72,197,154,31,5,152,171,139,199,248,248,229,167,13,101,204,185,95,17]",
              "sol": "abi.encode(\"234,99,118,53,229,83,72,31,101,47,149,57,15,148,86,101,148,158,97,175,42,51,153,65,3,124,137,158,238,85,67,97,230,229,234,202,215,160,78,210,201,164,72,252,202,206,72,197,154,31,5,152,171,139,199,248,248,229,167,13,101,204,185,95,17\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.422ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[20,219,2,234,101,175,66,188,86,240,92,153,177,173,121,219,36,3,8,66,81,96,87,27,109,219,113,164,146,130,41,56]",
              "sol": "stringToBytes32(\"20,219,2,234,101,175,66,188,86,240,92,153,177,173,121,219,36,3,8,66,81,96,87,27,109,219,113,164,146,130,41,56\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.423ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[200,37,244,8,188,60,18,158,106,153,215,63,192,63,14,141,59,247,165,156,63,17,6,218,97,26,11,128,224,12,47,191]",
              "sol": "stringToBytes32(\"200,37,244,8,188,60,18,158,106,153,215,63,192,63,14,141,59,247,165,156,63,17,6,218,97,26,11,128,224,12,47,191\")"
            },
            {
              "js": "[225,191,80,44,62,131,1,119,201,65,77,72,166,247,75,219,158,133,141,16,15,202,7,148,81,36,87,248,28,30,251,63]",
              "sol": "abi.encode(\"225,191,80,44,62,131,1,119,201,65,77,72,166,247,75,219,158,133,141,16,15,202,7,148,81,36,87,248,28,30,251,63\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.423ZExternalContract.updateValue": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateValue(uint256)",
          "parameters": [
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.424ZMetaTxProxy.": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute fallback()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.425ZMetaTxProxy.getTransactionHashNonce": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHashNonce(bytes32)",
          "parameters": [
            {
              "js": "[245,46,238,29,185,120,62,220,174,138,153,247,104,68,85,127,255,136,170,12,166,228,150,247,200,139,254,247,203,25,234,178]",
              "sol": "stringToBytes32(\"245,46,238,29,185,120,62,220,174,138,153,247,104,68,85,127,255,136,170,12,166,228,150,247,200,139,254,247,203,25,234,178\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.425ZMetaTxProxy.getTransactionHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHash(address,uint256,bytes,uint256)",
          "parameters": [
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "[15,57,172,200,213,11,53,190,187,20,47,73,4,26,197,149,43,95,195,12,225,187,58,233,186,97,131,209,171,82,230,87]",
              "sol": "abi.encode(\"15,57,172,200,213,11,53,190,187,20,47,73,4,26,197,149,43,95,195,12,225,187,58,233,186,97,131,209,171,82,230,87\")"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.425ZMetaTxProxy.getSigner": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getSigner(bytes32,bytes)",
          "parameters": [
            {
              "js": "[94,77,31,243,75,234,127,49,4,165,243,198,181,13,119,206,125,131,211,14,133,36,247,180,41,114,115,90,44,176,142,251]",
              "sol": "stringToBytes32(\"94,77,31,243,75,234,127,49,4,165,243,198,181,13,119,206,125,131,211,14,133,36,247,180,41,114,115,90,44,176,142,251\")"
            },
            {
              "js": "[55,152,87,153,6,37,103,123,197,250,171,24,127,27,130,0,49,217,107,37,187,177,60,9,107,110,0,240,196,228,2,196]",
              "sol": "abi.encode(\"55,152,87,153,6,37,103,123,197,250,171,24,127,27,130,0,49,217,107,37,187,177,60,9,107,110,0,240,196,228,2,196\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.426ZMetaTxProxy.executeTransaction": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute executeTransaction(address,uint256,bytes,uint256,uint256,bytes)",
          "parameters": [
            {
              "js": "accounts[2]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "2014223716",
              "sol": "2014223716"
            },
            {
              "js": "[17,7,120,177,111,254,245,68,236,59,180,116,217,63,101,4,22,232,141,208,186,217,171,10,90,130,188,199,144,253,31,226]",
              "sol": "abi.encode(\"17,7,120,177,111,254,245,68,236,59,180,116,217,63,101,4,22,232,141,208,186,217,171,10,90,130,188,199,144,253,31,226\")"
            },
            {
              "js": "95",
              "sol": "95"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "[127,142,142,73,83,2,140,150,237,148,245,70,233,151,50,69,89,197,208,189,131,72,16,21,107,205,64,193,51,5,87,78]",
              "sol": "abi.encode(\"127,142,142,73,83,2,140,150,237,148,245,70,233,151,50,69,89,197,208,189,131,72,16,21,107,205,64,193,51,5,87,78\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T11:12:24.426ZMetaTxProxy.verifySignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySignature(address,uint256,bytes,uint256,bytes) WHEN signer==_signer",
          "parameters": [
            {
              "js": "accounts[0]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1",
              "sol": "1"
            },
            {
              "js": "[96,117,103,140,110,93,23,210,24,22,115,25,116,168,114,157,52,129,69,189,72,140,140,68,237,179,135,219,245,80,61,102]",
              "sol": "abi.encode(\"96,117,103,140,110,93,23,210,24,22,115,25,116,168,114,157,52,129,69,189,72,140,140,68,237,179,135,219,245,80,61,102\")"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "[65,18,236,198,209,17,11,206,188,73,84,217,172,94,74,159,49,202,82,180,187,243,109,21,96,234,193,165,163,4,153,137]",
              "sol": "abi.encode(\"65,18,236,198,209,17,11,206,188,73,84,217,172,94,74,159,49,202,82,180,187,243,109,21,96,234,193,165,163,4,153,137\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}