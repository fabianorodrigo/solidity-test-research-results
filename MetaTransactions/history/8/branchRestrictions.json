,{
  "2020-11-10T19:46:58.021ZMetaTxProxy.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.513ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[100,206,171,163,80,8,225,218,252,13,213,159,25,109,6,112,26,72,121,186,213,144,218,88,130,245,45,148,2,101,94,67]",
              "sol": "stringToBytes32(\"100,206,171,163,80,8,225,218,252,13,213,159,25,109,6,112,26,72,121,186,213,144,218,88,130,245,45,148,2,101,94,67\")"
            },
            {
              "js": "[20,248]",
              "sol": "abi.encode(\"20,248\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[146,94,209,103,229,34,76,118,234,182,75,170,56,253,20,175,226,101,236,205,200,249,146,133,31,244,35,161,6,34,154,85]",
              "sol": "stringToBytes32(\"146,94,209,103,229,34,76,118,234,182,75,170,56,253,20,175,226,101,236,205,200,249,146,133,31,244,35,161,6,34,154,85\")"
            },
            {
              "js": "[75,100,240,236,119,46,64,229,177,168,184,86,184,70,102,46,121,53,55,166,98,173,137,243,63,18,221,159,189,75,158,60,228,218,44,152,18,68,231,196,104,91,142,231,88,48,32,134,131,252,74,230,64,107,231,121,208,237,72,215,25,8,35,189,251]",
              "sol": "abi.encode(\"75,100,240,236,119,46,64,229,177,168,184,86,184,70,102,46,121,53,55,166,98,173,137,243,63,18,221,159,189,75,158,60,228,218,44,152,18,68,231,196,104,91,142,231,88,48,32,134,131,252,74,230,64,107,231,121,208,237,72,215,25,8,35,189,251\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.515ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[148,243,6,41,176,217,170,243,1,83,151,156,61,65,225,173,57,198,183,128,164,22,30,196,140,185,32,62,99,188,36,237]",
              "sol": "stringToBytes32(\"148,243,6,41,176,217,170,243,1,83,151,156,61,65,225,173,57,198,183,128,164,22,30,196,140,185,32,62,99,188,36,237\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.515ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[184,201,232,240,22,54,28,40,8,179,70,204,172,72,185,3,113,192,134,72,65,118,226,228,202,20,71,240,255,113,153,200]",
              "sol": "stringToBytes32(\"184,201,232,240,22,54,28,40,8,179,70,204,172,72,185,3,113,192,134,72,65,118,226,228,202,20,71,240,255,113,153,200\")"
            },
            {
              "js": "[214,27,66,0,118,214,82,26,179,243,46,104,17,174,231,58,210,65,232,84,7,208,169,34,41,157,173,216,160,176,16,185]",
              "sol": "abi.encode(\"214,27,66,0,118,214,82,26,179,243,46,104,17,174,231,58,210,65,232,84,7,208,169,34,41,157,173,216,160,176,16,185\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.516ZExternalContract.updateValue": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateValue(uint256)",
          "parameters": [
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.517ZMetaTxProxy.": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute fallback()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.518ZMetaTxProxy.getTransactionHashNonce": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHashNonce(bytes32)",
          "parameters": [
            {
              "js": "[177,164,247,18,10,235,166,38,189,190,57,110,63,18,72,113,9,31,32,249,41,57,86,27,70,209,94,132,251,228,14,36]",
              "sol": "stringToBytes32(\"177,164,247,18,10,235,166,38,189,190,57,110,63,18,72,113,9,31,32,249,41,57,86,27,70,209,94,132,251,228,14,36\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.518ZMetaTxProxy.getTransactionHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHash(address,uint256,bytes,uint256)",
          "parameters": [
            {
              "js": "accounts[8]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "[187,62,235,212,249,72,241,29,176,34,101,144,83,76,19,40,158,236,144,218,196,48,126,177,231,200,234,12,249,101,55,51]",
              "sol": "abi.encode(\"187,62,235,212,249,72,241,29,176,34,101,144,83,76,19,40,158,236,144,218,196,48,126,177,231,200,234,12,249,101,55,51\")"
            },
            {
              "js": "2",
              "sol": "2"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.519ZMetaTxProxy.getSigner": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getSigner(bytes32,bytes)",
          "parameters": [
            {
              "js": "[115,57,130,26,148,227,98,10,130,220,238,232,238,210,83,138,67,64,101,253,76,73,199,50,156,43,219,28,41,27,42,121]",
              "sol": "stringToBytes32(\"115,57,130,26,148,227,98,10,130,220,238,232,238,210,83,138,67,64,101,253,76,73,199,50,156,43,219,28,41,27,42,121\")"
            },
            {
              "js": "[164,188,147,2,27,67,170,154,75,18,15,34,72,62,181,199,122,212,229,141,12,151,249,8,183,238,16,240,37,198,116,23]",
              "sol": "abi.encode(\"164,188,147,2,27,67,170,154,75,18,15,34,72,62,181,199,122,212,229,141,12,151,249,8,183,238,16,240,37,198,116,23\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.519ZMetaTxProxy.executeTransaction": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute executeTransaction(address,uint256,bytes,uint256,uint256,bytes)",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "[78,162,250,167,146,165,237,211,146,158,139,241,144,141,238,200,233,254,160,7,53,233,12,194,117,138,48,87,225,89,242,3]",
              "sol": "abi.encode(\"78,162,250,167,146,165,237,211,146,158,139,241,144,141,238,200,233,254,160,7,53,233,12,194,117,138,48,87,225,89,242,3\")"
            },
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "[81,55,117,195,47,120,246,23,218,32,16,129,58,22,69,240,24,128,41,54,89,230,212,199,234,87,192,181,43,201,251,137]",
              "sol": "abi.encode(\"81,55,117,195,47,120,246,23,218,32,16,129,58,22,69,240,24,128,41,54,89,230,212,199,234,87,192,181,43,201,251,137\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:47:01.520ZMetaTxProxy.verifySignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySignature(address,uint256,bytes,uint256,bytes) WHEN signer==_signer",
          "parameters": [
            {
              "js": "accounts[4]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "65",
              "sol": "65"
            },
            {
              "js": "[252,254,91,248,50,195,42,155,25,129,246,18,56,99,108,35,147,214,172,32,208,109,44,218,246,38,38,21,128,90,123,79]",
              "sol": "abi.encode(\"252,254,91,248,50,195,42,155,25,129,246,18,56,99,108,35,147,214,172,32,208,109,44,218,246,38,38,21,128,90,123,79\")"
            },
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "[29,249,42,7,5,99,197,53,237,4,90,217,169,183,47,120,189,122,178,163,93,112,211,12,111,125,73,187,114,237,246,97]",
              "sol": "abi.encode(\"29,249,42,7,5,99,197,53,237,4,90,217,169,183,47,120,189,122,178,163,93,112,211,12,111,125,73,187,114,237,246,97\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}