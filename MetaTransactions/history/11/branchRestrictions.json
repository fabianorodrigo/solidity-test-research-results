,{
  "2020-11-11T02:44:14.503ZMetaTxProxy.null": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute constructor()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.314ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[168,28,81,187,48,150,105,212,51,165,140,109,237,255,12,145,160,221,6,79,65,231,39,129,117,212,152,144,82,74,236,223]",
              "sol": "stringToBytes32(\"168,28,81,187,48,150,105,212,51,165,140,109,237,255,12,145,160,221,6,79,65,231,39,129,117,212,152,144,82,74,236,223\")"
            },
            {
              "js": "[]",
              "sol": "abi.encode(\"\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[4,134,180,30,12,117,174,218,25,103,120,219,248,207,29,186,122,168,26,57,231,200,25,166,129,253,176,50,161,103,214,161]",
              "sol": "stringToBytes32(\"4,134,180,30,12,117,174,218,25,103,120,219,248,207,29,186,122,168,26,57,231,200,25,166,129,253,176,50,161,103,214,161\")"
            },
            {
              "js": "[134,172,102,115,43,203,147,3,135,226,99,187,67,93,13,242,104,204,107,101,200,49,106,214,13,196,26,200,142,250,101,123,124,229,163,44,129,95,216,247,107,60,65,132,71,97,139,188,102,203,177,192,14,236,82,234,40,217,120,120,5,109,216,57,227]",
              "sol": "abi.encode(\"134,172,102,115,43,203,147,3,135,226,99,187,67,93,13,242,104,204,107,101,200,49,106,214,13,196,26,200,142,250,101,123,124,229,163,44,129,95,216,247,107,60,65,132,71,97,139,188,102,203,177,192,14,236,82,234,40,217,120,120,5,109,216,57,227\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.315ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[32,198,60,134,240,11,33,229,184,111,70,158,94,218,253,29,205,239,25,169,65,255,33,44,219,73,241,245,12,38,96,186]",
              "sol": "stringToBytes32(\"32,198,60,134,240,11,33,229,184,111,70,158,94,218,253,29,205,239,25,169,65,255,33,44,219,73,241,245,12,38,96,186\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.315ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[168,85,186,26,19,86,41,119,7,52,75,170,120,24,149,254,111,126,226,89,222,88,55,142,25,90,7,63,18,209,82,42]",
              "sol": "stringToBytes32(\"168,85,186,26,19,86,41,119,7,52,75,170,120,24,149,254,111,126,226,89,222,88,55,142,25,90,7,63,18,209,82,42\")"
            },
            {
              "js": "[62,197,85,248,115,26,85,10,245,25,241,175,158,112,29,153,184,229,32,25,209,144,97,132,147,107,129,105,81,17,183,17]",
              "sol": "abi.encode(\"62,197,85,248,115,26,85,10,245,25,241,175,158,112,29,153,184,229,32,25,209,144,97,132,147,107,129,105,81,17,183,17\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.316ZExternalContract.updateValue": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute updateValue(uint256)",
          "parameters": [
            {
              "js": "4",
              "sol": "4"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.317ZMetaTxProxy.": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute fallback()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.317ZMetaTxProxy.getTransactionHashNonce": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHashNonce(bytes32)",
          "parameters": [
            {
              "js": "[93,46,38,159,23,44,90,92,240,48,95,18,171,255,69,46,180,222,166,151,56,246,87,39,122,175,190,210,1,40,104,253]",
              "sol": "stringToBytes32(\"93,46,38,159,23,44,90,92,240,48,95,18,171,255,69,46,180,222,166,151,56,246,87,39,122,175,190,210,1,40,104,253\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.317ZMetaTxProxy.getTransactionHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getTransactionHash(address,uint256,bytes,uint256)",
          "parameters": [
            {
              "js": "accounts[7]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "29",
              "sol": "29"
            },
            {
              "js": "[201,202,74,253,156,8,176,119,221,10,236,111,224,64,50,161,228,195,204,107,60,238,96,144,196,187,130,5,168,122,248,104]",
              "sol": "abi.encode(\"201,202,74,253,156,8,176,119,221,10,236,111,224,64,50,161,228,195,204,107,60,238,96,144,196,187,130,5,168,122,248,104\")"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.318ZMetaTxProxy.getSigner": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute getSigner(bytes32,bytes)",
          "parameters": [
            {
              "js": "[69,94,186,92,173,87,228,119,226,211,30,61,59,103,221,247,65,133,230,166,123,61,30,168,189,77,106,181,108,21,49,177]",
              "sol": "stringToBytes32(\"69,94,186,92,173,87,228,119,226,211,30,61,59,103,221,247,65,133,230,166,123,61,30,168,189,77,106,181,108,21,49,177\")"
            },
            {
              "js": "[58,134,103,45,82,167,10,233,117,46,86,169,190,52,177,96,113,169,26,226,140,55,107,15,164,12,65,43,85,194,252,87]",
              "sol": "abi.encode(\"58,134,103,45,82,167,10,233,117,46,86,169,190,52,177,96,113,169,26,226,140,55,107,15,164,12,65,43,85,194,252,87\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.318ZMetaTxProxy.executeTransaction": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute executeTransaction(address,uint256,bytes,uint256,uint256,bytes)",
          "parameters": [
            {
              "js": "accounts[9]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "1532892062",
              "sol": "1532892062"
            },
            {
              "js": "[117,241,157,57,240,17,234,56,185,207,103,181,239,10,199,167,231,245,62,219,142,185,51,148,239,166,252,10,179,30,91,227]",
              "sol": "abi.encode(\"117,241,157,57,240,17,234,56,185,207,103,181,239,10,199,167,231,245,62,219,142,185,51,148,239,166,252,10,179,30,91,227\")"
            },
            {
              "js": "96",
              "sol": "96"
            },
            {
              "js": "2014223714",
              "sol": "2014223714"
            },
            {
              "js": "[86,93,25,226,40,96,169,174,198,107,65,235,131,8,29,163,34,33,165,78,79,175,169,250,137,226,119,77,31,195,219,142]",
              "sol": "abi.encode(\"86,93,25,226,40,96,169,174,198,107,65,235,131,8,29,163,34,33,165,78,79,175,169,250,137,226,119,77,31,195,219,142\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T02:44:18.319ZMetaTxProxy.verifySignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySignature(address,uint256,bytes,uint256,bytes) WHEN signer==_signer",
          "parameters": [
            {
              "js": "accounts[3]",
              "sol": "address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "[186,178,105,124,110,123,61,236,175,232,183,171,33,165,98,168,245,46,48,120,255,32,94,8,229,79,213,177,173,145,195,150]",
              "sol": "abi.encode(\"186,178,105,124,110,123,61,236,175,232,183,171,33,165,98,168,245,46,48,120,255,32,94,8,229,79,213,177,173,145,195,150\")"
            },
            {
              "js": "1532892063",
              "sol": "1532892063"
            },
            {
              "js": "[254,115,142,99,133,102,11,32,194,149,50,48,188,224,94,184,95,172,27,71,42,44,190,106,142,163,206,59,132,211,124,128]",
              "sol": "abi.encode(\"254,115,142,99,133,102,11,32,194,149,50,48,188,224,94,184,95,172,27,71,42,44,190,106,142,163,206,59,132,211,124,128\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}