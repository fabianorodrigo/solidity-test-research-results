,{
  "2020-11-13T01:14:23.211ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[97,11,141,7,32,42,62,79,130,41,131,18,233,232,116,78,68,109,35,150,28,16,212,209,47,29,65,53,57,110,79,242]",
              "sol": "stringToBytes32(\"97,11,141,7,32,42,62,79,130,41,131,18,233,232,116,78,68,109,35,150,28,16,212,209,47,29,65,53,57,110,79,242\")"
            },
            {
              "js": "[141,218,4,163,67,189,133,235,2,137,205,126,212,73,165,250,246,53,59,159,113,185,153,181,181,154,203,24,89,45,10,188,145,124,232,13,136,217,143,215,239,93,68,136,194,251,223,178,49,178,162,101,8,43,217,182,37,120,25,17,196,244,86,10]",
              "sol": "abi.encode(\"141,218,4,163,67,189,133,235,2,137,205,126,212,73,165,250,246,53,59,159,113,185,153,181,181,154,203,24,89,45,10,188,145,124,232,13,136,217,143,215,239,93,68,136,194,251,223,178,49,178,162,101,8,43,217,182,37,120,25,17,196,244,86,10\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[240,223,123,212,194,164,249,124,252,109,246,192,7,202,163,167,73,198,3,206,167,160,51,239,52,220,247,48,238,60,54,65]",
              "sol": "stringToBytes32(\"240,223,123,212,194,164,249,124,252,109,246,192,7,202,163,167,73,198,3,206,167,160,51,239,52,220,247,48,238,60,54,65\")"
            },
            {
              "js": "[211,132,163,89,123,174,179,241,194,163,144,123,177,20,92,196,4,13,106,30,32,85,220,161,91,72,19,251,138,231,194,6,178,193,5,43,161,224,5,31,20,189,164,106,180,151,109,227,38,238,132,144,105,249,44,189,79,87,157,150,226,66,52,225,54]",
              "sol": "abi.encode(\"211,132,163,89,123,174,179,241,194,163,144,123,177,20,92,196,4,13,106,30,32,85,220,161,91,72,19,251,138,231,194,6,178,193,5,43,161,224,5,31,20,189,164,106,180,151,109,227,38,238,132,144,105,249,44,189,79,87,157,150,226,66,52,225,54\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-13T01:14:23.212ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[96,214,124,131,196,145,133,179,105,15,166,143,44,80,88,13,22,182,144,216,143,123,31,19,112,10,175,255,87,89,167,219]",
              "sol": "stringToBytes32(\"96,214,124,131,196,145,133,179,105,15,166,143,44,80,88,13,22,182,144,216,143,123,31,19,112,10,175,255,87,89,167,219\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-13T01:14:23.213ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[237,135,135,156,43,132,103,11,201,42,188,242,146,236,9,237,208,174,130,196,72,46,50,91,153,133,237,59,123,168,88,162]",
              "sol": "stringToBytes32(\"237,135,135,156,43,132,103,11,201,42,188,242,146,236,9,237,208,174,130,196,72,46,50,91,153,133,237,59,123,168,88,162\")"
            },
            {
              "js": "[185,233,58,58,146,251,113,17,247,27,1,41,173,59,198,212,12,23,200,22,185,100,17,49,151,66,57,135,108,48,136,161]",
              "sol": "abi.encode(\"185,233,58,58,146,251,113,17,247,27,1,41,173,59,198,212,12,23,200,22,185,100,17,49,151,66,57,135,108,48,136,161\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-13T01:14:23.213ZSignatureVerifier.hashBid": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute hashBid(SignatureVerifier.Bid)",
          "parameters": [
            {
              "js": "{\"amount\": 66,\"bidder\": {\"userId\": 66,\"wallet\": accounts[4]}}",
              "sol": "SignatureVerifier.Bid(66,SignatureVerifier.Identity(66,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-13T01:14:23.214ZSignatureVerifier.verifyHardCoded": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifyHardCoded()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-13T01:14:23.214ZSignatureVerifier.verifySpecificWithPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 65,\"bidder\": {\"userId\": 99,\"wallet\": accounts[2]}}",
              "sol": "SignatureVerifier.Bid(65,SignatureVerifier.Identity(99,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[163,243,193,26,254,127,143,174,27,77,232,148,38,179,121,122,230,143,85,77,90,116,193,32,41,181,222,118,160,253,189,110]",
              "sol": "abi.encode(\"163,243,193,26,254,127,143,174,27,77,232,148,38,179,121,122,230,143,85,77,90,116,193,32,41,181,222,118,160,253,189,110\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-13T01:14:23.216ZSignatureVerifier.verifySpecificWithoutPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithoutPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 324,\"bidder\": {\"userId\": 0,\"wallet\": accounts[1]}}",
              "sol": "SignatureVerifier.Bid(324,SignatureVerifier.Identity(0,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[40,11,27,231,221,213,6,141,83,187,168,60,187,30,131,30,193,4,168,255,112,99,114,203,31,176,14,41,244,19,66,254]",
              "sol": "abi.encode(\"40,11,27,231,221,213,6,141,83,187,168,60,187,30,131,30,193,4,168,255,112,99,114,203,31,176,14,41,244,19,66,254\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}