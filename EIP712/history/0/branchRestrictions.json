,{
  "2020-11-10T02:08:57.193ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[7,76,48,79,138,210,67,121,126,154,205,47,23,186,220,254,35,191,127,86,38,45,58,160,50,60,143,179,58,24,29,207]",
              "sol": "stringToBytes32(\"7,76,48,79,138,210,67,121,126,154,205,47,23,186,220,254,35,191,127,86,38,45,58,160,50,60,143,179,58,24,29,207\")"
            },
            {
              "js": "[194,166,175,211,64,217,61,141,243,225,204,133,143,136,22,111,232,90,77,156,50,160,137,117,160,251,158,120,35,38,182,57,252,49,92,149,207,190,1,156,141,42,155,250,191,47,95,1,199,251,32,65,158,94,19,103,141,237,116,2,245,133,246,232,125,218]",
              "sol": "abi.encode(\"194,166,175,211,64,217,61,141,243,225,204,133,143,136,22,111,232,90,77,156,50,160,137,117,160,251,158,120,35,38,182,57,252,49,92,149,207,190,1,156,141,42,155,250,191,47,95,1,199,251,32,65,158,94,19,103,141,237,116,2,245,133,246,232,125,218\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[194,86,182,230,161,20,153,240,198,60,225,81,40,55,86,81,216,42,143,3,7,25,72,239,47,224,81,241,82,179,180,208]",
              "sol": "stringToBytes32(\"194,86,182,230,161,20,153,240,198,60,225,81,40,55,86,81,216,42,143,3,7,25,72,239,47,224,81,241,82,179,180,208\")"
            },
            {
              "js": "[41,31,157,182,231,212,136,73,177,229,89,37,193,205,101,128,151,162,133,231,87,82,51,30,176,54,213,174,147,184,73,142,112,254,255,203,215,127,51,170,28,180,188,160,232,104,44,143,87,196,120,58,45,220,88,238,91,128,189,50,121,23,47,50,241]",
              "sol": "abi.encode(\"41,31,157,182,231,212,136,73,177,229,89,37,193,205,101,128,151,162,133,231,87,82,51,30,176,54,213,174,147,184,73,142,112,254,255,203,215,127,51,170,28,180,188,160,232,104,44,143,87,196,120,58,45,220,88,238,91,128,189,50,121,23,47,50,241\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T02:08:57.194ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[136,114,140,212,1,95,185,228,105,236,212,68,41,135,11,5,94,138,100,39,115,0,197,209,185,180,223,8,77,151,222,113]",
              "sol": "stringToBytes32(\"136,114,140,212,1,95,185,228,105,236,212,68,41,135,11,5,94,138,100,39,115,0,197,209,185,180,223,8,77,151,222,113\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T02:08:57.194ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[13,124,224,101,189,246,245,58,153,96,18,215,165,174,112,106,149,71,30,234,133,232,227,85,34,16,58,240,40,237,202,45]",
              "sol": "stringToBytes32(\"13,124,224,101,189,246,245,58,153,96,18,215,165,174,112,106,149,71,30,234,133,232,227,85,34,16,58,240,40,237,202,45\")"
            },
            {
              "js": "[203,57,161,109,113,253,62,11,102,103,215,111,60,125,140,33,234,54,167,98,94,46,172,235,187,141,218,242,164,10,136,227]",
              "sol": "abi.encode(\"203,57,161,109,113,253,62,11,102,103,215,111,60,125,140,33,234,54,167,98,94,46,172,235,187,141,218,242,164,10,136,227\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T02:08:57.195ZSignatureVerifier.hashBid": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute hashBid(SignatureVerifier.Bid)",
          "parameters": [
            {
              "js": "{\"amount\": 0,\"bidder\": {\"userId\": 27,\"wallet\": accounts[0]}}",
              "sol": "SignatureVerifier.Bid(0,SignatureVerifier.Identity(27,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T02:08:57.196ZSignatureVerifier.verifyHardCoded": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifyHardCoded()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T02:08:57.196ZSignatureVerifier.verifySpecificWithPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 100,\"bidder\": {\"userId\": 322,\"wallet\": accounts[7]}}",
              "sol": "SignatureVerifier.Bid(100,SignatureVerifier.Identity(322,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[125,94,109,129,63,157,179,15,31,118,159,225,98,123,125,247,154,86,199,245,99,186,80,157,201,187,5,49,101,224,216,201]",
              "sol": "abi.encode(\"125,94,109,129,63,157,179,15,31,118,159,225,98,123,125,247,154,86,199,245,99,186,80,157,201,187,5,49,101,224,216,201\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T02:08:57.197ZSignatureVerifier.verifySpecificWithoutPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithoutPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 64,\"bidder\": {\"userId\": 324,\"wallet\": accounts[1]}}",
              "sol": "SignatureVerifier.Bid(64,SignatureVerifier.Identity(324,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[30,234,72,114,164,104,120,153,125,31,20,106,185,8,210,240,196,79,10,78,238,74,29,88,35,193,128,208,215,220,11,158]",
              "sol": "abi.encode(\"30,234,72,114,164,104,120,153,125,31,20,106,185,8,210,240,196,79,10,78,238,74,29,88,35,193,128,208,215,220,11,158\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}