,{
  "2020-11-11T04:52:32.917ZProxyEcTools.testrecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "16-18",
          "restrictions": [
            "signedMessage.length != 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length!=65",
          "parameters": [
            {
              "js": "[17,107,224,37,53,65,204,138,45,143,139,76,159,0,21,121,63,221,10,215,166,181,176,72,153,87,68,102,14,68,154,60]",
              "sol": "stringToBytes32(\"17,107,224,37,53,65,204,138,45,143,139,76,159,0,21,121,63,221,10,215,166,181,176,72,153,87,68,102,14,68,154,60\")"
            },
            {
              "js": "[149,169,60,201,5,183,50,211,149,100,69,99,72,111,65,227,172,89,205,65,235,69,166,60,240,214,11,176,150,109,138,155,244,143,154,45,26,183,46,65,180,216,167,151,213,79,199,134,26,39,122,65,129,249,146,223,75,91,128,249,228,51,99,147,123,6]",
              "sol": "abi.encode(\"149,169,60,201,5,183,50,211,149,100,69,99,72,111,65,227,172,89,205,65,235,69,166,60,240,214,11,176,150,109,138,155,244,143,154,45,26,183,46,65,180,216,167,151,213,79,199,134,26,39,122,65,129,249,146,223,75,91,128,249,228,51,99,147,123,6\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "-",
          "restrictions": [
            "signedMessage.length == 65"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecover(bytes32,bytes) WHEN signedMessage.length==65",
          "parameters": [
            {
              "js": "[214,74,41,186,248,148,155,158,185,210,152,30,239,0,105,38,78,240,69,124,19,95,13,194,46,77,15,211,179,214,111,238]",
              "sol": "stringToBytes32(\"214,74,41,186,248,148,155,158,185,210,152,30,239,0,105,38,78,240,69,124,19,95,13,194,46,77,15,211,179,214,111,238\")"
            },
            {
              "js": "[13,10,78,13,40,137,243,137,170,88,55,130,128,76,204,144,222,45,200,126,9,205,69,5,196,187,147,241,163,223,118,83,180,8,114,147,24,210,43,118,239,113,191,176,131,213,73,16,215,136,31,124,194,55,99,74,113,178,170,198,170,167,43,192,173]",
              "sol": "abi.encode(\"13,10,78,13,40,137,243,137,170,88,55,130,128,76,204,144,222,45,200,126,9,205,69,5,196,187,147,241,163,223,118,83,180,8,114,147,24,210,43,118,239,113,191,176,131,213,73,16,215,136,31,124,194,55,99,74,113,178,170,198,170,167,43,192,173\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T04:52:32.919ZProxyEcTools.testtoEthereumSignedMessage": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthereumSignedMessage(bytes32)",
          "parameters": [
            {
              "js": "[206,78,112,15,223,87,221,80,232,111,149,195,5,75,96,76,79,216,98,215,30,228,58,83,8,93,129,93,248,37,36,126]",
              "sol": "stringToBytes32(\"206,78,112,15,223,87,221,80,232,111,149,195,5,75,96,76,79,216,98,215,30,228,58,83,8,93,129,93,248,37,36,126\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T04:52:32.919ZProxyEcTools.testprefixedRecover": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testprefixedRecover(bytes32,bytes)",
          "parameters": [
            {
              "js": "[89,87,41,41,200,134,200,153,42,242,245,9,1,152,75,143,104,115,167,1,123,52,95,143,101,32,170,245,92,98,74,132]",
              "sol": "stringToBytes32(\"89,87,41,41,200,134,200,153,42,242,245,9,1,152,75,143,104,115,167,1,123,52,95,143,101,32,170,245,92,98,74,132\")"
            },
            {
              "js": "[152,222,125,232,59,126,94,237,154,154,10,5,123,58,191,3,254,47,240,226,142,235,84,115,7,5,36,145,144,47,177,225]",
              "sol": "abi.encode(\"152,222,125,232,59,126,94,237,154,154,10,5,123,58,191,3,254,47,240,226,142,235,84,115,7,5,36,145,144,47,177,225\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T04:52:32.920ZSignatureVerifier.hashBid": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute hashBid(SignatureVerifier.Bid)",
          "parameters": [
            {
              "js": "{\"amount\": 64,\"bidder\": {\"userId\": 28,\"wallet\": accounts[5]}}",
              "sol": "SignatureVerifier.Bid(64,SignatureVerifier.Identity(28,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T04:52:32.921ZSignatureVerifier.verifyHardCoded": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifyHardCoded()",
          "parameters": [
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T04:52:32.921ZSignatureVerifier.verifySpecificWithPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 101,\"bidder\": {\"userId\": 27,\"wallet\": accounts[9]}}",
              "sol": "SignatureVerifier.Bid(101,SignatureVerifier.Identity(27,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[239,142,255,2,137,250,39,58,127,75,148,46,228,146,81,138,111,166,87,50,186,174,16,12,157,178,107,18,25,144,152,147]",
              "sol": "abi.encode(\"239,142,255,2,137,250,39,58,127,75,148,46,228,146,81,138,111,166,87,50,186,174,16,12,157,178,107,18,25,144,152,147\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-11T04:52:32.922ZSignatureVerifier.verifySpecificWithoutPrefix": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute verifySpecificWithoutPrefix(SignatureVerifier.Bid,bytes)",
          "parameters": [
            {
              "js": "{\"amount\": 324,\"bidder\": {\"userId\": 26,\"wallet\": accounts[2]}}",
              "sol": "SignatureVerifier.Bid(324,SignatureVerifier.Identity(26,address(uint160(uint(keccak256(abi.encodePacked(nonce, blockhash(block.number))))))))"
            },
            {
              "js": "[55,130,68,230,56,64,18,220,80,230,154,42,217,45,30,228,131,100,18,87,231,74,8,5,248,89,249,131,192,33,169,169]",
              "sol": "abi.encode(\"55,130,68,230,56,64,18,220,80,230,154,42,217,45,30,228,131,100,18,87,231,74,8,5,248,89,249,131,192,33,169,169\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}