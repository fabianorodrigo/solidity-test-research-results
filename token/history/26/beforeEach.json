{"code":"  let trace = false;\n  let contractECDSA = null;\n  let contractRoles = null;\n  let contractSafeMath = null;\n  let contractERC20 = null;\n  let contractInitializable = null;\n  let contractMinterRole = null;\n  let contractOwnable = null;\n  let contractERC20Mintable = null;\n  let contractMathUtils = null;\n  let contractRelevantTokenMock = null;\n  let contractRelevantToken = null;\n  let contractPower = null;\n  beforeEach(async () => {\n    contractECDSA = await ECDSA.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: ECDSA.new({from: accounts[0]}');\n    contractRoles = await Roles.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: Roles.new({from: accounts[0]}');\n    contractSafeMath = await SafeMath.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: SafeMath.new({from: accounts[0]}');\n    ERC20.link(\"SafeMath\",contractSafeMath.address);\n    contractERC20 = await ERC20.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: ERC20.new({from: accounts[0]}');\n    contractInitializable = await Initializable.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: Initializable.new({from: accounts[0]}');\n    MinterRole.link(\"Roles\",contractRoles.address);\n    contractMinterRole = await MinterRole.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: MinterRole.new({from: accounts[0]}');\n    contractOwnable = await Ownable.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: Ownable.new({from: accounts[0]}');\n    contractERC20Mintable = await ERC20Mintable.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: ERC20Mintable.new({from: accounts[0]}');\n    contractMathUtils = await MathUtils.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: MathUtils.new({from: accounts[0]}');\n    contractRelevantTokenMock = await RelevantTokenMock.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: RelevantTokenMock.new({from: accounts[0]}');\n    RelevantToken.link(\"ECDSA\",contractECDSA.address);\n    contractRelevantToken = await RelevantToken.new({from: accounts[0]});\n    if(trace) console.log('SUCESSO: RelevantToken.new({from: accounts[0]}');\n    contractPower = await Power.new({from:accounts[0]});\n    if(trace) console.log('SUCESSO: Power.new({from:accounts[0]}');\n  });\n","contractsDeployed":[{"contractName":"ECDSA","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"Roles","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"SafeMath","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"ERC20","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"Initializable","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"MinterRole","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"Ownable","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"ERC20Mintable","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"MathUtils","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"RelevantTokenMock","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"RelevantToken","stringfieldParams":["{from: accounts[0]}"]},{"contractName":"Power","stringfieldParams":["{from:accounts[0]}"]}]}