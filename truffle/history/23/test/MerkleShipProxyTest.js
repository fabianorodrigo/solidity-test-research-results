const truffleAssert = require('truffle-assertions');
const MerkleShip = artifacts.require("MerkleShip");
const SafeMath = artifacts.require("SafeMath");
const ProxySafeMath = artifacts.require("ProxySafeMath");
const ProxyMerkleShip = artifacts.require("ProxyMerkleShip");

contract("contractProxyMerkleShip",(accounts)=>{
    let contractProxyMerkleShip = null;
  let trace = false;
  let contractSafeMath = null;
  let contractMerkleShip = null;
  beforeEach(async () => {
    contractSafeMath = await SafeMath.new({from: accounts[0]});
    if(trace) console.log('SUCESSO: SafeMath.new({from: accounts[0]}');
    MerkleShip.link("SafeMath",contractSafeMath.address);
    contractMerkleShip = await MerkleShip.new({from:accounts[0]});
    if(trace) console.log('SUCESSO: MerkleShip.new({from:accounts[0]}');
      ProxyMerkleShip.link("SafeMath",contractSafeMath.address);
    contractProxyMerkleShip = await ProxyMerkleShip.new({ from: accounts[0] });
});
  
  it('Should execute test_reveal(uint32,bytes32[6],string)', async () => {
    let result = await contractProxyMerkleShip.test_reveal(7, [[237,11,133,233,178,4,128,157,206,7,216,84,229,157,188,10,245,140,84,164,224,238,158,92,244,102,21,44,235,201,226,175],[182,17,16,33,102,88,169,165,109,171,238,234,106,21,202,22,70,210,176,113,33,31,251,44,182,83,164,155,190,24,14,51],[227,109,31,211,156,247,209,42,148,131,36,158,161,152,225,7,6,82,108,22,201,115,213,23,201,12,223,99,166,62,90,242],[91,207,176,8,170,222,88,106,231,243,61,246,25,250,181,54,176,199,84,223,241,206,91,180,70,138,85,21,225,175,255,12],[140,239,125,60,93,72,120,10,215,222,168,246,247,4,195,133,71,189,82,26,64,60,87,29,204,29,173,99,142,82,184,213],[192,78,215,6,183,128,51,69,131,220,132,40,236,13,228,213,184,242,26,206,161,174,204,41,50,76,78,254,66,108,107,66]], "verified victory by hit count",{from: accounts[0]});
  });
  it('Should execute test_checkForVictoryByHit(uint32)', async () => {
    let result = await contractProxyMerkleShip.test_checkForVictoryByHit(1,{from: accounts[0]});
  });
  it('Should execute test_zeroOutStorage(uint32)', async () => {
    let result = await contractProxyMerkleShip.test_zeroOutStorage(179,{from: accounts[0]});
  });
  it('Should execute test_checkShipCount(string[64])', async () => {
    let result = await contractProxyMerkleShip.test_checkShipCount(["itlkxr","q1phck","victory by unanswered challenge","19frk9","victory by abandonment","victory by unchallenged hit count","6jco9q","37wjnm","6jco9q","47b3jo","game resolved in an emergency","ly75b","q1phck","quvkgk","victory by concession","sl4g6m","victory by abandonment","itlkxr","victory by abandonment","q1phck","itlkxr","itlkxr","q1phck","ghndt","19frk9","ly75b","ghndt","itlkxr","47b3jo","itlkxr","sl4g6m","0wfhk","0wfhk","victory by abandonment","ly75b","victory by abandonment","vpe3im","vpe3im","ly75b","victory by abandonment","verified victory by hit count","ghndt","victory by abandonment","verified victory by hit count","itlkxr","q1phck","q1phck","itlkxr","q1phck","19frk9","6jco9q","victory by abandonment","0wfhk","37wjnm","sl4g6m","sl4g6m","47b3jo","6jco9q","ghndt","victory by concession","19frk9","vpe3im","victory by concession","sl4g6m"],{from: accounts[0]});
  });
  it('Should execute test_checkShipLength(string[64])', async () => {
    let result = await contractProxyMerkleShip.test_checkShipLength(["victory by concession","victory by unchallenged hit count","victory by concession","sl4g6m","19frk9","6jco9q","ghndt","ly75b","itlkxr","victory by unchallenged hit count","victory by unanswered challenge","6jco9q","victory by concession","victory by abandonment","q1phck","vpe3im","ghndt","19frk9","victory by unchallenged hit count","q1phck","6jco9q","ly75b","19frk9","0wfhk","victory by unanswered challenge","verified victory by hit count","37wjnm","vpe3im","ly75b","ly75b","q1phck","itlkxr","victory by concession","itlkxr","sl4g6m","game resolved in an emergency","victory by abandonment","37wjnm","sl4g6m","q1phck","game resolved in an emergency","19frk9","victory by unanswered challenge","ly75b","37wjnm","game resolved in an emergency","37wjnm","19frk9","19frk9","sl4g6m","47b3jo","0wfhk","verified victory by hit count","itlkxr","ij2n0d","quvkgk","ly75b","victory by abandonment","ly75b","sl4g6m","sl4g6m","ij2n0d","verified victory by hit count","ghndt"],{from: accounts[0]});
  });
  it('Should execute test_hashEach(string[64])', async () => {
    let result = await contractProxyMerkleShip.test_hashEach(["ghndt","game resolved in an emergency","47b3jo","ghndt","19frk9","victory by unchallenged hit count","gc85tsj","itlkxr","victory by unanswered challenge","ij2n0d","q1phck","vpe3im","itlkxr","gc85tsj","quvkgk","victory by unanswered challenge","victory by unanswered challenge","ghndt","victory by unanswered challenge","fahv7e","6jco9q","19frk9","ghndt","fahv7e","w5tyod","ij2n0d","ucxr1d","victory by concession","victory by abandonment","sl4g6m","itlkxr","ucxr1d","19frk9","6jco9q","6jco9q","quvkgk","gc85tsj","ij2n0d","ij2n0d","victory by abandonment","victory by concession","q1phck","verified victory by hit count","6jco9q","victory by unanswered challenge","47b3jo","ij2n0d","sl4g6m","victory by unchallenged hit count","fahv7e","victory by abandonment","0wfhk","fahv7e","verified victory by hit count","fahv7e","victory by concession","g60ffs","q1phck","fahv7e","rsfo0g","ly75b","ly75b","w5tyod","itlkxr"],{from: accounts[0]});
  });
  it('Should execute test_sortArray(bytes32[])', async () => {
    let result = await contractProxyMerkleShip.test_sortArray([[162,203,233,18,40,166,56,141,30,4,188,186,140,54,222,112,24,128,231,115,22,198,92,92,237,65,79,12,8,0,147,147],[222,163,44,218,136,182,173,74,17,94,205,66,206,210,188,173,63,89,215,168,152,168,133,17,47,215,207,237,78,83,102,158],[217,209,84,111,144,143,165,166,217,188,232,182,215,249,137,9,129,60,221,167,208,186,114,121,198,144,38,59,178,81,79,135]],{from: accounts[0]});
  });
  it('Should execute test_quickSort(bytes32[],int,int)', async () => {
    let result = await contractProxyMerkleShip.test_quickSort([[251,202,120,187,12,190,223,153,65,137,5,177,163,255,123,2,57,157,148,189,197,8,35,54,178,59,161,78,80,78,25,46],[123,80,99,220,114,138,169,0,58,139,13,177,232,252,101,128,211,2,34,55,155,234,15,233,41,238,26,78,125,200,173,116],[73,239,83,158,7,22,218,183,151,196,25,60,107,2,55,214,59,160,161,154,123,163,232,86,254,127,157,40,13,130,216,107],[163,224,73,215,201,154,25,77,122,169,1,31,33,239,41,26,245,87,154,181,11,119,67,175,137,198,37,59,105,255,48,250]], 181, 101,{from: accounts[0]});
  });
  it('Should execute test_computeMerkleTree(bytes32[]) WHEN _data.length>=2', async () => {
    let result = await contractProxyMerkleShip.test_computeMerkleTree([[126,139,134,27,158,217,189,13,199,165,83,187,197,134,23,231,5,209,117,221,35,183,201,17,110,125,207,53,90,234,163,225],[155,40,53,212,138,255,212,141,242,14,69,156,217,168,238,199,114,107,192,7,213,58,229,86,249,187,55,91,52,205,29,101],[230,62,155,190,229,134,16,19,219,7,165,239,35,141,205,108,72,165,126,88,151,89,9,155,77,30,248,23,124,17,34,190],[106,90,90,51,151,17,35,125,170,138,19,122,214,142,177,233,12,1,239,151,182,159,38,100,242,216,219,79,23,231,246,201],[32,198,191,153,197,72,216,48,44,27,244,101,110,202,215,218,28,116,60,59,187,184,148,49,112,23,169,18,212,159,44,105],[27,42,197,128,250,30,68,60,162,45,192,7,188,159,144,247,17,91,240,186,106,153,216,22,242,85,173,129,121,72,80,1],[95,239,214,130,107,173,90,167,43,232,195,62,145,57,125,29,88,95,24,205,10,188,244,81,218,123,1,188,191,138,37,33],[122,207,142,10,63,97,27,62,25,32,16,182,228,89,44,124,156,126,30,211,165,108,139,138,70,129,96,97,112,233,88,14],[188,180,214,44,42,249,62,65,137,127,210,72,255,184,186,2,140,242,59,202,186,146,239,236,93,232,210,70,122,249,158,201],[161,71,32,56,5,160,113,122,21,6,31,120,236,236,118,159,177,92,35,57,71,196,192,156,132,3,93,150,34,79,48,17],[145,146,105,171,244,247,102,237,135,120,60,187,182,125,249,111,227,230,152,88,69,209,169,33,195,27,28,146,106,233,178,63],[99,121,218,44,35,241,88,237,72,167,134,69,181,31,26,224,102,15,211,153,185,221,103,95,30,230,222,18,19,106,121,103],[23,143,139,109,228,46,108,14,42,153,239,177,148,143,215,32,123,161,60,125,154,95,250,215,29,57,143,171,93,51,0,135],[234,133,69,240,18,44,250,47,142,51,53,170,108,54,37,26,20,254,128,164,122,99,89,44,209,29,58,116,242,59,110,111],[87,76,196,175,21,99,254,39,117,19,219,193,212,79,92,4,226,127,252,102,247,102,33,90,144,207,113,100,36,92,91,127],[158,214,113,119,14,7,54,95,255,155,186,191,144,186,206,149,89,80,241,183,80,132,54,65,91,239,88,101,64,221,148,151],[107,75,121,83,36,169,132,73,122,239,32,220,185,4,111,81,233,10,230,214,57,11,52,65,69,92,224,231,227,12,219,223],[102,110,202,223,190,233,51,143,84,183,148,132,158,124,104,113,154,254,24,114,38,38,43,156,242,155,109,207,13,144,213,187],[12,98,171,246,123,90,110,61,16,247,134,134,57,131,230,77,211,7,68,17,206,238,153,139,15,26,189,159,224,28,23,22],[92,219,89,104,23,178,88,55,213,175,48,28,222,149,95,34,189,39,98,255,123,108,212,86,215,107,93,16,242,69,174,74],[72,150,31,247,188,237,28,58,62,15,240,121,218,61,198,71,172,254,20,167,10,136,129,139,211,55,165,24,1,162,125,174],[50,64,218,165,133,85,96,176,244,157,67,99,127,65,214,116,43,245,68,35,30,176,218,126,117,5,135,197,24,223,252,28],[104,156,194,162,113,214,100,50,176,154,184,196,169,238,126,139,205,239,170,223,239,32,129,86,197,216,103,65,223,213,5,69],[123,233,193,154,13,119,193,205,203,244,34,55,48,164,149,18,104,12,236,129,52,133,23,202,174,144,194,233,117,242,158,164],[174,219,172,128,86,27,62,0,143,134,2,99,234,202,45,238,58,0,63,33,253,171,164,220,168,213,82,9,18,161,34,138],[129,30,217,156,62,133,200,202,216,198,78,186,93,188,246,254,3,53,92,159,112,54,134,131,30,80,200,103,196,87,170,132],[20,140,232,107,242,153,141,145,162,174,239,215,231,253,200,210,143,48,62,18,237,203,242,179,212,205,213,161,31,51,129,197],[45,76,134,4,238,60,220,210,180,232,61,142,177,76,154,52,154,82,150,123,173,75,107,204,200,132,155,133,98,214,164,56],[230,147,78,48,110,123,199,168,168,136,110,180,128,82,34,47,65,195,84,216,198,149,117,249,170,111,22,7,121,52,12,197],[208,54,31,3,201,14,115,159,74,255,238,216,103,49,56,48,8,213,234,20,72,35,171,190,104,72,24,27,153,69,225,253],[17,174,108,86,155,191,244,49,205,85,230,88,61,38,242,11,128,189,80,204,148,216,247,91,15,222,51,85,213,166,103,230],[114,78,13,199,109,195,14,156,187,246,238,138,241,97,130,219,14,163,53,93,213,91,62,159,168,118,135,129,88,46,45,72],[50,54,7,153,230,85,47,38,113,209,67,106,209,5,98,12,131,95,19,76,70,197,251,255,107,158,210,31,8,208,110,35],[86,87,118,187,12,228,183,165,218,182,193,122,231,154,2,25,245,21,244,28,149,42,222,25,74,251,218,169,81,194,27,45],[125,204,44,147,148,118,11,104,191,148,114,106,115,104,46,187,137,153,214,185,142,25,241,79,87,234,255,24,176,164,169,45],[150,220,165,243,242,69,89,204,50,54,48,29,208,246,14,137,202,101,183,188,101,126,76,221,240,132,208,39,73,59,60,55],[104,43,212,72,244,243,66,127,17,31,204,205,75,110,230,195,228,182,228,24,88,207,10,2,14,154,182,187,181,9,249,249],[43,237,51,3,0,126,24,57,5,255,157,125,5,120,166,34,240,51,209,204,62,232,198,31,148,8,239,19,166,102,190,133],[208,156,36,116,26,165,252,83,55,252,33,199,87,9,144,90,67,130,206,68,158,114,25,206,148,2,31,126,8,113,138,104],[30,207,220,22,165,44,178,169,29,9,126,38,104,102,116,91,8,137,33,10,50,217,80,86,187,72,82,154,53,232,225,187],[203,29,239,60,51,193,26,204,45,56,0,1,228,78,16,178,239,91,242,117,161,90,9,91,232,154,211,175,205,21,226,10],[24,90,221,236,9,237,166,207,39,33,101,7,23,233,244,121,94,178,148,75,97,88,56,6,203,82,89,128,122,168,55,70],[250,54,234,39,203,174,29,86,14,4,176,36,233,111,169,152,183,65,217,52,175,117,166,121,191,226,237,42,109,149,158,64],[72,66,251,107,244,65,217,20,133,92,192,120,81,6,4,38,104,177,145,22,224,54,94,41,59,150,109,206,254,125,207,122],[132,235,202,89,134,209,106,105,32,173,27,146,200,165,66,120,166,63,56,227,13,174,37,117,195,134,238,187,4,128,219,209],[199,96,131,184,55,148,198,144,93,86,188,62,193,219,19,159,132,205,58,22,163,117,227,237,72,164,64,195,180,143,165,98],[53,198,137,217,4,48,65,103,72,6,230,172,143,171,57,53,120,227,180,217,186,115,127,71,40,208,97,174,174,129,214,179],[65,53,7,27,138,194,42,161,203,22,46,117,145,45,58,14,220,251,73,152,226,190,51,74,144,180,143,19,73,218,75,134],[233,195,122,22,51,152,100,234,113,234,224,207,213,3,4,135,151,3,89,79,140,175,11,52,215,180,157,61,118,68,243,61],[26,199,19,226,113,73,156,241,73,202,36,81,173,184,134,152,105,168,18,178,118,62,189,222,72,71,245,99,111,228,55,11],[250,222,130,80,210,17,150,31,221,174,234,27,56,83,180,247,44,134,217,0,221,216,193,145,95,229,230,87,235,153,17,137],[88,46,38,22,250,109,121,227,125,234,92,45,59,123,242,181,129,201,167,102,21,110,86,143,144,194,71,230,248,20,2,82],[245,136,239,78,127,242,145,24,191,27,213,56,34,107,25,251,164,129,251,173,76,176,85,242,142,216,92,20,136,134,137,155],[34,210,136,124,107,162,7,82,55,126,185,89,175,176,126,126,49,177,250,41,2,77,103,62,255,28,99,113,122,26,96,64],[70,8,186,239,49,204,128,0,242,232,197,47,104,41,233,146,216,100,112,91,65,60,80,66,200,143,121,239,156,197,118,196],[68,246,193,23,219,193,136,82,19,222,122,21,12,90,82,63,251,125,187,121,249,20,163,72,164,37,219,112,208,119,39,139],[167,7,190,193,14,176,196,225,59,94,102,125,75,59,132,189,196,169,241,225,112,5,64,35,134,121,207,27,10,135,167,95],[206,200,29,16,135,3,52,43,242,193,120,163,229,62,151,11,236,63,147,25,1,89,148,223,79,35,217,178,29,254,23,158],[15,33,89,49,162,165,113,211,147,156,176,104,189,66,207,177,171,51,41,17,204,109,71,8,67,72,251,139,242,232,220,128],[137,99,77,179,54,200,189,166,154,169,161,157,224,183,244,176,240,82,254,169,9,169,251,90,108,163,62,188,210,54,144,31],[249,192,147,213,226,127,253,126,28,42,151,135,175,117,134,49,252,132,3,14,224,172,2,194,221,139,250,127,240,49,148,23],[250,83,216,114,10,138,92,101,247,81,142,113,248,74,74,239,172,233,169,147,2,227,157,116,33,155,67,183,91,118,166,114],[176,64,126,172,246,255,5,141,184,173,78,82,42,17,0,171,74,68,240,166,46,183,48,137,72,53,33,100,28,193,57,50],[105,171,183,149,201,196,153,61,23,161,4,25,190,252,19,116,41,8,222,123,63,144,88,94,192,218,172,88,142,189,4,42],[211,147,88,227,64,243,0,26,169,72,190,248,143,87,221,41,191,216,134,234,81,126,142,113,38,133,121,10,222,181,15,224],[197,235,223,37,135,88,66,227,174,14,253,84,2,208,167,0,23,3,46,23,36,191,242,50,57,143,14,227,210,182,239,47],[247,68,35,190,61,163,179,84,91,234,145,53,210,100,48,253,241,32,15,234,189,165,61,79,98,114,10,243,153,128,92,46],[137,63,142,197,46,177,204,20,219,110,96,148,98,144,198,191,109,87,113,34,120,16,116,192,124,186,45,53,19,160,60,91],[175,135,135,11,100,244,254,225,237,21,64,196,140,35,118,108,206,166,53,14,237,255,94,196,97,21,95,212,225,241,120,82],[7,160,121,25,201,20,159,1,220,100,203,118,161,195,197,215,253,92,103,167,106,171,254,197,87,73,193,220,7,99,143,96],[64,157,167,112,68,17,252,96,230,171,217,108,29,123,176,3,90,152,130,251,156,60,188,171,247,109,62,255,168,33,8,105],[232,227,94,190,52,88,173,4,71,89,132,138,33,147,172,0,158,51,98,103,213,57,135,68,207,207,1,88,128,235,203,73],[191,205,167,200,24,168,238,132,20,43,12,90,130,192,112,112,208,232,126,111,140,159,51,227,13,135,230,152,166,72,133,200],[70,117,230,58,121,146,240,59,121,15,250,46,104,175,163,72,18,166,176,250,156,20,226,32,183,129,179,157,81,52,90,14],[53,0,185,193,47,74,182,23,179,219,215,39,229,76,18,18,32,25,29,198,228,201,111,228,114,75,134,102,95,52,231,21],[152,187,82,63,115,44,129,152,246,143,203,157,172,60,92,67,151,131,186,244,112,180,77,121,113,141,187,177,35,204,206,253],[68,81,199,156,81,103,64,37,123,157,240,76,4,21,189,244,199,114,37,66,76,161,212,246,34,16,177,209,49,62,76,18],[231,127,165,204,147,7,169,136,11,132,26,121,163,36,122,226,251,216,143,246,226,86,68,173,109,140,249,202,239,25,135,199],[222,183,5,153,151,173,148,35,98,48,32,66,62,92,248,117,165,223,123,86,11,161,33,108,170,65,208,249,218,177,253,111],[121,219,85,32,255,17,15,125,32,116,134,108,68,158,126,193,169,164,189,101,41,98,220,121,204,36,168,161,8,110,20,203],[206,210,141,205,239,47,198,25,74,104,99,57,60,229,173,157,254,229,104,156,252,51,253,198,114,146,203,18,106,17,186,205],[40,135,86,184,150,200,14,78,50,215,202,253,117,13,157,234,41,82,66,8,109,250,1,249,236,115,52,253,4,28,4,60],[237,16,56,139,112,2,150,223,124,114,249,108,202,211,101,82,53,194,214,211,58,156,96,223,117,251,6,73,168,144,180,198],[223,32,199,151,149,116,62,26,251,15,204,111,229,115,66,203,179,145,72,45,160,13,25,119,19,85,204,36,165,142,164,60],[242,246,34,69,8,34,190,116,139,134,41,14,121,229,207,149,33,44,108,167,217,85,16,78,77,16,232,134,205,136,188,120],[96,91,13,16,189,188,96,149,86,21,214,196,109,211,180,141,134,205,78,214,13,53,92,117,225,147,9,88,214,88,78,137],[205,18,45,2,110,217,208,39,118,220,14,41,94,59,71,67,119,189,21,125,248,154,66,104,220,185,212,20,87,215,139,43],[246,120,9,200,204,45,186,247,4,104,191,21,168,74,73,9,13,139,220,156,182,73,70,252,206,255,224,251,67,185,77,184],[48,236,2,225,53,145,238,98,117,18,122,60,180,7,31,32,42,113,89,160,155,176,217,4,247,0,196,115,216,115,166,164],[117,251,108,20,235,154,47,153,136,193,57,123,105,44,214,70,100,206,149,15,36,24,165,182,232,95,21,250,172,39,243,68],[210,200,31,185,3,170,104,237,57,39,140,46,42,126,236,139,247,110,138,25,13,73,133,108,163,197,8,210,85,157,57,51],[16,69,61,203,61,11,90,168,38,126,44,202,209,178,242,144,11,249,170,91,116,205,14,174,196,123,54,177,116,34,147,204],[73,85,249,108,36,54,251,21,96,153,77,25,211,148,132,77,78,105,63,92,238,53,171,101,225,215,172,46,107,224,44,17],[198,204,151,250,15,114,58,217,245,77,40,8,236,17,216,152,229,121,87,27,237,69,205,169,26,127,100,66,62,54,201,224],[69,137,176,167,42,238,0,245,142,143,213,91,65,72,181,234,94,81,201,173,205,172,81,208,171,148,148,130,84,149,169,45],[145,122,145,104,42,165,120,53,176,134,120,239,184,15,167,69,85,127,91,10,37,176,207,0,23,211,190,160,196,135,39,167],[213,252,153,55,208,113,206,196,192,144,15,114,200,191,168,85,4,194,137,3,155,252,83,149,175,227,126,173,31,160,117,243],[79,240,232,122,124,92,186,220,191,63,159,27,220,152,119,78,124,158,12,94,180,174,0,219,120,193,124,216,81,167,100,245],[40,251,182,52,10,247,23,107,42,105,88,71,14,82,48,232,81,18,65,47,70,141,49,90,232,232,28,175,187,25,27,152]],{from: accounts[0]});
  });
  it('Should execute test_computeMerkleTree(bytes32[]) WHEN _data.length==2', async () => {
    let result = await contractProxyMerkleShip.test_computeMerkleTree([[182,107,52,15,87,245,35,156,166,137,35,166,172,135,200,172,152,240,242,117,240,52,10,60,11,122,61,189,14,36,103,240],[68,59,133,230,100,245,215,168,244,42,139,43,19,223,111,155,62,102,119,18,24,50,152,63,42,173,194,218,136,206,221,250]],{from: accounts[0]});
  });
  it('Should execute test_computeMerkleTree(bytes32[]) WHEN _data.length!=2', async () => {
    let result = await contractProxyMerkleShip.test_computeMerkleTree([[82,43,193,193,171,176,234,35,248,3,183,160,83,158,127,132,138,52,196,195,69,198,114,172,181,165,232,189,172,253,221,155],[143,193,82,109,13,124,156,134,152,43,20,15,168,218,70,182,143,213,76,19,11,195,138,226,8,223,185,184,136,28,91,195],[255,166,255,149,99,56,31,194,22,185,201,46,164,163,12,176,96,188,11,239,85,77,37,245,207,90,174,92,153,171,67,147],[73,64,82,88,218,106,233,114,183,15,170,212,204,205,155,143,216,116,89,234,168,13,254,100,40,123,45,224,32,68,199,125],[111,194,213,46,67,33,104,193,15,87,70,51,227,242,190,125,140,165,79,48,34,143,201,11,173,212,237,112,170,91,33,208],[216,211,194,73,45,219,1,81,3,56,54,69,190,56,28,254,84,105,99,15,89,74,187,92,252,192,180,192,41,172,138,87],[138,27,199,11,189,147,83,49,72,17,102,138,147,50,250,22,141,98,167,56,65,218,241,169,37,128,240,30,237,201,159,243],[196,97,117,121,187,240,152,72,158,80,181,232,125,54,88,97,209,238,68,43,162,242,10,89,235,201,49,114,247,121,125,99],[170,164,221,162,118,253,250,156,89,55,128,186,219,116,232,233,172,83,227,207,166,73,161,98,177,84,42,223,173,133,251,214]],{from: accounts[0]});
  });
  it('Should execute test_verifyMerkleProof(bytes32[6],bytes32,string)', async () => {
    let result = await contractProxyMerkleShip.test_verifyMerkleProof([[83,254,56,122,167,221,250,81,155,128,240,152,33,34,108,81,52,49,138,200,198,77,135,254,251,229,100,117,58,151,54,225],[174,18,175,83,246,199,96,190,114,215,191,12,97,179,242,243,36,244,52,177,150,252,226,230,8,7,66,245,10,211,89,57],[42,40,142,166,169,16,125,64,254,41,24,226,122,168,213,82,14,14,216,2,38,158,52,209,121,222,91,207,176,219,64,108],[107,132,5,123,131,79,217,4,210,11,225,247,69,192,42,196,125,202,198,219,12,166,32,58,242,185,20,119,244,231,80,241],[168,99,124,53,43,47,216,110,232,159,19,24,186,46,179,2,45,235,12,14,91,119,99,40,101,204,54,136,23,227,95,152],[246,119,186,9,250,132,161,182,197,167,31,29,38,31,224,70,77,203,94,217,103,18,6,252,179,103,116,16,182,126,2,125]], [131,21,10,230,95,205,51,74,46,173,95,75,247,189,14,32,247,178,227,150,165,31,253,70,84,135,134,146,154,6,250,92], "rsfo0g",{from: accounts[0]});
  });
  it('Should execute test_isCoordinateValid(uint8,uint8)', async () => {
    let result = await contractProxyMerkleShip.test_isCoordinateValid(63, 7,{from: accounts[0]});
  });
  it('Should execute test_coordinateToIndex(uint8,uint8)', async () => {
    let result = await contractProxyMerkleShip.test_coordinateToIndex(101, 13,{from: accounts[0]});
  });
  it('Should execute test_subString(string,uint256)', async () => {
    let result = await contractProxyMerkleShip.test_subString("gc85tsj", 181,{from: accounts[0]});
  });
  it('Should execute test_isStringValid(string)', async () => {
    let result = await contractProxyMerkleShip.test_isStringValid("ghndt",{from: accounts[0]});
  });
});
