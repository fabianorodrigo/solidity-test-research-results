,{
  "2020-11-10T12:54:20.122ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[164,248,184,153,88,55,10,115,251,97,172,49,22,85,149,171,246,9,43,0,234,68,254,254,227,134,114,182,120,189,47,100]",
              "sol": "stringToBytes32(\"164,248,184,153,88,55,10,115,251,97,172,49,22,85,149,171,246,9,43,0,234,68,254,254,227,134,114,182,120,189,47,100\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:54:20.122ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[77,64,5,13,59,135,163,134,33,113,151,171,200,72,54,105,253,157,251,220,210,60,117,82,34,24,87,246,188,99,95,79]",
              "sol": "abi.encode(\"77,64,5,13,59,135,163,134,33,113,151,171,200,72,54,105,253,157,251,220,210,60,117,82,34,24,87,246,188,99,95,79\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:54:20.123ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "66",
              "sol": "66"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:54:20.123ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[146,147,46,244,212,228,71,253,205,201,197,147,90,19,35,178,172,11,47,140,140,219,156,193,34,50,235,218,155,47,222,218]",
              "sol": "abi.encode(\"146,147,46,244,212,228,71,253,205,201,197,147,90,19,35,178,172,11,47,140,140,219,156,193,34,50,235,218,155,47,222,218\")"
            },
            {
              "js": "9",
              "sol": "9"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:54:20.124ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[152,2,208,187,2,104,199,87,152,10,53,120,242,100,232,112,59,122,118,17,52,4,147,80,97,132,87,63,185,87,161,34]",
              "sol": "abi.encode(\"152,2,208,187,2,104,199,87,152,10,53,120,242,100,232,112,59,122,118,17,52,4,147,80,97,132,87,63,185,87,161,34\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:54:20.124ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[191,21,124,52,129,198,215,57,232,139,87,154,223,105,208,228,14,66,161,185,144,171,15,69,51,144,196,179,52,94,31,7]",
              "sol": "stringToBytes32(\"191,21,124,52,129,198,215,57,232,139,87,154,223,105,208,228,14,66,161,185,144,171,15,69,51,144,196,179,52,94,31,7\")"
            },
            {
              "js": "[64,89,147,106,4,73,142,15,150,122,237,20,10,170,107,155,44,237,172,7,107,32,59,40,61,156,220,119,221,15,220,15]",
              "sol": "abi.encode(\"64,89,147,106,4,73,142,15,150,122,237,20,10,170,107,155,44,237,172,7,107,32,59,40,61,156,220,119,221,15,220,15\")"
            },
            {
              "js": "48",
              "sol": "48"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T12:54:20.124ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[29,79,66,10,150,149,239,18,64,243,159,163,36,137,159,8,217,42,3,167,154,192,50,39,233,144,161,39,176,27,103,80]",
              "sol": "stringToBytes32(\"29,79,66,10,150,149,239,18,64,243,159,163,36,137,159,8,217,42,3,167,154,192,50,39,233,144,161,39,176,27,103,80\")"
            },
            {
              "js": "[77,149,24,158,25,2,10,64,195,129,220,245,32,48,247,29,62,14,139,87,255,1,248,222,57,235,112,191,103,146,147,247]",
              "sol": "abi.encode(\"77,149,24,158,25,2,10,64,195,129,220,245,32,48,247,29,62,14,139,87,255,1,248,222,57,235,112,191,103,146,147,247\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}