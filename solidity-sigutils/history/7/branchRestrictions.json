,{
  "2020-11-10T19:20:06.070ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[150,228,15,101,100,159,160,119,81,21,230,74,50,115,39,107,224,72,235,48,115,100,34,55,91,108,107,178,122,175,60,105]",
              "sol": "stringToBytes32(\"150,228,15,101,100,159,160,119,81,21,230,74,50,115,39,107,224,72,235,48,115,100,34,55,91,108,107,178,122,175,60,105\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:20:06.070ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[207,11,58,35,65,232,179,22,129,255,177,118,228,12,0,20,96,4,169,116,242,87,171,124,187,248,48,240,159,30,140,162]",
              "sol": "abi.encode(\"207,11,58,35,65,232,179,22,129,255,177,118,228,12,0,20,96,4,169,116,242,87,171,124,187,248,48,240,159,30,140,162\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:20:06.071ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "5",
              "sol": "5"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:20:06.071ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[164,23,150,118,183,14,99,180,48,142,119,253,158,131,153,238,169,250,115,121,133,211,225,199,135,15,72,97,207,188,78,139]",
              "sol": "abi.encode(\"164,23,150,118,183,14,99,180,48,142,119,253,158,131,153,238,169,250,115,121,133,211,225,199,135,15,72,97,207,188,78,139\")"
            },
            {
              "js": "27",
              "sol": "27"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:20:06.072ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[101,200,166,246,164,186,190,42,217,244,91,6,151,196,66,178,140,22,204,196,179,93,245,218,199,42,74,116,130,199,205,128]",
              "sol": "abi.encode(\"101,200,166,246,164,186,190,42,217,244,91,6,151,196,66,178,140,22,204,196,179,93,245,218,199,42,74,116,130,199,205,128\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:20:06.072ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[243,162,34,241,22,250,136,91,188,50,42,45,230,71,46,236,163,200,231,80,26,113,174,29,159,97,150,54,197,188,229,228]",
              "sol": "stringToBytes32(\"243,162,34,241,22,250,136,91,188,50,42,45,230,71,46,236,163,200,231,80,26,113,174,29,159,97,150,54,197,188,229,228\")"
            },
            {
              "js": "[4,75,76,58,49,154,174,54,174,36,242,254,214,111,237,179,136,23,183,126,95,190,187,56,9,219,146,44,238,168,108,199]",
              "sol": "abi.encode(\"4,75,76,58,49,154,174,54,174,36,242,254,214,111,237,179,136,23,183,126,95,190,187,56,9,219,146,44,238,168,108,199\")"
            },
            {
              "js": "32",
              "sol": "32"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T19:20:06.072ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[96,215,117,171,172,8,208,47,195,62,0,242,176,135,21,225,164,204,17,81,197,66,111,110,66,244,226,218,135,22,135,0]",
              "sol": "stringToBytes32(\"96,215,117,171,172,8,208,47,195,62,0,242,176,135,21,225,164,204,17,81,197,66,111,110,66,244,226,218,135,22,135,0\")"
            },
            {
              "js": "[199,242,94,96,82,4,185,50,204,131,120,133,112,239,61,86,99,170,252,103,149,144,5,254,30,66,133,55,30,112,152,121]",
              "sol": "abi.encode(\"199,242,94,96,82,4,185,50,204,131,120,133,112,239,61,86,99,170,252,103,149,144,5,254,30,66,133,55,30,112,152,121\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}