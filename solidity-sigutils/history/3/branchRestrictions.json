,{
  "2020-11-10T10:39:00.990ZProxySignatureUtils.testtoEthBytes32SignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthBytes32SignedMessageHash(bytes32)",
          "parameters": [
            {
              "js": "[90,134,81,90,10,183,131,29,13,153,106,159,115,100,5,111,255,15,30,66,182,101,134,146,56,51,159,137,196,43,228,197]",
              "sol": "stringToBytes32(\"90,134,81,90,10,183,131,29,13,153,106,159,115,100,5,111,255,15,30,66,182,101,134,146,56,51,159,137,196,43,228,197\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T10:39:00.990ZProxySignatureUtils.testtoEthPersonalSignedMessageHash": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testtoEthPersonalSignedMessageHash(bytes)",
          "parameters": [
            {
              "js": "[55,231,203,216,244,85,214,250,60,125,167,45,146,207,37,42,39,73,50,126,15,214,155,58,52,92,103,94,13,178,167,8]",
              "sol": "abi.encode(\"55,231,203,216,244,85,214,250,60,125,167,45,146,207,37,42,39,73,50,126,15,214,155,58,52,92,103,94,13,178,167,8\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T10:39:00.991ZProxySignatureUtils.testuintToString": {
    "branches": {
      "0": {
        "branch": {
          "loc": "43-51",
          "restrictions": [
            "v == 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v==0",
          "parameters": [
            {
              "js": "0",
              "sol": "0"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      },
      "1": {
        "branch": {
          "loc": "45-51",
          "restrictions": [
            "v != 0"
          ]
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testuintToString(uint) WHEN v!=0",
          "parameters": [
            {
              "js": "8",
              "sol": "8"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T10:39:00.992ZProxySignatureUtils.testparseSignature": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testparseSignature(bytes,uint)",
          "parameters": [
            {
              "js": "[247,100,4,237,125,139,127,163,164,174,25,255,7,17,74,139,178,90,123,81,244,179,122,80,169,159,47,76,197,221,122,203]",
              "sol": "abi.encode(\"247,100,4,237,125,139,127,163,164,174,25,255,7,17,74,139,178,90,123,81,244,179,122,80,169,159,47,76,197,221,122,203\")"
            },
            {
              "js": "8",
              "sol": "8"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T10:39:00.992ZProxySignatureUtils.testcountSignatures": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testcountSignatures(bytes)",
          "parameters": [
            {
              "js": "[189,130,100,39,66,6,69,104,9,54,228,35,73,254,231,57,122,47,96,206,0,230,23,81,23,99,249,184,160,73,46,177]",
              "sol": "abi.encode(\"189,130,100,39,66,6,69,104,9,54,228,35,73,254,231,57,122,47,96,206,0,230,23,81,23,99,249,184,160,73,46,177\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T10:39:00.992ZProxySignatureUtils.testrecoverAddress": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddress(bytes32,bytes,uint)",
          "parameters": [
            {
              "js": "[91,241,16,42,199,35,212,200,132,42,56,49,229,148,255,9,109,193,240,193,147,168,129,158,223,221,245,80,77,189,172,23]",
              "sol": "stringToBytes32(\"91,241,16,42,199,35,212,200,132,42,56,49,229,148,255,9,109,193,240,193,147,168,129,158,223,221,245,80,77,189,172,23\")"
            },
            {
              "js": "[85,247,240,249,247,201,195,87,92,226,209,253,244,193,190,241,112,36,36,191,255,13,17,151,73,210,92,58,158,167,212,102]",
              "sol": "abi.encode(\"85,247,240,249,247,201,195,87,92,226,209,253,244,193,190,241,112,36,36,191,255,13,17,151,73,210,92,58,158,167,212,102\")"
            },
            {
              "js": "3",
              "sol": "3"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
},{
  "2020-11-10T10:39:00.992ZProxySignatureUtils.testrecoverAddresses": {
    "branches": {
      "0": {
        "branch": {
          "loc": "-",
          "restrictions": []
        },
        "scenarioSuccess": {
          "success": true,
          "description": "Should execute testrecoverAddresses(bytes32,bytes)",
          "parameters": [
            {
              "js": "[215,84,143,158,83,130,179,187,203,65,4,169,38,79,17,195,214,114,129,191,219,98,55,115,100,160,147,204,105,41,95,243]",
              "sol": "stringToBytes32(\"215,84,143,158,83,130,179,187,203,65,4,169,38,79,17,195,214,114,129,191,219,98,55,115,100,160,147,204,105,41,95,243\")"
            },
            {
              "js": "[118,7,6,240,98,222,24,168,212,192,142,190,111,196,36,25,217,41,243,199,204,71,149,149,179,63,3,228,116,213,175,77]",
              "sol": "abi.encode(\"118,7,6,240,98,222,24,168,212,192,142,190,111,196,36,25,217,41,243,199,204,71,149,149,179,63,3,228,116,213,175,77\")"
            },
            {
              "js": "{from:accounts[0]}",
              "sol": "{\"from\":\"0x0\"}"
            }
          ]
        },
        "scenarioFail": []
      }
    }
  }
}